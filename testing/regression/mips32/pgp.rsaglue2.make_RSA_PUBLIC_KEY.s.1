0:
  [%const.2048.copy.1] <- "%const.2048.copy.1 = ##2048" <- []
  [%const.-3.copy.1] <- "%const.-3.copy.1 = ##-3" <- []
  [%1] <- "call countbits" <- [%n]
  [%3] <- "%3 = cmp.gtu(%1, %const.2048.copy.1)" <- [%1, %const.2048.copy.1]
  [] <- "memb (%rpk) = %1" <- [%1, %rpk]
  [] <- "if (%3) jump bb0" <- [%3]
bb1:
4:
  [%const.256.copy.2] <- "%const.256.copy.2 = ##256" <- []
  [%6] <- "%6 = memb (%const.@%global_precision)" <- [%const.@%global_precision]
  [%7] <- "%7 = sxth(%6)" <- [%6]
  [%8] <- "%8 = asl(%7, #1)" <- [%7]
  [%9] <- "%9 = cmp.lt(%8, %const.256.copy.2)" <- [%8, %const.256.copy.2]
  [] <- "if (%9) jump bb2" <- [%9]
bb3:
16:
  [] <- "jump reg2rsaref.exit" <- []
bb2:
10:
reg2rsaref.exit:
  [%const.0.copy.1] <- "%const.0.copy.1 = ##0" <- []
  [%21] <- "%21 = memb (%const.@%global_precision)" <- [%const.@%global_precision]
  [%22] <- "%22 = sxth(%21)" <- [%21]
  [%23] <- "%23 = asl(%22, #1)" <- [%22]
  [%24] <- "%24 = cmp.lt(%23, %const.256.copy.2)" <- [%23, %const.256.copy.2]
  [] <- "if (%24) jump bb4" <- [%24]
bb5:
31:
  [] <- "jump reg2rsaref.exit1" <- []
bb4:
25:
bb0:
reg2rsaref.exit1:
  [%.0] <- "PHI (%const.-3.copy.1, 0) (%const.0.copy.1, reg2rsaref.exit)" <- [%const.-3.copy.1, %const.0.copy.1]
  [] <- "return %.0" <- [%.0]
