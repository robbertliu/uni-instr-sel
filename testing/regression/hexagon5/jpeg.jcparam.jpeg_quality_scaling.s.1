0:
  [%const.1.copy.2] <- "%const.1.copy.2 = ##1" <- []
  [%const.50.copy.1] <- "%const.50.copy.1 = ##50" <- []
  [%1] <- "%1 = cmp.lt(%quality, %const.1.copy.2)" <- [%quality, %const.1.copy.2]
  [] <- "if (%1) jump bb0" <- [%1]
bb1:
.selectcont:
  [%.quality] <- "PHI (%const.1.copy.1, .selecttrue) (%quality, 0)" <- [%const.1.copy.1, %quality]
  [%2] <- "%2 = cmp.gt(%.quality, 100)" <- [%.quality]
  [] <- "if (%2) jump bb2" <- [%2]
bb3:
.selectcont.selectcont:
  [%..quality] <- "PHI (%const.100.copy.2, .selectcont.selecttrue) (%.quality, .selectcont)" <- [%const.100.copy.2, %.quality]
  [%3] <- "%3 = cmp.lt(%..quality, %const.50.copy.1)" <- [%..quality, %const.50.copy.1]
  [] <- "if (%3) jump bb4" <- [%3]
bb5:
6:
  [%7] <- "%7 = asl(%..quality, #1)" <- [%..quality]
  [%8] <- "%8 = sub(#200, %7)" <- [%7]
  [] <- "jump 9" <- []
bb4:
4:
  [%const.5000.copy.1] <- "%const.5000.copy.1 = ##5000" <- []
  [%5] <- "%5 = __hexagon_divsi(%const.5000.copy.1, %..quality)" <- [%..quality, %const.5000.copy.1]
9:
  [%.0] <- "PHI (%5, 4) (%8, 6)" <- [%5, %8]
  [] <- "return %.0" <- [%.0]
bb2:
.selectcont.selecttrue:
  [%const.100.copy.2] <- "%const.100.copy.2 = ##100" <- []
  [] <- "jump .selectcont.selectcont" <- []
bb0:
.selecttrue:
  [%const.1.copy.1] <- "%const.1.copy.1 = ##1" <- []
  [] <- "jump .selectcont" <- []
