0:
  [%1] <- "%1 = zxtb(%u_val)" <- [%u_val]
  [%const.255.copy.1] <- "%const.255.copy.1 = ##255" <- []
  [%2] <- "%2 = xor(%1, %const.255.copy.1)" <- [%1, %const.255.copy.1]
  [%const.120.copy.1] <- "%const.120.copy.1 = ##120" <- []
  [%const.7.copy.1] <- "%const.7.copy.1 = ##7" <- []
  [%const.128.copy.1] <- "%const.128.copy.1 = ##128" <- []
  [%const.132.copy.2] <- "%const.132.copy.2 = ##132" <- []
  [%const.-132.copy.1] <- "%const.-132.copy.1 = ##-132" <- []
  [%6] <- "%6 = lsr(%2, #4)" <- [%2]
  [%3] <- "%3 = asl(%2, #3)" <- [%2]
  [%4] <- "%4 = and(%3, %const.120.copy.1)" <- [%3, %const.120.copy.1]
  [%5] <- "%5 = or(%4, %const.132.copy.2)" <- [%4, %const.132.copy.2]
  [%7] <- "%7 = and(%6, %const.7.copy.1)" <- [%6, %const.7.copy.1]
  [%8] <- "%8 = asl(%5, %7)" <- [%5, %7]
  [%9] <- "%9 = and(%2, %const.128.copy.1)" <- [%2, %const.128.copy.1]
  [%10] <- "%10 = cmp.ne(%9, 0)" <- [%9]
  [%12] <- "%12 = add(%8, %const.-132.copy.1)" <- [%8, %const.-132.copy.1]
  [] <- "if (%10) jump bb0" <- [%10]
bb1:
.selectcont:
  [%13] <- "PHI (%11, .selecttrue) (%12, 0)" <- [%11, %12]
  [] <- "return %13" <- [%13]
bb0:
.selecttrue:
  [%11] <- "%11 = sub(%const.132.copy.2, %8)" <- [%const.132.copy.2, %8]
  [] <- "jump .selectcont" <- []
