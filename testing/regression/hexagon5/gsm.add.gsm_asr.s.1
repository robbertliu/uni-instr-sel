0:
  %1 = cmp.gt(%n, 15)
  if (%1) jump bb0
bb1:
6:
  %const.0.copy.4 = #0
  %const.-15.copy.1 = ##-15
  %7 = cmp.lt(%n, %const.-15.copy.1)
  if (%7) jump bb2
bb3:
8:
  %10 = sxth(%a)
  %const.0.copy.2 = ##0
  %9 = cmp.lt(%n, %const.0.copy.2)
  if (%9) jump bb4
bb5:
15:
  %16 = asr(%10, %n)
  %17 = and(%16, #-32768)
  jump 18
bb4:
11:
  %12 = sub(%const.0.copy.2, %n)
  %13 = asl(%10, %12)
  %14 = and(%13, #-32768)
  jump 18
bb2:
  jump 18
bb0:
2:
  %const.0.copy.3 = ##0
  %tmp.1 = lsr(%a, #15)
  %a.lobit = zxth(%tmp.1)
  %3 = zxth(%a.lobit)
  %4 = sub(%const.0.copy.3, %3)
  %5 = and(%4, #-32768)
18:
  %.0 = PHI (%5, 2) (%14, 11) (%17, 15) (%const.0.copy.4, 6)
  %tmp.2 = aslh(%.0)
  %tmp.3 = asr(%tmp.2)
  return %tmp.3
