
(instruction
  mv_nimm6_m16
  (pattern
    (constraints
      (allocate-in mN (m2 m3 m0 m1))
      (immediate SImm ((-16 . -1) (1 . 16))))
    (code
      (set-reg mN SImm))))

(instruction
  mv_a16_brc16
  (pattern
    (constraints
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (aliases (src (tmp 4)))
      (allocate-in brcN (brc1 brc2)))
    (code
      (set-reg brcN (tmp 4)))))

(instruction
  mv_nimm5_brc16
  (pattern
    (constraints
      (allocate-in brcN (brc1 brc2))
      (immediate UImm ((0 . 31))))
    (code
      (set-reg brcN UImm))))

(instruction
  mv_nimm6_cuc
  (pattern
    (constraints
      (immediate UImm ((0 . 63))))
    (code
      (set-reg (register cuc) UImm))))

(instruction
  mv_nimm0_ag8g8
  (pattern
    (constraints
      (allocate-in aNg (a1g a2g a3g a4g a5g a6g a7g a0g)))
    (code
      (set-reg aNg (constant ? 0)))))

(instruction
  popi_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm (register sp)))
      (= (tmp 3) (zext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 3))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm (register sp)))
      (= (tmp 4) (sext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 4))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm (register sp)))
      (set-reg dst (tmp 0))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (allocate-in (tmp 12) (reg-flag al dst))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm (register sp)))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 17) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (allocate-in (tmp 12) (reg-flag al dst))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm (register sp)))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 18) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 18))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm (register sp)))
      (= (tmp 26) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 26))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm (register sp)))
      (= (tmp 27) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 27)))))

(instruction
  abs2_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 21) (reg-flag ex dst))
      (allocate-in (tmp 24) (reg-flag ex dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 25) (reg-flag ex dst))
      (allocate-in (tmp 2) (reg-flag al dst))
      (allocate-in (tmp 14) (reg-flag ah src))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 0) (reg-flag al src))
      (allocate-in (tmp 11) (reg-flag ah src))
      (allocate-in (tmp 16) (reg-flag ag dst))
      (allocate-in (tmp 8) (reg-flag ah src))
      (allocate-in (tmp 10) (reg-flag ah dst))
      (allocate-in (tmp 17) (reg-flag ac dst))
      (allocate-in (tmp 28) (reg-flag mi dst))
      (allocate-in (tmp 19) (reg-flag a dst))
      (allocate-in (tmp 5) (reg-flag al dst))
      (allocate-in (tmp 3) (reg-flag al src))
      (allocate-in (tmp 22) (reg-flag a dst))
      (allocate-in (tmp 13) (reg-flag ah dst))
      (allocate-in (tmp 6) (reg-flag al src)))
    (code
      (= (tmp 1) (icmp (constant ? 16) slt (tmp 0) (constant ? 0)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 4) (satsub (constant ? 16) (constant ? 0) (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 5) (tmp 6))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 9) (icmp (constant ? 16) slt (tmp 8) (constant ? 0)))
      (br (tmp 9) bb_3 bb_4)
      (label bb_3)
      (= (tmp 12) (satsub (constant ? 16) (constant ? 0) (tmp 11)))
      (set-reg (tmp 10) (tmp 12))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 13) (tmp 14))
      (br bb_5)
      (label bb_5)
      (= (tmp 15) (phi ((no-value . bb_3) (no-value . bb_4))))
      (set-reg (tmp 16) (constant ? 0))
      (= (tmp 18) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 17) (tmp 18))
      (= (tmp 20) (icmp (constant ? 40) eq (tmp 19) (constant ? 0)))
      (br (tmp 20) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 21) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 23) (icmp (constant ? 40) eq (tmp 22) (constant ? -1)))
      (br (tmp 23) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 25) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 26) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 27) (phi ((no-value . bb_9) ((tmp 26) . bb_10))))
      (= (tmp 29) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 28) (tmp 29)))))

(instruction
  zext_a16
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 0) (reg-flag a dst)))
    (code
      (= (tmp 1) (shl (constant ? 32) dst (constant ? 16)))
      (= (tmp 2) (zext (constant ? 32) (tmp 1) (constant ? 40)))
      (set-reg (tmp 0) (tmp 2))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 3) (reg-flag a dst)))
    (code
      (= (tmp 4) (zext (constant ? 16) dst (constant ? 40)))
      (set-reg (tmp 3) (tmp 4)))))

(instruction
  sext_a16
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 0) (reg-flag a dst)))
    (code
      (= (tmp 1) (shl (constant ? 32) dst (constant ? 16)))
      (= (tmp 2) (sext (constant ? 32) (tmp 1) (constant ? 40)))
      (set-reg (tmp 0) (tmp 2))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 3) (reg-flag a dst)))
    (code
      (= (tmp 4) (sext (constant ? 16) dst (constant ? 40)))
      (set-reg (tmp 3) (tmp 4)))))

(instruction
  mv_a40_r16--
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 6) (reg-flag z rN)))
    (code
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 0))
      (= (tmp 2) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 2) (tmp 3))
      (= (tmp 5) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 5))
      (= (tmp 7) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 7) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 8) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 6) (tmp 8)))))

(instruction
  neg_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 21) (reg-flag a dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 19) (reg-flag ac dst))
      (allocate-in (tmp 30) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 26) (reg-flag ex dst))
      (allocate-in (tmp 23) (reg-flag ex dst))
      (allocate-in (tmp 14) (reg-flag of dst))
      (allocate-in (tmp 24) (reg-flag a dst))
      (allocate-in (tmp 27) (reg-flag ex dst))
      (allocate-in (tmp 12) (reg-flag of dst))
      (allocate-in (tmp 15) (reg-flag of dst))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 10) (sub (constant ? 40) (constant ? 0) src))
      (= (tmp 11) (icmp (constant ? 40) sgt (tmp 10) (constant ? 0)))
      (br (tmp 11) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 13) (icmp (constant ? 40) sgt (tmp 10) src))
      (br (tmp 13) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 17) (phi ((no-value . bb_9) ((tmp 16) . bb_10))))
      (= (tmp 18) (sub (constant ? 40) (constant ? 0) src))
      (set-reg dst (tmp 18))
      (= (tmp 20) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 19) (tmp 20))
      (= (tmp 22) (icmp (constant ? 40) eq (tmp 21) (constant ? 0)))
      (br (tmp 22) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 25) (icmp (constant ? 40) eq (tmp 24) (constant ? -1)))
      (br (tmp 25) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 26) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 27) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 28) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 29) (phi ((no-value . bb_15) ((tmp 28) . bb_16))))
      (= (tmp 31) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 30) (tmp 31))))
  (pattern
    (constraints
      (allocate-in (tmp 21) (reg-flag a dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 19) (reg-flag ac dst))
      (allocate-in (tmp 30) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 26) (reg-flag ex dst))
      (allocate-in (tmp 23) (reg-flag ex dst))
      (allocate-in (tmp 24) (reg-flag a dst))
      (allocate-in (tmp 27) (reg-flag ex dst))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in (tmp 3) (reg-flag of dst))
      (allocate-in (tmp 6) (reg-flag of dst)))
    (code
      (= (tmp 1) (sub (constant ? 32) (constant ? 0) src))
      (= (tmp 2) (icmp (constant ? 32) sgt (tmp 1) (constant ? 0)))
      (br (tmp 2) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 3) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 4) (icmp (constant ? 32) sgt (tmp 1) src))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 6) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 8) (phi ((no-value . bb_3) ((tmp 7) . bb_4))))
      (= (tmp 9) (satsub (constant ? 32) (constant ? 0) src))
      (set-reg dst (tmp 9))
      (= (tmp 20) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 19) (tmp 20))
      (= (tmp 22) (icmp (constant ? 40) eq (tmp 21) (constant ? 0)))
      (br (tmp 22) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 25) (icmp (constant ? 40) eq (tmp 24) (constant ? -1)))
      (br (tmp 25) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 26) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 27) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 28) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 29) (phi ((no-value . bb_15) ((tmp 28) . bb_16))))
      (= (tmp 31) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 30) (tmp 31)))))

(instruction
  clb_a16h_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in (tmp 9) (reg-flag ms dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag mi dst))
      (allocate-in (tmp 13) (reg-flag op dst))
      (allocate-in (tmp 11) (reg-flag ls dst)))
    (code
      (= (tmp 0) (bit_and (constant ? 40) src (constant ? 15)))
      (= (tmp 1) (bit_and (constant ? 40) src (constant ? 3840)))
      (= (tmp 2) (lshr (constant ? 40) (tmp 1) (constant ? 8)))
      (= (tmp 3) (add (constant ? 40) (tmp 0) (tmp 2)))
      (= (tmp 4) (reg-range src (tmp 0) (tmp 3)))
      (set-reg (tmp 4) (constant ? 0))
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 14) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 14) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 15) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 13) (tmp 15)))))

(instruction
  mv_a40_r16++
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 6) (reg-flag z rN)))
    (code
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 0))
      (= (tmp 2) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 2) (tmp 3))
      (= (tmp 5) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 5))
      (= (tmp 7) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 7) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 8) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 6) (tmp 8)))))

(instruction
  shft_nimm6_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 18) (reg-flag ls dst))
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 20) (reg-flag op dst))
      (allocate-in (tmp 14) (reg-flag mi dst))
      (allocate-in (tmp 12) (reg-flag ac dst))
      (allocate-in (tmp 16) (reg-flag ms dst))
      (immediate SImm ((1 . 16))))
    (code
      (= (tmp 2) (sub (constant ? 32) (constant ? 39) SImm))
      (= (tmp 3) (add (constant ? 32) (tmp 2) (constant ? 1)))
      (= (tmp 4) (reg-range dst (tmp 3) (tmp 3)))
      (set-reg (tmp 1) (tmp 4))
      (= (tmp 5) (sub (constant ? 5) (constant ? 0) SImm))
      (= (tmp 6) (lshr (constant ? 40) dst (tmp 5)))
      (set-reg dst (tmp 6))
      (= (tmp 13) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 14) (tmp 15))
      (= (tmp 17) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 16) (tmp 17))
      (= (tmp 19) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 18) (tmp 19))
      (= (tmp 21) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 21) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 22) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 20) (tmp 22)))))

(instruction
  mv_a40_r16++m
  (pattern
    (constraints
      (allocate-in (tmp 5) (reg-flag m rN))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2)))
    (code
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 0))
      (= (tmp 2) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 2) (tmp 3))
      (= (tmp 6) (add (constant ? 16) rN (tmp 5)))
      (set-reg rN (tmp 6))
      (= (tmp 8) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 7) (tmp 9)))))

(instruction
  minz2_a40_a16
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 17) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag ac dst))
      (allocate-in (tmp 16) (reg-flag ex dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 11) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag a dst))
      (allocate-in (tmp 20) (reg-flag mi dst)))
    (code
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp ult (constant ? 16) (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 10) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp (constant ? 40) eq (tmp 11) (constant ? 0)))
      (br (tmp 12) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 15) (icmp (constant ? 40) eq (tmp 14) (constant ? -1)))
      (br (tmp 15) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 17) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 18) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 19) (phi ((no-value . bb_6) ((tmp 18) . bb_7))))
      (= (tmp 21) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 20) (tmp 21))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag ac dst))
      (allocate-in (tmp 16) (reg-flag ex dst))
      (allocate-in (tmp 20) (reg-flag mi dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 11) (reg-flag a dst))
      (allocate-in (tmp 6) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag a dst))
      (allocate-in (tmp 17) (reg-flag ex dst)))
    (code
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp ult (constant ? 16) (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (reg-range (tmp 6) (constant ? 16) (constant ? 39)))
      (= (tmp 8) (zext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp (constant ? 40) eq (tmp 11) (constant ? 0)))
      (br (tmp 12) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 15) (icmp (constant ? 40) eq (tmp 14) (constant ? -1)))
      (br (tmp 15) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 17) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 18) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 19) (phi ((no-value . bb_6) ((tmp 18) . bb_7))))
      (= (tmp 21) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 20) (tmp 21)))))

(instruction
  negs_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 21) (reg-flag a dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 19) (reg-flag ac dst))
      (allocate-in (tmp 30) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 26) (reg-flag ex dst))
      (allocate-in (tmp 23) (reg-flag ex dst))
      (allocate-in (tmp 14) (reg-flag of dst))
      (allocate-in (tmp 24) (reg-flag a dst))
      (allocate-in (tmp 27) (reg-flag ex dst))
      (allocate-in (tmp 12) (reg-flag of dst))
      (allocate-in (tmp 15) (reg-flag of dst))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 10) (sub (constant ? 32) (constant ? 0) src))
      (= (tmp 11) (icmp (constant ? 32) sgt (tmp 10) (constant ? 0)))
      (br (tmp 11) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 13) (icmp (constant ? 32) sgt (tmp 10) src))
      (br (tmp 13) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 17) (phi ((no-value . bb_9) ((tmp 16) . bb_10))))
      (= (tmp 18) (sub (constant ? 32) (constant ? 0) src))
      (set-reg dst (tmp 18))
      (= (tmp 20) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 19) (tmp 20))
      (= (tmp 22) (icmp (constant ? 40) eq (tmp 21) (constant ? 0)))
      (br (tmp 22) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 25) (icmp (constant ? 40) eq (tmp 24) (constant ? -1)))
      (br (tmp 25) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 26) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 27) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 28) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 29) (phi ((no-value . bb_15) ((tmp 28) . bb_16))))
      (= (tmp 31) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 30) (tmp 31))))
  (pattern
    (constraints
      (allocate-in (tmp 21) (reg-flag a dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 19) (reg-flag ac dst))
      (allocate-in (tmp 30) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 26) (reg-flag ex dst))
      (allocate-in (tmp 23) (reg-flag ex dst))
      (allocate-in (tmp 24) (reg-flag a dst))
      (allocate-in (tmp 27) (reg-flag ex dst))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in (tmp 3) (reg-flag of dst))
      (allocate-in (tmp 6) (reg-flag of dst)))
    (code
      (= (tmp 1) (sub (constant ? 32) (constant ? 0) src))
      (= (tmp 2) (icmp (constant ? 32) sgt (tmp 1) (constant ? 0)))
      (br (tmp 2) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 3) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 4) (icmp (constant ? 32) sgt (tmp 1) src))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 6) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 8) (phi ((no-value . bb_3) ((tmp 7) . bb_4))))
      (= (tmp 9) (satsub (constant ? 32) (constant ? 0) src))
      (set-reg dst (tmp 9))
      (= (tmp 20) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 19) (tmp 20))
      (= (tmp 22) (icmp (constant ? 40) eq (tmp 21) (constant ? 0)))
      (br (tmp 22) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 25) (icmp (constant ? 40) eq (tmp 24) (constant ? -1)))
      (br (tmp 25) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 26) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 27) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 28) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 29) (phi ((no-value . bb_15) ((tmp 28) . bb_16))))
      (= (tmp 31) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 30) (tmp 31)))))

(instruction
  abs4_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 40) (reg-flag ex dst))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 33) (reg-flag ac dst))
      (allocate-in (tmp 35) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 37) (reg-flag ex dst))
      (allocate-in (tmp 32) (reg-flag ag dst))
      (allocate-in (tmp 38) (reg-flag a dst))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 0) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 1) (icmp (constant ? 8) slt (tmp 0) (constant ? 0)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 4) (satsub (constant ? 8) (constant ? 0) (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (br bb_2)
      (label bb_1)
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 6) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 5) (tmp 6))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 8) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 9) (icmp (constant ? 16) slt (tmp 8) (constant ? 0)))
      (br (tmp 9) bb_3 bb_4)
      (label bb_3)
      (= (tmp 10) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 11) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 12) (satsub (constant ? 8) (constant ? 0) (tmp 11)))
      (set-reg (tmp 10) (tmp 12))
      (br bb_5)
      (label bb_4)
      (= (tmp 13) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 14) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 13) (tmp 14))
      (br bb_5)
      (label bb_5)
      (= (tmp 15) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 16) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 17) (icmp (constant ? 24) slt (tmp 16) (constant ? 0)))
      (br (tmp 17) bb_6 bb_7)
      (label bb_6)
      (= (tmp 18) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 19) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 20) (satsub (constant ? 8) (constant ? 0) (tmp 19)))
      (set-reg (tmp 18) (tmp 20))
      (br bb_8)
      (label bb_7)
      (= (tmp 21) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 22) (reg-range src (constant ? 16) (constant ? 23)))
      (set-reg (tmp 21) (tmp 22))
      (br bb_8)
      (label bb_8)
      (= (tmp 23) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 24) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 25) (icmp (constant ? 32) slt (tmp 24) (constant ? 0)))
      (br (tmp 25) bb_9 bb_10)
      (label bb_9)
      (= (tmp 26) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 27) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 28) (satsub (constant ? 8) (constant ? 0) (tmp 27)))
      (set-reg (tmp 26) (tmp 28))
      (br bb_11)
      (label bb_10)
      (= (tmp 29) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 30) (reg-range src (constant ? 24) (constant ? 31)))
      (set-reg (tmp 29) (tmp 30))
      (br bb_11)
      (label bb_11)
      (= (tmp 31) (phi ((no-value . bb_9) (no-value . bb_10))))
      (set-reg (tmp 32) (constant ? 0))
      (= (tmp 34) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 33) (tmp 34))
      (= (tmp 36) (icmp (constant ? 40) eq (tmp 35) (constant ? 0)))
      (br (tmp 36) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 37) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 39) (icmp (constant ? 40) eq (tmp 38) (constant ? -1)))
      (br (tmp 39) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 41) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 42) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 43) (phi ((no-value . bb_15) ((tmp 42) . bb_16))))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45)))))

(instruction
  mv_a40_r16-no-modifier
  (pattern
    (constraints
      (allocate-in (tmp 5) (reg-flag z rN))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2)))
    (code
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 0))
      (= (tmp 2) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 2) (tmp 3))
      (= (tmp 6) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 5) (tmp 7)))))

(instruction
  min4_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 24) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 33) (reg-flag mi dst))
      (allocate-in (tmp 29) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag a dst))
      (allocate-in (tmp 20) (reg-flag a dst))
      (allocate-in (tmp 26) (reg-flag ex dst))
      (allocate-in (tmp 22) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 30) (reg-flag ex dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 2) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp slt (constant ? 8) (tmp 1) (tmp 2)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 0) (tmp 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 0) (tmp 2))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 6) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 7) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 8) (icmp slt (constant ? 8) (tmp 6) (tmp 7)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (tmp 6))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 5) (tmp 7))
      (br bb_5)
      (label bb_5)
      (= (tmp 9) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 10) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 11) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 12) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 13) (icmp slt (constant ? 8) (tmp 11) (tmp 12)))
      (br (tmp 13) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 10) (tmp 11))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 10) (tmp 12))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 15) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 16) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 17) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 18) (icmp slt (constant ? 8) (tmp 16) (tmp 17)))
      (br (tmp 18) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 15) (tmp 16))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 15) (tmp 17))
      (br bb_11)
      (label bb_11)
      (= (tmp 19) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 21) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 20) (tmp 21))
      (= (tmp 23) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 22) (tmp 23))
      (= (tmp 25) (icmp (constant ? 40) eq (tmp 24) (constant ? 0)))
      (br (tmp 25) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 26) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 28) (icmp (constant ? 40) eq (tmp 27) (constant ? -1)))
      (br (tmp 28) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 29) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 30) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 31) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 32) (phi ((no-value . bb_15) ((tmp 31) . bb_16))))
      (= (tmp 34) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 33) (tmp 34)))))

(instruction
  mv_r16_a40--
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 16) (reg-flag z rN))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (reg-range ldm (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) rN dst))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range ldm (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) dst (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) rN (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 13) (zext (constant ? 32) (tmp 5) (constant ? 40)))
      (set-reg dst (tmp 13))
      (= (tmp 15) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 16) (reg-flag z rN))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (reg-range ldm (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) rN dst))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range ldm (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) dst (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) rN (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 14) (sext (constant ? 32) (tmp 5) (constant ? 40)))
      (set-reg dst (tmp 14))
      (= (tmp 15) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18)))))

(instruction
  cve_a40_a16_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (sub (constant ? 16) (constant ? 15) (constant ? 0)))
      (= (tmp 1) (reg-range src2 (tmp 0) (tmp 0)))
      (= (tmp 2) (sub (constant ? 16) (constant ? 23) (constant ? 0)))
      (= (tmp 3) (sub (constant ? 16) (tmp 2) (constant ? 0)))
      (= (tmp 4) (reg-range src1 (tmp 3) (tmp 3)))
      (= (tmp 5) (bit_and (constant ? 1) (tmp 1) (tmp 4)))
      (= (tmp 6) (bit_xor (constant ? 1) (constant ? 0) (tmp 5)))
      (= (tmp 7) (sub (constant ? 16) (constant ? 15) (constant ? 1)))
      (= (tmp 8) (reg-range src2 (tmp 7) (tmp 7)))
      (= (tmp 9) (sub (constant ? 16) (constant ? 23) (constant ? 1)))
      (= (tmp 10) (sub (constant ? 16) (tmp 9) (constant ? 0)))
      (= (tmp 11) (reg-range src1 (tmp 10) (tmp 10)))
      (= (tmp 12) (bit_and (constant ? 1) (tmp 8) (tmp 11)))
      (= (tmp 13) (bit_xor (constant ? 1) (tmp 6) (tmp 12)))
      (= (tmp 14) (sub (constant ? 16) (constant ? 15) (constant ? 2)))
      (= (tmp 15) (reg-range src2 (tmp 14) (tmp 14)))
      (= (tmp 16) (sub (constant ? 16) (constant ? 23) (constant ? 2)))
      (= (tmp 17) (sub (constant ? 16) (tmp 16) (constant ? 0)))
      (= (tmp 18) (reg-range src1 (tmp 17) (tmp 17)))
      (= (tmp 19) (bit_and (constant ? 1) (tmp 15) (tmp 18)))
      (= (tmp 20) (bit_xor (constant ? 1) (tmp 13) (tmp 19)))
      (= (tmp 21) (sub (constant ? 16) (constant ? 15) (constant ? 3)))
      (= (tmp 22) (reg-range src2 (tmp 21) (tmp 21)))
      (= (tmp 23) (sub (constant ? 16) (constant ? 23) (constant ? 3)))
      (= (tmp 24) (sub (constant ? 16) (tmp 23) (constant ? 0)))
      (= (tmp 25) (reg-range src1 (tmp 24) (tmp 24)))
      (= (tmp 26) (bit_and (constant ? 1) (tmp 22) (tmp 25)))
      (= (tmp 27) (bit_xor (constant ? 1) (tmp 20) (tmp 26)))
      (= (tmp 28) (sub (constant ? 16) (constant ? 15) (constant ? 4)))
      (= (tmp 29) (reg-range src2 (tmp 28) (tmp 28)))
      (= (tmp 30) (sub (constant ? 16) (constant ? 23) (constant ? 4)))
      (= (tmp 31) (sub (constant ? 16) (tmp 30) (constant ? 0)))
      (= (tmp 32) (reg-range src1 (tmp 31) (tmp 31)))
      (= (tmp 33) (bit_and (constant ? 1) (tmp 29) (tmp 32)))
      (= (tmp 34) (bit_xor (constant ? 1) (tmp 27) (tmp 33)))
      (= (tmp 35) (sub (constant ? 16) (constant ? 15) (constant ? 5)))
      (= (tmp 36) (reg-range src2 (tmp 35) (tmp 35)))
      (= (tmp 37) (sub (constant ? 16) (constant ? 23) (constant ? 5)))
      (= (tmp 38) (sub (constant ? 16) (tmp 37) (constant ? 0)))
      (= (tmp 39) (reg-range src1 (tmp 38) (tmp 38)))
      (= (tmp 40) (bit_and (constant ? 1) (tmp 36) (tmp 39)))
      (= (tmp 41) (bit_xor (constant ? 1) (tmp 34) (tmp 40)))
      (= (tmp 42) (sub (constant ? 16) (constant ? 15) (constant ? 6)))
      (= (tmp 43) (reg-range src2 (tmp 42) (tmp 42)))
      (= (tmp 44) (sub (constant ? 16) (constant ? 23) (constant ? 6)))
      (= (tmp 45) (sub (constant ? 16) (tmp 44) (constant ? 0)))
      (= (tmp 46) (reg-range src1 (tmp 45) (tmp 45)))
      (= (tmp 47) (bit_and (constant ? 1) (tmp 43) (tmp 46)))
      (= (tmp 48) (bit_xor (constant ? 1) (tmp 41) (tmp 47)))
      (= (tmp 49) (sub (constant ? 16) (constant ? 15) (constant ? 7)))
      (= (tmp 50) (reg-range src2 (tmp 49) (tmp 49)))
      (= (tmp 51) (sub (constant ? 16) (constant ? 23) (constant ? 7)))
      (= (tmp 52) (sub (constant ? 16) (tmp 51) (constant ? 0)))
      (= (tmp 53) (reg-range src1 (tmp 52) (tmp 52)))
      (= (tmp 54) (bit_and (constant ? 1) (tmp 50) (tmp 53)))
      (= (tmp 55) (bit_xor (constant ? 1) (tmp 48) (tmp 54)))
      (= (tmp 56) (sub (constant ? 16) (constant ? 15) (constant ? 8)))
      (= (tmp 57) (reg-range src2 (tmp 56) (tmp 56)))
      (= (tmp 58) (sub (constant ? 16) (constant ? 23) (constant ? 8)))
      (= (tmp 59) (sub (constant ? 16) (tmp 58) (constant ? 0)))
      (= (tmp 60) (reg-range src1 (tmp 59) (tmp 59)))
      (= (tmp 61) (bit_and (constant ? 1) (tmp 57) (tmp 60)))
      (= (tmp 62) (bit_xor (constant ? 1) (tmp 55) (tmp 61)))
      (= (tmp 63) (sub (constant ? 16) (constant ? 15) (constant ? 0)))
      (= (tmp 64) (reg-range dst (tmp 63) (tmp 63)))
      (set-reg (tmp 64) (tmp 62))
      (= (tmp 65) (sub (constant ? 16) (constant ? 15) (constant ? 0)))
      (= (tmp 66) (reg-range src2 (tmp 65) (tmp 65)))
      (= (tmp 67) (sub (constant ? 16) (constant ? 23) (constant ? 0)))
      (= (tmp 68) (sub (constant ? 16) (tmp 67) (constant ? 1)))
      (= (tmp 69) (reg-range src1 (tmp 68) (tmp 68)))
      (= (tmp 70) (bit_and (constant ? 1) (tmp 66) (tmp 69)))
      (= (tmp 71) (bit_xor (constant ? 1) (constant ? 0) (tmp 70)))
      (= (tmp 72) (sub (constant ? 16) (constant ? 15) (constant ? 1)))
      (= (tmp 73) (reg-range src2 (tmp 72) (tmp 72)))
      (= (tmp 74) (sub (constant ? 16) (constant ? 23) (constant ? 1)))
      (= (tmp 75) (sub (constant ? 16) (tmp 74) (constant ? 1)))
      (= (tmp 76) (reg-range src1 (tmp 75) (tmp 75)))
      (= (tmp 77) (bit_and (constant ? 1) (tmp 73) (tmp 76)))
      (= (tmp 78) (bit_xor (constant ? 1) (tmp 71) (tmp 77)))
      (= (tmp 79) (sub (constant ? 16) (constant ? 15) (constant ? 2)))
      (= (tmp 80) (reg-range src2 (tmp 79) (tmp 79)))
      (= (tmp 81) (sub (constant ? 16) (constant ? 23) (constant ? 2)))
      (= (tmp 82) (sub (constant ? 16) (tmp 81) (constant ? 1)))
      (= (tmp 83) (reg-range src1 (tmp 82) (tmp 82)))
      (= (tmp 84) (bit_and (constant ? 1) (tmp 80) (tmp 83)))
      (= (tmp 85) (bit_xor (constant ? 1) (tmp 78) (tmp 84)))
      (= (tmp 86) (sub (constant ? 16) (constant ? 15) (constant ? 3)))
      (= (tmp 87) (reg-range src2 (tmp 86) (tmp 86)))
      (= (tmp 88) (sub (constant ? 16) (constant ? 23) (constant ? 3)))
      (= (tmp 89) (sub (constant ? 16) (tmp 88) (constant ? 1)))
      (= (tmp 90) (reg-range src1 (tmp 89) (tmp 89)))
      (= (tmp 91) (bit_and (constant ? 1) (tmp 87) (tmp 90)))
      (= (tmp 92) (bit_xor (constant ? 1) (tmp 85) (tmp 91)))
      (= (tmp 93) (sub (constant ? 16) (constant ? 15) (constant ? 4)))
      (= (tmp 94) (reg-range src2 (tmp 93) (tmp 93)))
      (= (tmp 95) (sub (constant ? 16) (constant ? 23) (constant ? 4)))
      (= (tmp 96) (sub (constant ? 16) (tmp 95) (constant ? 1)))
      (= (tmp 97) (reg-range src1 (tmp 96) (tmp 96)))
      (= (tmp 98) (bit_and (constant ? 1) (tmp 94) (tmp 97)))
      (= (tmp 99) (bit_xor (constant ? 1) (tmp 92) (tmp 98)))
      (= (tmp 100) (sub (constant ? 16) (constant ? 15) (constant ? 5)))
      (= (tmp 101) (reg-range src2 (tmp 100) (tmp 100)))
      (= (tmp 102) (sub (constant ? 16) (constant ? 23) (constant ? 5)))
      (= (tmp 103) (sub (constant ? 16) (tmp 102) (constant ? 1)))
      (= (tmp 104) (reg-range src1 (tmp 103) (tmp 103)))
      (= (tmp 105) (bit_and (constant ? 1) (tmp 101) (tmp 104)))
      (= (tmp 106) (bit_xor (constant ? 1) (tmp 99) (tmp 105)))
      (= (tmp 107) (sub (constant ? 16) (constant ? 15) (constant ? 6)))
      (= (tmp 108) (reg-range src2 (tmp 107) (tmp 107)))
      (= (tmp 109) (sub (constant ? 16) (constant ? 23) (constant ? 6)))
      (= (tmp 110) (sub (constant ? 16) (tmp 109) (constant ? 1)))
      (= (tmp 111) (reg-range src1 (tmp 110) (tmp 110)))
      (= (tmp 112) (bit_and (constant ? 1) (tmp 108) (tmp 111)))
      (= (tmp 113) (bit_xor (constant ? 1) (tmp 106) (tmp 112)))
      (= (tmp 114) (sub (constant ? 16) (constant ? 15) (constant ? 7)))
      (= (tmp 115) (reg-range src2 (tmp 114) (tmp 114)))
      (= (tmp 116) (sub (constant ? 16) (constant ? 23) (constant ? 7)))
      (= (tmp 117) (sub (constant ? 16) (tmp 116) (constant ? 1)))
      (= (tmp 118) (reg-range src1 (tmp 117) (tmp 117)))
      (= (tmp 119) (bit_and (constant ? 1) (tmp 115) (tmp 118)))
      (= (tmp 120) (bit_xor (constant ? 1) (tmp 113) (tmp 119)))
      (= (tmp 121) (sub (constant ? 16) (constant ? 15) (constant ? 8)))
      (= (tmp 122) (reg-range src2 (tmp 121) (tmp 121)))
      (= (tmp 123) (sub (constant ? 16) (constant ? 23) (constant ? 8)))
      (= (tmp 124) (sub (constant ? 16) (tmp 123) (constant ? 1)))
      (= (tmp 125) (reg-range src1 (tmp 124) (tmp 124)))
      (= (tmp 126) (bit_and (constant ? 1) (tmp 122) (tmp 125)))
      (= (tmp 127) (bit_xor (constant ? 1) (tmp 120) (tmp 126)))
      (= (tmp 128) (sub (constant ? 16) (constant ? 15) (constant ? 1)))
      (= (tmp 129) (reg-range dst (tmp 128) (tmp 128)))
      (set-reg (tmp 129) (tmp 127))
      (= (tmp 130) (sub (constant ? 16) (constant ? 15) (constant ? 0)))
      (= (tmp 131) (reg-range src2 (tmp 130) (tmp 130)))
      (= (tmp 132) (sub (constant ? 16) (constant ? 23) (constant ? 0)))
      (= (tmp 133) (sub (constant ? 16) (tmp 132) (constant ? 2)))
      (= (tmp 134) (reg-range src1 (tmp 133) (tmp 133)))
      (= (tmp 135) (bit_and (constant ? 1) (tmp 131) (tmp 134)))
      (= (tmp 136) (bit_xor (constant ? 1) (constant ? 0) (tmp 135)))
      (= (tmp 137) (sub (constant ? 16) (constant ? 15) (constant ? 1)))
      (= (tmp 138) (reg-range src2 (tmp 137) (tmp 137)))
      (= (tmp 139) (sub (constant ? 16) (constant ? 23) (constant ? 1)))
      (= (tmp 140) (sub (constant ? 16) (tmp 139) (constant ? 2)))
      (= (tmp 141) (reg-range src1 (tmp 140) (tmp 140)))
      (= (tmp 142) (bit_and (constant ? 1) (tmp 138) (tmp 141)))
      (= (tmp 143) (bit_xor (constant ? 1) (tmp 136) (tmp 142)))
      (= (tmp 144) (sub (constant ? 16) (constant ? 15) (constant ? 2)))
      (= (tmp 145) (reg-range src2 (tmp 144) (tmp 144)))
      (= (tmp 146) (sub (constant ? 16) (constant ? 23) (constant ? 2)))
      (= (tmp 147) (sub (constant ? 16) (tmp 146) (constant ? 2)))
      (= (tmp 148) (reg-range src1 (tmp 147) (tmp 147)))
      (= (tmp 149) (bit_and (constant ? 1) (tmp 145) (tmp 148)))
      (= (tmp 150) (bit_xor (constant ? 1) (tmp 143) (tmp 149)))
      (= (tmp 151) (sub (constant ? 16) (constant ? 15) (constant ? 3)))
      (= (tmp 152) (reg-range src2 (tmp 151) (tmp 151)))
      (= (tmp 153) (sub (constant ? 16) (constant ? 23) (constant ? 3)))
      (= (tmp 154) (sub (constant ? 16) (tmp 153) (constant ? 2)))
      (= (tmp 155) (reg-range src1 (tmp 154) (tmp 154)))
      (= (tmp 156) (bit_and (constant ? 1) (tmp 152) (tmp 155)))
      (= (tmp 157) (bit_xor (constant ? 1) (tmp 150) (tmp 156)))
      (= (tmp 158) (sub (constant ? 16) (constant ? 15) (constant ? 4)))
      (= (tmp 159) (reg-range src2 (tmp 158) (tmp 158)))
      (= (tmp 160) (sub (constant ? 16) (constant ? 23) (constant ? 4)))
      (= (tmp 161) (sub (constant ? 16) (tmp 160) (constant ? 2)))
      (= (tmp 162) (reg-range src1 (tmp 161) (tmp 161)))
      (= (tmp 163) (bit_and (constant ? 1) (tmp 159) (tmp 162)))
      (= (tmp 164) (bit_xor (constant ? 1) (tmp 157) (tmp 163)))
      (= (tmp 165) (sub (constant ? 16) (constant ? 15) (constant ? 5)))
      (= (tmp 166) (reg-range src2 (tmp 165) (tmp 165)))
      (= (tmp 167) (sub (constant ? 16) (constant ? 23) (constant ? 5)))
      (= (tmp 168) (sub (constant ? 16) (tmp 167) (constant ? 2)))
      (= (tmp 169) (reg-range src1 (tmp 168) (tmp 168)))
      (= (tmp 170) (bit_and (constant ? 1) (tmp 166) (tmp 169)))
      (= (tmp 171) (bit_xor (constant ? 1) (tmp 164) (tmp 170)))
      (= (tmp 172) (sub (constant ? 16) (constant ? 15) (constant ? 6)))
      (= (tmp 173) (reg-range src2 (tmp 172) (tmp 172)))
      (= (tmp 174) (sub (constant ? 16) (constant ? 23) (constant ? 6)))
      (= (tmp 175) (sub (constant ? 16) (tmp 174) (constant ? 2)))
      (= (tmp 176) (reg-range src1 (tmp 175) (tmp 175)))
      (= (tmp 177) (bit_and (constant ? 1) (tmp 173) (tmp 176)))
      (= (tmp 178) (bit_xor (constant ? 1) (tmp 171) (tmp 177)))
      (= (tmp 179) (sub (constant ? 16) (constant ? 15) (constant ? 7)))
      (= (tmp 180) (reg-range src2 (tmp 179) (tmp 179)))
      (= (tmp 181) (sub (constant ? 16) (constant ? 23) (constant ? 7)))
      (= (tmp 182) (sub (constant ? 16) (tmp 181) (constant ? 2)))
      (= (tmp 183) (reg-range src1 (tmp 182) (tmp 182)))
      (= (tmp 184) (bit_and (constant ? 1) (tmp 180) (tmp 183)))
      (= (tmp 185) (bit_xor (constant ? 1) (tmp 178) (tmp 184)))
      (= (tmp 186) (sub (constant ? 16) (constant ? 15) (constant ? 8)))
      (= (tmp 187) (reg-range src2 (tmp 186) (tmp 186)))
      (= (tmp 188) (sub (constant ? 16) (constant ? 23) (constant ? 8)))
      (= (tmp 189) (sub (constant ? 16) (tmp 188) (constant ? 2)))
      (= (tmp 190) (reg-range src1 (tmp 189) (tmp 189)))
      (= (tmp 191) (bit_and (constant ? 1) (tmp 187) (tmp 190)))
      (= (tmp 192) (bit_xor (constant ? 1) (tmp 185) (tmp 191)))
      (= (tmp 193) (sub (constant ? 16) (constant ? 15) (constant ? 2)))
      (= (tmp 194) (reg-range dst (tmp 193) (tmp 193)))
      (set-reg (tmp 194) (tmp 192))
      (= (tmp 195) (sub (constant ? 16) (constant ? 15) (constant ? 0)))
      (= (tmp 196) (reg-range src2 (tmp 195) (tmp 195)))
      (= (tmp 197) (sub (constant ? 16) (constant ? 23) (constant ? 0)))
      (= (tmp 198) (sub (constant ? 16) (tmp 197) (constant ? 3)))
      (= (tmp 199) (reg-range src1 (tmp 198) (tmp 198)))
      (= (tmp 200) (bit_and (constant ? 1) (tmp 196) (tmp 199)))
      (= (tmp 201) (bit_xor (constant ? 1) (constant ? 0) (tmp 200)))
      (= (tmp 202) (sub (constant ? 16) (constant ? 15) (constant ? 1)))
      (= (tmp 203) (reg-range src2 (tmp 202) (tmp 202)))
      (= (tmp 204) (sub (constant ? 16) (constant ? 23) (constant ? 1)))
      (= (tmp 205) (sub (constant ? 16) (tmp 204) (constant ? 3)))
      (= (tmp 206) (reg-range src1 (tmp 205) (tmp 205)))
      (= (tmp 207) (bit_and (constant ? 1) (tmp 203) (tmp 206)))
      (= (tmp 208) (bit_xor (constant ? 1) (tmp 201) (tmp 207)))
      (= (tmp 209) (sub (constant ? 16) (constant ? 15) (constant ? 2)))
      (= (tmp 210) (reg-range src2 (tmp 209) (tmp 209)))
      (= (tmp 211) (sub (constant ? 16) (constant ? 23) (constant ? 2)))
      (= (tmp 212) (sub (constant ? 16) (tmp 211) (constant ? 3)))
      (= (tmp 213) (reg-range src1 (tmp 212) (tmp 212)))
      (= (tmp 214) (bit_and (constant ? 1) (tmp 210) (tmp 213)))
      (= (tmp 215) (bit_xor (constant ? 1) (tmp 208) (tmp 214)))
      (= (tmp 216) (sub (constant ? 16) (constant ? 15) (constant ? 3)))
      (= (tmp 217) (reg-range src2 (tmp 216) (tmp 216)))
      (= (tmp 218) (sub (constant ? 16) (constant ? 23) (constant ? 3)))
      (= (tmp 219) (sub (constant ? 16) (tmp 218) (constant ? 3)))
      (= (tmp 220) (reg-range src1 (tmp 219) (tmp 219)))
      (= (tmp 221) (bit_and (constant ? 1) (tmp 217) (tmp 220)))
      (= (tmp 222) (bit_xor (constant ? 1) (tmp 215) (tmp 221)))
      (= (tmp 223) (sub (constant ? 16) (constant ? 15) (constant ? 4)))
      (= (tmp 224) (reg-range src2 (tmp 223) (tmp 223)))
      (= (tmp 225) (sub (constant ? 16) (constant ? 23) (constant ? 4)))
      (= (tmp 226) (sub (constant ? 16) (tmp 225) (constant ? 3)))
      (= (tmp 227) (reg-range src1 (tmp 226) (tmp 226)))
      (= (tmp 228) (bit_and (constant ? 1) (tmp 224) (tmp 227)))
      (= (tmp 229) (bit_xor (constant ? 1) (tmp 222) (tmp 228)))
      (= (tmp 230) (sub (constant ? 16) (constant ? 15) (constant ? 5)))
      (= (tmp 231) (reg-range src2 (tmp 230) (tmp 230)))
      (= (tmp 232) (sub (constant ? 16) (constant ? 23) (constant ? 5)))
      (= (tmp 233) (sub (constant ? 16) (tmp 232) (constant ? 3)))
      (= (tmp 234) (reg-range src1 (tmp 233) (tmp 233)))
      (= (tmp 235) (bit_and (constant ? 1) (tmp 231) (tmp 234)))
      (= (tmp 236) (bit_xor (constant ? 1) (tmp 229) (tmp 235)))
      (= (tmp 237) (sub (constant ? 16) (constant ? 15) (constant ? 6)))
      (= (tmp 238) (reg-range src2 (tmp 237) (tmp 237)))
      (= (tmp 239) (sub (constant ? 16) (constant ? 23) (constant ? 6)))
      (= (tmp 240) (sub (constant ? 16) (tmp 239) (constant ? 3)))
      (= (tmp 241) (reg-range src1 (tmp 240) (tmp 240)))
      (= (tmp 242) (bit_and (constant ? 1) (tmp 238) (tmp 241)))
      (= (tmp 243) (bit_xor (constant ? 1) (tmp 236) (tmp 242)))
      (= (tmp 244) (sub (constant ? 16) (constant ? 15) (constant ? 7)))
      (= (tmp 245) (reg-range src2 (tmp 244) (tmp 244)))
      (= (tmp 246) (sub (constant ? 16) (constant ? 23) (constant ? 7)))
      (= (tmp 247) (sub (constant ? 16) (tmp 246) (constant ? 3)))
      (= (tmp 248) (reg-range src1 (tmp 247) (tmp 247)))
      (= (tmp 249) (bit_and (constant ? 1) (tmp 245) (tmp 248)))
      (= (tmp 250) (bit_xor (constant ? 1) (tmp 243) (tmp 249)))
      (= (tmp 251) (sub (constant ? 16) (constant ? 15) (constant ? 8)))
      (= (tmp 252) (reg-range src2 (tmp 251) (tmp 251)))
      (= (tmp 253) (sub (constant ? 16) (constant ? 23) (constant ? 8)))
      (= (tmp 254) (sub (constant ? 16) (tmp 253) (constant ? 3)))
      (= (tmp 255) (reg-range src1 (tmp 254) (tmp 254)))
      (= (tmp 256) (bit_and (constant ? 1) (tmp 252) (tmp 255)))
      (= (tmp 257) (bit_xor (constant ? 1) (tmp 250) (tmp 256)))
      (= (tmp 258) (sub (constant ? 16) (constant ? 15) (constant ? 3)))
      (= (tmp 259) (reg-range dst (tmp 258) (tmp 258)))
      (set-reg (tmp 259) (tmp 257))
      (= (tmp 260) (sub (constant ? 16) (constant ? 15) (constant ? 0)))
      (= (tmp 261) (reg-range src2 (tmp 260) (tmp 260)))
      (= (tmp 262) (sub (constant ? 16) (constant ? 23) (constant ? 0)))
      (= (tmp 263) (sub (constant ? 16) (tmp 262) (constant ? 4)))
      (= (tmp 264) (reg-range src1 (tmp 263) (tmp 263)))
      (= (tmp 265) (bit_and (constant ? 1) (tmp 261) (tmp 264)))
      (= (tmp 266) (bit_xor (constant ? 1) (constant ? 0) (tmp 265)))
      (= (tmp 267) (sub (constant ? 16) (constant ? 15) (constant ? 1)))
      (= (tmp 268) (reg-range src2 (tmp 267) (tmp 267)))
      (= (tmp 269) (sub (constant ? 16) (constant ? 23) (constant ? 1)))
      (= (tmp 270) (sub (constant ? 16) (tmp 269) (constant ? 4)))
      (= (tmp 271) (reg-range src1 (tmp 270) (tmp 270)))
      (= (tmp 272) (bit_and (constant ? 1) (tmp 268) (tmp 271)))
      (= (tmp 273) (bit_xor (constant ? 1) (tmp 266) (tmp 272)))
      (= (tmp 274) (sub (constant ? 16) (constant ? 15) (constant ? 2)))
      (= (tmp 275) (reg-range src2 (tmp 274) (tmp 274)))
      (= (tmp 276) (sub (constant ? 16) (constant ? 23) (constant ? 2)))
      (= (tmp 277) (sub (constant ? 16) (tmp 276) (constant ? 4)))
      (= (tmp 278) (reg-range src1 (tmp 277) (tmp 277)))
      (= (tmp 279) (bit_and (constant ? 1) (tmp 275) (tmp 278)))
      (= (tmp 280) (bit_xor (constant ? 1) (tmp 273) (tmp 279)))
      (= (tmp 281) (sub (constant ? 16) (constant ? 15) (constant ? 3)))
      (= (tmp 282) (reg-range src2 (tmp 281) (tmp 281)))
      (= (tmp 283) (sub (constant ? 16) (constant ? 23) (constant ? 3)))
      (= (tmp 284) (sub (constant ? 16) (tmp 283) (constant ? 4)))
      (= (tmp 285) (reg-range src1 (tmp 284) (tmp 284)))
      (= (tmp 286) (bit_and (constant ? 1) (tmp 282) (tmp 285)))
      (= (tmp 287) (bit_xor (constant ? 1) (tmp 280) (tmp 286)))
      (= (tmp 288) (sub (constant ? 16) (constant ? 15) (constant ? 4)))
      (= (tmp 289) (reg-range src2 (tmp 288) (tmp 288)))
      (= (tmp 290) (sub (constant ? 16) (constant ? 23) (constant ? 4)))
      (= (tmp 291) (sub (constant ? 16) (tmp 290) (constant ? 4)))
      (= (tmp 292) (reg-range src1 (tmp 291) (tmp 291)))
      (= (tmp 293) (bit_and (constant ? 1) (tmp 289) (tmp 292)))
      (= (tmp 294) (bit_xor (constant ? 1) (tmp 287) (tmp 293)))
      (= (tmp 295) (sub (constant ? 16) (constant ? 15) (constant ? 5)))
      (= (tmp 296) (reg-range src2 (tmp 295) (tmp 295)))
      (= (tmp 297) (sub (constant ? 16) (constant ? 23) (constant ? 5)))
      (= (tmp 298) (sub (constant ? 16) (tmp 297) (constant ? 4)))
      (= (tmp 299) (reg-range src1 (tmp 298) (tmp 298)))
      (= (tmp 300) (bit_and (constant ? 1) (tmp 296) (tmp 299)))
      (= (tmp 301) (bit_xor (constant ? 1) (tmp 294) (tmp 300)))
      (= (tmp 302) (sub (constant ? 16) (constant ? 15) (constant ? 6)))
      (= (tmp 303) (reg-range src2 (tmp 302) (tmp 302)))
      (= (tmp 304) (sub (constant ? 16) (constant ? 23) (constant ? 6)))
      (= (tmp 305) (sub (constant ? 16) (tmp 304) (constant ? 4)))
      (= (tmp 306) (reg-range src1 (tmp 305) (tmp 305)))
      (= (tmp 307) (bit_and (constant ? 1) (tmp 303) (tmp 306)))
      (= (tmp 308) (bit_xor (constant ? 1) (tmp 301) (tmp 307)))
      (= (tmp 309) (sub (constant ? 16) (constant ? 15) (constant ? 7)))
      (= (tmp 310) (reg-range src2 (tmp 309) (tmp 309)))
      (= (tmp 311) (sub (constant ? 16) (constant ? 23) (constant ? 7)))
      (= (tmp 312) (sub (constant ? 16) (tmp 311) (constant ? 4)))
      (= (tmp 313) (reg-range src1 (tmp 312) (tmp 312)))
      (= (tmp 314) (bit_and (constant ? 1) (tmp 310) (tmp 313)))
      (= (tmp 315) (bit_xor (constant ? 1) (tmp 308) (tmp 314)))
      (= (tmp 316) (sub (constant ? 16) (constant ? 15) (constant ? 8)))
      (= (tmp 317) (reg-range src2 (tmp 316) (tmp 316)))
      (= (tmp 318) (sub (constant ? 16) (constant ? 23) (constant ? 8)))
      (= (tmp 319) (sub (constant ? 16) (tmp 318) (constant ? 4)))
      (= (tmp 320) (reg-range src1 (tmp 319) (tmp 319)))
      (= (tmp 321) (bit_and (constant ? 1) (tmp 317) (tmp 320)))
      (= (tmp 322) (bit_xor (constant ? 1) (tmp 315) (tmp 321)))
      (= (tmp 323) (sub (constant ? 16) (constant ? 15) (constant ? 4)))
      (= (tmp 324) (reg-range dst (tmp 323) (tmp 323)))
      (set-reg (tmp 324) (tmp 322))
      (= (tmp 325) (sub (constant ? 16) (constant ? 15) (constant ? 0)))
      (= (tmp 326) (reg-range src2 (tmp 325) (tmp 325)))
      (= (tmp 327) (sub (constant ? 16) (constant ? 23) (constant ? 0)))
      (= (tmp 328) (sub (constant ? 16) (tmp 327) (constant ? 5)))
      (= (tmp 329) (reg-range src1 (tmp 328) (tmp 328)))
      (= (tmp 330) (bit_and (constant ? 1) (tmp 326) (tmp 329)))
      (= (tmp 331) (bit_xor (constant ? 1) (constant ? 0) (tmp 330)))
      (= (tmp 332) (sub (constant ? 16) (constant ? 15) (constant ? 1)))
      (= (tmp 333) (reg-range src2 (tmp 332) (tmp 332)))
      (= (tmp 334) (sub (constant ? 16) (constant ? 23) (constant ? 1)))
      (= (tmp 335) (sub (constant ? 16) (tmp 334) (constant ? 5)))
      (= (tmp 336) (reg-range src1 (tmp 335) (tmp 335)))
      (= (tmp 337) (bit_and (constant ? 1) (tmp 333) (tmp 336)))
      (= (tmp 338) (bit_xor (constant ? 1) (tmp 331) (tmp 337)))
      (= (tmp 339) (sub (constant ? 16) (constant ? 15) (constant ? 2)))
      (= (tmp 340) (reg-range src2 (tmp 339) (tmp 339)))
      (= (tmp 341) (sub (constant ? 16) (constant ? 23) (constant ? 2)))
      (= (tmp 342) (sub (constant ? 16) (tmp 341) (constant ? 5)))
      (= (tmp 343) (reg-range src1 (tmp 342) (tmp 342)))
      (= (tmp 344) (bit_and (constant ? 1) (tmp 340) (tmp 343)))
      (= (tmp 345) (bit_xor (constant ? 1) (tmp 338) (tmp 344)))
      (= (tmp 346) (sub (constant ? 16) (constant ? 15) (constant ? 3)))
      (= (tmp 347) (reg-range src2 (tmp 346) (tmp 346)))
      (= (tmp 348) (sub (constant ? 16) (constant ? 23) (constant ? 3)))
      (= (tmp 349) (sub (constant ? 16) (tmp 348) (constant ? 5)))
      (= (tmp 350) (reg-range src1 (tmp 349) (tmp 349)))
      (= (tmp 351) (bit_and (constant ? 1) (tmp 347) (tmp 350)))
      (= (tmp 352) (bit_xor (constant ? 1) (tmp 345) (tmp 351)))
      (= (tmp 353) (sub (constant ? 16) (constant ? 15) (constant ? 4)))
      (= (tmp 354) (reg-range src2 (tmp 353) (tmp 353)))
      (= (tmp 355) (sub (constant ? 16) (constant ? 23) (constant ? 4)))
      (= (tmp 356) (sub (constant ? 16) (tmp 355) (constant ? 5)))
      (= (tmp 357) (reg-range src1 (tmp 356) (tmp 356)))
      (= (tmp 358) (bit_and (constant ? 1) (tmp 354) (tmp 357)))
      (= (tmp 359) (bit_xor (constant ? 1) (tmp 352) (tmp 358)))
      (= (tmp 360) (sub (constant ? 16) (constant ? 15) (constant ? 5)))
      (= (tmp 361) (reg-range src2 (tmp 360) (tmp 360)))
      (= (tmp 362) (sub (constant ? 16) (constant ? 23) (constant ? 5)))
      (= (tmp 363) (sub (constant ? 16) (tmp 362) (constant ? 5)))
      (= (tmp 364) (reg-range src1 (tmp 363) (tmp 363)))
      (= (tmp 365) (bit_and (constant ? 1) (tmp 361) (tmp 364)))
      (= (tmp 366) (bit_xor (constant ? 1) (tmp 359) (tmp 365)))
      (= (tmp 367) (sub (constant ? 16) (constant ? 15) (constant ? 6)))
      (= (tmp 368) (reg-range src2 (tmp 367) (tmp 367)))
      (= (tmp 369) (sub (constant ? 16) (constant ? 23) (constant ? 6)))
      (= (tmp 370) (sub (constant ? 16) (tmp 369) (constant ? 5)))
      (= (tmp 371) (reg-range src1 (tmp 370) (tmp 370)))
      (= (tmp 372) (bit_and (constant ? 1) (tmp 368) (tmp 371)))
      (= (tmp 373) (bit_xor (constant ? 1) (tmp 366) (tmp 372)))
      (= (tmp 374) (sub (constant ? 16) (constant ? 15) (constant ? 7)))
      (= (tmp 375) (reg-range src2 (tmp 374) (tmp 374)))
      (= (tmp 376) (sub (constant ? 16) (constant ? 23) (constant ? 7)))
      (= (tmp 377) (sub (constant ? 16) (tmp 376) (constant ? 5)))
      (= (tmp 378) (reg-range src1 (tmp 377) (tmp 377)))
      (= (tmp 379) (bit_and (constant ? 1) (tmp 375) (tmp 378)))
      (= (tmp 380) (bit_xor (constant ? 1) (tmp 373) (tmp 379)))
      (= (tmp 381) (sub (constant ? 16) (constant ? 15) (constant ? 8)))
      (= (tmp 382) (reg-range src2 (tmp 381) (tmp 381)))
      (= (tmp 383) (sub (constant ? 16) (constant ? 23) (constant ? 8)))
      (= (tmp 384) (sub (constant ? 16) (tmp 383) (constant ? 5)))
      (= (tmp 385) (reg-range src1 (tmp 384) (tmp 384)))
      (= (tmp 386) (bit_and (constant ? 1) (tmp 382) (tmp 385)))
      (= (tmp 387) (bit_xor (constant ? 1) (tmp 380) (tmp 386)))
      (= (tmp 388) (sub (constant ? 16) (constant ? 15) (constant ? 5)))
      (= (tmp 389) (reg-range dst (tmp 388) (tmp 388)))
      (set-reg (tmp 389) (tmp 387))
      (= (tmp 390) (sub (constant ? 16) (constant ? 15) (constant ? 0)))
      (= (tmp 391) (reg-range src2 (tmp 390) (tmp 390)))
      (= (tmp 392) (sub (constant ? 16) (constant ? 23) (constant ? 0)))
      (= (tmp 393) (sub (constant ? 16) (tmp 392) (constant ? 6)))
      (= (tmp 394) (reg-range src1 (tmp 393) (tmp 393)))
      (= (tmp 395) (bit_and (constant ? 1) (tmp 391) (tmp 394)))
      (= (tmp 396) (bit_xor (constant ? 1) (constant ? 0) (tmp 395)))
      (= (tmp 397) (sub (constant ? 16) (constant ? 15) (constant ? 1)))
      (= (tmp 398) (reg-range src2 (tmp 397) (tmp 397)))
      (= (tmp 399) (sub (constant ? 16) (constant ? 23) (constant ? 1)))
      (= (tmp 400) (sub (constant ? 16) (tmp 399) (constant ? 6)))
      (= (tmp 401) (reg-range src1 (tmp 400) (tmp 400)))
      (= (tmp 402) (bit_and (constant ? 1) (tmp 398) (tmp 401)))
      (= (tmp 403) (bit_xor (constant ? 1) (tmp 396) (tmp 402)))
      (= (tmp 404) (sub (constant ? 16) (constant ? 15) (constant ? 2)))
      (= (tmp 405) (reg-range src2 (tmp 404) (tmp 404)))
      (= (tmp 406) (sub (constant ? 16) (constant ? 23) (constant ? 2)))
      (= (tmp 407) (sub (constant ? 16) (tmp 406) (constant ? 6)))
      (= (tmp 408) (reg-range src1 (tmp 407) (tmp 407)))
      (= (tmp 409) (bit_and (constant ? 1) (tmp 405) (tmp 408)))
      (= (tmp 410) (bit_xor (constant ? 1) (tmp 403) (tmp 409)))
      (= (tmp 411) (sub (constant ? 16) (constant ? 15) (constant ? 3)))
      (= (tmp 412) (reg-range src2 (tmp 411) (tmp 411)))
      (= (tmp 413) (sub (constant ? 16) (constant ? 23) (constant ? 3)))
      (= (tmp 414) (sub (constant ? 16) (tmp 413) (constant ? 6)))
      (= (tmp 415) (reg-range src1 (tmp 414) (tmp 414)))
      (= (tmp 416) (bit_and (constant ? 1) (tmp 412) (tmp 415)))
      (= (tmp 417) (bit_xor (constant ? 1) (tmp 410) (tmp 416)))
      (= (tmp 418) (sub (constant ? 16) (constant ? 15) (constant ? 4)))
      (= (tmp 419) (reg-range src2 (tmp 418) (tmp 418)))
      (= (tmp 420) (sub (constant ? 16) (constant ? 23) (constant ? 4)))
      (= (tmp 421) (sub (constant ? 16) (tmp 420) (constant ? 6)))
      (= (tmp 422) (reg-range src1 (tmp 421) (tmp 421)))
      (= (tmp 423) (bit_and (constant ? 1) (tmp 419) (tmp 422)))
      (= (tmp 424) (bit_xor (constant ? 1) (tmp 417) (tmp 423)))
      (= (tmp 425) (sub (constant ? 16) (constant ? 15) (constant ? 5)))
      (= (tmp 426) (reg-range src2 (tmp 425) (tmp 425)))
      (= (tmp 427) (sub (constant ? 16) (constant ? 23) (constant ? 5)))
      (= (tmp 428) (sub (constant ? 16) (tmp 427) (constant ? 6)))
      (= (tmp 429) (reg-range src1 (tmp 428) (tmp 428)))
      (= (tmp 430) (bit_and (constant ? 1) (tmp 426) (tmp 429)))
      (= (tmp 431) (bit_xor (constant ? 1) (tmp 424) (tmp 430)))
      (= (tmp 432) (sub (constant ? 16) (constant ? 15) (constant ? 6)))
      (= (tmp 433) (reg-range src2 (tmp 432) (tmp 432)))
      (= (tmp 434) (sub (constant ? 16) (constant ? 23) (constant ? 6)))
      (= (tmp 435) (sub (constant ? 16) (tmp 434) (constant ? 6)))
      (= (tmp 436) (reg-range src1 (tmp 435) (tmp 435)))
      (= (tmp 437) (bit_and (constant ? 1) (tmp 433) (tmp 436)))
      (= (tmp 438) (bit_xor (constant ? 1) (tmp 431) (tmp 437)))
      (= (tmp 439) (sub (constant ? 16) (constant ? 15) (constant ? 7)))
      (= (tmp 440) (reg-range src2 (tmp 439) (tmp 439)))
      (= (tmp 441) (sub (constant ? 16) (constant ? 23) (constant ? 7)))
      (= (tmp 442) (sub (constant ? 16) (tmp 441) (constant ? 6)))
      (= (tmp 443) (reg-range src1 (tmp 442) (tmp 442)))
      (= (tmp 444) (bit_and (constant ? 1) (tmp 440) (tmp 443)))
      (= (tmp 445) (bit_xor (constant ? 1) (tmp 438) (tmp 444)))
      (= (tmp 446) (sub (constant ? 16) (constant ? 15) (constant ? 8)))
      (= (tmp 447) (reg-range src2 (tmp 446) (tmp 446)))
      (= (tmp 448) (sub (constant ? 16) (constant ? 23) (constant ? 8)))
      (= (tmp 449) (sub (constant ? 16) (tmp 448) (constant ? 6)))
      (= (tmp 450) (reg-range src1 (tmp 449) (tmp 449)))
      (= (tmp 451) (bit_and (constant ? 1) (tmp 447) (tmp 450)))
      (= (tmp 452) (bit_xor (constant ? 1) (tmp 445) (tmp 451)))
      (= (tmp 453) (sub (constant ? 16) (constant ? 15) (constant ? 6)))
      (= (tmp 454) (reg-range dst (tmp 453) (tmp 453)))
      (set-reg (tmp 454) (tmp 452))
      (= (tmp 455) (sub (constant ? 16) (constant ? 15) (constant ? 0)))
      (= (tmp 456) (reg-range src2 (tmp 455) (tmp 455)))
      (= (tmp 457) (sub (constant ? 16) (constant ? 23) (constant ? 0)))
      (= (tmp 458) (sub (constant ? 16) (tmp 457) (constant ? 7)))
      (= (tmp 459) (reg-range src1 (tmp 458) (tmp 458)))
      (= (tmp 460) (bit_and (constant ? 1) (tmp 456) (tmp 459)))
      (= (tmp 461) (bit_xor (constant ? 1) (constant ? 0) (tmp 460)))
      (= (tmp 462) (sub (constant ? 16) (constant ? 15) (constant ? 1)))
      (= (tmp 463) (reg-range src2 (tmp 462) (tmp 462)))
      (= (tmp 464) (sub (constant ? 16) (constant ? 23) (constant ? 1)))
      (= (tmp 465) (sub (constant ? 16) (tmp 464) (constant ? 7)))
      (= (tmp 466) (reg-range src1 (tmp 465) (tmp 465)))
      (= (tmp 467) (bit_and (constant ? 1) (tmp 463) (tmp 466)))
      (= (tmp 468) (bit_xor (constant ? 1) (tmp 461) (tmp 467)))
      (= (tmp 469) (sub (constant ? 16) (constant ? 15) (constant ? 2)))
      (= (tmp 470) (reg-range src2 (tmp 469) (tmp 469)))
      (= (tmp 471) (sub (constant ? 16) (constant ? 23) (constant ? 2)))
      (= (tmp 472) (sub (constant ? 16) (tmp 471) (constant ? 7)))
      (= (tmp 473) (reg-range src1 (tmp 472) (tmp 472)))
      (= (tmp 474) (bit_and (constant ? 1) (tmp 470) (tmp 473)))
      (= (tmp 475) (bit_xor (constant ? 1) (tmp 468) (tmp 474)))
      (= (tmp 476) (sub (constant ? 16) (constant ? 15) (constant ? 3)))
      (= (tmp 477) (reg-range src2 (tmp 476) (tmp 476)))
      (= (tmp 478) (sub (constant ? 16) (constant ? 23) (constant ? 3)))
      (= (tmp 479) (sub (constant ? 16) (tmp 478) (constant ? 7)))
      (= (tmp 480) (reg-range src1 (tmp 479) (tmp 479)))
      (= (tmp 481) (bit_and (constant ? 1) (tmp 477) (tmp 480)))
      (= (tmp 482) (bit_xor (constant ? 1) (tmp 475) (tmp 481)))
      (= (tmp 483) (sub (constant ? 16) (constant ? 15) (constant ? 4)))
      (= (tmp 484) (reg-range src2 (tmp 483) (tmp 483)))
      (= (tmp 485) (sub (constant ? 16) (constant ? 23) (constant ? 4)))
      (= (tmp 486) (sub (constant ? 16) (tmp 485) (constant ? 7)))
      (= (tmp 487) (reg-range src1 (tmp 486) (tmp 486)))
      (= (tmp 488) (bit_and (constant ? 1) (tmp 484) (tmp 487)))
      (= (tmp 489) (bit_xor (constant ? 1) (tmp 482) (tmp 488)))
      (= (tmp 490) (sub (constant ? 16) (constant ? 15) (constant ? 5)))
      (= (tmp 491) (reg-range src2 (tmp 490) (tmp 490)))
      (= (tmp 492) (sub (constant ? 16) (constant ? 23) (constant ? 5)))
      (= (tmp 493) (sub (constant ? 16) (tmp 492) (constant ? 7)))
      (= (tmp 494) (reg-range src1 (tmp 493) (tmp 493)))
      (= (tmp 495) (bit_and (constant ? 1) (tmp 491) (tmp 494)))
      (= (tmp 496) (bit_xor (constant ? 1) (tmp 489) (tmp 495)))
      (= (tmp 497) (sub (constant ? 16) (constant ? 15) (constant ? 6)))
      (= (tmp 498) (reg-range src2 (tmp 497) (tmp 497)))
      (= (tmp 499) (sub (constant ? 16) (constant ? 23) (constant ? 6)))
      (= (tmp 500) (sub (constant ? 16) (tmp 499) (constant ? 7)))
      (= (tmp 501) (reg-range src1 (tmp 500) (tmp 500)))
      (= (tmp 502) (bit_and (constant ? 1) (tmp 498) (tmp 501)))
      (= (tmp 503) (bit_xor (constant ? 1) (tmp 496) (tmp 502)))
      (= (tmp 504) (sub (constant ? 16) (constant ? 15) (constant ? 7)))
      (= (tmp 505) (reg-range src2 (tmp 504) (tmp 504)))
      (= (tmp 506) (sub (constant ? 16) (constant ? 23) (constant ? 7)))
      (= (tmp 507) (sub (constant ? 16) (tmp 506) (constant ? 7)))
      (= (tmp 508) (reg-range src1 (tmp 507) (tmp 507)))
      (= (tmp 509) (bit_and (constant ? 1) (tmp 505) (tmp 508)))
      (= (tmp 510) (bit_xor (constant ? 1) (tmp 503) (tmp 509)))
      (= (tmp 511) (sub (constant ? 16) (constant ? 15) (constant ? 8)))
      (= (tmp 512) (reg-range src2 (tmp 511) (tmp 511)))
      (= (tmp 513) (sub (constant ? 16) (constant ? 23) (constant ? 8)))
      (= (tmp 514) (sub (constant ? 16) (tmp 513) (constant ? 7)))
      (= (tmp 515) (reg-range src1 (tmp 514) (tmp 514)))
      (= (tmp 516) (bit_and (constant ? 1) (tmp 512) (tmp 515)))
      (= (tmp 517) (bit_xor (constant ? 1) (tmp 510) (tmp 516)))
      (= (tmp 518) (sub (constant ? 16) (constant ? 15) (constant ? 7)))
      (= (tmp 519) (reg-range dst (tmp 518) (tmp 518)))
      (set-reg (tmp 519) (tmp 517))
      (= (tmp 520) (reg-range dst (constant ? 0) (constant ? 7)))
      (set-reg (tmp 520) (constant ? 0)))))

(instruction
  mv_r16_a40++
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 16) (reg-flag z rN))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (reg-range ldm (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) rN dst))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range ldm (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) dst (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) rN (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 13) (zext (constant ? 32) (tmp 5) (constant ? 40)))
      (set-reg dst (tmp 13))
      (= (tmp 15) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 16) (reg-flag z rN))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (reg-range ldm (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) rN dst))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range ldm (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) dst (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) rN (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 14) (sext (constant ? 32) (tmp 5) (constant ? 40)))
      (set-reg dst (tmp 14))
      (= (tmp 15) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18)))))

(instruction
  stb_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 13) (reg-flag op dst))
      (allocate-in (tmp 9) (reg-flag ms dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (set-reg dst src1)
      (= (tmp 0) (bit_and (constant ? 40) src2 (constant ? 15)))
      (= (tmp 1) (bit_and (constant ? 40) src2 (constant ? 3840)))
      (= (tmp 2) (lshr (constant ? 40) (tmp 1) (constant ? 8)))
      (= (tmp 3) (add (constant ? 40) (tmp 0) (tmp 2)))
      (= (tmp 4) (reg-range src2 (tmp 0) (tmp 3)))
      (set-reg (tmp 4) (constant ? -1))
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 14) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 14) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 15) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 13) (tmp 15)))))

(instruction
  mv_r16_a40++m
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag m rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 17) (reg-flag z rN)))
    (code
      (= (tmp 0) (reg-range ldm (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) rN dst))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range ldm (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) dst (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) rN (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 13) (zext (constant ? 32) (tmp 5) (constant ? 40)))
      (set-reg dst (tmp 13))
      (= (tmp 16) (add (constant ? 16) rN (tmp 15)))
      (set-reg rN (tmp 16))
      (= (tmp 18) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 18) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 19) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 17) (tmp 19))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag m rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 17) (reg-flag z rN)))
    (code
      (= (tmp 0) (reg-range ldm (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) rN dst))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range ldm (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) dst (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) rN (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 14) (sext (constant ? 32) (tmp 5) (constant ? 40)))
      (set-reg dst (tmp 14))
      (= (tmp 16) (add (constant ? 16) rN (tmp 15)))
      (set-reg rN (tmp 16))
      (= (tmp 18) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 18) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 19) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 17) (tmp 19)))))

(instruction
  mins_a16_a16_a16
  (pattern
    (constraints
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in (tmp 11) (reg-flag ex dst))
      (allocate-in (tmp 18) (reg-flag mi dst))
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 7) (reg-flag ac dst))
      (allocate-in (tmp 15) (reg-flag ex dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 14) (reg-flag ex dst)))
    (code
      (= (tmp 0) (icmp slt (constant ? 16) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 8) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? 0)))
      (br (tmp 10) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 13) (icmp (constant ? 40) eq (tmp 12) (constant ? -1)))
      (br (tmp 13) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 16) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi ((no-value . bb_6) ((tmp 16) . bb_7))))
      (= (tmp 19) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 18) (tmp 19))))
  (pattern
    (constraints
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in (tmp 18) (reg-flag mi dst))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 14) (reg-flag ex dst))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 11) (reg-flag ex dst))
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in (tmp 15) (reg-flag ex dst))
      (allocate-in (tmp 7) (reg-flag ac dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 1) (reg-flag c dst)))
    (code
      (= (tmp 0) (icmp slt (constant ? 16) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 39)))
      (= (tmp 6) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? 0)))
      (br (tmp 10) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 13) (icmp (constant ? 40) eq (tmp 12) (constant ? -1)))
      (br (tmp 13) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 16) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi ((no-value . bb_6) ((tmp 16) . bb_7))))
      (= (tmp 19) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 18) (tmp 19)))))

(instruction
  negh_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag a dst))
      (allocate-in (tmp 39) (reg-flag ex dst))
      (allocate-in (tmp 25) (reg-flag of dst))
      (allocate-in (tmp 36) (reg-flag a dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 31) (reg-flag ac dst))
      (allocate-in (tmp 24) (reg-flag of dst))
      (allocate-in (tmp 42) (reg-flag mi dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 20) (reg-flag of dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 38) (reg-flag ex dst)))
    (code
      (= (tmp 16) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 17) (shl (constant ? 40) (tmp 16) (constant ? 16)))
      (= (tmp 18) (sub (constant ? 32) (constant ? 0) (tmp 17)))
      (= (tmp 19) (icmp (constant ? 32) sgt (tmp 18) (constant ? 0)))
      (br (tmp 19) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 20) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 21) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 22) (shl (constant ? 40) (tmp 21) (constant ? 16)))
      (= (tmp 23) (icmp (constant ? 32) sgt (tmp 18) (tmp 22)))
      (br (tmp 23) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 25) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 26) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 27) (phi ((no-value . bb_9) ((tmp 26) . bb_10))))
      (= (tmp 28) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 29) (shl (constant ? 40) (tmp 28) (constant ? 16)))
      (= (tmp 30) (sub (constant ? 32) (constant ? 0) (tmp 29)))
      (set-reg dst (tmp 30))
      (= (tmp 32) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 31) (tmp 32))
      (= (tmp 34) (icmp (constant ? 40) eq (tmp 33) (constant ? 0)))
      (br (tmp 34) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 35) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 37) (icmp (constant ? 40) eq (tmp 36) (constant ? -1)))
      (br (tmp 37) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 38) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 39) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 40) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 41) (phi ((no-value . bb_15) ((tmp 40) . bb_16))))
      (= (tmp 43) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 42) (tmp 43))))
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag a dst))
      (allocate-in (tmp 39) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag of dst))
      (allocate-in (tmp 36) (reg-flag a dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 31) (reg-flag ac dst))
      (allocate-in (tmp 10) (reg-flag of dst))
      (allocate-in (tmp 42) (reg-flag mi dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 38) (reg-flag ex dst)))
    (code
      (= (tmp 1) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (sub (constant ? 32) (constant ? 0) (tmp 2)))
      (= (tmp 4) (icmp (constant ? 32) sgt (tmp 3) (constant ? 0)))
      (br (tmp 4) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 7) (shl (constant ? 40) (tmp 6) (constant ? 16)))
      (= (tmp 8) (icmp (constant ? 32) sgt (tmp 3) (tmp 7)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 10) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 13) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 14) (shl (constant ? 40) (tmp 13) (constant ? 16)))
      (= (tmp 15) (satsub (constant ? 32) (constant ? 0) (tmp 14)))
      (set-reg dst (tmp 15))
      (= (tmp 32) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 31) (tmp 32))
      (= (tmp 34) (icmp (constant ? 40) eq (tmp 33) (constant ? 0)))
      (br (tmp 34) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 35) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 37) (icmp (constant ? 40) eq (tmp 36) (constant ? -1)))
      (br (tmp 37) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 38) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 39) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 40) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 41) (phi ((no-value . bb_15) ((tmp 40) . bb_16))))
      (= (tmp 43) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 42) (tmp 43)))))

(instruction
  stb_a40_nimm5_nimm5_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (immediate ww ((0 . 31)))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 6) (reg-flag ms dst))
      (immediate ss ((0 . 31))))
    (code
      (set-reg dst src)
      (= (tmp 0) (add (constant ? 40) ss ww))
      (= (tmp 1) (reg-range dst ss (tmp 0)))
      (set-reg (tmp 1) (constant ? -1))
      (= (tmp 3) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  mv_r16_a40-no-modifier
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (reg-range ldm (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) rN dst))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range ldm (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) dst (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) rN (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 14) (sext (constant ? 32) (tmp 5) (constant ? 40)))
      (set-reg dst (tmp 14))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (reg-range ldm (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) rN dst))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range ldm (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) dst (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) rN (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 13) (zext (constant ? 32) (tmp 5) (constant ? 40)))
      (set-reg dst (tmp 13))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17)))))

(instruction
  ilv2_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 128) (reg-flag ag dst)))
    (code
      (= (tmp 0) (mul (constant ? 32) (constant ? 0) (constant ? 2)))
      (= (tmp 1) (reg-range dst (tmp 0) (tmp 0)))
      (= (tmp 2) (reg-range src (constant ? 0) (constant ? 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (mul (constant ? 32) (constant ? 0) (constant ? 2)))
      (= (tmp 4) (add (constant ? 32) (constant ? 1) (tmp 3)))
      (= (tmp 5) (reg-range dst (tmp 4) (tmp 4)))
      (= (tmp 6) (add (constant ? 16) (constant ? 16) (constant ? 0)))
      (= (tmp 7) (reg-range src (tmp 6) (tmp 6)))
      (set-reg (tmp 5) (tmp 7))
      (= (tmp 8) (mul (constant ? 32) (constant ? 1) (constant ? 2)))
      (= (tmp 9) (reg-range dst (tmp 8) (tmp 8)))
      (= (tmp 10) (reg-range src (constant ? 1) (constant ? 1)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 11) (mul (constant ? 32) (constant ? 1) (constant ? 2)))
      (= (tmp 12) (add (constant ? 32) (constant ? 1) (tmp 11)))
      (= (tmp 13) (reg-range dst (tmp 12) (tmp 12)))
      (= (tmp 14) (add (constant ? 16) (constant ? 16) (constant ? 1)))
      (= (tmp 15) (reg-range src (tmp 14) (tmp 14)))
      (set-reg (tmp 13) (tmp 15))
      (= (tmp 16) (mul (constant ? 32) (constant ? 2) (constant ? 2)))
      (= (tmp 17) (reg-range dst (tmp 16) (tmp 16)))
      (= (tmp 18) (reg-range src (constant ? 2) (constant ? 2)))
      (set-reg (tmp 17) (tmp 18))
      (= (tmp 19) (mul (constant ? 32) (constant ? 2) (constant ? 2)))
      (= (tmp 20) (add (constant ? 32) (constant ? 1) (tmp 19)))
      (= (tmp 21) (reg-range dst (tmp 20) (tmp 20)))
      (= (tmp 22) (add (constant ? 16) (constant ? 16) (constant ? 2)))
      (= (tmp 23) (reg-range src (tmp 22) (tmp 22)))
      (set-reg (tmp 21) (tmp 23))
      (= (tmp 24) (mul (constant ? 32) (constant ? 3) (constant ? 2)))
      (= (tmp 25) (reg-range dst (tmp 24) (tmp 24)))
      (= (tmp 26) (reg-range src (constant ? 3) (constant ? 3)))
      (set-reg (tmp 25) (tmp 26))
      (= (tmp 27) (mul (constant ? 32) (constant ? 3) (constant ? 2)))
      (= (tmp 28) (add (constant ? 32) (constant ? 1) (tmp 27)))
      (= (tmp 29) (reg-range dst (tmp 28) (tmp 28)))
      (= (tmp 30) (add (constant ? 16) (constant ? 16) (constant ? 3)))
      (= (tmp 31) (reg-range src (tmp 30) (tmp 30)))
      (set-reg (tmp 29) (tmp 31))
      (= (tmp 32) (mul (constant ? 32) (constant ? 4) (constant ? 2)))
      (= (tmp 33) (reg-range dst (tmp 32) (tmp 32)))
      (= (tmp 34) (reg-range src (constant ? 4) (constant ? 4)))
      (set-reg (tmp 33) (tmp 34))
      (= (tmp 35) (mul (constant ? 32) (constant ? 4) (constant ? 2)))
      (= (tmp 36) (add (constant ? 32) (constant ? 1) (tmp 35)))
      (= (tmp 37) (reg-range dst (tmp 36) (tmp 36)))
      (= (tmp 38) (add (constant ? 16) (constant ? 16) (constant ? 4)))
      (= (tmp 39) (reg-range src (tmp 38) (tmp 38)))
      (set-reg (tmp 37) (tmp 39))
      (= (tmp 40) (mul (constant ? 32) (constant ? 5) (constant ? 2)))
      (= (tmp 41) (reg-range dst (tmp 40) (tmp 40)))
      (= (tmp 42) (reg-range src (constant ? 5) (constant ? 5)))
      (set-reg (tmp 41) (tmp 42))
      (= (tmp 43) (mul (constant ? 32) (constant ? 5) (constant ? 2)))
      (= (tmp 44) (add (constant ? 32) (constant ? 1) (tmp 43)))
      (= (tmp 45) (reg-range dst (tmp 44) (tmp 44)))
      (= (tmp 46) (add (constant ? 16) (constant ? 16) (constant ? 5)))
      (= (tmp 47) (reg-range src (tmp 46) (tmp 46)))
      (set-reg (tmp 45) (tmp 47))
      (= (tmp 48) (mul (constant ? 32) (constant ? 6) (constant ? 2)))
      (= (tmp 49) (reg-range dst (tmp 48) (tmp 48)))
      (= (tmp 50) (reg-range src (constant ? 6) (constant ? 6)))
      (set-reg (tmp 49) (tmp 50))
      (= (tmp 51) (mul (constant ? 32) (constant ? 6) (constant ? 2)))
      (= (tmp 52) (add (constant ? 32) (constant ? 1) (tmp 51)))
      (= (tmp 53) (reg-range dst (tmp 52) (tmp 52)))
      (= (tmp 54) (add (constant ? 16) (constant ? 16) (constant ? 6)))
      (= (tmp 55) (reg-range src (tmp 54) (tmp 54)))
      (set-reg (tmp 53) (tmp 55))
      (= (tmp 56) (mul (constant ? 32) (constant ? 7) (constant ? 2)))
      (= (tmp 57) (reg-range dst (tmp 56) (tmp 56)))
      (= (tmp 58) (reg-range src (constant ? 7) (constant ? 7)))
      (set-reg (tmp 57) (tmp 58))
      (= (tmp 59) (mul (constant ? 32) (constant ? 7) (constant ? 2)))
      (= (tmp 60) (add (constant ? 32) (constant ? 1) (tmp 59)))
      (= (tmp 61) (reg-range dst (tmp 60) (tmp 60)))
      (= (tmp 62) (add (constant ? 16) (constant ? 16) (constant ? 7)))
      (= (tmp 63) (reg-range src (tmp 62) (tmp 62)))
      (set-reg (tmp 61) (tmp 63))
      (= (tmp 64) (mul (constant ? 32) (constant ? 8) (constant ? 2)))
      (= (tmp 65) (reg-range dst (tmp 64) (tmp 64)))
      (= (tmp 66) (reg-range src (constant ? 8) (constant ? 8)))
      (set-reg (tmp 65) (tmp 66))
      (= (tmp 67) (mul (constant ? 32) (constant ? 8) (constant ? 2)))
      (= (tmp 68) (add (constant ? 32) (constant ? 1) (tmp 67)))
      (= (tmp 69) (reg-range dst (tmp 68) (tmp 68)))
      (= (tmp 70) (add (constant ? 16) (constant ? 16) (constant ? 8)))
      (= (tmp 71) (reg-range src (tmp 70) (tmp 70)))
      (set-reg (tmp 69) (tmp 71))
      (= (tmp 72) (mul (constant ? 32) (constant ? 9) (constant ? 2)))
      (= (tmp 73) (reg-range dst (tmp 72) (tmp 72)))
      (= (tmp 74) (reg-range src (constant ? 9) (constant ? 9)))
      (set-reg (tmp 73) (tmp 74))
      (= (tmp 75) (mul (constant ? 32) (constant ? 9) (constant ? 2)))
      (= (tmp 76) (add (constant ? 32) (constant ? 1) (tmp 75)))
      (= (tmp 77) (reg-range dst (tmp 76) (tmp 76)))
      (= (tmp 78) (add (constant ? 16) (constant ? 16) (constant ? 9)))
      (= (tmp 79) (reg-range src (tmp 78) (tmp 78)))
      (set-reg (tmp 77) (tmp 79))
      (= (tmp 80) (mul (constant ? 32) (constant ? 10) (constant ? 2)))
      (= (tmp 81) (reg-range dst (tmp 80) (tmp 80)))
      (= (tmp 82) (reg-range src (constant ? 10) (constant ? 10)))
      (set-reg (tmp 81) (tmp 82))
      (= (tmp 83) (mul (constant ? 32) (constant ? 10) (constant ? 2)))
      (= (tmp 84) (add (constant ? 32) (constant ? 1) (tmp 83)))
      (= (tmp 85) (reg-range dst (tmp 84) (tmp 84)))
      (= (tmp 86) (add (constant ? 16) (constant ? 16) (constant ? 10)))
      (= (tmp 87) (reg-range src (tmp 86) (tmp 86)))
      (set-reg (tmp 85) (tmp 87))
      (= (tmp 88) (mul (constant ? 32) (constant ? 11) (constant ? 2)))
      (= (tmp 89) (reg-range dst (tmp 88) (tmp 88)))
      (= (tmp 90) (reg-range src (constant ? 11) (constant ? 11)))
      (set-reg (tmp 89) (tmp 90))
      (= (tmp 91) (mul (constant ? 32) (constant ? 11) (constant ? 2)))
      (= (tmp 92) (add (constant ? 32) (constant ? 1) (tmp 91)))
      (= (tmp 93) (reg-range dst (tmp 92) (tmp 92)))
      (= (tmp 94) (add (constant ? 16) (constant ? 16) (constant ? 11)))
      (= (tmp 95) (reg-range src (tmp 94) (tmp 94)))
      (set-reg (tmp 93) (tmp 95))
      (= (tmp 96) (mul (constant ? 32) (constant ? 12) (constant ? 2)))
      (= (tmp 97) (reg-range dst (tmp 96) (tmp 96)))
      (= (tmp 98) (reg-range src (constant ? 12) (constant ? 12)))
      (set-reg (tmp 97) (tmp 98))
      (= (tmp 99) (mul (constant ? 32) (constant ? 12) (constant ? 2)))
      (= (tmp 100) (add (constant ? 32) (constant ? 1) (tmp 99)))
      (= (tmp 101) (reg-range dst (tmp 100) (tmp 100)))
      (= (tmp 102) (add (constant ? 16) (constant ? 16) (constant ? 12)))
      (= (tmp 103) (reg-range src (tmp 102) (tmp 102)))
      (set-reg (tmp 101) (tmp 103))
      (= (tmp 104) (mul (constant ? 32) (constant ? 13) (constant ? 2)))
      (= (tmp 105) (reg-range dst (tmp 104) (tmp 104)))
      (= (tmp 106) (reg-range src (constant ? 13) (constant ? 13)))
      (set-reg (tmp 105) (tmp 106))
      (= (tmp 107) (mul (constant ? 32) (constant ? 13) (constant ? 2)))
      (= (tmp 108) (add (constant ? 32) (constant ? 1) (tmp 107)))
      (= (tmp 109) (reg-range dst (tmp 108) (tmp 108)))
      (= (tmp 110) (add (constant ? 16) (constant ? 16) (constant ? 13)))
      (= (tmp 111) (reg-range src (tmp 110) (tmp 110)))
      (set-reg (tmp 109) (tmp 111))
      (= (tmp 112) (mul (constant ? 32) (constant ? 14) (constant ? 2)))
      (= (tmp 113) (reg-range dst (tmp 112) (tmp 112)))
      (= (tmp 114) (reg-range src (constant ? 14) (constant ? 14)))
      (set-reg (tmp 113) (tmp 114))
      (= (tmp 115) (mul (constant ? 32) (constant ? 14) (constant ? 2)))
      (= (tmp 116) (add (constant ? 32) (constant ? 1) (tmp 115)))
      (= (tmp 117) (reg-range dst (tmp 116) (tmp 116)))
      (= (tmp 118) (add (constant ? 16) (constant ? 16) (constant ? 14)))
      (= (tmp 119) (reg-range src (tmp 118) (tmp 118)))
      (set-reg (tmp 117) (tmp 119))
      (= (tmp 120) (mul (constant ? 32) (constant ? 15) (constant ? 2)))
      (= (tmp 121) (reg-range dst (tmp 120) (tmp 120)))
      (= (tmp 122) (reg-range src (constant ? 15) (constant ? 15)))
      (set-reg (tmp 121) (tmp 122))
      (= (tmp 123) (mul (constant ? 32) (constant ? 15) (constant ? 2)))
      (= (tmp 124) (add (constant ? 32) (constant ? 1) (tmp 123)))
      (= (tmp 125) (reg-range dst (tmp 124) (tmp 124)))
      (= (tmp 126) (add (constant ? 16) (constant ? 16) (constant ? 15)))
      (= (tmp 127) (reg-range src (tmp 126) (tmp 126)))
      (set-reg (tmp 125) (tmp 127))
      (set-reg (tmp 128) (constant ? 0)))))

(instruction
  shft_a40_a16h_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ac dst))
      (allocate-in (tmp 10) (reg-flag mi dst))
      (allocate-in (tmp 16) (reg-flag op dst))
      (allocate-in (tmp 14) (reg-flag ls dst))
      (allocate-in (tmp 12) (reg-flag ms dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a4h a5h a6h a7h a4l a5l a6l a7l)))
    (code
      (= (tmp 0) (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) (constant ? -40) src2))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? -40) . bb_0) (src2 . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? 40) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (icmp sgt (constant ? 8) (tmp 3) (constant ? 0)))
      (br (tmp 4) bb_6 bb_7)
      (label bb_6)
      (= (tmp 5) (shl (constant ? 40) src1 (tmp 3)))
      (set-reg dst (tmp 5))
      (br bb_8)
      (label bb_7)
      (= (tmp 6) (lshr (constant ? 40) src1 (tmp 3)))
      (set-reg dst (tmp 6))
      (br bb_8)
      (label bb_8)
      (= (tmp 7) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 9) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 14) (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (br bb_11)
      (label bb_10)
      (br bb_11)
      (label bb_11)
      (= (tmp 18) (phi (((constant ? 1) . bb_9) ((constant ? 0) . bb_10))))
      (set-reg (tmp 16) (tmp 18)))))

(instruction
  tgb_a16h_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag mi dst))
      (allocate-in (tmp 10) (reg-flag ms dst))
      (allocate-in (tmp 14) (reg-flag op dst))
      (allocate-in (tmp 12) (reg-flag ls dst))
      (allocate-in src (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 6) (reg-flag ac dst)))
    (code
      (= (tmp 0) (bit_and (constant ? 40) src (constant ? 15)))
      (= (tmp 1) (bit_and (constant ? 40) src (constant ? 3840)))
      (= (tmp 2) (lshr (constant ? 40) (tmp 1) (constant ? 8)))
      (= (tmp 3) (add (constant ? 40) (tmp 0) (tmp 2)))
      (= (tmp 4) (reg-range src (tmp 0) (tmp 3)))
      (= (tmp 5) (bit_not (constant ? 40) (tmp 4)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 15) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 16) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 14) (tmp 16)))))

(instruction
  mv_a40_dp16_nimm5
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dpop (dp))
      (aliases (src (tmp 3) (tmp 4)))
      (reg-flag s src ((0 . 0)))
      (immediate SImm ((-16 . 15))))
    (code
      (= (tmp 5) (add (constant ? 16) dpop SImm))
      (= (tmp 6) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 5) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dpop (dp))
      (aliases ((tmp 2) (tmp 3) (tmp 4)))
      (reg-flag s src ((1 . 1)))
      (immediate SImm ((-16 . 15))))
    (code
      (= (tmp 2) (satadd (constant ? 32) (constant ? 0) src))
      (= (tmp 5) (add (constant ? 16) dpop SImm))
      (= (tmp 6) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 5) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9)))))

(instruction
  min2_a40_a16
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 17) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag ac dst))
      (allocate-in (tmp 16) (reg-flag ex dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 11) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag a dst))
      (allocate-in (tmp 20) (reg-flag mi dst)))
    (code
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp slt (constant ? 16) (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 10) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp (constant ? 40) eq (tmp 11) (constant ? 0)))
      (br (tmp 12) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 15) (icmp (constant ? 40) eq (tmp 14) (constant ? -1)))
      (br (tmp 15) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 17) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 18) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 19) (phi ((no-value . bb_6) ((tmp 18) . bb_7))))
      (= (tmp 21) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 20) (tmp 21))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag ac dst))
      (allocate-in (tmp 16) (reg-flag ex dst))
      (allocate-in (tmp 20) (reg-flag mi dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 11) (reg-flag a dst))
      (allocate-in (tmp 6) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag a dst))
      (allocate-in (tmp 17) (reg-flag ex dst)))
    (code
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp slt (constant ? 16) (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (reg-range (tmp 6) (constant ? 16) (constant ? 39)))
      (= (tmp 8) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp (constant ? 40) eq (tmp 11) (constant ? 0)))
      (br (tmp 12) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 15) (icmp (constant ? 40) eq (tmp 14) (constant ? -1)))
      (br (tmp 15) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 17) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 18) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 19) (phi ((no-value . bb_6) ((tmp 18) . bb_7))))
      (= (tmp 21) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 20) (tmp 21)))))

(instruction
  neg2_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 17) (reg-flag a dst))
      (allocate-in (tmp 19) (reg-flag ex dst))
      (allocate-in (tmp 20) (reg-flag ex dst))
      (allocate-in (tmp 14) (reg-flag a dst))
      (allocate-in (tmp 12) (reg-flag ac dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 23) (reg-flag mi dst))
      (allocate-in (tmp 16) (reg-flag ex dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (sub (constant ? 8) (constant ? 0) (constant ? 15)))
      (= (tmp 2) (add (constant ? 8) (constant ? 1) (tmp 1)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 4) (satsub (tmp 2) (constant ? 0) (tmp 3)))
      (set-reg (tmp 0) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 6) (sub (constant ? 8) (constant ? 16) (constant ? 31)))
      (= (tmp 7) (add (constant ? 8) (constant ? 1) (tmp 6)))
      (= (tmp 8) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 9) (satsub (tmp 7) (constant ? 0) (tmp 8)))
      (set-reg (tmp 5) (tmp 9))
      (= (tmp 11) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (icmp (constant ? 40) eq (tmp 14) (constant ? 0)))
      (br (tmp 15) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 18) (icmp (constant ? 40) eq (tmp 17) (constant ? -1)))
      (br (tmp 18) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 19) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 20) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 21) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 22) (phi ((no-value . bb_3) ((tmp 21) . bb_4))))
      (= (tmp 24) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 23) (tmp 24)))))

(instruction
  mv_dp16_nimm5_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dpop (dp))
      (reg-flag u dst ((1 . 1)))
      (immediate SImm ((-16 . 15))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 2) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 5) (load-mem (constant ? 16) ldm (tmp 4)))
      (set-reg (tmp 3) (tmp 5))
      (= (tmp 6) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 14) (zext (constant ? 32) (tmp 6) (constant ? 40)))
      (set-reg dst (tmp 14))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dpop (dp))
      (reg-flag u dst ((0 . 0)))
      (immediate SImm ((-16 . 15))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 2) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 5) (load-mem (constant ? 16) ldm (tmp 4)))
      (set-reg (tmp 3) (tmp 5))
      (= (tmp 6) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 15) (sext (constant ? 32) (tmp 6) (constant ? 40)))
      (set-reg dst (tmp 15)))))

(instruction
  tgb_a40_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag mi dst))
      (allocate-in (tmp 10) (reg-flag ms dst))
      (allocate-in (tmp 12) (reg-flag ls dst))
      (allocate-in (tmp 14) (reg-flag op dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 6) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (bit_and (constant ? 40) src2 (constant ? 15)))
      (= (tmp 1) (bit_and (constant ? 40) src2 (constant ? 3840)))
      (= (tmp 2) (lshr (constant ? 40) (tmp 1) (constant ? 8)))
      (= (tmp 3) (add (constant ? 40) (tmp 0) (tmp 2)))
      (= (tmp 4) (reg-range src2 (tmp 0) (tmp 3)))
      (set-reg dst src1)
      (= (tmp 5) (bit_not (constant ? 40) (tmp 4)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 15) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 16) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 14) (tmp 16)))))

(instruction
  dil2_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 128) (reg-flag ag dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 1) (mul (constant ? 32) (constant ? 0) (constant ? 2)))
      (= (tmp 2) (reg-range src (tmp 1) (tmp 1)))
      (set-reg (tmp 0) (tmp 2))
      (= (tmp 3) (add (constant ? 8) (constant ? 0) (constant ? 16)))
      (= (tmp 4) (reg-range dst (tmp 3) (tmp 3)))
      (= (tmp 5) (mul (constant ? 8) (constant ? 0) (constant ? 2)))
      (= (tmp 6) (add (constant ? 16) (constant ? 1) (tmp 5)))
      (= (tmp 7) (reg-range src (tmp 6) (tmp 6)))
      (set-reg (tmp 4) (tmp 7))
      (= (tmp 8) (reg-range dst (constant ? 1) (constant ? 1)))
      (= (tmp 9) (mul (constant ? 32) (constant ? 1) (constant ? 2)))
      (= (tmp 10) (reg-range src (tmp 9) (tmp 9)))
      (set-reg (tmp 8) (tmp 10))
      (= (tmp 11) (add (constant ? 8) (constant ? 1) (constant ? 16)))
      (= (tmp 12) (reg-range dst (tmp 11) (tmp 11)))
      (= (tmp 13) (mul (constant ? 8) (constant ? 1) (constant ? 2)))
      (= (tmp 14) (add (constant ? 16) (constant ? 1) (tmp 13)))
      (= (tmp 15) (reg-range src (tmp 14) (tmp 14)))
      (set-reg (tmp 12) (tmp 15))
      (= (tmp 16) (reg-range dst (constant ? 2) (constant ? 2)))
      (= (tmp 17) (mul (constant ? 32) (constant ? 2) (constant ? 2)))
      (= (tmp 18) (reg-range src (tmp 17) (tmp 17)))
      (set-reg (tmp 16) (tmp 18))
      (= (tmp 19) (add (constant ? 8) (constant ? 2) (constant ? 16)))
      (= (tmp 20) (reg-range dst (tmp 19) (tmp 19)))
      (= (tmp 21) (mul (constant ? 8) (constant ? 2) (constant ? 2)))
      (= (tmp 22) (add (constant ? 16) (constant ? 1) (tmp 21)))
      (= (tmp 23) (reg-range src (tmp 22) (tmp 22)))
      (set-reg (tmp 20) (tmp 23))
      (= (tmp 24) (reg-range dst (constant ? 3) (constant ? 3)))
      (= (tmp 25) (mul (constant ? 32) (constant ? 3) (constant ? 2)))
      (= (tmp 26) (reg-range src (tmp 25) (tmp 25)))
      (set-reg (tmp 24) (tmp 26))
      (= (tmp 27) (add (constant ? 8) (constant ? 3) (constant ? 16)))
      (= (tmp 28) (reg-range dst (tmp 27) (tmp 27)))
      (= (tmp 29) (mul (constant ? 8) (constant ? 3) (constant ? 2)))
      (= (tmp 30) (add (constant ? 16) (constant ? 1) (tmp 29)))
      (= (tmp 31) (reg-range src (tmp 30) (tmp 30)))
      (set-reg (tmp 28) (tmp 31))
      (= (tmp 32) (reg-range dst (constant ? 4) (constant ? 4)))
      (= (tmp 33) (mul (constant ? 32) (constant ? 4) (constant ? 2)))
      (= (tmp 34) (reg-range src (tmp 33) (tmp 33)))
      (set-reg (tmp 32) (tmp 34))
      (= (tmp 35) (add (constant ? 8) (constant ? 4) (constant ? 16)))
      (= (tmp 36) (reg-range dst (tmp 35) (tmp 35)))
      (= (tmp 37) (mul (constant ? 8) (constant ? 4) (constant ? 2)))
      (= (tmp 38) (add (constant ? 16) (constant ? 1) (tmp 37)))
      (= (tmp 39) (reg-range src (tmp 38) (tmp 38)))
      (set-reg (tmp 36) (tmp 39))
      (= (tmp 40) (reg-range dst (constant ? 5) (constant ? 5)))
      (= (tmp 41) (mul (constant ? 32) (constant ? 5) (constant ? 2)))
      (= (tmp 42) (reg-range src (tmp 41) (tmp 41)))
      (set-reg (tmp 40) (tmp 42))
      (= (tmp 43) (add (constant ? 8) (constant ? 5) (constant ? 16)))
      (= (tmp 44) (reg-range dst (tmp 43) (tmp 43)))
      (= (tmp 45) (mul (constant ? 8) (constant ? 5) (constant ? 2)))
      (= (tmp 46) (add (constant ? 16) (constant ? 1) (tmp 45)))
      (= (tmp 47) (reg-range src (tmp 46) (tmp 46)))
      (set-reg (tmp 44) (tmp 47))
      (= (tmp 48) (reg-range dst (constant ? 6) (constant ? 6)))
      (= (tmp 49) (mul (constant ? 32) (constant ? 6) (constant ? 2)))
      (= (tmp 50) (reg-range src (tmp 49) (tmp 49)))
      (set-reg (tmp 48) (tmp 50))
      (= (tmp 51) (add (constant ? 8) (constant ? 6) (constant ? 16)))
      (= (tmp 52) (reg-range dst (tmp 51) (tmp 51)))
      (= (tmp 53) (mul (constant ? 8) (constant ? 6) (constant ? 2)))
      (= (tmp 54) (add (constant ? 16) (constant ? 1) (tmp 53)))
      (= (tmp 55) (reg-range src (tmp 54) (tmp 54)))
      (set-reg (tmp 52) (tmp 55))
      (= (tmp 56) (reg-range dst (constant ? 7) (constant ? 7)))
      (= (tmp 57) (mul (constant ? 32) (constant ? 7) (constant ? 2)))
      (= (tmp 58) (reg-range src (tmp 57) (tmp 57)))
      (set-reg (tmp 56) (tmp 58))
      (= (tmp 59) (add (constant ? 8) (constant ? 7) (constant ? 16)))
      (= (tmp 60) (reg-range dst (tmp 59) (tmp 59)))
      (= (tmp 61) (mul (constant ? 8) (constant ? 7) (constant ? 2)))
      (= (tmp 62) (add (constant ? 16) (constant ? 1) (tmp 61)))
      (= (tmp 63) (reg-range src (tmp 62) (tmp 62)))
      (set-reg (tmp 60) (tmp 63))
      (= (tmp 64) (reg-range dst (constant ? 8) (constant ? 8)))
      (= (tmp 65) (mul (constant ? 32) (constant ? 8) (constant ? 2)))
      (= (tmp 66) (reg-range src (tmp 65) (tmp 65)))
      (set-reg (tmp 64) (tmp 66))
      (= (tmp 67) (add (constant ? 8) (constant ? 8) (constant ? 16)))
      (= (tmp 68) (reg-range dst (tmp 67) (tmp 67)))
      (= (tmp 69) (mul (constant ? 8) (constant ? 8) (constant ? 2)))
      (= (tmp 70) (add (constant ? 16) (constant ? 1) (tmp 69)))
      (= (tmp 71) (reg-range src (tmp 70) (tmp 70)))
      (set-reg (tmp 68) (tmp 71))
      (= (tmp 72) (reg-range dst (constant ? 9) (constant ? 9)))
      (= (tmp 73) (mul (constant ? 32) (constant ? 9) (constant ? 2)))
      (= (tmp 74) (reg-range src (tmp 73) (tmp 73)))
      (set-reg (tmp 72) (tmp 74))
      (= (tmp 75) (add (constant ? 8) (constant ? 9) (constant ? 16)))
      (= (tmp 76) (reg-range dst (tmp 75) (tmp 75)))
      (= (tmp 77) (mul (constant ? 8) (constant ? 9) (constant ? 2)))
      (= (tmp 78) (add (constant ? 16) (constant ? 1) (tmp 77)))
      (= (tmp 79) (reg-range src (tmp 78) (tmp 78)))
      (set-reg (tmp 76) (tmp 79))
      (= (tmp 80) (reg-range dst (constant ? 10) (constant ? 10)))
      (= (tmp 81) (mul (constant ? 32) (constant ? 10) (constant ? 2)))
      (= (tmp 82) (reg-range src (tmp 81) (tmp 81)))
      (set-reg (tmp 80) (tmp 82))
      (= (tmp 83) (add (constant ? 8) (constant ? 10) (constant ? 16)))
      (= (tmp 84) (reg-range dst (tmp 83) (tmp 83)))
      (= (tmp 85) (mul (constant ? 8) (constant ? 10) (constant ? 2)))
      (= (tmp 86) (add (constant ? 16) (constant ? 1) (tmp 85)))
      (= (tmp 87) (reg-range src (tmp 86) (tmp 86)))
      (set-reg (tmp 84) (tmp 87))
      (= (tmp 88) (reg-range dst (constant ? 11) (constant ? 11)))
      (= (tmp 89) (mul (constant ? 32) (constant ? 11) (constant ? 2)))
      (= (tmp 90) (reg-range src (tmp 89) (tmp 89)))
      (set-reg (tmp 88) (tmp 90))
      (= (tmp 91) (add (constant ? 8) (constant ? 11) (constant ? 16)))
      (= (tmp 92) (reg-range dst (tmp 91) (tmp 91)))
      (= (tmp 93) (mul (constant ? 8) (constant ? 11) (constant ? 2)))
      (= (tmp 94) (add (constant ? 16) (constant ? 1) (tmp 93)))
      (= (tmp 95) (reg-range src (tmp 94) (tmp 94)))
      (set-reg (tmp 92) (tmp 95))
      (= (tmp 96) (reg-range dst (constant ? 12) (constant ? 12)))
      (= (tmp 97) (mul (constant ? 32) (constant ? 12) (constant ? 2)))
      (= (tmp 98) (reg-range src (tmp 97) (tmp 97)))
      (set-reg (tmp 96) (tmp 98))
      (= (tmp 99) (add (constant ? 8) (constant ? 12) (constant ? 16)))
      (= (tmp 100) (reg-range dst (tmp 99) (tmp 99)))
      (= (tmp 101) (mul (constant ? 8) (constant ? 12) (constant ? 2)))
      (= (tmp 102) (add (constant ? 16) (constant ? 1) (tmp 101)))
      (= (tmp 103) (reg-range src (tmp 102) (tmp 102)))
      (set-reg (tmp 100) (tmp 103))
      (= (tmp 104) (reg-range dst (constant ? 13) (constant ? 13)))
      (= (tmp 105) (mul (constant ? 32) (constant ? 13) (constant ? 2)))
      (= (tmp 106) (reg-range src (tmp 105) (tmp 105)))
      (set-reg (tmp 104) (tmp 106))
      (= (tmp 107) (add (constant ? 8) (constant ? 13) (constant ? 16)))
      (= (tmp 108) (reg-range dst (tmp 107) (tmp 107)))
      (= (tmp 109) (mul (constant ? 8) (constant ? 13) (constant ? 2)))
      (= (tmp 110) (add (constant ? 16) (constant ? 1) (tmp 109)))
      (= (tmp 111) (reg-range src (tmp 110) (tmp 110)))
      (set-reg (tmp 108) (tmp 111))
      (= (tmp 112) (reg-range dst (constant ? 14) (constant ? 14)))
      (= (tmp 113) (mul (constant ? 32) (constant ? 14) (constant ? 2)))
      (= (tmp 114) (reg-range src (tmp 113) (tmp 113)))
      (set-reg (tmp 112) (tmp 114))
      (= (tmp 115) (add (constant ? 8) (constant ? 14) (constant ? 16)))
      (= (tmp 116) (reg-range dst (tmp 115) (tmp 115)))
      (= (tmp 117) (mul (constant ? 8) (constant ? 14) (constant ? 2)))
      (= (tmp 118) (add (constant ? 16) (constant ? 1) (tmp 117)))
      (= (tmp 119) (reg-range src (tmp 118) (tmp 118)))
      (set-reg (tmp 116) (tmp 119))
      (= (tmp 120) (reg-range dst (constant ? 15) (constant ? 15)))
      (= (tmp 121) (mul (constant ? 32) (constant ? 15) (constant ? 2)))
      (= (tmp 122) (reg-range src (tmp 121) (tmp 121)))
      (set-reg (tmp 120) (tmp 122))
      (= (tmp 123) (add (constant ? 8) (constant ? 15) (constant ? 16)))
      (= (tmp 124) (reg-range dst (tmp 123) (tmp 123)))
      (= (tmp 125) (mul (constant ? 8) (constant ? 15) (constant ? 2)))
      (= (tmp 126) (add (constant ? 16) (constant ? 1) (tmp 125)))
      (= (tmp 127) (reg-range src (tmp 126) (tmp 126)))
      (set-reg (tmp 124) (tmp 127))
      (set-reg (tmp 128) (constant ? 0)))))

(instruction
  clb_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 13) (reg-flag op dst))
      (allocate-in (tmp 9) (reg-flag ms dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (set-reg dst src1)
      (= (tmp 0) (bit_and (constant ? 40) src2 (constant ? 15)))
      (= (tmp 1) (bit_and (constant ? 40) src2 (constant ? 3840)))
      (= (tmp 2) (lshr (constant ? 40) (tmp 1) (constant ? 8)))
      (= (tmp 3) (add (constant ? 40) (tmp 0) (tmp 2)))
      (= (tmp 4) (reg-range src2 (tmp 0) (tmp 3)))
      (set-reg (tmp 4) (constant ? 0))
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 14) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 14) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 15) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 13) (tmp 15)))))

(instruction
  mv_a40_r16ll_nimm4
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag z rN))
      (aliases ((tmp 2) (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r0 r1 r2))
      (reg-flag s src ((1 . 1)))
      (immediate UImm ((1 . 16))))
    (code
      (= (tmp 2) (satadd (constant ? 32) (constant ? 0) src))
      (= (tmp 5) (add (constant ? 16) rN UImm))
      (= (tmp 6) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 5) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag z rN))
      (aliases (src (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r0 r1 r2))
      (reg-flag s src ((0 . 0)))
      (immediate UImm ((1 . 16))))
    (code
      (= (tmp 5) (add (constant ? 16) rN UImm))
      (= (tmp 6) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 5) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  shft_a40_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ac dst))
      (allocate-in (tmp 10) (reg-flag mi dst))
      (allocate-in (tmp 16) (reg-flag op dst))
      (allocate-in (tmp 14) (reg-flag ls dst))
      (allocate-in (tmp 12) (reg-flag ms dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) (constant ? -40) src2))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? -40) . bb_0) (src2 . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? 40) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (icmp sgt (constant ? 8) (tmp 3) (constant ? 0)))
      (br (tmp 4) bb_6 bb_7)
      (label bb_6)
      (= (tmp 5) (shl (constant ? 40) src1 (tmp 3)))
      (set-reg dst (tmp 5))
      (br bb_8)
      (label bb_7)
      (= (tmp 6) (lshr (constant ? 40) src1 (tmp 3)))
      (set-reg dst (tmp 6))
      (br bb_8)
      (label bb_8)
      (= (tmp 7) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 9) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 14) (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (br bb_11)
      (label bb_10)
      (br bb_11)
      (label bb_11)
      (= (tmp 18) (phi (((constant ? 1) . bb_9) ((constant ? 0) . bb_10))))
      (set-reg (tmp 16) (tmp 18)))))

(instruction
  zext_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 9) (reg-flag ex dst))
      (allocate-in (tmp 2) (reg-flag ag dst))
      (allocate-in (tmp 12) (reg-flag ac dst))
      (allocate-in (tmp 5) (reg-flag ex dst))
      (allocate-in (tmp 3) (reg-flag a dst))
      (allocate-in (tmp 6) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag mi dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 31)))
      (set-reg (tmp 0) (tmp 1))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 4) (icmp (constant ? 40) eq (tmp 3) (constant ? 0)))
      (br (tmp 4) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 7) (icmp (constant ? 40) eq (tmp 6) (constant ? -1)))
      (br (tmp 7) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 8) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 9) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 10) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) ((tmp 10) . bb_4))))
      (= (tmp 13) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 14) (tmp 15)))))

(instruction
  tgb_a40_nimm5_nimm5_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate ww ((0 . 31)))
      (allocate-in (tmp 9) (reg-flag ls dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag ms dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag op dst))
      (immediate ss ((0 . 31))))
    (code
      (= (tmp 0) (add (constant ? 40) ww ss))
      (= (tmp 1) (reg-range dst ss (tmp 0)))
      (set-reg dst src)
      (= (tmp 2) (bit_not (constant ? 40) (tmp 1)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  clb_a40_nimm5_nimm5_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (immediate ww ((0 . 31)))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 6) (reg-flag ms dst))
      (immediate ss ((0 . 31))))
    (code
      (set-reg dst src)
      (= (tmp 0) (add (constant ? 40) ss ww))
      (= (tmp 1) (reg-range dst ss (tmp 0)))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 3) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  mv_r16ll_nimm4_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r0 r1 r2))
      (allocate-in (tmp 16) (reg-flag z rN))
      (reg-flag u dst ((0 . 0)))
      (immediate UImm ((1 . 16))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 2) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 5) (load-mem (constant ? 16) ldm (tmp 4)))
      (set-reg (tmp 3) (tmp 5))
      (= (tmp 6) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 15) (sext (constant ? 32) (tmp 6) (constant ? 40)))
      (set-reg dst (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r0 r1 r2))
      (allocate-in (tmp 16) (reg-flag z rN))
      (reg-flag u dst ((1 . 1)))
      (immediate UImm ((1 . 16))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 2) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 5) (load-mem (constant ? 16) ldm (tmp 4)))
      (set-reg (tmp 3) (tmp 5))
      (= (tmp 6) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 14) (zext (constant ? 32) (tmp 6) (constant ? 40)))
      (set-reg dst (tmp 14))
      (= (tmp 17) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18)))))

(instruction
  ilv3_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 120) (reg-flag ag dst)))
    (code
      (= (tmp 0) (mul (constant ? 8) (constant ? 0) (constant ? 3)))
      (= (tmp 1) (add (constant ? 8) (tmp 0) (constant ? 8)))
      (= (tmp 2) (reg-range dst (tmp 1) (tmp 1)))
      (= (tmp 3) (add (constant ? 8) (constant ? 0) (constant ? 8)))
      (= (tmp 4) (reg-range src (tmp 3) (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 5) (mul (constant ? 8) (constant ? 0) (constant ? 3)))
      (= (tmp 6) (add (constant ? 8) (tmp 5) (constant ? 9)))
      (= (tmp 7) (reg-range dst (tmp 6) (tmp 6)))
      (= (tmp 8) (add (constant ? 8) (constant ? 0) (constant ? 16)))
      (= (tmp 9) (reg-range src (tmp 8) (tmp 8)))
      (set-reg (tmp 7) (tmp 9))
      (= (tmp 10) (mul (constant ? 8) (constant ? 0) (constant ? 3)))
      (= (tmp 11) (add (constant ? 8) (tmp 10) (constant ? 10)))
      (= (tmp 12) (reg-range dst (tmp 11) (tmp 11)))
      (= (tmp 13) (add (constant ? 8) (constant ? 0) (constant ? 24)))
      (= (tmp 14) (reg-range src (tmp 13) (tmp 13)))
      (set-reg (tmp 12) (tmp 14))
      (= (tmp 15) (mul (constant ? 8) (constant ? 1) (constant ? 3)))
      (= (tmp 16) (add (constant ? 8) (tmp 15) (constant ? 8)))
      (= (tmp 17) (reg-range dst (tmp 16) (tmp 16)))
      (= (tmp 18) (add (constant ? 8) (constant ? 1) (constant ? 8)))
      (= (tmp 19) (reg-range src (tmp 18) (tmp 18)))
      (set-reg (tmp 17) (tmp 19))
      (= (tmp 20) (mul (constant ? 8) (constant ? 1) (constant ? 3)))
      (= (tmp 21) (add (constant ? 8) (tmp 20) (constant ? 9)))
      (= (tmp 22) (reg-range dst (tmp 21) (tmp 21)))
      (= (tmp 23) (add (constant ? 8) (constant ? 1) (constant ? 16)))
      (= (tmp 24) (reg-range src (tmp 23) (tmp 23)))
      (set-reg (tmp 22) (tmp 24))
      (= (tmp 25) (mul (constant ? 8) (constant ? 1) (constant ? 3)))
      (= (tmp 26) (add (constant ? 8) (tmp 25) (constant ? 10)))
      (= (tmp 27) (reg-range dst (tmp 26) (tmp 26)))
      (= (tmp 28) (add (constant ? 8) (constant ? 1) (constant ? 24)))
      (= (tmp 29) (reg-range src (tmp 28) (tmp 28)))
      (set-reg (tmp 27) (tmp 29))
      (= (tmp 30) (mul (constant ? 8) (constant ? 2) (constant ? 3)))
      (= (tmp 31) (add (constant ? 8) (tmp 30) (constant ? 8)))
      (= (tmp 32) (reg-range dst (tmp 31) (tmp 31)))
      (= (tmp 33) (add (constant ? 8) (constant ? 2) (constant ? 8)))
      (= (tmp 34) (reg-range src (tmp 33) (tmp 33)))
      (set-reg (tmp 32) (tmp 34))
      (= (tmp 35) (mul (constant ? 8) (constant ? 2) (constant ? 3)))
      (= (tmp 36) (add (constant ? 8) (tmp 35) (constant ? 9)))
      (= (tmp 37) (reg-range dst (tmp 36) (tmp 36)))
      (= (tmp 38) (add (constant ? 8) (constant ? 2) (constant ? 16)))
      (= (tmp 39) (reg-range src (tmp 38) (tmp 38)))
      (set-reg (tmp 37) (tmp 39))
      (= (tmp 40) (mul (constant ? 8) (constant ? 2) (constant ? 3)))
      (= (tmp 41) (add (constant ? 8) (tmp 40) (constant ? 10)))
      (= (tmp 42) (reg-range dst (tmp 41) (tmp 41)))
      (= (tmp 43) (add (constant ? 8) (constant ? 2) (constant ? 24)))
      (= (tmp 44) (reg-range src (tmp 43) (tmp 43)))
      (set-reg (tmp 42) (tmp 44))
      (= (tmp 45) (mul (constant ? 8) (constant ? 3) (constant ? 3)))
      (= (tmp 46) (add (constant ? 8) (tmp 45) (constant ? 8)))
      (= (tmp 47) (reg-range dst (tmp 46) (tmp 46)))
      (= (tmp 48) (add (constant ? 8) (constant ? 3) (constant ? 8)))
      (= (tmp 49) (reg-range src (tmp 48) (tmp 48)))
      (set-reg (tmp 47) (tmp 49))
      (= (tmp 50) (mul (constant ? 8) (constant ? 3) (constant ? 3)))
      (= (tmp 51) (add (constant ? 8) (tmp 50) (constant ? 9)))
      (= (tmp 52) (reg-range dst (tmp 51) (tmp 51)))
      (= (tmp 53) (add (constant ? 8) (constant ? 3) (constant ? 16)))
      (= (tmp 54) (reg-range src (tmp 53) (tmp 53)))
      (set-reg (tmp 52) (tmp 54))
      (= (tmp 55) (mul (constant ? 8) (constant ? 3) (constant ? 3)))
      (= (tmp 56) (add (constant ? 8) (tmp 55) (constant ? 10)))
      (= (tmp 57) (reg-range dst (tmp 56) (tmp 56)))
      (= (tmp 58) (add (constant ? 8) (constant ? 3) (constant ? 24)))
      (= (tmp 59) (reg-range src (tmp 58) (tmp 58)))
      (set-reg (tmp 57) (tmp 59))
      (= (tmp 60) (mul (constant ? 8) (constant ? 4) (constant ? 3)))
      (= (tmp 61) (add (constant ? 8) (tmp 60) (constant ? 8)))
      (= (tmp 62) (reg-range dst (tmp 61) (tmp 61)))
      (= (tmp 63) (add (constant ? 8) (constant ? 4) (constant ? 8)))
      (= (tmp 64) (reg-range src (tmp 63) (tmp 63)))
      (set-reg (tmp 62) (tmp 64))
      (= (tmp 65) (mul (constant ? 8) (constant ? 4) (constant ? 3)))
      (= (tmp 66) (add (constant ? 8) (tmp 65) (constant ? 9)))
      (= (tmp 67) (reg-range dst (tmp 66) (tmp 66)))
      (= (tmp 68) (add (constant ? 8) (constant ? 4) (constant ? 16)))
      (= (tmp 69) (reg-range src (tmp 68) (tmp 68)))
      (set-reg (tmp 67) (tmp 69))
      (= (tmp 70) (mul (constant ? 8) (constant ? 4) (constant ? 3)))
      (= (tmp 71) (add (constant ? 8) (tmp 70) (constant ? 10)))
      (= (tmp 72) (reg-range dst (tmp 71) (tmp 71)))
      (= (tmp 73) (add (constant ? 8) (constant ? 4) (constant ? 24)))
      (= (tmp 74) (reg-range src (tmp 73) (tmp 73)))
      (set-reg (tmp 72) (tmp 74))
      (= (tmp 75) (mul (constant ? 8) (constant ? 5) (constant ? 3)))
      (= (tmp 76) (add (constant ? 8) (tmp 75) (constant ? 8)))
      (= (tmp 77) (reg-range dst (tmp 76) (tmp 76)))
      (= (tmp 78) (add (constant ? 8) (constant ? 5) (constant ? 8)))
      (= (tmp 79) (reg-range src (tmp 78) (tmp 78)))
      (set-reg (tmp 77) (tmp 79))
      (= (tmp 80) (mul (constant ? 8) (constant ? 5) (constant ? 3)))
      (= (tmp 81) (add (constant ? 8) (tmp 80) (constant ? 9)))
      (= (tmp 82) (reg-range dst (tmp 81) (tmp 81)))
      (= (tmp 83) (add (constant ? 8) (constant ? 5) (constant ? 16)))
      (= (tmp 84) (reg-range src (tmp 83) (tmp 83)))
      (set-reg (tmp 82) (tmp 84))
      (= (tmp 85) (mul (constant ? 8) (constant ? 5) (constant ? 3)))
      (= (tmp 86) (add (constant ? 8) (tmp 85) (constant ? 10)))
      (= (tmp 87) (reg-range dst (tmp 86) (tmp 86)))
      (= (tmp 88) (add (constant ? 8) (constant ? 5) (constant ? 24)))
      (= (tmp 89) (reg-range src (tmp 88) (tmp 88)))
      (set-reg (tmp 87) (tmp 89))
      (= (tmp 90) (mul (constant ? 8) (constant ? 6) (constant ? 3)))
      (= (tmp 91) (add (constant ? 8) (tmp 90) (constant ? 8)))
      (= (tmp 92) (reg-range dst (tmp 91) (tmp 91)))
      (= (tmp 93) (add (constant ? 8) (constant ? 6) (constant ? 8)))
      (= (tmp 94) (reg-range src (tmp 93) (tmp 93)))
      (set-reg (tmp 92) (tmp 94))
      (= (tmp 95) (mul (constant ? 8) (constant ? 6) (constant ? 3)))
      (= (tmp 96) (add (constant ? 8) (tmp 95) (constant ? 9)))
      (= (tmp 97) (reg-range dst (tmp 96) (tmp 96)))
      (= (tmp 98) (add (constant ? 8) (constant ? 6) (constant ? 16)))
      (= (tmp 99) (reg-range src (tmp 98) (tmp 98)))
      (set-reg (tmp 97) (tmp 99))
      (= (tmp 100) (mul (constant ? 8) (constant ? 6) (constant ? 3)))
      (= (tmp 101) (add (constant ? 8) (tmp 100) (constant ? 10)))
      (= (tmp 102) (reg-range dst (tmp 101) (tmp 101)))
      (= (tmp 103) (add (constant ? 8) (constant ? 6) (constant ? 24)))
      (= (tmp 104) (reg-range src (tmp 103) (tmp 103)))
      (set-reg (tmp 102) (tmp 104))
      (= (tmp 105) (mul (constant ? 8) (constant ? 7) (constant ? 3)))
      (= (tmp 106) (add (constant ? 8) (tmp 105) (constant ? 8)))
      (= (tmp 107) (reg-range dst (tmp 106) (tmp 106)))
      (= (tmp 108) (add (constant ? 8) (constant ? 7) (constant ? 8)))
      (= (tmp 109) (reg-range src (tmp 108) (tmp 108)))
      (set-reg (tmp 107) (tmp 109))
      (= (tmp 110) (mul (constant ? 8) (constant ? 7) (constant ? 3)))
      (= (tmp 111) (add (constant ? 8) (tmp 110) (constant ? 9)))
      (= (tmp 112) (reg-range dst (tmp 111) (tmp 111)))
      (= (tmp 113) (add (constant ? 8) (constant ? 7) (constant ? 16)))
      (= (tmp 114) (reg-range src (tmp 113) (tmp 113)))
      (set-reg (tmp 112) (tmp 114))
      (= (tmp 115) (mul (constant ? 8) (constant ? 7) (constant ? 3)))
      (= (tmp 116) (add (constant ? 8) (tmp 115) (constant ? 10)))
      (= (tmp 117) (reg-range dst (tmp 116) (tmp 116)))
      (= (tmp 118) (add (constant ? 8) (constant ? 7) (constant ? 24)))
      (= (tmp 119) (reg-range src (tmp 118) (tmp 118)))
      (set-reg (tmp 117) (tmp 119))
      (set-reg (tmp 120) (constant ? 0))
      (= (tmp 121) (reg-range dst (constant ? 0) (constant ? 7)))
      (set-reg (tmp 121) (constant ? 0)))))

(instruction
  subsp_nimm7
  (pattern
    (constraints
      (immediate UImm ((0 . 127))))
    (code
      (= (tmp 0) (sub (constant ? 16) (register sp) UImm))
      (set-reg (register sp) (tmp 0)))))

(instruction
  stb_a16h_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in (tmp 9) (reg-flag ms dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag mi dst))
      (allocate-in (tmp 13) (reg-flag op dst))
      (allocate-in (tmp 11) (reg-flag ls dst)))
    (code
      (= (tmp 0) (bit_and (constant ? 40) src (constant ? 15)))
      (= (tmp 1) (bit_and (constant ? 40) src (constant ? 3840)))
      (= (tmp 2) (lshr (constant ? 40) (tmp 1) (constant ? 8)))
      (= (tmp 3) (add (constant ? 40) (tmp 0) (tmp 2)))
      (= (tmp 4) (reg-range src (tmp 0) (tmp 3)))
      (set-reg (tmp 4) (constant ? -1))
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 14) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 14) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 15) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 13) (tmp 15)))))

(instruction
  push_any32
  (pattern
    (constraints
      (allocate-in src (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (aliases (src (tmp 5))))
    (code
      (= (tmp 0) (sub (constant ? 16) (register sp) (constant ? 2)))
      (set-reg src (tmp 0))
      (= (tmp 6) (reg-range (tmp 5) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (register sp) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (register sp) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 5) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases (src (tmp 4) (tmp 5)))
      (reg-flag s src ((0 . 0))))
    (code
      (= (tmp 0) (sub (constant ? 16) (register sp) (constant ? 2)))
      (set-reg src (tmp 0))
      (= (tmp 6) (reg-range (tmp 5) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (register sp) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (register sp) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 5) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases ((tmp 3) (tmp 4) (tmp 5)))
      (reg-flag s src ((1 . 1))))
    (code
      (= (tmp 0) (sub (constant ? 16) (register sp) (constant ? 2)))
      (set-reg src (tmp 0))
      (= (tmp 3) (satadd (constant ? 32) (constant ? 0) src))
      (= (tmp 6) (reg-range (tmp 5) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (register sp) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (register sp) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 5) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9)))))

(instruction
  shft_a16_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (icmp sgt (constant ? 16) src (constant ? 16)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) (constant ? -16) src))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? -16) . bb_0) (src . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? 16) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (icmp sgt (constant ? 8) (tmp 3) (constant ? 0)))
      (br (tmp 4) bb_6 bb_7)
      (label bb_6)
      (= (tmp 5) (shl (constant ? 16) dst (tmp 3)))
      (set-reg dst (tmp 5))
      (br bb_8)
      (label bb_7)
      (= (tmp 6) (lshr (constant ? 16) dst (tmp 3)))
      (set-reg dst (tmp 6))
      (br bb_8)
      (label bb_8)
      (= (tmp 7) (phi ((no-value . bb_6) (no-value . bb_7)))))))

(instruction
  pop_any32
  (pattern
    (constraints
      (allocate-in dst (a23g a45g a67g pid pia cbd pr0 pr1 dc01 retpc dfdp a1 a2 a0 r01 r23 r45 r67 r89 r1011 r1213 r1415 a3 a4 a5 a6 a7 pref0 pref1 pc brc12 cnt m01 m23 cpa lpa balen3 balen2 balen0 balen1 a01g af1032 af5476 ac01)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm (register sp)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) (register sp) (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 5) (add (constant ? 16) (register sp) (constant ? 1)))
      (set-reg (register sp) (tmp 5)))))

(instruction
  tbit_nimm5_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (immediate UImm ((0 . 31)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 0) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag ms dst)))
    (code
      (= (tmp 1) (reg-range dst UImm UImm))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  popi_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm (register sp)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) (register sp) (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 14) (sext (constant ? 32) (tmp 5) (constant ? 40)))
      (set-reg dst (tmp 14))
      (= (tmp 15) (add (constant ? 16) (register sp) (constant ? 2)))
      (set-reg (register sp) (tmp 15))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm (register sp)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) (register sp) (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 13) (zext (constant ? 32) (tmp 5) (constant ? 40)))
      (set-reg dst (tmp 13))
      (= (tmp 15) (add (constant ? 16) (register sp) (constant ? 2)))
      (set-reg (register sp) (tmp 15)))))

(instruction
  swapneg2_a40_nimm2_a40
  (pattern
    (constraints
      (allocate-in (tmp 24) (reg-flag ex dst))
      (immediate imm2b ((0 . 3)))
      (allocate-in (tmp 18) (reg-flag a dst))
      (allocate-in (tmp 25) (reg-flag a dst))
      (allocate-in (tmp 28) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag ex dst))
      (allocate-in (tmp 20) (reg-flag ac dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 22) (reg-flag a dst))
      (allocate-in (tmp 31) (reg-flag mi dst)))
    (code
      (= (tmp 0) (bit_and (constant ? 2) imm2b (constant ? 1)))
      (= (tmp 1) (icmp eq (constant ? 2) (tmp 0) (constant ? 1)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (sub (constant ? 8) (constant ? 0) (constant ? 15)))
      (= (tmp 4) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 5) (satsub (tmp 3) (constant ? 0) (tmp 4)))
      (set-reg (tmp 2) (tmp 5))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 7) (reg-range src (constant ? 16) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (br bb_2)
      (label bb_2)
      (= (tmp 8) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 9) (bit_and (constant ? 2) imm2b (constant ? 2)))
      (= (tmp 10) (icmp eq (constant ? 2) (tmp 9) (constant ? 2)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (= (tmp 11) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 12) (sub (constant ? 8) (constant ? 16) (constant ? 31)))
      (= (tmp 13) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 14) (satsub (tmp 12) (constant ? 0) (tmp 13)))
      (set-reg (tmp 11) (tmp 14))
      (br bb_5)
      (label bb_4)
      (= (tmp 15) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 16) (reg-range src (constant ? 0) (constant ? 15)))
      (set-reg (tmp 15) (tmp 16))
      (br bb_5)
      (label bb_5)
      (= (tmp 17) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 19) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 18) (tmp 19))
      (= (tmp 21) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 20) (tmp 21))
      (= (tmp 23) (icmp (constant ? 40) eq (tmp 22) (constant ? 0)))
      (br (tmp 23) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 26) (icmp (constant ? 40) eq (tmp 25) (constant ? -1)))
      (br (tmp 26) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 27) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 28) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 29) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 30) (phi ((no-value . bb_9) ((tmp 29) . bb_10))))
      (= (tmp 32) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 31) (tmp 32)))))

(instruction
  shft_a16_nimm6_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (aliases ((tmp 2) (tmp 4)))
      (immediate SImm ((1 . 16))))
    (code
      (= (tmp 1) (sub (constant ? 5) (constant ? 0) SImm))
      (= (tmp 2) (lshr (constant ? 16) src (tmp 1)))
      (set-reg dst (tmp 4)))))

(instruction
  dil3_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 120) (reg-flag ag dst)))
    (code
      (= (tmp 0) (add (constant ? 8) (constant ? 0) (constant ? 8)))
      (= (tmp 1) (reg-range src (tmp 0) (tmp 0)))
      (= (tmp 2) (mul (constant ? 8) (constant ? 0) (constant ? 3)))
      (= (tmp 3) (add (constant ? 8) (tmp 2) (constant ? 8)))
      (= (tmp 4) (reg-range dst (tmp 3) (tmp 3)))
      (set-reg (tmp 1) (tmp 4))
      (= (tmp 5) (add (constant ? 8) (constant ? 0) (constant ? 16)))
      (= (tmp 6) (reg-range src (tmp 5) (tmp 5)))
      (= (tmp 7) (mul (constant ? 8) (constant ? 0) (constant ? 3)))
      (= (tmp 8) (add (constant ? 8) (tmp 7) (constant ? 9)))
      (= (tmp 9) (reg-range dst (tmp 8) (tmp 8)))
      (set-reg (tmp 6) (tmp 9))
      (= (tmp 10) (add (constant ? 8) (constant ? 0) (constant ? 24)))
      (= (tmp 11) (reg-range src (tmp 10) (tmp 10)))
      (= (tmp 12) (mul (constant ? 8) (constant ? 0) (constant ? 3)))
      (= (tmp 13) (add (constant ? 8) (tmp 12) (constant ? 10)))
      (= (tmp 14) (reg-range dst (tmp 13) (tmp 13)))
      (set-reg (tmp 11) (tmp 14))
      (= (tmp 15) (add (constant ? 8) (constant ? 1) (constant ? 8)))
      (= (tmp 16) (reg-range src (tmp 15) (tmp 15)))
      (= (tmp 17) (mul (constant ? 8) (constant ? 1) (constant ? 3)))
      (= (tmp 18) (add (constant ? 8) (tmp 17) (constant ? 8)))
      (= (tmp 19) (reg-range dst (tmp 18) (tmp 18)))
      (set-reg (tmp 16) (tmp 19))
      (= (tmp 20) (add (constant ? 8) (constant ? 1) (constant ? 16)))
      (= (tmp 21) (reg-range src (tmp 20) (tmp 20)))
      (= (tmp 22) (mul (constant ? 8) (constant ? 1) (constant ? 3)))
      (= (tmp 23) (add (constant ? 8) (tmp 22) (constant ? 9)))
      (= (tmp 24) (reg-range dst (tmp 23) (tmp 23)))
      (set-reg (tmp 21) (tmp 24))
      (= (tmp 25) (add (constant ? 8) (constant ? 1) (constant ? 24)))
      (= (tmp 26) (reg-range src (tmp 25) (tmp 25)))
      (= (tmp 27) (mul (constant ? 8) (constant ? 1) (constant ? 3)))
      (= (tmp 28) (add (constant ? 8) (tmp 27) (constant ? 10)))
      (= (tmp 29) (reg-range dst (tmp 28) (tmp 28)))
      (set-reg (tmp 26) (tmp 29))
      (= (tmp 30) (add (constant ? 8) (constant ? 2) (constant ? 8)))
      (= (tmp 31) (reg-range src (tmp 30) (tmp 30)))
      (= (tmp 32) (mul (constant ? 8) (constant ? 2) (constant ? 3)))
      (= (tmp 33) (add (constant ? 8) (tmp 32) (constant ? 8)))
      (= (tmp 34) (reg-range dst (tmp 33) (tmp 33)))
      (set-reg (tmp 31) (tmp 34))
      (= (tmp 35) (add (constant ? 8) (constant ? 2) (constant ? 16)))
      (= (tmp 36) (reg-range src (tmp 35) (tmp 35)))
      (= (tmp 37) (mul (constant ? 8) (constant ? 2) (constant ? 3)))
      (= (tmp 38) (add (constant ? 8) (tmp 37) (constant ? 9)))
      (= (tmp 39) (reg-range dst (tmp 38) (tmp 38)))
      (set-reg (tmp 36) (tmp 39))
      (= (tmp 40) (add (constant ? 8) (constant ? 2) (constant ? 24)))
      (= (tmp 41) (reg-range src (tmp 40) (tmp 40)))
      (= (tmp 42) (mul (constant ? 8) (constant ? 2) (constant ? 3)))
      (= (tmp 43) (add (constant ? 8) (tmp 42) (constant ? 10)))
      (= (tmp 44) (reg-range dst (tmp 43) (tmp 43)))
      (set-reg (tmp 41) (tmp 44))
      (= (tmp 45) (add (constant ? 8) (constant ? 3) (constant ? 8)))
      (= (tmp 46) (reg-range src (tmp 45) (tmp 45)))
      (= (tmp 47) (mul (constant ? 8) (constant ? 3) (constant ? 3)))
      (= (tmp 48) (add (constant ? 8) (tmp 47) (constant ? 8)))
      (= (tmp 49) (reg-range dst (tmp 48) (tmp 48)))
      (set-reg (tmp 46) (tmp 49))
      (= (tmp 50) (add (constant ? 8) (constant ? 3) (constant ? 16)))
      (= (tmp 51) (reg-range src (tmp 50) (tmp 50)))
      (= (tmp 52) (mul (constant ? 8) (constant ? 3) (constant ? 3)))
      (= (tmp 53) (add (constant ? 8) (tmp 52) (constant ? 9)))
      (= (tmp 54) (reg-range dst (tmp 53) (tmp 53)))
      (set-reg (tmp 51) (tmp 54))
      (= (tmp 55) (add (constant ? 8) (constant ? 3) (constant ? 24)))
      (= (tmp 56) (reg-range src (tmp 55) (tmp 55)))
      (= (tmp 57) (mul (constant ? 8) (constant ? 3) (constant ? 3)))
      (= (tmp 58) (add (constant ? 8) (tmp 57) (constant ? 10)))
      (= (tmp 59) (reg-range dst (tmp 58) (tmp 58)))
      (set-reg (tmp 56) (tmp 59))
      (= (tmp 60) (add (constant ? 8) (constant ? 4) (constant ? 8)))
      (= (tmp 61) (reg-range src (tmp 60) (tmp 60)))
      (= (tmp 62) (mul (constant ? 8) (constant ? 4) (constant ? 3)))
      (= (tmp 63) (add (constant ? 8) (tmp 62) (constant ? 8)))
      (= (tmp 64) (reg-range dst (tmp 63) (tmp 63)))
      (set-reg (tmp 61) (tmp 64))
      (= (tmp 65) (add (constant ? 8) (constant ? 4) (constant ? 16)))
      (= (tmp 66) (reg-range src (tmp 65) (tmp 65)))
      (= (tmp 67) (mul (constant ? 8) (constant ? 4) (constant ? 3)))
      (= (tmp 68) (add (constant ? 8) (tmp 67) (constant ? 9)))
      (= (tmp 69) (reg-range dst (tmp 68) (tmp 68)))
      (set-reg (tmp 66) (tmp 69))
      (= (tmp 70) (add (constant ? 8) (constant ? 4) (constant ? 24)))
      (= (tmp 71) (reg-range src (tmp 70) (tmp 70)))
      (= (tmp 72) (mul (constant ? 8) (constant ? 4) (constant ? 3)))
      (= (tmp 73) (add (constant ? 8) (tmp 72) (constant ? 10)))
      (= (tmp 74) (reg-range dst (tmp 73) (tmp 73)))
      (set-reg (tmp 71) (tmp 74))
      (= (tmp 75) (add (constant ? 8) (constant ? 5) (constant ? 8)))
      (= (tmp 76) (reg-range src (tmp 75) (tmp 75)))
      (= (tmp 77) (mul (constant ? 8) (constant ? 5) (constant ? 3)))
      (= (tmp 78) (add (constant ? 8) (tmp 77) (constant ? 8)))
      (= (tmp 79) (reg-range dst (tmp 78) (tmp 78)))
      (set-reg (tmp 76) (tmp 79))
      (= (tmp 80) (add (constant ? 8) (constant ? 5) (constant ? 16)))
      (= (tmp 81) (reg-range src (tmp 80) (tmp 80)))
      (= (tmp 82) (mul (constant ? 8) (constant ? 5) (constant ? 3)))
      (= (tmp 83) (add (constant ? 8) (tmp 82) (constant ? 9)))
      (= (tmp 84) (reg-range dst (tmp 83) (tmp 83)))
      (set-reg (tmp 81) (tmp 84))
      (= (tmp 85) (add (constant ? 8) (constant ? 5) (constant ? 24)))
      (= (tmp 86) (reg-range src (tmp 85) (tmp 85)))
      (= (tmp 87) (mul (constant ? 8) (constant ? 5) (constant ? 3)))
      (= (tmp 88) (add (constant ? 8) (tmp 87) (constant ? 10)))
      (= (tmp 89) (reg-range dst (tmp 88) (tmp 88)))
      (set-reg (tmp 86) (tmp 89))
      (= (tmp 90) (add (constant ? 8) (constant ? 6) (constant ? 8)))
      (= (tmp 91) (reg-range src (tmp 90) (tmp 90)))
      (= (tmp 92) (mul (constant ? 8) (constant ? 6) (constant ? 3)))
      (= (tmp 93) (add (constant ? 8) (tmp 92) (constant ? 8)))
      (= (tmp 94) (reg-range dst (tmp 93) (tmp 93)))
      (set-reg (tmp 91) (tmp 94))
      (= (tmp 95) (add (constant ? 8) (constant ? 6) (constant ? 16)))
      (= (tmp 96) (reg-range src (tmp 95) (tmp 95)))
      (= (tmp 97) (mul (constant ? 8) (constant ? 6) (constant ? 3)))
      (= (tmp 98) (add (constant ? 8) (tmp 97) (constant ? 9)))
      (= (tmp 99) (reg-range dst (tmp 98) (tmp 98)))
      (set-reg (tmp 96) (tmp 99))
      (= (tmp 100) (add (constant ? 8) (constant ? 6) (constant ? 24)))
      (= (tmp 101) (reg-range src (tmp 100) (tmp 100)))
      (= (tmp 102) (mul (constant ? 8) (constant ? 6) (constant ? 3)))
      (= (tmp 103) (add (constant ? 8) (tmp 102) (constant ? 10)))
      (= (tmp 104) (reg-range dst (tmp 103) (tmp 103)))
      (set-reg (tmp 101) (tmp 104))
      (= (tmp 105) (add (constant ? 8) (constant ? 7) (constant ? 8)))
      (= (tmp 106) (reg-range src (tmp 105) (tmp 105)))
      (= (tmp 107) (mul (constant ? 8) (constant ? 7) (constant ? 3)))
      (= (tmp 108) (add (constant ? 8) (tmp 107) (constant ? 8)))
      (= (tmp 109) (reg-range dst (tmp 108) (tmp 108)))
      (set-reg (tmp 106) (tmp 109))
      (= (tmp 110) (add (constant ? 8) (constant ? 7) (constant ? 16)))
      (= (tmp 111) (reg-range src (tmp 110) (tmp 110)))
      (= (tmp 112) (mul (constant ? 8) (constant ? 7) (constant ? 3)))
      (= (tmp 113) (add (constant ? 8) (tmp 112) (constant ? 9)))
      (= (tmp 114) (reg-range dst (tmp 113) (tmp 113)))
      (set-reg (tmp 111) (tmp 114))
      (= (tmp 115) (add (constant ? 8) (constant ? 7) (constant ? 24)))
      (= (tmp 116) (reg-range src (tmp 115) (tmp 115)))
      (= (tmp 117) (mul (constant ? 8) (constant ? 7) (constant ? 3)))
      (= (tmp 118) (add (constant ? 8) (tmp 117) (constant ? 10)))
      (= (tmp 119) (reg-range dst (tmp 118) (tmp 118)))
      (set-reg (tmp 116) (tmp 119))
      (set-reg (tmp 120) (constant ? 0))
      (= (tmp 121) (reg-range dst (constant ? 0) (constant ? 7)))
      (set-reg (tmp 121) (constant ? 0)))))

(instruction
  sext_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 0)))))

(instruction
  mv_ext16_ext16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in src (a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 brad0l brad0h brad1l brad1h brlen0 brlen1 bradf0 repc nw lpal lpah cpal cpah iitx nid crev frev hid cdol cdoh cpol cpoh cdll cdlh cpll cplh retpcl retpch pcel pceh bfnl bfnh cmtype predcfg lpmcfg plc bcfg pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc ipl0 ipl1 isr0l isr0h isr1l isr1h intno icfg cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr dmrefl dmrefh dmmaskl dmmaskh dmaddrl dmaddrh dmpcl dmpch dma dmc pmpcl0l pmpcl0h pmpcl1l pmpcl1h pmpcc0l pmpcc0h pmpcc1l pmpcc1h pmc plda ppcl ppch msgn msgr msgs msgl msgc msgt msgw msge dirqpcl dirqpch trcen trcrp trcdl trcdh psidl psidh bradfd udid dmsdl dmsdh flst trcc))
      (reg-flag l dst ((1 . 1)))
      (aliases (src (tmp 4)))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 7) (zext (constant ? 16) (tmp 4) (constant ? 40)))
      (set-reg dst (tmp 7))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in src (a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 brad0l brad0h brad1l brad1h brlen0 brlen1 bradf0 repc nw lpal lpah cpal cpah iitx nid crev frev hid cdol cdoh cpol cpoh cdll cdlh cpll cplh retpcl retpch pcel pceh bfnl bfnh cmtype predcfg lpmcfg plc bcfg pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc ipl0 ipl1 isr0l isr0h isr1l isr1h intno icfg cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr dmrefl dmrefh dmmaskl dmmaskh dmaddrl dmaddrh dmpcl dmpch dma dmc pmpcl0l pmpcl0h pmpcl1l pmpcl1h pmpcc0l pmpcc0h pmpcc1l pmpcc1h pmc plda ppcl ppch msgn msgr msgs msgl msgc msgt msgw msge dirqpcl dirqpch trcen trcrp trcdl trcdh psidl psidh bradfd udid dmsdl dmsdh flst trcc))
      (reg-flag l dst ((1 . 1)))
      (aliases (src (tmp 4)))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 8) (sext (constant ? 16) (tmp 4) (constant ? 40)))
      (set-reg dst (tmp 8))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in src (a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 brad0l brad0h brad1l brad1h brlen0 brlen1 bradf0 repc nw lpal lpah cpal cpah iitx nid crev frev hid cdol cdoh cpol cpoh cdll cdlh cpll cplh retpcl retpch pcel pceh bfnl bfnh cmtype predcfg lpmcfg plc bcfg pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc ipl0 ipl1 isr0l isr0h isr1l isr1h intno icfg cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr dmrefl dmrefh dmmaskl dmmaskh dmaddrl dmaddrh dmpcl dmpch dma dmc pmpcl0l pmpcl0h pmpcl1l pmpcl1h pmpcc0l pmpcc0h pmpcc1l pmpcc1h pmc plda ppcl ppch msgn msgr msgs msgl msgc msgt msgw msge dirqpcl dirqpch trcen trcrp trcdl trcdh psidl psidh bradfd udid dmsdl dmsdh flst trcc))
      (aliases (src (tmp 4)))
      (reg-flag l dst ((0 . 0))))
    (code
      (set-reg dst (tmp 4))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 brad0l brad0h brad1l brad1h brlen0 brlen1 bradf0 repc nw lpal lpah cpal cpah iitx nid crev frev hid cdol cdoh cpol cpoh cdll cdlh cpll cplh retpcl retpch pcel pceh bfnl bfnh cmtype predcfg lpmcfg plc bcfg pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc ipl0 ipl1 isr0l isr0h isr1l isr1h intno icfg cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr dmrefl dmrefh dmmaskl dmmaskh dmaddrl dmaddrh dmpcl dmpch dma dmc pmpcl0l pmpcl0h pmpcl1l pmpcl1h pmpcc0l pmpcc0h pmpcc1l pmpcc1h pmc plda ppcl ppch msgn msgr msgs msgl msgc msgt msgw msge dirqpcl dirqpch trcen trcrp trcdl trcdh psidl psidh bradfd udid dmsdl dmsdh flst trcc))
      (reg-flag h dst ((1 . 1)))
      (aliases (src (tmp 4)))
      (allocate-in (tmp 16) (reg-flag al dst))
      (reg-flag u dst ((1 . 1))))
    (code
      (set-reg (tmp 16) (constant ? 0))
      (= (tmp 21) (zext (constant ? 16) (tmp 4) (constant ? 32)))
      (set-reg dst (tmp 21))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 brad0l brad0h brad1l brad1h brlen0 brlen1 bradf0 repc nw lpal lpah cpal cpah iitx nid crev frev hid cdol cdoh cpol cpoh cdll cdlh cpll cplh retpcl retpch pcel pceh bfnl bfnh cmtype predcfg lpmcfg plc bcfg pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc ipl0 ipl1 isr0l isr0h isr1l isr1h intno icfg cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr dmrefl dmrefh dmmaskl dmmaskh dmaddrl dmaddrh dmpcl dmpch dma dmc pmpcl0l pmpcl0h pmpcl1l pmpcl1h pmpcc0l pmpcc0h pmpcc1l pmpcc1h pmc plda ppcl ppch msgn msgr msgs msgl msgc msgt msgw msge dirqpcl dirqpch trcen trcrp trcdl trcdh psidl psidh bradfd udid dmsdl dmsdh flst trcc))
      (reg-flag h dst ((1 . 1)))
      (aliases (src (tmp 4)))
      (allocate-in (tmp 16) (reg-flag al dst))
      (reg-flag u dst ((0 . 0))))
    (code
      (set-reg (tmp 16) (constant ? 0))
      (= (tmp 22) (sext (constant ? 16) (tmp 4) (constant ? 32)))
      (set-reg dst (tmp 22))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 brad0l brad0h brad1l brad1h brlen0 brlen1 bradf0 repc nw lpal lpah cpal cpah iitx nid crev frev hid cdol cdoh cpol cpoh cdll cdlh cpll cplh retpcl retpch pcel pceh bfnl bfnh cmtype predcfg lpmcfg plc bcfg pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc ipl0 ipl1 isr0l isr0h isr1l isr1h intno icfg cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr dmrefl dmrefh dmmaskl dmmaskh dmaddrl dmaddrh dmpcl dmpch dma dmc pmpcl0l pmpcl0h pmpcl1l pmpcl1h pmpcc0l pmpcc0h pmpcc1l pmpcc1h pmc plda ppcl ppch msgn msgr msgs msgl msgc msgt msgw msge dirqpcl dirqpch trcen trcrp trcdl trcdh psidl psidh bradfd udid dmsdl dmsdh flst trcc))
      (reg-flag h dst ((0 . 0)))
      (aliases (src (tmp 4)))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 30) (zext (constant ? 16) (tmp 4) (constant ? 32)))
      (set-reg dst (tmp 30))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 brad0l brad0h brad1l brad1h brlen0 brlen1 bradf0 repc nw lpal lpah cpal cpah iitx nid crev frev hid cdol cdoh cpol cpoh cdll cdlh cpll cplh retpcl retpch pcel pceh bfnl bfnh cmtype predcfg lpmcfg plc bcfg pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc ipl0 ipl1 isr0l isr0h isr1l isr1h intno icfg cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr dmrefl dmrefh dmmaskl dmmaskh dmaddrl dmaddrh dmpcl dmpch dma dmc pmpcl0l pmpcl0h pmpcl1l pmpcl1h pmpcc0l pmpcc0h pmpcc1l pmpcc1h pmc plda ppcl ppch msgn msgr msgs msgl msgc msgt msgw msge dirqpcl dirqpch trcen trcrp trcdl trcdh psidl psidh bradfd udid dmsdl dmsdh flst trcc))
      (reg-flag h dst ((0 . 0)))
      (aliases (src (tmp 4)))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 31) (sext (constant ? 16) (tmp 4) (constant ? 32)))
      (set-reg dst (tmp 31))))
  (pattern
    (constraints
      (allocate-in dst (a0g a1g a2g a3g a4g a5g a6g a7g ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 brad0l brad0h brad1l brad1h brlen0 brlen1 bradf0 repc nw lpal lpah cpal cpah iitx nid crev frev hid cdol cdoh cpol cpoh cdll cdlh cpll cplh retpcl retpch pcel pceh bfnl bfnh cmtype predcfg lpmcfg plc bcfg pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc ipl0 ipl1 isr0l isr0h isr1l isr1h intno icfg cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr dmrefl dmrefh dmmaskl dmmaskh dmaddrl dmaddrh dmpcl dmpch dma dmc pmpcl0l pmpcl0h pmpcl1l pmpcl1h pmpcc0l pmpcc0h pmpcc1l pmpcc1h pmc plda ppcl ppch msgn msgr msgs msgl msgc msgt msgw msge dirqpcl dirqpch trcen trcrp trcdl trcdh psidl psidh bradfd udid dmsdl dmsdh flst trcc))
      (allocate-in src (a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 brad0l brad0h brad1l brad1h brlen0 brlen1 bradf0 repc nw lpal lpah cpal cpah iitx nid crev frev hid cdol cdoh cpol cpoh cdll cdlh cpll cplh retpcl retpch pcel pceh bfnl bfnh cmtype predcfg lpmcfg plc bcfg pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc ipl0 ipl1 isr0l isr0h isr1l isr1h intno icfg cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr dmrefl dmrefh dmmaskl dmmaskh dmaddrl dmaddrh dmpcl dmpch dma dmc pmpcl0l pmpcl0h pmpcl1l pmpcl1h pmpcc0l pmpcc0h pmpcc1l pmpcc1h pmc plda ppcl ppch msgn msgr msgs msgl msgc msgt msgw msge dirqpcl dirqpch trcen trcrp trcdl trcdh psidl psidh bradfd udid dmsdl dmsdh flst trcc))
      (aliases (src (tmp 4))))
    (code)))

(instruction
  shft2_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 16) (reg-flag ag dst)))
    (code
      (= (tmp 0) (icmp slt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 4) (lshr (constant ? 16) (tmp 2) (tmp 3)))
      (set-reg (tmp 1) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 6) (reg-range src1 (constant ? 15) (constant ? 31)))
      (= (tmp 7) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 8) (lshr (constant ? 16) (tmp 6) (tmp 7)))
      (set-reg (tmp 5) (tmp 8))
      (br bb_2)
      (label bb_1)
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 10) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 11) (shl (constant ? 16) (tmp 10) src2))
      (set-reg (tmp 9) (tmp 11))
      (= (tmp 12) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 13) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 14) (shl (constant ? 16) (tmp 13) src2))
      (set-reg (tmp 12) (tmp 14))
      (br bb_2)
      (label bb_2)
      (= (tmp 15) (phi ((no-value . bb_0) (no-value . bb_1))))
      (set-reg (tmp 16) (constant ? 0)))))

(instruction
  mv_any16_dp16_nimm13
  (pattern
    (constraints
      (allocate-in src (a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr))
      (allocate-in dpop (dp))
      (aliases (src (tmp 5)))
      (immediate SImm ((-4096 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (store (constant ? 16) ldm (tmp 0) (tmp 5)))))

(instruction
  swapneg2_a40_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 24) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 18) (reg-flag a dst))
      (allocate-in (tmp 25) (reg-flag a dst))
      (allocate-in (tmp 28) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag ex dst))
      (allocate-in (tmp 20) (reg-flag ac dst))
      (allocate-in (tmp 31) (reg-flag mi dst))
      (allocate-in (tmp 22) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (reg-range src2 (constant ? 14) (constant ? 14)))
      (= (tmp 1) (icmp eq (constant ? 1) (tmp 0) (constant ? 1)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (sub (constant ? 8) (constant ? 0) (constant ? 15)))
      (= (tmp 4) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 5) (satsub (tmp 3) (constant ? 0) (tmp 4)))
      (set-reg (tmp 2) (tmp 5))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 7) (reg-range src1 (constant ? 16) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (br bb_2)
      (label bb_2)
      (= (tmp 8) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 9) (reg-range src2 (constant ? 15) (constant ? 15)))
      (= (tmp 10) (icmp eq (constant ? 1) (tmp 9) (constant ? 1)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (= (tmp 11) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 12) (sub (constant ? 8) (constant ? 16) (constant ? 31)))
      (= (tmp 13) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 14) (satsub (tmp 12) (constant ? 0) (tmp 13)))
      (set-reg (tmp 11) (tmp 14))
      (br bb_5)
      (label bb_4)
      (= (tmp 15) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 16) (reg-range src1 (constant ? 0) (constant ? 15)))
      (set-reg (tmp 15) (tmp 16))
      (br bb_5)
      (label bb_5)
      (= (tmp 17) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 19) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 18) (tmp 19))
      (= (tmp 21) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 20) (tmp 21))
      (= (tmp 23) (icmp (constant ? 40) eq (tmp 22) (constant ? 0)))
      (br (tmp 23) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 26) (icmp (constant ? 40) eq (tmp 25) (constant ? -1)))
      (br (tmp 26) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 27) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 28) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 29) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 30) (phi ((no-value . bb_9) ((tmp 29) . bb_10))))
      (= (tmp 32) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 31) (tmp 32)))))

(instruction
  add_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 34) (reg-flag ex dst))
      (allocate-in (tmp 29) (reg-flag a dst))
      (allocate-in (tmp 16) (reg-flag c dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 23) (reg-flag of dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 31) (reg-flag ex dst))
      (allocate-in (tmp 32) (reg-flag a dst))
      (allocate-in (tmp 27) (reg-flag ac dst))
      (allocate-in (tmp 20) (reg-flag of dst))
      (allocate-in (tmp 38) (reg-flag mi dst))
      (allocate-in (tmp 22) (reg-flag of dst))
      (allocate-in (tmp 17) (reg-flag c dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 14) (add (constant ? 40) src1 src2))
      (= (tmp 15) (icmp (constant ? 41) slt (constant ? 0) (tmp 14)))
      (br (tmp 15) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 17) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 18) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 19) (icmp (constant ? 40) slt (tmp 14) src1))
      (br (tmp 19) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 20) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 21) (icmp (constant ? 40) slt (tmp 14) src2))
      (br (tmp 21) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 22) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 23) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 24) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 25) (phi ((no-value . bb_15) ((tmp 24) . bb_16))))
      (= (tmp 26) (add (constant ? 40) src1 src2))
      (set-reg dst (tmp 26))
      (= (tmp 28) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 27) (tmp 28))
      (= (tmp 30) (icmp (constant ? 40) eq (tmp 29) (constant ? 0)))
      (br (tmp 30) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 31) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 33) (icmp (constant ? 40) eq (tmp 32) (constant ? -1)))
      (br (tmp 33) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 34) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 35) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 36) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 37) (phi ((no-value . bb_21) ((tmp 36) . bb_22))))
      (= (tmp 39) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 38) (tmp 39))))
  (pattern
    (constraints
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag of dst))
      (allocate-in (tmp 34) (reg-flag ex dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 31) (reg-flag ex dst))
      (allocate-in (tmp 10) (reg-flag of dst))
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 27) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag of dst))
      (allocate-in (tmp 38) (reg-flag mi dst))
      (allocate-in (tmp 29) (reg-flag a dst))
      (allocate-in (tmp 32) (reg-flag a dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 1) (add (constant ? 32) src1 src2))
      (= (tmp 2) (icmp (constant ? 33) slt (constant ? 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 3) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 4) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 6) (icmp (constant ? 32) slt (tmp 1) src1))
      (br (tmp 6) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 7) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 8) (icmp (constant ? 32) slt (tmp 1) src2))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 10) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 12) (phi ((no-value . bb_6) ((tmp 11) . bb_7))))
      (= (tmp 13) (satadd (constant ? 32) src1 src2))
      (set-reg dst (tmp 13))
      (= (tmp 28) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 27) (tmp 28))
      (= (tmp 30) (icmp (constant ? 40) eq (tmp 29) (constant ? 0)))
      (br (tmp 30) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 31) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 33) (icmp (constant ? 40) eq (tmp 32) (constant ? -1)))
      (br (tmp 33) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 34) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 35) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 36) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 37) (phi ((no-value . bb_21) ((tmp 36) . bb_22))))
      (= (tmp 39) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 38) (tmp 39)))))

(instruction
  addh_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag of dst))
      (allocate-in (tmp 39) (reg-flag ac dst))
      (allocate-in (tmp 25) (reg-flag c dst))
      (allocate-in (tmp 30) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in (tmp 43) (reg-flag ex dst))
      (allocate-in (tmp 24) (reg-flag c dst))
      (allocate-in (tmp 44) (reg-flag a dst))
      (allocate-in (tmp 47) (reg-flag ex dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 32) (reg-flag of dst))
      (allocate-in (tmp 41) (reg-flag a dst)))
    (code
      (= (tmp 20) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 21) (shl (constant ? 40) (tmp 20) (constant ? 16)))
      (= (tmp 22) (add (constant ? 40) (tmp 21) dst))
      (= (tmp 23) (icmp (constant ? 41) slt (constant ? 0) (tmp 22)))
      (br (tmp 23) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 25) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 27) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 28) (shl (constant ? 40) (tmp 27) (constant ? 16)))
      (= (tmp 29) (icmp (constant ? 40) slt (tmp 22) (tmp 28)))
      (br (tmp 29) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 30) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 31) (icmp (constant ? 40) slt (tmp 22) dst))
      (br (tmp 31) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 32) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 33) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 34) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 35) (phi ((no-value . bb_15) ((tmp 34) . bb_16))))
      (= (tmp 36) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 37) (shl (constant ? 40) (tmp 36) (constant ? 16)))
      (= (tmp 38) (add (constant ? 40) (tmp 37) dst))
      (set-reg dst (tmp 38))
      (= (tmp 40) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 39) (tmp 40))
      (= (tmp 42) (icmp (constant ? 40) eq (tmp 41) (constant ? 0)))
      (br (tmp 42) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 43) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? -1)))
      (br (tmp 45) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 47) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 48) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 49) (phi ((no-value . bb_21) ((tmp 48) . bb_22))))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51))))
  (pattern
    (constraints
      (allocate-in (tmp 39) (reg-flag ac dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in (tmp 14) (reg-flag of dst))
      (allocate-in (tmp 44) (reg-flag a dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in (tmp 43) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag of dst))
      (allocate-in (tmp 47) (reg-flag ex dst))
      (allocate-in (tmp 5) (reg-flag c dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 13) (reg-flag of dst))
      (allocate-in (tmp 6) (reg-flag c dst))
      (allocate-in (tmp 41) (reg-flag a dst)))
    (code
      (= (tmp 1) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (add (constant ? 32) (tmp 2) dst))
      (= (tmp 4) (icmp (constant ? 33) slt (constant ? 0) (tmp 3)))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 6) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 8) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 9) (shl (constant ? 40) (tmp 8) (constant ? 16)))
      (= (tmp 10) (icmp (constant ? 32) slt (tmp 3) (tmp 9)))
      (br (tmp 10) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 12) (icmp (constant ? 32) slt (tmp 3) dst))
      (br (tmp 12) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 14) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 15) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) ((tmp 15) . bb_7))))
      (= (tmp 17) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 18) (shl (constant ? 40) (tmp 17) (constant ? 16)))
      (= (tmp 19) (satadd (constant ? 32) (tmp 18) dst))
      (set-reg dst (tmp 19))
      (= (tmp 40) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 39) (tmp 40))
      (= (tmp 42) (icmp (constant ? 40) eq (tmp 41) (constant ? 0)))
      (br (tmp 42) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 43) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? -1)))
      (br (tmp 45) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 47) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 48) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 49) (phi ((no-value . bb_21) ((tmp 48) . bb_22))))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51)))))

(instruction
  mv_dp16_nimm13_any16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in dpop (dp))
      (reg-flag u dst ((1 . 1)))
      (reg-flag l dst ((1 . 1)))
      (immediate SImm ((-4096 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 4) (zext (constant ? 16) (tmp 1) (constant ? 40)))
      (set-reg dst (tmp 4))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in dpop (dp))
      (reg-flag u dst ((0 . 0)))
      (reg-flag l dst ((1 . 1)))
      (immediate SImm ((-4096 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 5) (sext (constant ? 16) (tmp 1) (constant ? 40)))
      (set-reg dst (tmp 5))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in dpop (dp))
      (reg-flag l dst ((0 . 0)))
      (immediate SImm ((-4096 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg dst (tmp 1))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dpop (dp))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 13) (reg-flag al dst))
      (reg-flag h dst ((1 . 1)))
      (immediate SImm ((-4096 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 13) (constant ? 0))
      (= (tmp 18) (zext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 18))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dpop (dp))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 13) (reg-flag al dst))
      (reg-flag h dst ((1 . 1)))
      (immediate SImm ((-4096 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 13) (constant ? 0))
      (= (tmp 19) (sext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 19))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dpop (dp))
      (reg-flag u dst ((1 . 1)))
      (reg-flag h dst ((0 . 0)))
      (immediate SImm ((-4096 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 27) (zext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 27))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dpop (dp))
      (reg-flag u dst ((0 . 0)))
      (reg-flag h dst ((0 . 0)))
      (immediate SImm ((-4096 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 28) (sext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 28))))
  (pattern
    (constraints
      (allocate-in dst (a0g a1g a2g a3g a4g a5g a6g a7g ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr))
      (allocate-in dpop (dp))
      (immediate SImm ((-4096 . 4095))))
    (code
      (= (tmp 34) (add (constant ? 16) dpop SImm))
      (= (tmp 35) (load-mem (constant ? 16) ldm (tmp 34)))
      (set-reg dst (tmp 35)))))

(instruction
  exb_a40_nimm5_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag mi dst))
      (allocate-in (tmp 24) (reg-flag a dst))
      (allocate-in (tmp 34) (reg-flag op dst))
      (immediate UImm ((1 . 31)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 26) (reg-flag ac dst))
      (allocate-in (tmp 32) (reg-flag ls dst))
      (allocate-in (tmp 30) (reg-flag ms dst)))
    (code
      (= (tmp 0) (reg-range src (constant ? 28) (constant ? 28)))
      (= (tmp 1) (icmp (constant ? 1) eq (tmp 0) (constant ? 1)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 3) (sub (constant ? 5) (constant ? 0) UImm))
      (set-reg (tmp 2) (tmp 3))
      (br bb_2)
      (label bb_1)
      (= (tmp 4) (reg-range dst (constant ? 0) (constant ? 7)))
      (set-reg (tmp 4) UImm)
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 6) (reg-range src (constant ? 29) (constant ? 29)))
      (= (tmp 7) (icmp (constant ? 1) eq (tmp 6) (constant ? 1)))
      (br (tmp 7) bb_3 bb_4)
      (label bb_3)
      (= (tmp 8) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 9) (sub (constant ? 5) (constant ? 0) UImm))
      (set-reg (tmp 8) (tmp 9))
      (br bb_5)
      (label bb_4)
      (= (tmp 10) (reg-range dst (constant ? 8) (constant ? 15)))
      (set-reg (tmp 10) UImm)
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 12) (reg-range src (constant ? 30) (constant ? 30)))
      (= (tmp 13) (icmp (constant ? 1) eq (tmp 12) (constant ? 1)))
      (br (tmp 13) bb_6 bb_7)
      (label bb_6)
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 15) (sub (constant ? 5) (constant ? 0) UImm))
      (set-reg (tmp 14) (tmp 15))
      (br bb_8)
      (label bb_7)
      (= (tmp 16) (reg-range dst (constant ? 16) (constant ? 23)))
      (set-reg (tmp 16) UImm)
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 18) (reg-range src (constant ? 31) (constant ? 31)))
      (= (tmp 19) (icmp (constant ? 1) eq (tmp 18) (constant ? 1)))
      (br (tmp 19) bb_9 bb_10)
      (label bb_9)
      (= (tmp 20) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 21) (sub (constant ? 5) (constant ? 0) UImm))
      (set-reg (tmp 20) (tmp 21))
      (br bb_11)
      (label bb_10)
      (= (tmp 22) (reg-range dst (constant ? 24) (constant ? 31)))
      (set-reg (tmp 22) UImm)
      (br bb_11)
      (label bb_11)
      (= (tmp 23) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 25) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 24) (tmp 25))
      (= (tmp 27) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 26) (tmp 27))
      (= (tmp 29) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 28) (tmp 29))
      (= (tmp 31) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 30) (tmp 31))
      (= (tmp 33) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 32) (tmp 33))
      (= (tmp 35) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 35) bb_12 bb_13)
      (label bb_12)
      (br bb_14)
      (label bb_13)
      (br bb_14)
      (label bb_14)
      (= (tmp 36) (phi (((constant ? 1) . bb_12) ((constant ? 0) . bb_13))))
      (set-reg (tmp 34) (tmp 36)))))

(instruction
  ctp16_a40_a16l
  (pattern
    (constraints
      (allocate-in dst (a1h a2h a3h a0l a1l a2l a3l a0h))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code)))

(instruction
  ctp16_a40_a16h
  (pattern
    (constraints
      (allocate-in dst (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code)))

(instruction
  ptc16_a16l_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a1h a2h a3h a0l a1l a2l a3l a0h)))
    (code)))

(instruction
  ptc16_a16h_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a4h a5h a6h a7h a4l a5l a6l a7l)))
    (code)))

(instruction
  popcnt_a40_a16l
  (pattern
    (constraints
      (allocate-in dst (a1h a2h a3h a0l a1l a2l a3l a0h))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 94) (reg-flag ac dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 30) (constant ? 30)))
      (= (tmp 1) (zext (constant ? 1) (tmp 0) (constant ? 32)))
      (= (tmp 2) (reg-range dst (constant ? 29) (constant ? 29)))
      (= (tmp 3) (zext (constant ? 1) (tmp 2) (constant ? 32)))
      (= (tmp 4) (reg-range dst (constant ? 28) (constant ? 28)))
      (= (tmp 5) (zext (constant ? 1) (tmp 4) (constant ? 32)))
      (= (tmp 6) (reg-range dst (constant ? 27) (constant ? 27)))
      (= (tmp 7) (zext (constant ? 1) (tmp 6) (constant ? 32)))
      (= (tmp 8) (reg-range dst (constant ? 26) (constant ? 26)))
      (= (tmp 9) (zext (constant ? 1) (tmp 8) (constant ? 32)))
      (= (tmp 10) (reg-range dst (constant ? 25) (constant ? 25)))
      (= (tmp 11) (zext (constant ? 1) (tmp 10) (constant ? 32)))
      (= (tmp 12) (reg-range dst (constant ? 24) (constant ? 24)))
      (= (tmp 13) (zext (constant ? 1) (tmp 12) (constant ? 32)))
      (= (tmp 14) (reg-range dst (constant ? 23) (constant ? 23)))
      (= (tmp 15) (zext (constant ? 1) (tmp 14) (constant ? 32)))
      (= (tmp 16) (reg-range dst (constant ? 22) (constant ? 22)))
      (= (tmp 17) (zext (constant ? 1) (tmp 16) (constant ? 32)))
      (= (tmp 18) (reg-range dst (constant ? 21) (constant ? 21)))
      (= (tmp 19) (zext (constant ? 1) (tmp 18) (constant ? 32)))
      (= (tmp 20) (reg-range dst (constant ? 20) (constant ? 20)))
      (= (tmp 21) (zext (constant ? 1) (tmp 20) (constant ? 32)))
      (= (tmp 22) (reg-range dst (constant ? 19) (constant ? 19)))
      (= (tmp 23) (zext (constant ? 1) (tmp 22) (constant ? 32)))
      (= (tmp 24) (reg-range dst (constant ? 18) (constant ? 18)))
      (= (tmp 25) (zext (constant ? 1) (tmp 24) (constant ? 32)))
      (= (tmp 26) (reg-range dst (constant ? 17) (constant ? 17)))
      (= (tmp 27) (zext (constant ? 1) (tmp 26) (constant ? 32)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 16)))
      (= (tmp 29) (zext (constant ? 1) (tmp 28) (constant ? 32)))
      (= (tmp 30) (reg-range dst (constant ? 15) (constant ? 15)))
      (= (tmp 31) (zext (constant ? 1) (tmp 30) (constant ? 32)))
      (= (tmp 32) (reg-range dst (constant ? 14) (constant ? 14)))
      (= (tmp 33) (zext (constant ? 1) (tmp 32) (constant ? 32)))
      (= (tmp 34) (reg-range dst (constant ? 13) (constant ? 13)))
      (= (tmp 35) (zext (constant ? 1) (tmp 34) (constant ? 32)))
      (= (tmp 36) (reg-range dst (constant ? 12) (constant ? 12)))
      (= (tmp 37) (zext (constant ? 1) (tmp 36) (constant ? 32)))
      (= (tmp 38) (reg-range dst (constant ? 11) (constant ? 11)))
      (= (tmp 39) (zext (constant ? 1) (tmp 38) (constant ? 32)))
      (= (tmp 40) (reg-range dst (constant ? 10) (constant ? 10)))
      (= (tmp 41) (zext (constant ? 1) (tmp 40) (constant ? 32)))
      (= (tmp 42) (reg-range dst (constant ? 9) (constant ? 9)))
      (= (tmp 43) (zext (constant ? 1) (tmp 42) (constant ? 32)))
      (= (tmp 44) (reg-range dst (constant ? 8) (constant ? 8)))
      (= (tmp 45) (zext (constant ? 1) (tmp 44) (constant ? 32)))
      (= (tmp 46) (reg-range dst (constant ? 7) (constant ? 7)))
      (= (tmp 47) (zext (constant ? 1) (tmp 46) (constant ? 32)))
      (= (tmp 48) (reg-range dst (constant ? 6) (constant ? 6)))
      (= (tmp 49) (zext (constant ? 1) (tmp 48) (constant ? 32)))
      (= (tmp 50) (reg-range dst (constant ? 5) (constant ? 5)))
      (= (tmp 51) (zext (constant ? 1) (tmp 50) (constant ? 32)))
      (= (tmp 52) (reg-range dst (constant ? 4) (constant ? 4)))
      (= (tmp 53) (zext (constant ? 1) (tmp 52) (constant ? 32)))
      (= (tmp 54) (reg-range dst (constant ? 3) (constant ? 3)))
      (= (tmp 55) (zext (constant ? 1) (tmp 54) (constant ? 32)))
      (= (tmp 56) (reg-range dst (constant ? 2) (constant ? 2)))
      (= (tmp 57) (zext (constant ? 1) (tmp 56) (constant ? 32)))
      (= (tmp 58) (reg-range dst (constant ? 1) (constant ? 1)))
      (= (tmp 59) (zext (constant ? 1) (tmp 58) (constant ? 32)))
      (= (tmp 60) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 61) (zext (constant ? 1) (tmp 60) (constant ? 32)))
      (= (tmp 62) (reg-range dst (constant ? 31) (constant ? 31)))
      (= (tmp 63) (add (constant ? 32) (tmp 61) (tmp 62)))
      (= (tmp 64) (add (constant ? 32) (tmp 59) (tmp 63)))
      (= (tmp 65) (add (constant ? 32) (tmp 57) (tmp 64)))
      (= (tmp 66) (add (constant ? 32) (tmp 55) (tmp 65)))
      (= (tmp 67) (add (constant ? 32) (tmp 53) (tmp 66)))
      (= (tmp 68) (add (constant ? 32) (tmp 51) (tmp 67)))
      (= (tmp 69) (add (constant ? 32) (tmp 49) (tmp 68)))
      (= (tmp 70) (add (constant ? 32) (tmp 47) (tmp 69)))
      (= (tmp 71) (add (constant ? 32) (tmp 45) (tmp 70)))
      (= (tmp 72) (add (constant ? 32) (tmp 43) (tmp 71)))
      (= (tmp 73) (add (constant ? 32) (tmp 41) (tmp 72)))
      (= (tmp 74) (add (constant ? 32) (tmp 39) (tmp 73)))
      (= (tmp 75) (add (constant ? 32) (tmp 37) (tmp 74)))
      (= (tmp 76) (add (constant ? 32) (tmp 35) (tmp 75)))
      (= (tmp 77) (add (constant ? 32) (tmp 33) (tmp 76)))
      (= (tmp 78) (add (constant ? 32) (tmp 31) (tmp 77)))
      (= (tmp 79) (add (constant ? 32) (tmp 29) (tmp 78)))
      (= (tmp 80) (add (constant ? 32) (tmp 27) (tmp 79)))
      (= (tmp 81) (add (constant ? 32) (tmp 25) (tmp 80)))
      (= (tmp 82) (add (constant ? 32) (tmp 23) (tmp 81)))
      (= (tmp 83) (add (constant ? 32) (tmp 21) (tmp 82)))
      (= (tmp 84) (add (constant ? 32) (tmp 19) (tmp 83)))
      (= (tmp 85) (add (constant ? 32) (tmp 17) (tmp 84)))
      (= (tmp 86) (add (constant ? 32) (tmp 15) (tmp 85)))
      (= (tmp 87) (add (constant ? 32) (tmp 13) (tmp 86)))
      (= (tmp 88) (add (constant ? 32) (tmp 11) (tmp 87)))
      (= (tmp 89) (add (constant ? 32) (tmp 9) (tmp 88)))
      (= (tmp 90) (add (constant ? 32) (tmp 7) (tmp 89)))
      (= (tmp 91) (add (constant ? 32) (tmp 5) (tmp 90)))
      (= (tmp 92) (add (constant ? 32) (tmp 3) (tmp 91)))
      (= (tmp 93) (add (constant ? 32) (tmp 1) (tmp 92)))
      (set-reg dst (tmp 93))
      (= (tmp 95) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 94) (tmp 95)))))

(instruction
  mv_any16_r16++
  (pattern
    (constraints
      (allocate-in src (ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll tnr cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 tval tref tconfig2 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 2) (reg-flag z rN)))
    (code
      (store (constant ? 16) ldm rN src)
      (= (tmp 1) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 2) (tmp 4)))))

(instruction
  shft2_a40_nimm6_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag ag dst))
      (immediate SImm ((1 . 16))))
    (code
      (= (tmp 1) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 2) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 3) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 4) (lshr (constant ? 16) (tmp 2) (tmp 3)))
      (set-reg (tmp 1) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 6) (reg-range src (constant ? 15) (constant ? 31)))
      (= (tmp 7) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 8) (lshr (constant ? 16) (tmp 6) (tmp 7)))
      (set-reg (tmp 5) (tmp 8))
      (set-reg (tmp 15) (constant ? 0)))))

(instruction
  neg_a16_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 17) (reg-flag a dst))
      (allocate-in (tmp 19) (reg-flag ex dst))
      (allocate-in (tmp 2) (reg-flag of dst))
      (allocate-in (tmp 4) (reg-flag of dst))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 23) (reg-flag mi dst))
      (allocate-in (tmp 16) (reg-flag ex dst))
      (allocate-in (tmp 12) (reg-flag ac dst))
      (allocate-in (tmp 14) (reg-flag a dst))
      (allocate-in (tmp 20) (reg-flag ex dst)))
    (code
      (= (tmp 0) (sub (constant ? 16) (constant ? 0) src))
      (= (tmp 1) (icmp (constant ? 16) sgt (tmp 0) (constant ? 0)))
      (br (tmp 1) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 3) (icmp (constant ? 16) sgt (tmp 0) src))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 5) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 6) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 7) (phi ((no-value . bb_3) ((tmp 6) . bb_4))))
      (= (tmp 8) (satsub (constant ? 16) (constant ? 0) src))
      (set-reg dst (tmp 8))
      (= (tmp 13) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (icmp (constant ? 40) eq (tmp 14) (constant ? 0)))
      (br (tmp 15) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 18) (icmp (constant ? 40) eq (tmp 17) (constant ? -1)))
      (br (tmp 18) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 19) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 20) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 21) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 22) (phi ((no-value . bb_9) ((tmp 21) . bb_10))))
      (= (tmp 24) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 23) (tmp 24))))
  (pattern
    (constraints
      (allocate-in (tmp 4) (reg-flag of dst))
      (allocate-in (tmp 2) (reg-flag of dst))
      (allocate-in (tmp 14) (reg-flag a dst))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in (tmp 23) (reg-flag mi dst))
      (allocate-in (tmp 17) (reg-flag a dst))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in (tmp 19) (reg-flag ex dst))
      (allocate-in (tmp 20) (reg-flag ex dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 16) (reg-flag ex dst))
      (allocate-in (tmp 12) (reg-flag ac dst)))
    (code
      (= (tmp 0) (sub (constant ? 16) (constant ? 0) src))
      (= (tmp 1) (icmp (constant ? 16) sgt (tmp 0) (constant ? 0)))
      (br (tmp 1) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 3) (icmp (constant ? 16) sgt (tmp 0) src))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 5) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 6) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 7) (phi ((no-value . bb_3) ((tmp 6) . bb_4))))
      (= (tmp 8) (satsub (constant ? 16) (constant ? 0) src))
      (set-reg dst (tmp 8))
      (= (tmp 10) (reg-range (tmp 9) (constant ? 16) (constant ? 39)))
      (= (tmp 11) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (icmp (constant ? 40) eq (tmp 14) (constant ? 0)))
      (br (tmp 15) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 18) (icmp (constant ? 40) eq (tmp 17) (constant ? -1)))
      (br (tmp 18) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 19) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 20) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 21) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 22) (phi ((no-value . bb_9) ((tmp 21) . bb_10))))
      (= (tmp 24) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 23) (tmp 24)))))

(instruction
  popcnt_a40_a16h
  (pattern
    (constraints
      (allocate-in dst (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 94) (reg-flag ac dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 30) (constant ? 30)))
      (= (tmp 1) (zext (constant ? 1) (tmp 0) (constant ? 32)))
      (= (tmp 2) (reg-range dst (constant ? 29) (constant ? 29)))
      (= (tmp 3) (zext (constant ? 1) (tmp 2) (constant ? 32)))
      (= (tmp 4) (reg-range dst (constant ? 28) (constant ? 28)))
      (= (tmp 5) (zext (constant ? 1) (tmp 4) (constant ? 32)))
      (= (tmp 6) (reg-range dst (constant ? 27) (constant ? 27)))
      (= (tmp 7) (zext (constant ? 1) (tmp 6) (constant ? 32)))
      (= (tmp 8) (reg-range dst (constant ? 26) (constant ? 26)))
      (= (tmp 9) (zext (constant ? 1) (tmp 8) (constant ? 32)))
      (= (tmp 10) (reg-range dst (constant ? 25) (constant ? 25)))
      (= (tmp 11) (zext (constant ? 1) (tmp 10) (constant ? 32)))
      (= (tmp 12) (reg-range dst (constant ? 24) (constant ? 24)))
      (= (tmp 13) (zext (constant ? 1) (tmp 12) (constant ? 32)))
      (= (tmp 14) (reg-range dst (constant ? 23) (constant ? 23)))
      (= (tmp 15) (zext (constant ? 1) (tmp 14) (constant ? 32)))
      (= (tmp 16) (reg-range dst (constant ? 22) (constant ? 22)))
      (= (tmp 17) (zext (constant ? 1) (tmp 16) (constant ? 32)))
      (= (tmp 18) (reg-range dst (constant ? 21) (constant ? 21)))
      (= (tmp 19) (zext (constant ? 1) (tmp 18) (constant ? 32)))
      (= (tmp 20) (reg-range dst (constant ? 20) (constant ? 20)))
      (= (tmp 21) (zext (constant ? 1) (tmp 20) (constant ? 32)))
      (= (tmp 22) (reg-range dst (constant ? 19) (constant ? 19)))
      (= (tmp 23) (zext (constant ? 1) (tmp 22) (constant ? 32)))
      (= (tmp 24) (reg-range dst (constant ? 18) (constant ? 18)))
      (= (tmp 25) (zext (constant ? 1) (tmp 24) (constant ? 32)))
      (= (tmp 26) (reg-range dst (constant ? 17) (constant ? 17)))
      (= (tmp 27) (zext (constant ? 1) (tmp 26) (constant ? 32)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 16)))
      (= (tmp 29) (zext (constant ? 1) (tmp 28) (constant ? 32)))
      (= (tmp 30) (reg-range dst (constant ? 15) (constant ? 15)))
      (= (tmp 31) (zext (constant ? 1) (tmp 30) (constant ? 32)))
      (= (tmp 32) (reg-range dst (constant ? 14) (constant ? 14)))
      (= (tmp 33) (zext (constant ? 1) (tmp 32) (constant ? 32)))
      (= (tmp 34) (reg-range dst (constant ? 13) (constant ? 13)))
      (= (tmp 35) (zext (constant ? 1) (tmp 34) (constant ? 32)))
      (= (tmp 36) (reg-range dst (constant ? 12) (constant ? 12)))
      (= (tmp 37) (zext (constant ? 1) (tmp 36) (constant ? 32)))
      (= (tmp 38) (reg-range dst (constant ? 11) (constant ? 11)))
      (= (tmp 39) (zext (constant ? 1) (tmp 38) (constant ? 32)))
      (= (tmp 40) (reg-range dst (constant ? 10) (constant ? 10)))
      (= (tmp 41) (zext (constant ? 1) (tmp 40) (constant ? 32)))
      (= (tmp 42) (reg-range dst (constant ? 9) (constant ? 9)))
      (= (tmp 43) (zext (constant ? 1) (tmp 42) (constant ? 32)))
      (= (tmp 44) (reg-range dst (constant ? 8) (constant ? 8)))
      (= (tmp 45) (zext (constant ? 1) (tmp 44) (constant ? 32)))
      (= (tmp 46) (reg-range dst (constant ? 7) (constant ? 7)))
      (= (tmp 47) (zext (constant ? 1) (tmp 46) (constant ? 32)))
      (= (tmp 48) (reg-range dst (constant ? 6) (constant ? 6)))
      (= (tmp 49) (zext (constant ? 1) (tmp 48) (constant ? 32)))
      (= (tmp 50) (reg-range dst (constant ? 5) (constant ? 5)))
      (= (tmp 51) (zext (constant ? 1) (tmp 50) (constant ? 32)))
      (= (tmp 52) (reg-range dst (constant ? 4) (constant ? 4)))
      (= (tmp 53) (zext (constant ? 1) (tmp 52) (constant ? 32)))
      (= (tmp 54) (reg-range dst (constant ? 3) (constant ? 3)))
      (= (tmp 55) (zext (constant ? 1) (tmp 54) (constant ? 32)))
      (= (tmp 56) (reg-range dst (constant ? 2) (constant ? 2)))
      (= (tmp 57) (zext (constant ? 1) (tmp 56) (constant ? 32)))
      (= (tmp 58) (reg-range dst (constant ? 1) (constant ? 1)))
      (= (tmp 59) (zext (constant ? 1) (tmp 58) (constant ? 32)))
      (= (tmp 60) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 61) (zext (constant ? 1) (tmp 60) (constant ? 32)))
      (= (tmp 62) (reg-range dst (constant ? 31) (constant ? 31)))
      (= (tmp 63) (add (constant ? 32) (tmp 61) (tmp 62)))
      (= (tmp 64) (add (constant ? 32) (tmp 59) (tmp 63)))
      (= (tmp 65) (add (constant ? 32) (tmp 57) (tmp 64)))
      (= (tmp 66) (add (constant ? 32) (tmp 55) (tmp 65)))
      (= (tmp 67) (add (constant ? 32) (tmp 53) (tmp 66)))
      (= (tmp 68) (add (constant ? 32) (tmp 51) (tmp 67)))
      (= (tmp 69) (add (constant ? 32) (tmp 49) (tmp 68)))
      (= (tmp 70) (add (constant ? 32) (tmp 47) (tmp 69)))
      (= (tmp 71) (add (constant ? 32) (tmp 45) (tmp 70)))
      (= (tmp 72) (add (constant ? 32) (tmp 43) (tmp 71)))
      (= (tmp 73) (add (constant ? 32) (tmp 41) (tmp 72)))
      (= (tmp 74) (add (constant ? 32) (tmp 39) (tmp 73)))
      (= (tmp 75) (add (constant ? 32) (tmp 37) (tmp 74)))
      (= (tmp 76) (add (constant ? 32) (tmp 35) (tmp 75)))
      (= (tmp 77) (add (constant ? 32) (tmp 33) (tmp 76)))
      (= (tmp 78) (add (constant ? 32) (tmp 31) (tmp 77)))
      (= (tmp 79) (add (constant ? 32) (tmp 29) (tmp 78)))
      (= (tmp 80) (add (constant ? 32) (tmp 27) (tmp 79)))
      (= (tmp 81) (add (constant ? 32) (tmp 25) (tmp 80)))
      (= (tmp 82) (add (constant ? 32) (tmp 23) (tmp 81)))
      (= (tmp 83) (add (constant ? 32) (tmp 21) (tmp 82)))
      (= (tmp 84) (add (constant ? 32) (tmp 19) (tmp 83)))
      (= (tmp 85) (add (constant ? 32) (tmp 17) (tmp 84)))
      (= (tmp 86) (add (constant ? 32) (tmp 15) (tmp 85)))
      (= (tmp 87) (add (constant ? 32) (tmp 13) (tmp 86)))
      (= (tmp 88) (add (constant ? 32) (tmp 11) (tmp 87)))
      (= (tmp 89) (add (constant ? 32) (tmp 9) (tmp 88)))
      (= (tmp 90) (add (constant ? 32) (tmp 7) (tmp 89)))
      (= (tmp 91) (add (constant ? 32) (tmp 5) (tmp 90)))
      (= (tmp 92) (add (constant ? 32) (tmp 3) (tmp 91)))
      (= (tmp 93) (add (constant ? 32) (tmp 1) (tmp 92)))
      (set-reg dst (tmp 93))
      (= (tmp 95) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 94) (tmp 95)))))

(instruction
  mv_any16_r16--
  (pattern
    (constraints
      (allocate-in src (ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll tnr cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 tval tref tconfig2 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 2) (reg-flag z rN)))
    (code
      (store (constant ? 16) ldm rN src)
      (= (tmp 1) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 2) (tmp 4)))))

(instruction
  exb_a40_a16h_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag a dst))
      (allocate-in (tmp 36) (reg-flag ls dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 30) (reg-flag ac dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 38) (reg-flag op dst))
      (allocate-in (tmp 34) (reg-flag ms dst))
      (allocate-in (tmp 32) (reg-flag mi dst))
      (allocate-in src2 (a4h a5h a6h a7h a4l a5l a6l a7l)))
    (code
      (= (tmp 0) (reg-range src1 (constant ? 28) (constant ? 28)))
      (= (tmp 1) (icmp (constant ? 1) eq (tmp 0) (constant ? 1)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 3) (reg-range src2 (constant ? 8) (constant ? 15)))
      (set-reg (tmp 2) (tmp 3))
      (br bb_2)
      (label bb_1)
      (= (tmp 4) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 7)))
      (set-reg (tmp 4) (tmp 5))
      (br bb_2)
      (label bb_2)
      (= (tmp 6) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (reg-range src1 (constant ? 29) (constant ? 29)))
      (= (tmp 8) (icmp (constant ? 1) eq (tmp 7) (constant ? 1)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (= (tmp 9) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 10) (reg-range src2 (constant ? 8) (constant ? 15)))
      (set-reg (tmp 9) (tmp 10))
      (br bb_5)
      (label bb_4)
      (= (tmp 11) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 12) (reg-range src2 (constant ? 0) (constant ? 7)))
      (set-reg (tmp 11) (tmp 12))
      (br bb_5)
      (label bb_5)
      (= (tmp 13) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 14) (reg-range src1 (constant ? 30) (constant ? 30)))
      (= (tmp 15) (icmp (constant ? 1) eq (tmp 14) (constant ? 1)))
      (br (tmp 15) bb_6 bb_7)
      (label bb_6)
      (= (tmp 16) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 17) (reg-range src2 (constant ? 8) (constant ? 15)))
      (set-reg (tmp 16) (tmp 17))
      (br bb_8)
      (label bb_7)
      (= (tmp 18) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 19) (reg-range src2 (constant ? 0) (constant ? 7)))
      (set-reg (tmp 18) (tmp 19))
      (br bb_8)
      (label bb_8)
      (= (tmp 20) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 21) (reg-range src1 (constant ? 31) (constant ? 31)))
      (= (tmp 22) (icmp (constant ? 1) eq (tmp 21) (constant ? 1)))
      (br (tmp 22) bb_9 bb_10)
      (label bb_9)
      (= (tmp 23) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 24) (reg-range src2 (constant ? 8) (constant ? 15)))
      (set-reg (tmp 23) (tmp 24))
      (br bb_11)
      (label bb_10)
      (= (tmp 25) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 26) (reg-range src2 (constant ? 0) (constant ? 7)))
      (set-reg (tmp 25) (tmp 26))
      (br bb_11)
      (label bb_11)
      (= (tmp 27) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 28) (tmp 29))
      (= (tmp 31) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 30) (tmp 31))
      (= (tmp 33) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 32) (tmp 33))
      (= (tmp 35) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 34) (tmp 35))
      (= (tmp 37) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 36) (tmp 37))
      (= (tmp 39) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 39) bb_12 bb_13)
      (label bb_12)
      (br bb_14)
      (label bb_13)
      (br bb_14)
      (label bb_14)
      (= (tmp 40) (phi (((constant ? 1) . bb_12) ((constant ? 0) . bb_13))))
      (set-reg (tmp 38) (tmp 40)))))

(instruction
  add_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag of dst))
      (allocate-in (tmp 33) (reg-flag ac dst))
      (allocate-in (tmp 25) (reg-flag of dst))
      (allocate-in (tmp 35) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 21) (reg-flag c dst))
      (allocate-in (tmp 40) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag of dst))
      (allocate-in (tmp 20) (reg-flag c dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 37) (reg-flag ex dst))
      (allocate-in (tmp 38) (reg-flag a dst))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 17) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 18) (add (constant ? 40) (tmp 17) dst))
      (= (tmp 19) (icmp (constant ? 41) slt (constant ? 0) (tmp 18)))
      (br (tmp 19) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 20) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 21) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 22) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 23) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 24) (icmp (constant ? 40) slt (tmp 18) (tmp 23)))
      (br (tmp 24) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 25) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 26) (icmp (constant ? 40) slt (tmp 18) dst))
      (br (tmp 26) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 27) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 28) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 29) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 30) (phi ((no-value . bb_15) ((tmp 29) . bb_16))))
      (= (tmp 31) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 32) (add (constant ? 40) (tmp 31) dst))
      (set-reg dst (tmp 32))
      (= (tmp 34) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 33) (tmp 34))
      (= (tmp 36) (icmp (constant ? 40) eq (tmp 35) (constant ? 0)))
      (br (tmp 36) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 37) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 39) (icmp (constant ? 40) eq (tmp 38) (constant ? -1)))
      (br (tmp 39) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 41) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 42) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 43) (phi ((no-value . bb_21) ((tmp 42) . bb_22))))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45))))
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 35) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 9) (reg-flag of dst))
      (allocate-in (tmp 12) (reg-flag of dst))
      (allocate-in (tmp 11) (reg-flag of dst))
      (allocate-in (tmp 40) (reg-flag ex dst))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 5) (reg-flag c dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 37) (reg-flag ex dst))
      (allocate-in (tmp 38) (reg-flag a dst))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 1) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (add (constant ? 32) (tmp 1) dst))
      (= (tmp 3) (icmp (constant ? 33) slt (constant ? 0) (tmp 2)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 5) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 6) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 8) (icmp (constant ? 32) slt (tmp 2) (tmp 7)))
      (br (tmp 8) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 10) (icmp (constant ? 32) slt (tmp 2) dst))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 12) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 13) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) ((tmp 13) . bb_7))))
      (= (tmp 15) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 16) (satadd (constant ? 32) (tmp 15) dst))
      (set-reg dst (tmp 16))
      (= (tmp 34) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 33) (tmp 34))
      (= (tmp 36) (icmp (constant ? 40) eq (tmp 35) (constant ? 0)))
      (br (tmp 36) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 37) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 39) (icmp (constant ? 40) eq (tmp 38) (constant ? -1)))
      (br (tmp 39) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 41) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 42) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 43) (phi ((no-value . bb_21) ((tmp 42) . bb_22))))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45)))))

(instruction
  neg4_a40_a16h_a40
  (pattern
    (constraints
      (allocate-in (tmp 40) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in (tmp 42) (reg-flag ex dst))
      (allocate-in (tmp 49) (reg-flag mi dst))
      (allocate-in (tmp 36) (reg-flag a dst))
      (allocate-in (tmp 45) (reg-flag ex dst))
      (allocate-in (tmp 38) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in (tmp 43) (reg-flag a dst)))
    (code
      (= (tmp 0) (reg-range src2 (constant ? 12) (constant ? 12)))
      (= (tmp 1) (icmp eq (constant ? 1) (tmp 0) (constant ? 1)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 3) (sub (constant ? 8) (constant ? 0) (constant ? 7)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 5) (satsub (tmp 3) (constant ? 0) (tmp 4)))
      (set-reg (tmp 2) (tmp 5))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 7) (reg-range src1 (constant ? 0) (constant ? 7)))
      (set-reg (tmp 6) (tmp 7))
      (br bb_2)
      (label bb_2)
      (= (tmp 8) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 9) (reg-range src2 (constant ? 13) (constant ? 13)))
      (= (tmp 10) (icmp eq (constant ? 1) (tmp 9) (constant ? 1)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (= (tmp 11) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 12) (sub (constant ? 8) (constant ? 8) (constant ? 15)))
      (= (tmp 13) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 14) (satsub (tmp 12) (constant ? 0) (tmp 13)))
      (set-reg (tmp 11) (tmp 14))
      (br bb_5)
      (label bb_4)
      (= (tmp 15) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 16) (reg-range src1 (constant ? 8) (constant ? 15)))
      (set-reg (tmp 15) (tmp 16))
      (br bb_5)
      (label bb_5)
      (= (tmp 17) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 18) (reg-range src2 (constant ? 14) (constant ? 14)))
      (= (tmp 19) (icmp eq (constant ? 1) (tmp 18) (constant ? 1)))
      (br (tmp 19) bb_6 bb_7)
      (label bb_6)
      (= (tmp 20) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 21) (sub (constant ? 8) (constant ? 16) (constant ? 23)))
      (= (tmp 22) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 23) (satsub (tmp 21) (constant ? 0) (tmp 22)))
      (set-reg (tmp 20) (tmp 23))
      (br bb_8)
      (label bb_7)
      (= (tmp 24) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 25) (reg-range src1 (constant ? 16) (constant ? 23)))
      (set-reg (tmp 24) (tmp 25))
      (br bb_8)
      (label bb_8)
      (= (tmp 26) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 27) (reg-range src2 (constant ? 15) (constant ? 15)))
      (= (tmp 28) (icmp eq (constant ? 1) (tmp 27) (constant ? 1)))
      (br (tmp 28) bb_9 bb_10)
      (label bb_9)
      (= (tmp 29) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 30) (sub (constant ? 8) (constant ? 24) (constant ? 31)))
      (= (tmp 31) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 32) (satsub (tmp 30) (constant ? 0) (tmp 31)))
      (set-reg (tmp 29) (tmp 32))
      (br bb_11)
      (label bb_10)
      (= (tmp 33) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 34) (reg-range src1 (constant ? 24) (constant ? 31)))
      (set-reg (tmp 33) (tmp 34))
      (br bb_11)
      (label bb_11)
      (= (tmp 35) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 37) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 36) (tmp 37))
      (= (tmp 39) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 38) (tmp 39))
      (= (tmp 41) (icmp (constant ? 40) eq (tmp 40) (constant ? 0)))
      (br (tmp 41) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 42) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 44) (icmp (constant ? 40) eq (tmp 43) (constant ? -1)))
      (br (tmp 44) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 45) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 46) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 47) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 48) (phi ((no-value . bb_15) ((tmp 47) . bb_16))))
      (= (tmp 50) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 49) (tmp 50)))))

(instruction
  subabs4_a40_a40_a16l
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 2) (icmp lt (constant ? 8) (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= (tmp 3) (sub (constant ? 8) (tmp 1) (tmp 0)))
      (br bb_2)
      (label bb_1)
      (= (tmp 4) (sub (constant ? 8) (tmp 0) (tmp 1)))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi (((tmp 3) . bb_0) ((tmp 4) . bb_1))))
      (= (tmp 6) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 7) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 8) (icmp lt (constant ? 8) (tmp 6) (tmp 7)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (= (tmp 9) (sub (constant ? 8) (tmp 7) (tmp 6)))
      (br bb_5)
      (label bb_4)
      (= (tmp 10) (sub (constant ? 8) (tmp 6) (tmp 7)))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi (((tmp 9) . bb_3) ((tmp 10) . bb_4))))
      (= (tmp 12) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 13) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 14) (icmp lt (constant ? 8) (tmp 12) (tmp 13)))
      (br (tmp 14) bb_6 bb_7)
      (label bb_6)
      (= (tmp 15) (sub (constant ? 8) (tmp 13) (tmp 12)))
      (br bb_8)
      (label bb_7)
      (= (tmp 16) (sub (constant ? 8) (tmp 12) (tmp 13)))
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi (((tmp 15) . bb_6) ((tmp 16) . bb_7))))
      (= (tmp 18) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 19) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 20) (icmp lt (constant ? 8) (tmp 18) (tmp 19)))
      (br (tmp 20) bb_9 bb_10)
      (label bb_9)
      (= (tmp 21) (sub (constant ? 8) (tmp 19) (tmp 18)))
      (br bb_11)
      (label bb_10)
      (= (tmp 22) (sub (constant ? 8) (tmp 18) (tmp 19)))
      (br bb_11)
      (label bb_11)
      (= (tmp 23) (phi (((tmp 21) . bb_9) ((tmp 22) . bb_10))))
      (= (tmp 24) (add (constant ? 16) (tmp 17) (tmp 23)))
      (= (tmp 25) (add (constant ? 16) (tmp 11) (tmp 24)))
      (= (tmp 26) (add (constant ? 16) (tmp 5) (tmp 25)))
      (set-reg dst (tmp 26)))))

(instruction
  mv_any16_r16++Imm
  (pattern
    (constraints
      (allocate-in src (ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll tnr cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 tval tref tconfig2 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 2) (reg-flag z rN))
      (immediate UImm ((1 . 15))))
    (code
      (store (constant ? 16) ldm rN src)
      (= (tmp 1) (add (constant ? 16) rN UImm))
      (set-reg rN (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 2) (tmp 4)))))

(instruction
  neg_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 10) (reg-flag ex dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 9) (reg-flag ex dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in (tmp 13) (reg-flag mi dst))
      (allocate-in (tmp 6) (reg-flag ex dst)))
    (code
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 1) (sub (constant ? 40) (constant ? 0) (tmp 0)))
      (set-reg dst (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (icmp (constant ? 40) eq (tmp 4) (constant ? 0)))
      (br (tmp 5) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 6) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 8) (icmp (constant ? 40) eq (tmp 7) (constant ? -1)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 10) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 13) (tmp 14)))))

(instruction
  add_nimm5_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag of dst))
      (allocate-in (tmp 24) (reg-flag of dst))
      (allocate-in (tmp 33) (reg-flag ac dst))
      (allocate-in (tmp 35) (reg-flag a dst))
      (immediate UImm ((1 . 32)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 21) (reg-flag c dst))
      (allocate-in (tmp 40) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag of dst))
      (allocate-in (tmp 20) (reg-flag c dst))
      (allocate-in (tmp 37) (reg-flag ex dst))
      (allocate-in (tmp 38) (reg-flag a dst))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 17) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 18) (add (constant ? 40) dst (tmp 17)))
      (= (tmp 19) (icmp (constant ? 41) slt (constant ? 0) (tmp 18)))
      (br (tmp 19) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 20) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 21) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 22) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 23) (icmp (constant ? 40) slt (tmp 18) dst))
      (br (tmp 23) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 25) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 26) (icmp (constant ? 40) slt (tmp 18) (tmp 25)))
      (br (tmp 26) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 27) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 28) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 29) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 30) (phi ((no-value . bb_15) ((tmp 29) . bb_16))))
      (= (tmp 31) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 32) (add (constant ? 40) dst (tmp 31)))
      (set-reg dst (tmp 32))
      (= (tmp 34) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 33) (tmp 34))
      (= (tmp 36) (icmp (constant ? 40) eq (tmp 35) (constant ? 0)))
      (br (tmp 36) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 37) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 39) (icmp (constant ? 40) eq (tmp 38) (constant ? -1)))
      (br (tmp 39) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 41) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 42) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 43) (phi ((no-value . bb_21) ((tmp 42) . bb_22))))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45))))
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 35) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate UImm ((1 . 32)))
      (allocate-in (tmp 12) (reg-flag of dst))
      (allocate-in (tmp 11) (reg-flag of dst))
      (allocate-in (tmp 40) (reg-flag ex dst))
      (allocate-in (tmp 8) (reg-flag of dst))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 5) (reg-flag c dst))
      (allocate-in (tmp 37) (reg-flag ex dst))
      (allocate-in (tmp 38) (reg-flag a dst))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 1) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 2) (add (constant ? 32) dst (tmp 1)))
      (= (tmp 3) (icmp (constant ? 33) slt (constant ? 0) (tmp 2)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 5) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 6) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (icmp (constant ? 32) slt (tmp 2) dst))
      (br (tmp 7) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 8) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 9) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 10) (icmp (constant ? 32) slt (tmp 2) (tmp 9)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 12) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 13) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) ((tmp 13) . bb_7))))
      (= (tmp 15) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 16) (satadd (constant ? 32) dst (tmp 15)))
      (set-reg dst (tmp 16))
      (= (tmp 34) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 33) (tmp 34))
      (= (tmp 36) (icmp (constant ? 40) eq (tmp 35) (constant ? 0)))
      (br (tmp 36) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 37) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 39) (icmp (constant ? 40) eq (tmp 38) (constant ? -1)))
      (br (tmp 39) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 41) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 42) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 43) (phi ((no-value . bb_21) ((tmp 42) . bb_22))))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45)))))

(instruction
  mv_any16_r16--Imm
  (pattern
    (constraints
      (allocate-in src (ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll tnr cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 tval tref tconfig2 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 2) (reg-flag z rN))
      (immediate SImm ((1 . 15))))
    (code
      (store (constant ? 16) ldm rN src)
      (= (tmp 1) (sub (constant ? 16) rN SImm))
      (set-reg rN (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 2) (tmp 4)))))

(instruction
  shft4_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 30) (reg-flag ag dst)))
    (code
      (= (tmp 0) (icmp slt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 4) (lshr (constant ? 8) (tmp 2) (tmp 3)))
      (set-reg (tmp 1) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 6) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 7) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 8) (lshr (constant ? 8) (tmp 6) (tmp 7)))
      (set-reg (tmp 5) (tmp 8))
      (= (tmp 9) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 10) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 11) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 12) (lshr (constant ? 8) (tmp 10) (tmp 11)))
      (set-reg (tmp 9) (tmp 12))
      (= (tmp 13) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 14) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 15) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 16) (lshr (constant ? 8) (tmp 14) (tmp 15)))
      (set-reg (tmp 13) (tmp 16))
      (br bb_2)
      (label bb_1)
      (= (tmp 17) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 18) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 19) (shl (constant ? 8) (tmp 18) src2))
      (set-reg (tmp 17) (tmp 19))
      (= (tmp 20) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 21) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 22) (shl (constant ? 8) (tmp 21) src2))
      (set-reg (tmp 20) (tmp 22))
      (= (tmp 23) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 24) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 25) (shl (constant ? 8) (tmp 24) src2))
      (set-reg (tmp 23) (tmp 25))
      (= (tmp 26) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 27) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 28) (shl (constant ? 8) (tmp 27) src2))
      (set-reg (tmp 26) (tmp 28))
      (br bb_2)
      (label bb_2)
      (= (tmp 29) (phi ((no-value . bb_0) (no-value . bb_1))))
      (set-reg (tmp 30) (constant ? 0)))))

(instruction
  minz_a16_a16_a16
  (pattern
    (constraints
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in (tmp 11) (reg-flag ex dst))
      (allocate-in (tmp 18) (reg-flag mi dst))
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 7) (reg-flag ac dst))
      (allocate-in (tmp 15) (reg-flag ex dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 14) (reg-flag ex dst)))
    (code
      (= (tmp 0) (icmp ult (constant ? 16) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 8) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? 0)))
      (br (tmp 10) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 13) (icmp (constant ? 40) eq (tmp 12) (constant ? -1)))
      (br (tmp 13) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 16) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi ((no-value . bb_6) ((tmp 16) . bb_7))))
      (= (tmp 19) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 18) (tmp 19))))
  (pattern
    (constraints
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in (tmp 18) (reg-flag mi dst))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 14) (reg-flag ex dst))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 11) (reg-flag ex dst))
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in (tmp 15) (reg-flag ex dst))
      (allocate-in (tmp 7) (reg-flag ac dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 1) (reg-flag c dst)))
    (code
      (= (tmp 0) (icmp ult (constant ? 16) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 39)))
      (= (tmp 6) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? 0)))
      (br (tmp 10) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 13) (icmp (constant ? 40) eq (tmp 12) (constant ? -1)))
      (br (tmp 13) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 16) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi ((no-value . bb_6) ((tmp 16) . bb_7))))
      (= (tmp 19) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 18) (tmp 19)))))

(instruction
  mv_any16_r16++m
  (pattern
    (constraints
      (allocate-in src (ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll tnr cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 tval tref tconfig2 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 3) (reg-flag z rN))
      (allocate-in (tmp 1) (reg-flag m rN)))
    (code
      (store (constant ? 16) ldm rN src)
      (= (tmp 2) (add (constant ? 16) rN (tmp 1)))
      (set-reg rN (tmp 2))
      (= (tmp 4) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 3) (tmp 5)))))

(instruction
  subabs4_a40_a40_a16h
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 27) (reg-flag a dst)))
    (code
      (= (tmp 0) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 2) (icmp lt (constant ? 8) (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= (tmp 3) (sub (constant ? 8) (tmp 1) (tmp 0)))
      (br bb_2)
      (label bb_1)
      (= (tmp 4) (sub (constant ? 8) (tmp 0) (tmp 1)))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi (((tmp 3) . bb_0) ((tmp 4) . bb_1))))
      (= (tmp 6) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 7) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 8) (icmp lt (constant ? 8) (tmp 6) (tmp 7)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (= (tmp 9) (sub (constant ? 8) (tmp 7) (tmp 6)))
      (br bb_5)
      (label bb_4)
      (= (tmp 10) (sub (constant ? 8) (tmp 6) (tmp 7)))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi (((tmp 9) . bb_3) ((tmp 10) . bb_4))))
      (= (tmp 12) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 13) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 14) (icmp lt (constant ? 8) (tmp 12) (tmp 13)))
      (br (tmp 14) bb_6 bb_7)
      (label bb_6)
      (= (tmp 15) (sub (constant ? 8) (tmp 13) (tmp 12)))
      (br bb_8)
      (label bb_7)
      (= (tmp 16) (sub (constant ? 8) (tmp 12) (tmp 13)))
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi (((tmp 15) . bb_6) ((tmp 16) . bb_7))))
      (= (tmp 18) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 19) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 20) (icmp lt (constant ? 8) (tmp 18) (tmp 19)))
      (br (tmp 20) bb_9 bb_10)
      (label bb_9)
      (= (tmp 21) (sub (constant ? 8) (tmp 19) (tmp 18)))
      (br bb_11)
      (label bb_10)
      (= (tmp 22) (sub (constant ? 8) (tmp 18) (tmp 19)))
      (br bb_11)
      (label bb_11)
      (= (tmp 23) (phi (((tmp 21) . bb_9) ((tmp 22) . bb_10))))
      (= (tmp 24) (add (constant ? 16) (tmp 17) (tmp 23)))
      (= (tmp 25) (add (constant ? 16) (tmp 11) (tmp 24)))
      (= (tmp 26) (add (constant ? 16) (tmp 5) (tmp 25)))
      (set-reg dst (tmp 26))
      (= (tmp 28) (reg-range (tmp 27) (constant ? 16) (constant ? 39)))
      (= (tmp 29) (zext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 28) (tmp 29)))))

(instruction
  sum4_a40_a0l_a7l
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 2) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 3) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 4) (add (constant ? 16) (tmp 2) (tmp 3)))
      (= (tmp 5) (add (constant ? 16) (tmp 1) (tmp 4)))
      (= (tmp 6) (add (constant ? 16) (tmp 0) (tmp 5)))
      (set-reg dst (tmp 6)))))

(instruction
  neg4_a40_nimm4_a40
  (pattern
    (constraints
      (allocate-in (tmp 40) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 43) (reg-flag a dst))
      (allocate-in (tmp 42) (reg-flag ex dst))
      (allocate-in (tmp 36) (reg-flag a dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 45) (reg-flag ex dst))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in (tmp 49) (reg-flag mi dst))
      (allocate-in (tmp 38) (reg-flag ac dst))
      (immediate imm4b ((0 . 15))))
    (code
      (= (tmp 0) (bit_and (constant ? 4) imm4b (constant ? 1)))
      (= (tmp 1) (icmp eq (constant ? 4) (tmp 0) (constant ? 1)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 3) (sub (constant ? 8) (constant ? 0) (constant ? 7)))
      (= (tmp 4) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 5) (satsub (tmp 3) (constant ? 0) (tmp 4)))
      (set-reg (tmp 2) (tmp 5))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 7) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 6) (tmp 7))
      (br bb_2)
      (label bb_2)
      (= (tmp 8) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 9) (bit_and (constant ? 4) imm4b (constant ? 2)))
      (= (tmp 10) (icmp eq (constant ? 4) (tmp 9) (constant ? 2)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (= (tmp 11) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 12) (sub (constant ? 8) (constant ? 8) (constant ? 15)))
      (= (tmp 13) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 14) (satsub (tmp 12) (constant ? 0) (tmp 13)))
      (set-reg (tmp 11) (tmp 14))
      (br bb_5)
      (label bb_4)
      (= (tmp 15) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 16) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 15) (tmp 16))
      (br bb_5)
      (label bb_5)
      (= (tmp 17) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 18) (bit_and (constant ? 4) imm4b (constant ? 4)))
      (= (tmp 19) (icmp eq (constant ? 4) (tmp 18) (constant ? 4)))
      (br (tmp 19) bb_6 bb_7)
      (label bb_6)
      (= (tmp 20) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 21) (sub (constant ? 8) (constant ? 16) (constant ? 23)))
      (= (tmp 22) (reg-range src (constant ? 16) (constant ? 2)))
      (= (tmp 23) (satsub (tmp 21) (constant ? 0) (tmp 22)))
      (set-reg (tmp 20) (tmp 23))
      (br bb_8)
      (label bb_7)
      (= (tmp 24) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 25) (reg-range src (constant ? 16) (constant ? 2)))
      (set-reg (tmp 24) (tmp 25))
      (br bb_8)
      (label bb_8)
      (= (tmp 26) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 27) (bit_and (constant ? 4) imm4b (constant ? 8)))
      (= (tmp 28) (icmp eq (constant ? 4) (tmp 27) (constant ? 8)))
      (br (tmp 28) bb_9 bb_10)
      (label bb_9)
      (= (tmp 29) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 30) (sub (constant ? 8) (constant ? 24) (constant ? 31)))
      (= (tmp 31) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 32) (satsub (tmp 30) (constant ? 0) (tmp 31)))
      (set-reg (tmp 29) (tmp 32))
      (br bb_11)
      (label bb_10)
      (= (tmp 33) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 34) (reg-range src (constant ? 24) (constant ? 31)))
      (set-reg (tmp 33) (tmp 34))
      (br bb_11)
      (label bb_11)
      (= (tmp 35) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 37) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 36) (tmp 37))
      (= (tmp 39) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 38) (tmp 39))
      (= (tmp 41) (icmp (constant ? 40) eq (tmp 40) (constant ? 0)))
      (br (tmp 41) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 42) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 44) (icmp (constant ? 40) eq (tmp 43) (constant ? -1)))
      (br (tmp 44) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 45) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 46) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 47) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 48) (phi ((no-value . bb_15) ((tmp 47) . bb_16))))
      (= (tmp 50) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 49) (tmp 50)))))

(instruction
  mv_any16_r16--m
  (pattern
    (constraints
      (allocate-in src (ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll tnr cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 tval tref tconfig2 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 3) (reg-flag z rN))
      (allocate-in (tmp 1) (reg-flag m rN)))
    (code
      (store (constant ? 16) ldm rN src)
      (= (tmp 2) (sub (constant ? 16) rN (tmp 1)))
      (set-reg rN (tmp 2))
      (= (tmp 4) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 3) (tmp 5)))))

(instruction
  sum4_a40_a0h_a7h
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag a dst)))
    (code
      (= (tmp 0) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 2) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 3) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 4) (add (constant ? 16) (tmp 2) (tmp 3)))
      (= (tmp 5) (add (constant ? 16) (tmp 1) (tmp 4)))
      (= (tmp 6) (add (constant ? 16) (tmp 0) (tmp 5)))
      (set-reg dst (tmp 6))
      (= (tmp 8) (reg-range (tmp 7) (constant ? 16) (constant ? 39)))
      (= (tmp 9) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 8) (tmp 9)))))

(instruction
  exi_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 13) (reg-flag op dst))
      (allocate-in (tmp 9) (reg-flag ms dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 2) (reg-range src1 (tmp 0) (tmp 0)))
      (= (tmp 3) (reg-range dst (tmp 1) (tmp 1)))
      (set-reg (tmp 3) (tmp 2))
      (set-reg (tmp 4) (tmp 2))
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 14) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 14) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 15) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 13) (tmp 15)))))

(instruction
  mv_any16_r16-no-modifier
  (pattern
    (constraints
      (allocate-in src (ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll tnr cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 tval tref tconfig2 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 1) (reg-flag z rN)))
    (code
      (store (constant ? 16) ldm rN src)
      (= (tmp 2) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 1) (tmp 3)))))

(instruction
  sin_a16h_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a4h a5h a6h a7h a4l a5l a6l a7l)))
    (code)))

(instruction
  cos_a16l_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a1h a2h a3h a0l a1l a2l a3l a0h)))
    (code)))

(instruction
  cos_a16h_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a4h a5h a6h a7h a4l a5l a6l a7l)))
    (code)))

(instruction
  atan_a16l_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a1h a2h a3h a0l a1l a2l a3l a0h)))
    (code)))

(instruction
  atan_a16h_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a4h a5h a6h a7h a4l a5l a6l a7l)))
    (code)))

(instruction
  adda_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 34) (reg-flag ex dst))
      (allocate-in (tmp 29) (reg-flag a dst))
      (allocate-in (tmp 16) (reg-flag c dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 23) (reg-flag of dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 31) (reg-flag ex dst))
      (allocate-in (tmp 32) (reg-flag a dst))
      (allocate-in (tmp 27) (reg-flag ac dst))
      (allocate-in (tmp 20) (reg-flag of dst))
      (allocate-in (tmp 38) (reg-flag mi dst))
      (allocate-in (tmp 22) (reg-flag of dst))
      (allocate-in (tmp 17) (reg-flag c dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 14) (add (constant ? 40) src1 src2))
      (= (tmp 15) (icmp (constant ? 41) slt (constant ? 0) (tmp 14)))
      (br (tmp 15) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 17) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 18) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 19) (icmp (constant ? 40) slt (tmp 14) src1))
      (br (tmp 19) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 20) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 21) (icmp (constant ? 40) slt (tmp 14) src2))
      (br (tmp 21) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 22) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 23) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 24) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 25) (phi ((no-value . bb_15) ((tmp 24) . bb_16))))
      (= (tmp 26) (add (constant ? 40) src1 src2))
      (set-reg dst (tmp 26))
      (= (tmp 28) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 27) (tmp 28))
      (= (tmp 30) (icmp (constant ? 40) eq (tmp 29) (constant ? 0)))
      (br (tmp 30) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 31) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 33) (icmp (constant ? 40) eq (tmp 32) (constant ? -1)))
      (br (tmp 33) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 34) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 35) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 36) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 37) (phi ((no-value . bb_21) ((tmp 36) . bb_22))))
      (= (tmp 39) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 38) (tmp 39))))
  (pattern
    (constraints
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag of dst))
      (allocate-in (tmp 34) (reg-flag ex dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 31) (reg-flag ex dst))
      (allocate-in (tmp 10) (reg-flag of dst))
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 27) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag of dst))
      (allocate-in (tmp 38) (reg-flag mi dst))
      (allocate-in (tmp 29) (reg-flag a dst))
      (allocate-in (tmp 32) (reg-flag a dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 1) (add (constant ? 40) src1 src2))
      (= (tmp 2) (icmp (constant ? 41) slt (constant ? 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 3) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 4) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 6) (icmp (constant ? 40) slt (tmp 1) src1))
      (br (tmp 6) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 7) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 8) (icmp (constant ? 40) slt (tmp 1) src2))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 10) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 12) (phi ((no-value . bb_6) ((tmp 11) . bb_7))))
      (= (tmp 13) (satadd (constant ? 40) src1 src2))
      (set-reg dst (tmp 13))
      (= (tmp 28) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 27) (tmp 28))
      (= (tmp 30) (icmp (constant ? 40) eq (tmp 29) (constant ? 0)))
      (br (tmp 30) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 31) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 33) (icmp (constant ? 40) eq (tmp 32) (constant ? -1)))
      (br (tmp 33) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 34) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 35) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 36) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 37) (phi ((no-value . bb_21) ((tmp 36) . bb_22))))
      (= (tmp 39) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 38) (tmp 39)))))

(instruction
  neg4_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 24) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 33) (reg-flag mi dst))
      (allocate-in (tmp 29) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag a dst))
      (allocate-in (tmp 20) (reg-flag a dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 26) (reg-flag ex dst))
      (allocate-in (tmp 22) (reg-flag ac dst))
      (allocate-in (tmp 30) (reg-flag ex dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (sub (constant ? 8) (constant ? 0) (constant ? 7)))
      (= (tmp 2) (add (constant ? 8) (constant ? 1) (tmp 1)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 4) (satsub (tmp 2) (constant ? 0) (tmp 3)))
      (set-reg (tmp 0) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 6) (sub (constant ? 8) (constant ? 8) (constant ? 15)))
      (= (tmp 7) (add (constant ? 8) (constant ? 1) (tmp 6)))
      (= (tmp 8) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 9) (satsub (tmp 7) (constant ? 0) (tmp 8)))
      (set-reg (tmp 5) (tmp 9))
      (= (tmp 10) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 11) (sub (constant ? 8) (constant ? 16) (constant ? 23)))
      (= (tmp 12) (add (constant ? 8) (constant ? 1) (tmp 11)))
      (= (tmp 13) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 14) (satsub (tmp 12) (constant ? 0) (tmp 13)))
      (set-reg (tmp 10) (tmp 14))
      (= (tmp 15) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 16) (sub (constant ? 8) (constant ? 24) (constant ? 31)))
      (= (tmp 17) (add (constant ? 8) (constant ? 1) (tmp 16)))
      (= (tmp 18) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 19) (satsub (tmp 17) (constant ? 0) (tmp 18)))
      (set-reg (tmp 15) (tmp 19))
      (= (tmp 21) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 20) (tmp 21))
      (= (tmp 23) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 22) (tmp 23))
      (= (tmp 25) (icmp (constant ? 40) eq (tmp 24) (constant ? 0)))
      (br (tmp 25) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 26) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 28) (icmp (constant ? 40) eq (tmp 27) (constant ? -1)))
      (br (tmp 28) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 29) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 30) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 31) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 32) (phi ((no-value . bb_3) ((tmp 31) . bb_4))))
      (= (tmp 34) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 33) (tmp 34)))))

(instruction
  mv_r16_any16++
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 3) (zext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 3))
      (= (tmp 34) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 4) (sext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 4))
      (= (tmp 34) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag l dst ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 0))
      (= (tmp 34) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 12) (reg-flag al dst))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 17) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 17))
      (= (tmp 34) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 12) (reg-flag al dst))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 18) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 18))
      (= (tmp 34) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 26) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 26))
      (= (tmp 34) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 27) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 27))
      (= (tmp 34) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0g a1g a2g a3g a4g a5g a6g a7g ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 33) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 33))
      (= (tmp 34) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37)))))

(instruction
  addh_a40_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag of dst))
      (allocate-in (tmp 39) (reg-flag ac dst))
      (allocate-in (tmp 25) (reg-flag c dst))
      (allocate-in (tmp 30) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag a dst))
      (allocate-in (tmp 43) (reg-flag ex dst))
      (allocate-in (tmp 24) (reg-flag c dst))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in (tmp 47) (reg-flag ex dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in (tmp 32) (reg-flag of dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 41) (reg-flag a dst)))
    (code
      (= (tmp 20) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 21) (shl (constant ? 40) (tmp 20) (constant ? 16)))
      (= (tmp 22) (add (constant ? 40) (tmp 21) src1))
      (= (tmp 23) (icmp (constant ? 41) slt (constant ? 0) (tmp 22)))
      (br (tmp 23) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 25) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 27) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 28) (shl (constant ? 40) (tmp 27) (constant ? 16)))
      (= (tmp 29) (icmp (constant ? 40) slt (tmp 22) (tmp 28)))
      (br (tmp 29) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 30) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 31) (icmp (constant ? 40) slt (tmp 22) src1))
      (br (tmp 31) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 32) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 33) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 34) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 35) (phi ((no-value . bb_15) ((tmp 34) . bb_16))))
      (= (tmp 36) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 37) (shl (constant ? 40) (tmp 36) (constant ? 16)))
      (= (tmp 38) (add (constant ? 40) (tmp 37) src1))
      (set-reg dst (tmp 38))
      (= (tmp 40) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 39) (tmp 40))
      (= (tmp 42) (icmp (constant ? 40) eq (tmp 41) (constant ? 0)))
      (br (tmp 42) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 43) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? -1)))
      (br (tmp 45) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 47) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 48) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 49) (phi ((no-value . bb_21) ((tmp 48) . bb_22))))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51))))
  (pattern
    (constraints
      (allocate-in (tmp 39) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 14) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 13) (reg-flag of dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag of dst))
      (allocate-in (tmp 43) (reg-flag ex dst))
      (allocate-in (tmp 44) (reg-flag a dst))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in (tmp 47) (reg-flag ex dst))
      (allocate-in (tmp 5) (reg-flag c dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in (tmp 6) (reg-flag c dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 41) (reg-flag a dst)))
    (code
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (add (constant ? 32) (tmp 2) src1))
      (= (tmp 4) (icmp (constant ? 33) slt (constant ? 0) (tmp 3)))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 6) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 8) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 9) (shl (constant ? 40) (tmp 8) (constant ? 16)))
      (= (tmp 10) (icmp (constant ? 32) slt (tmp 3) (tmp 9)))
      (br (tmp 10) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 12) (icmp (constant ? 32) slt (tmp 3) src1))
      (br (tmp 12) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 14) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 15) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) ((tmp 15) . bb_7))))
      (= (tmp 17) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 18) (shl (constant ? 40) (tmp 17) (constant ? 16)))
      (= (tmp 19) (satadd (constant ? 32) (tmp 18) src1))
      (set-reg dst (tmp 19))
      (= (tmp 40) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 39) (tmp 40))
      (= (tmp 42) (icmp (constant ? 40) eq (tmp 41) (constant ? 0)))
      (br (tmp 42) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 43) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? -1)))
      (br (tmp 45) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 47) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 48) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 49) (phi ((no-value . bb_21) ((tmp 48) . bb_22))))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51)))))

(instruction
  exi_a40_nimm5_nimm5_a40
  (pattern
    (constraints
      (immediate ee ((0 . 31)))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 9) (reg-flag ls dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag ms dst))
      (allocate-in (tmp 11) (reg-flag op dst))
      (immediate ii ((0 . 31))))
    (code
      (= (tmp 0) (reg-range src ee ee))
      (= (tmp 1) (reg-range dst ii ii))
      (set-reg (tmp 1) (tmp 0))
      (set-reg (tmp 2) (tmp 0))
      (= (tmp 4) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  rnd_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 21) (reg-flag of dst))
      (allocate-in (tmp 18) (reg-flag of dst))
      (allocate-in (tmp 29) (reg-flag a dst))
      (allocate-in (tmp 34) (reg-flag ex dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 26) (reg-flag c dst))
      (allocate-in (tmp 40) (reg-flag mi dst))
      (allocate-in (tmp 31) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 25) (reg-flag c dst))
      (allocate-in (tmp 20) (reg-flag of dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 32) (reg-flag a dst))
      (allocate-in (tmp 38) (reg-flag ac dst))
      (allocate-in (tmp 1) (reg-flag al dst)))
    (code
      (= (tmp 0) (add (constant ? 40) dst (constant ? 32768)))
      (set-reg dst (tmp 0))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 16) (add (constant ? 40) dst (constant ? 32768)))
      (= (tmp 17) (icmp (constant ? 40) slt (tmp 16) dst))
      (br (tmp 17) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 18) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 19) (icmp (constant ? 40) slt (tmp 16) (constant ? 32768)))
      (br (tmp 19) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 20) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 21) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 22) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 23) (phi ((no-value . bb_12) ((tmp 22) . bb_13))))
      (= (tmp 24) (icmp (constant ? 41) slt (constant ? 0) (tmp 16)))
      (br (tmp 24) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 25) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 26) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 27) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 28) (add (constant ? 40) dst (constant ? 32768)))
      (set-reg dst (tmp 28))
      (= (tmp 30) (icmp (constant ? 40) eq (tmp 29) (constant ? 0)))
      (br (tmp 30) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 31) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 33) (icmp (constant ? 40) eq (tmp 32) (constant ? -1)))
      (br (tmp 33) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 34) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 35) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 36) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 37) (phi ((no-value . bb_21) ((tmp 36) . bb_22))))
      (= (tmp 39) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 38) (tmp 39))
      (= (tmp 41) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 40) (tmp 41))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 29) (reg-flag a dst))
      (allocate-in (tmp 34) (reg-flag ex dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 8) (reg-flag of dst))
      (allocate-in (tmp 31) (reg-flag ex dst))
      (allocate-in (tmp 40) (reg-flag mi dst))
      (allocate-in (tmp 32) (reg-flag a dst))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in (tmp 12) (reg-flag c dst))
      (allocate-in (tmp 7) (reg-flag of dst))
      (allocate-in (tmp 13) (reg-flag c dst))
      (allocate-in (tmp 38) (reg-flag ac dst))
      (allocate-in (tmp 1) (reg-flag al dst)))
    (code
      (= (tmp 0) (add (constant ? 40) dst (constant ? 32768)))
      (set-reg dst (tmp 0))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 3) (add (constant ? 32) dst (constant ? 32768)))
      (= (tmp 4) (icmp (constant ? 32) slt (tmp 3) dst))
      (br (tmp 4) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp (constant ? 32) slt (tmp 3) (constant ? 32768)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 7) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 8) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))
      (= (tmp 11) (icmp (constant ? 33) slt (constant ? 0) (tmp 3)))
      (br (tmp 11) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 13) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 15) (satadd (constant ? 32) dst (constant ? 32768)))
      (set-reg dst (tmp 15))
      (= (tmp 30) (icmp (constant ? 40) eq (tmp 29) (constant ? 0)))
      (br (tmp 30) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 31) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 33) (icmp (constant ? 40) eq (tmp 32) (constant ? -1)))
      (br (tmp 33) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 34) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 35) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 36) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 37) (phi ((no-value . bb_21) ((tmp 36) . bb_22))))
      (= (tmp 39) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 38) (tmp 39))
      (= (tmp 41) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 40) (tmp 41)))))

(instruction
  mv_r16_any16--
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 3) (zext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 3))
      (= (tmp 34) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 4) (sext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 4))
      (= (tmp 34) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag l dst ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 0))
      (= (tmp 34) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 12) (reg-flag al dst))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 17) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 17))
      (= (tmp 34) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 12) (reg-flag al dst))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 18) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 18))
      (= (tmp 34) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 26) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 26))
      (= (tmp 34) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 27) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 27))
      (= (tmp 34) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0g a1g a2g a3g a4g a5g a6g a7g ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 33) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 33))
      (= (tmp 34) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37)))))

(instruction
  shft_a40_nimm7_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 18) (reg-flag ls dst))
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 20) (reg-flag op dst))
      (allocate-in (tmp 14) (reg-flag mi dst))
      (allocate-in (tmp 12) (reg-flag ac dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 16) (reg-flag ms dst))
      (immediate SImm ((1 . 32))))
    (code
      (= (tmp 2) (sub (constant ? 32) (constant ? 39) SImm))
      (= (tmp 3) (add (constant ? 32) (tmp 2) (constant ? 1)))
      (= (tmp 4) (reg-range dst (tmp 3) (tmp 3)))
      (set-reg (tmp 1) (tmp 4))
      (= (tmp 5) (sub (constant ? 6) (constant ? 0) SImm))
      (= (tmp 6) (lshr (constant ? 40) dst (tmp 5)))
      (set-reg dst (tmp 6))
      (= (tmp 13) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 14) (tmp 15))
      (= (tmp 17) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 16) (tmp 17))
      (= (tmp 19) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 18) (tmp 19))
      (= (tmp 21) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 21) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 22) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 20) (tmp 22)))))

(instruction
  addh_nimm16_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag of dst))
      (allocate-in (tmp 33) (reg-flag of dst))
      (allocate-in (tmp 39) (reg-flag ac dst))
      (allocate-in (tmp 25) (reg-flag c dst))
      (immediate UImm ((1 . 65535)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in (tmp 43) (reg-flag ex dst))
      (allocate-in (tmp 24) (reg-flag c dst))
      (allocate-in (tmp 44) (reg-flag a dst))
      (allocate-in (tmp 47) (reg-flag ex dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in (tmp 32) (reg-flag of dst))
      (allocate-in (tmp 41) (reg-flag a dst)))
    (code
      (= (tmp 20) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 21) (shl (constant ? 40) (tmp 20) (constant ? 16)))
      (= (tmp 22) (add (constant ? 40) dst (tmp 21)))
      (= (tmp 23) (icmp (constant ? 41) slt (constant ? 0) (tmp 22)))
      (br (tmp 23) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 25) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 27) (icmp (constant ? 40) slt (tmp 22) dst))
      (br (tmp 27) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 29) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 30) (shl (constant ? 40) (tmp 29) (constant ? 16)))
      (= (tmp 31) (icmp (constant ? 40) slt (tmp 22) (tmp 30)))
      (br (tmp 31) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 32) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 33) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 34) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 35) (phi ((no-value . bb_15) ((tmp 34) . bb_16))))
      (= (tmp 36) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 37) (shl (constant ? 40) (tmp 36) (constant ? 16)))
      (= (tmp 38) (add (constant ? 40) dst (tmp 37)))
      (set-reg dst (tmp 38))
      (= (tmp 40) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 39) (tmp 40))
      (= (tmp 42) (icmp (constant ? 40) eq (tmp 41) (constant ? 0)))
      (br (tmp 42) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 43) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? -1)))
      (br (tmp 45) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 47) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 48) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 49) (phi ((no-value . bb_21) ((tmp 48) . bb_22))))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51))))
  (pattern
    (constraints
      (allocate-in (tmp 39) (reg-flag ac dst))
      (allocate-in (tmp 9) (reg-flag of dst))
      (allocate-in (tmp 14) (reg-flag of dst))
      (allocate-in (tmp 44) (reg-flag a dst))
      (immediate UImm ((1 . 65535)))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in (tmp 43) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 47) (reg-flag ex dst))
      (allocate-in (tmp 5) (reg-flag c dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in (tmp 13) (reg-flag of dst))
      (allocate-in (tmp 6) (reg-flag c dst))
      (allocate-in (tmp 41) (reg-flag a dst)))
    (code
      (= (tmp 1) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (add (constant ? 32) dst (tmp 2)))
      (= (tmp 4) (icmp (constant ? 33) slt (constant ? 0) (tmp 3)))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 6) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 8) (icmp (constant ? 32) slt (tmp 3) dst))
      (br (tmp 8) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 10) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 11) (shl (constant ? 40) (tmp 10) (constant ? 16)))
      (= (tmp 12) (icmp (constant ? 32) slt (tmp 3) (tmp 11)))
      (br (tmp 12) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 14) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 15) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) ((tmp 15) . bb_7))))
      (= (tmp 17) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 18) (shl (constant ? 40) (tmp 17) (constant ? 16)))
      (= (tmp 19) (satadd (constant ? 32) dst (tmp 18)))
      (set-reg dst (tmp 19))
      (= (tmp 40) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 39) (tmp 40))
      (= (tmp 42) (icmp (constant ? 40) eq (tmp 41) (constant ? 0)))
      (br (tmp 42) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 43) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? -1)))
      (br (tmp 45) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 47) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 48) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 49) (phi ((no-value . bb_21) ((tmp 48) . bb_22))))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51)))))

(instruction
  shft4_a40_nimm5_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 29) (reg-flag ag dst))
      (immediate SImm ((1 . 8))))
    (code
      (= (tmp 1) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 2) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 4) (lshr (constant ? 8) (tmp 2) (tmp 3)))
      (set-reg (tmp 1) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 6) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 7) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 8) (lshr (constant ? 8) (tmp 6) (tmp 7)))
      (set-reg (tmp 5) (tmp 8))
      (= (tmp 9) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 10) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 11) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 12) (lshr (constant ? 8) (tmp 10) (tmp 11)))
      (set-reg (tmp 9) (tmp 12))
      (= (tmp 13) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 14) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 15) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 16) (lshr (constant ? 8) (tmp 14) (tmp 15)))
      (set-reg (tmp 13) (tmp 16))
      (set-reg (tmp 29) (constant ? 0)))))

(instruction
  mv_r16_any16++Imm
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 35) (reg-flag z rN))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1)))
      (immediate UImm ((1 . 15))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 3) (zext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 3))
      (= (tmp 34) (add (constant ? 16) rN UImm))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 35) (reg-flag z rN))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0)))
      (immediate UImm ((1 . 15))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 4) (sext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 4))
      (= (tmp 34) (add (constant ? 16) rN UImm))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 35) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag l dst ((0 . 0)))
      (immediate UImm ((1 . 15))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 0))
      (= (tmp 34) (add (constant ? 16) rN UImm))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in (tmp 35) (reg-flag z rN))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1)))
      (immediate UImm ((1 . 15)))
      (allocate-in (tmp 12) (reg-flag al dst))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 17) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 17))
      (= (tmp 34) (add (constant ? 16) rN UImm))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in (tmp 35) (reg-flag z rN))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0)))
      (immediate UImm ((1 . 15)))
      (allocate-in (tmp 12) (reg-flag al dst))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 18) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 18))
      (= (tmp 34) (add (constant ? 16) rN UImm))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 35) (reg-flag z rN))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1)))
      (immediate UImm ((1 . 15))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 26) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 26))
      (= (tmp 34) (add (constant ? 16) rN UImm))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 35) (reg-flag z rN))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0)))
      (immediate UImm ((1 . 15))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 27) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 27))
      (= (tmp 34) (add (constant ? 16) rN UImm))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0g a1g a2g a3g a4g a5g a6g a7g ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr))
      (allocate-in (tmp 35) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (immediate UImm ((1 . 15))))
    (code
      (= (tmp 33) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 33))
      (= (tmp 34) (add (constant ? 16) rN UImm))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37)))))

(instruction
  exs_a40_a16hh_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ac dst))
      (allocate-in (tmp 10) (reg-flag mi dst))
      (allocate-in (tmp 16) (reg-flag op dst))
      (allocate-in (tmp 14) (reg-flag ls dst))
      (allocate-in (tmp 12) (reg-flag ms dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a6h a7h a6l a7l)))
    (code
      (= (tmp 0) (bit_and (constant ? 40) src2 (constant ? 3840)))
      (= (tmp 1) (lshr (constant ? 40) (tmp 0) (constant ? 8)))
      (= (tmp 2) (bit_and (constant ? 40) src1 (constant ? 15)))
      (= (tmp 3) (bit_and (constant ? 40) src1 (constant ? 3840)))
      (= (tmp 4) (lshr (constant ? 40) (tmp 3) (constant ? 8)))
      (= (tmp 5) (add (constant ? 40) (tmp 2) (tmp 4)))
      (= (tmp 6) (reg-range src1 (tmp 2) (tmp 5)))
      (= (tmp 7) (sext (tmp 1) (tmp 6) (constant ? 40)))
      (set-reg dst (tmp 7))
      (= (tmp 9) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 14) (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18)))))

(instruction
  mv_r16_any16--Imm
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag u dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag l dst ((1 . 1)))
      (immediate SImm ((1 . 15)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 3) (zext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 3))
      (= (tmp 34) (sub (constant ? 16) rN SImm))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag u dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag l dst ((1 . 1)))
      (immediate SImm ((1 . 15)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 4) (sext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 4))
      (= (tmp 34) (sub (constant ? 16) rN SImm))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (immediate SImm ((1 . 15)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 0))
      (= (tmp 34) (sub (constant ? 16) rN SImm))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 35) (reg-flag z rN))
      (allocate-in (tmp 12) (reg-flag al dst))
      (immediate SImm ((1 . 15))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 17) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 17))
      (= (tmp 34) (sub (constant ? 16) rN SImm))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag z rN))
      (allocate-in (tmp 12) (reg-flag al dst))
      (immediate SImm ((1 . 15))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 18) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 18))
      (= (tmp 34) (sub (constant ? 16) rN SImm))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag u dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag h dst ((0 . 0)))
      (immediate SImm ((1 . 15)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 26) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 26))
      (= (tmp 34) (sub (constant ? 16) rN SImm))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag u dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag h dst ((0 . 0)))
      (immediate SImm ((1 . 15)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 27) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 27))
      (= (tmp 34) (sub (constant ? 16) rN SImm))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0g a1g a2g a3g a4g a5g a6g a7g ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (immediate SImm ((1 . 15)))
      (allocate-in (tmp 35) (reg-flag z rN)))
    (code
      (= (tmp 33) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 33))
      (= (tmp 34) (sub (constant ? 16) rN SImm))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37)))))

(instruction
  add2_a40_a40_a40h
  (pattern
    (constraints
      (allocate-in (tmp 21) (reg-flag mi dst))
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in (tmp 18) (reg-flag ex dst))
      (allocate-in (tmp 4) (reg-flag al dst))
      (allocate-in (tmp 2) (reg-flag ah src2))
      (allocate-in (tmp 14) (reg-flag ex dst))
      (allocate-in dst (a4 a5 a6 a7))
      (allocate-in (tmp 0) (reg-flag ah dst))
      (allocate-in (tmp 10) (reg-flag ac dst))
      (allocate-in (tmp 17) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 5) (reg-flag al src1))
      (allocate-in (tmp 15) (reg-flag a dst))
      (allocate-in (tmp 6) (reg-flag al src2))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 1) (reg-flag ah src1)))
    (code
      (= (tmp 3) (satadd (constant ? 16) (tmp 1) (tmp 2)))
      (set-reg (tmp 0) (tmp 3))
      (= (tmp 7) (satadd (constant ? 16) (tmp 5) (tmp 6)))
      (set-reg (tmp 4) (tmp 7))
      (= (tmp 8) (reg-range dst (constant ? 16) (constant ? 39)))
      (= (tmp 9) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (icmp (constant ? 40) eq (tmp 12) (constant ? 0)))
      (br (tmp 13) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 16) (icmp (constant ? 40) eq (tmp 15) (constant ? -1)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 17) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 18) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 19) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 20) (phi ((no-value . bb_3) ((tmp 19) . bb_4))))
      (= (tmp 22) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 21) (tmp 22)))))

(instruction
  exs_a40_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ac dst))
      (allocate-in (tmp 10) (reg-flag mi dst))
      (allocate-in (tmp 16) (reg-flag op dst))
      (allocate-in (tmp 14) (reg-flag ls dst))
      (allocate-in (tmp 12) (reg-flag ms dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (bit_and (constant ? 40) src2 (constant ? 3840)))
      (= (tmp 1) (lshr (constant ? 40) (tmp 0) (constant ? 8)))
      (= (tmp 2) (bit_and (constant ? 40) src1 (constant ? 15)))
      (= (tmp 3) (bit_and (constant ? 40) src1 (constant ? 3840)))
      (= (tmp 4) (lshr (constant ? 40) (tmp 3) (constant ? 8)))
      (= (tmp 5) (add (constant ? 40) (tmp 2) (tmp 4)))
      (= (tmp 6) (reg-range src1 (tmp 2) (tmp 5)))
      (= (tmp 7) (sext (tmp 1) (tmp 6) (constant ? 40)))
      (set-reg dst (tmp 7))
      (= (tmp 9) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 14) (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18)))))

(instruction
  mv_r16_any16++m
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 3) (zext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 3))
      (= (tmp 35) (add (constant ? 16) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 4) (sext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 4))
      (= (tmp 35) (add (constant ? 16) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 36) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag l dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 0))
      (= (tmp 35) (add (constant ? 16) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 12) (reg-flag al dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 17) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 17))
      (= (tmp 35) (add (constant ? 16) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 12) (reg-flag al dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 18) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 18))
      (= (tmp 35) (add (constant ? 16) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 26) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 26))
      (= (tmp 35) (add (constant ? 16) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 27) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 27))
      (= (tmp 35) (add (constant ? 16) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0g a1g a2g a3g a4g a5g a6g a7g ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr))
      (allocate-in (tmp 36) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN)))
    (code
      (= (tmp 33) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 33))
      (= (tmp 35) (add (constant ? 16) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38)))))

(instruction
  exi_a40_a16hh_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 13) (reg-flag op dst))
      (allocate-in (tmp 9) (reg-flag ms dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a6h a7h a6l a7l)))
    (code
      (= (tmp 0) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 2) (reg-range src1 (tmp 0) (tmp 0)))
      (= (tmp 3) (reg-range dst (tmp 1) (tmp 1)))
      (set-reg (tmp 3) (tmp 2))
      (set-reg (tmp 4) (tmp 2))
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 14) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 14) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 15) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 13) (tmp 15)))))

(instruction
  addh_nimm5_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag of dst))
      (allocate-in (tmp 33) (reg-flag of dst))
      (allocate-in (tmp 39) (reg-flag ac dst))
      (allocate-in (tmp 25) (reg-flag c dst))
      (immediate UImm ((1 . 32)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in (tmp 43) (reg-flag ex dst))
      (allocate-in (tmp 24) (reg-flag c dst))
      (allocate-in (tmp 44) (reg-flag a dst))
      (allocate-in (tmp 47) (reg-flag ex dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in (tmp 32) (reg-flag of dst))
      (allocate-in (tmp 41) (reg-flag a dst)))
    (code
      (= (tmp 20) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 21) (shl (constant ? 40) (tmp 20) (constant ? 16)))
      (= (tmp 22) (add (constant ? 40) dst (tmp 21)))
      (= (tmp 23) (icmp (constant ? 41) slt (constant ? 0) (tmp 22)))
      (br (tmp 23) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 25) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 27) (icmp (constant ? 40) slt (tmp 22) dst))
      (br (tmp 27) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 29) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 30) (shl (constant ? 40) (tmp 29) (constant ? 16)))
      (= (tmp 31) (icmp (constant ? 40) slt (tmp 22) (tmp 30)))
      (br (tmp 31) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 32) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 33) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 34) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 35) (phi ((no-value . bb_15) ((tmp 34) . bb_16))))
      (= (tmp 36) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 37) (shl (constant ? 40) (tmp 36) (constant ? 16)))
      (= (tmp 38) (add (constant ? 40) dst (tmp 37)))
      (set-reg dst (tmp 38))
      (= (tmp 40) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 39) (tmp 40))
      (= (tmp 42) (icmp (constant ? 40) eq (tmp 41) (constant ? 0)))
      (br (tmp 42) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 43) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? -1)))
      (br (tmp 45) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 47) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 48) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 49) (phi ((no-value . bb_21) ((tmp 48) . bb_22))))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51))))
  (pattern
    (constraints
      (allocate-in (tmp 39) (reg-flag ac dst))
      (allocate-in (tmp 9) (reg-flag of dst))
      (allocate-in (tmp 14) (reg-flag of dst))
      (allocate-in (tmp 44) (reg-flag a dst))
      (immediate UImm ((1 . 32)))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in (tmp 43) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 47) (reg-flag ex dst))
      (allocate-in (tmp 5) (reg-flag c dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in (tmp 13) (reg-flag of dst))
      (allocate-in (tmp 6) (reg-flag c dst))
      (allocate-in (tmp 41) (reg-flag a dst)))
    (code
      (= (tmp 1) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (add (constant ? 32) dst (tmp 2)))
      (= (tmp 4) (icmp (constant ? 33) slt (constant ? 0) (tmp 3)))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 6) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 8) (icmp (constant ? 32) slt (tmp 3) dst))
      (br (tmp 8) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 10) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 11) (shl (constant ? 40) (tmp 10) (constant ? 16)))
      (= (tmp 12) (icmp (constant ? 32) slt (tmp 3) (tmp 11)))
      (br (tmp 12) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 14) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 15) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) ((tmp 15) . bb_7))))
      (= (tmp 17) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 18) (shl (constant ? 40) (tmp 17) (constant ? 16)))
      (= (tmp 19) (satadd (constant ? 32) dst (tmp 18)))
      (set-reg dst (tmp 19))
      (= (tmp 40) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 39) (tmp 40))
      (= (tmp 42) (icmp (constant ? 40) eq (tmp 41) (constant ? 0)))
      (br (tmp 42) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 43) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? -1)))
      (br (tmp 45) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 47) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 48) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 49) (phi ((no-value . bb_21) ((tmp 48) . bb_22))))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51)))))

(instruction
  exs_a40_a16_a16
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ac dst))
      (allocate-in (tmp 10) (reg-flag mi dst))
      (allocate-in (tmp 16) (reg-flag op dst))
      (allocate-in (tmp 14) (reg-flag ls dst))
      (allocate-in (tmp 12) (reg-flag ms dst))
      (allocate-in dst (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (bit_and (constant ? 40) src2 (constant ? 3840)))
      (= (tmp 1) (lshr (constant ? 40) (tmp 0) (constant ? 8)))
      (= (tmp 2) (bit_and (constant ? 40) src1 (constant ? 15)))
      (= (tmp 3) (bit_and (constant ? 40) src1 (constant ? 3840)))
      (= (tmp 4) (lshr (constant ? 40) (tmp 3) (constant ? 8)))
      (= (tmp 5) (add (constant ? 40) (tmp 2) (tmp 4)))
      (= (tmp 6) (reg-range src1 (tmp 2) (tmp 5)))
      (= (tmp 7) (sext (tmp 1) (tmp 6) (constant ? 40)))
      (set-reg dst (tmp 7))
      (= (tmp 9) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 14) (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18)))))

(instruction
  mv_r16_any16--m
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 3) (zext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 3))
      (= (tmp 35) (sub (constant ? 16) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 4) (sext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 4))
      (= (tmp 35) (sub (constant ? 16) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 36) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag l dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 0))
      (= (tmp 35) (sub (constant ? 16) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 12) (reg-flag al dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 17) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 17))
      (= (tmp 35) (sub (constant ? 16) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 12) (reg-flag al dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 18) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 18))
      (= (tmp 35) (sub (constant ? 16) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 26) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 26))
      (= (tmp 35) (sub (constant ? 16) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 27) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 27))
      (= (tmp 35) (sub (constant ? 16) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0g a1g a2g a3g a4g a5g a6g a7g ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr))
      (allocate-in (tmp 36) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN)))
    (code
      (= (tmp 33) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 33))
      (= (tmp 35) (sub (constant ? 16) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38)))))

(instruction
  scale4_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag ac dst))
      (allocate-in (tmp 17) (reg-flag mi dst))
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag ex dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 2) (ashr (constant ? 8) (tmp 1) (constant ? 1)))
      (set-reg (tmp 0) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 4) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 5) (ashr (constant ? 8) (tmp 4) (constant ? 1)))
      (set-reg (tmp 3) (tmp 5))
      (= (tmp 6) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 7) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 8) (ashr (constant ? 8) (tmp 7) (constant ? 1)))
      (set-reg (tmp 6) (tmp 8))
      (= (tmp 9) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 10) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 11) (ashr (constant ? 8) (tmp 10) (constant ? 1)))
      (set-reg (tmp 9) (tmp 11))
      (= (tmp 13) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 12) (tmp 13))
      (set-reg (tmp 14) (constant ? 0))
      (= (tmp 16) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 15) (tmp 16))
      (= (tmp 18) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 17) (tmp 18)))))

(instruction
  add2_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 21) (reg-flag mi dst))
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in (tmp 18) (reg-flag ex dst))
      (allocate-in (tmp 4) (reg-flag al dst))
      (allocate-in (tmp 2) (reg-flag ah src2))
      (allocate-in (tmp 14) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 0) (reg-flag ah dst))
      (allocate-in (tmp 10) (reg-flag ac dst))
      (allocate-in (tmp 17) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 5) (reg-flag al src1))
      (allocate-in (tmp 15) (reg-flag a dst))
      (allocate-in (tmp 6) (reg-flag al src2))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 1) (reg-flag ah src1)))
    (code
      (= (tmp 3) (satadd (constant ? 16) (tmp 1) (tmp 2)))
      (set-reg (tmp 0) (tmp 3))
      (= (tmp 7) (satadd (constant ? 16) (tmp 5) (tmp 6)))
      (set-reg (tmp 4) (tmp 7))
      (= (tmp 8) (reg-range dst (constant ? 16) (constant ? 39)))
      (= (tmp 9) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (icmp (constant ? 40) eq (tmp 12) (constant ? 0)))
      (br (tmp 13) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 16) (icmp (constant ? 40) eq (tmp 15) (constant ? -1)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 17) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 18) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 19) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 20) (phi ((no-value . bb_3) ((tmp 19) . bb_4))))
      (= (tmp 22) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 21) (tmp 22)))))

(instruction
  mv_r16_any16-no-modifier
  (pattern
    (constraints
      (allocate-in dst (a0g a1g a2g a3g a4g a5g a6g a7g ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN)))
    (code
      (= (tmp 33) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 33))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 27) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 27))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 26) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 26))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (allocate-in (tmp 34) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 12) (reg-flag al dst))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 18) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 18))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (allocate-in (tmp 34) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 12) (reg-flag al dst))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 17) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 17))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (reg-flag l dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 0))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 4) (sext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 4))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 3) (zext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 3))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36)))))

(instruction
  sin_a16l_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a1h a2h a3h a0l a1l a2l a3l a0h)))
    (code)))

(instruction
  neg2_a40_a16h_a40
  (pattern
    (constraints
      (allocate-in (tmp 24) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 18) (reg-flag a dst))
      (allocate-in (tmp 25) (reg-flag a dst))
      (allocate-in (tmp 28) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag ex dst))
      (allocate-in (tmp 20) (reg-flag ac dst))
      (allocate-in (tmp 31) (reg-flag mi dst))
      (allocate-in (tmp 22) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a4h a5h a6h a7h a4l a5l a6l a7l)))
    (code
      (= (tmp 0) (reg-range src2 (constant ? 14) (constant ? 14)))
      (= (tmp 1) (icmp eq (constant ? 1) (tmp 0) (constant ? 1)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (sub (constant ? 8) (constant ? 0) (constant ? 15)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 5) (satsub (tmp 3) (constant ? 0) (tmp 4)))
      (set-reg (tmp 2) (tmp 5))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 7) (reg-range src1 (constant ? 0) (constant ? 15)))
      (set-reg (tmp 6) (tmp 7))
      (br bb_2)
      (label bb_2)
      (= (tmp 8) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 9) (reg-range src2 (constant ? 15) (constant ? 15)))
      (= (tmp 10) (icmp eq (constant ? 1) (tmp 9) (constant ? 1)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (= (tmp 11) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 12) (sub (constant ? 8) (constant ? 16) (constant ? 31)))
      (= (tmp 13) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 14) (satsub (tmp 12) (constant ? 0) (tmp 13)))
      (set-reg (tmp 11) (tmp 14))
      (br bb_5)
      (label bb_4)
      (= (tmp 15) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 16) (reg-range src1 (constant ? 16) (constant ? 31)))
      (set-reg (tmp 15) (tmp 16))
      (br bb_5)
      (label bb_5)
      (= (tmp 17) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 19) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 18) (tmp 19))
      (= (tmp 21) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 20) (tmp 21))
      (= (tmp 23) (icmp (constant ? 40) eq (tmp 22) (constant ? 0)))
      (br (tmp 23) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 26) (icmp (constant ? 40) eq (tmp 25) (constant ? -1)))
      (br (tmp 26) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 27) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 28) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 29) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 30) (phi ((no-value . bb_9) ((tmp 29) . bb_10))))
      (= (tmp 32) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 31) (tmp 32)))))

(instruction
  xor_a40_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 1) (reg-flag ac dst))
      (allocate-in (tmp 9) (reg-flag op dst))
      (allocate-in (tmp 5) (reg-flag ms dst))
      (allocate-in (tmp 3) (reg-flag mi dst))
      (allocate-in (tmp 7) (reg-flag ls dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (bit_xor (constant ? 40) src1 src2))
      (set-reg dst (tmp 0))
      (= (tmp 2) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 10) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 9) (tmp 11)))))

(instruction
  mv_any16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (immediate imm16b ((0 . 65535)))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 2) (zext (constant ? 16) imm16b (constant ? 40)))
      (set-reg dst (tmp 2))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (immediate imm16b ((0 . 65535)))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 3) (sext (constant ? 16) imm16b (constant ? 40)))
      (set-reg dst (tmp 3))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (immediate imm16b ((0 . 65535)))
      (reg-flag l dst ((0 . 0))))
    (code
      (set-reg dst imm16b)))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 11) (reg-flag al dst))
      (reg-flag h dst ((1 . 1)))
      (immediate imm16b ((0 . 65535)))
      (reg-flag u dst ((1 . 1))))
    (code
      (set-reg (tmp 11) (constant ? 0))
      (= (tmp 16) (zext (constant ? 16) imm16b (constant ? 32)))
      (set-reg dst (tmp 16))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 11) (reg-flag al dst))
      (reg-flag h dst ((1 . 1)))
      (immediate imm16b ((0 . 65535)))
      (reg-flag u dst ((0 . 0))))
    (code
      (set-reg (tmp 11) (constant ? 0))
      (= (tmp 17) (sext (constant ? 16) imm16b (constant ? 32)))
      (set-reg dst (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (immediate imm16b ((0 . 65535)))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 25) (zext (constant ? 16) imm16b (constant ? 32)))
      (set-reg dst (tmp 25))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (immediate imm16b ((0 . 65535)))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 26) (sext (constant ? 16) imm16b (constant ? 32)))
      (set-reg dst (tmp 26))))
  (pattern
    (constraints
      (allocate-in dst (a0g a1g a2g a3g a4g a5g a6g a7g ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr))
      (immediate imm16b ((0 . 65535))))
    (code)))

(instruction
  mv_any16_r16_nimm12
  (pattern
    (constraints
      (allocate-in src (a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr))
      (allocate-in (tmp 7) (reg-flag z rN))
      (aliases (src (tmp 5)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (immediate UImm ((0 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (store (constant ? 16) ldm (tmp 0) (tmp 5))
      (= (tmp 8) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 7) (tmp 9)))))

(instruction
  exs_a40_nimm5_nimm4_a16
  (pattern
    (constraints
      (allocate-in dst (a4h a5h a6h a7h a4l a5l a6l a7l))
      (immediate ww ((0 . 15)))
      (allocate-in (tmp 9) (reg-flag ls dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag ms dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag op dst))
      (immediate ss ((0 . 31))))
    (code
      (= (tmp 0) (add (constant ? 5) ss ww))
      (= (tmp 1) (reg-range src ss (tmp 0)))
      (= (tmp 2) (sext ww (tmp 1) (constant ? 16)))
      (set-reg dst (tmp 2))
      (= (tmp 4) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  xnor_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 6) (reg-flag ms dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (bit_xor (constant ? 40) src1 src2))
      (= (tmp 1) (bit_not (constant ? 40) (tmp 0)))
      (set-reg dst (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  mv_r16_nimm12_any16
  (pattern
    (constraints
      (allocate-in dst (a0g a1g a2g a3g a4g a5g a6g a7g ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 36) (reg-flag z rN))
      (immediate UImm ((0 . 4095))))
    (code
      (= (tmp 34) (add (constant ? 16) rN UImm))
      (= (tmp 35) (load-mem (constant ? 16) ldm (tmp 34)))
      (set-reg dst (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag u dst ((0 . 0)))
      (immediate UImm ((0 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 28) (sext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 28))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag u dst ((1 . 1)))
      (immediate UImm ((0 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 27) (zext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 27))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0)))
      (immediate UImm ((0 . 4095)))
      (allocate-in (tmp 36) (reg-flag z rN))
      (allocate-in (tmp 13) (reg-flag al dst)))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 13) (constant ? 0))
      (= (tmp 19) (sext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 19))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1)))
      (immediate UImm ((0 . 4095)))
      (allocate-in (tmp 36) (reg-flag z rN))
      (allocate-in (tmp 13) (reg-flag al dst)))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 13) (constant ? 0))
      (= (tmp 18) (zext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 18))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag l dst ((0 . 0)))
      (immediate UImm ((0 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg dst (tmp 1))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag u dst ((0 . 0)))
      (immediate UImm ((0 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 5) (sext (constant ? 16) (tmp 1) (constant ? 40)))
      (set-reg dst (tmp 5))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag u dst ((1 . 1)))
      (immediate UImm ((0 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 4) (zext (constant ? 16) (tmp 1) (constant ? 40)))
      (set-reg dst (tmp 4))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38)))))

(instruction
  addscale2_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 2) (reg-flag al src2))
      (allocate-in (tmp 12) (reg-flag ac dst))
      (allocate-in (tmp 1) (reg-flag al src1))
      (allocate-in (tmp 16) (reg-flag ex dst))
      (allocate-in (tmp 14) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 23) (reg-flag mi dst))
      (allocate-in (tmp 0) (reg-flag al dst))
      (allocate-in (tmp 17) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 19) (reg-flag ex dst))
      (allocate-in (tmp 5) (reg-flag ah dst))
      (allocate-in (tmp 7) (reg-flag ah src2))
      (allocate-in (tmp 6) (reg-flag ah src1))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 20) (reg-flag ex dst)))
    (code
      (= (tmp 3) (add (constant ? 16) (tmp 1) (tmp 2)))
      (= (tmp 4) (lshr (constant ? 16) (tmp 3) (constant ? 1)))
      (set-reg (tmp 0) (tmp 4))
      (= (tmp 8) (add (constant ? 16) (tmp 6) (tmp 7)))
      (= (tmp 9) (lshr (constant ? 16) (tmp 8) (constant ? 1)))
      (set-reg (tmp 5) (tmp 9))
      (= (tmp 10) (reg-range dst (constant ? 16) (constant ? 39)))
      (= (tmp 11) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (icmp (constant ? 40) eq (tmp 14) (constant ? 0)))
      (br (tmp 15) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 18) (icmp (constant ? 40) eq (tmp 17) (constant ? -1)))
      (br (tmp 18) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 19) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 20) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 21) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 22) (phi ((no-value . bb_3) ((tmp 21) . bb_4))))
      (= (tmp 24) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 23) (tmp 24)))))

(instruction
  exz_a40_a16hh_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ac dst))
      (allocate-in (tmp 10) (reg-flag mi dst))
      (allocate-in (tmp 16) (reg-flag op dst))
      (allocate-in (tmp 14) (reg-flag ls dst))
      (allocate-in (tmp 12) (reg-flag ms dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a6h a7h a6l a7l)))
    (code
      (= (tmp 0) (bit_and (constant ? 40) src2 (constant ? 3840)))
      (= (tmp 1) (lshr (constant ? 40) (tmp 0) (constant ? 8)))
      (= (tmp 2) (bit_and (constant ? 40) src1 (constant ? 15)))
      (= (tmp 3) (bit_and (constant ? 40) src1 (constant ? 3840)))
      (= (tmp 4) (lshr (constant ? 40) (tmp 3) (constant ? 8)))
      (= (tmp 5) (add (constant ? 40) (tmp 2) (tmp 4)))
      (= (tmp 6) (reg-range src1 (tmp 2) (tmp 5)))
      (= (tmp 7) (zext (tmp 1) (tmp 6) (constant ? 40)))
      (set-reg dst (tmp 7))
      (= (tmp 9) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 14) (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18)))))

(instruction
  shfta_nimm6_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases ((tmp 10) (tmp 11)))
      (immediate SImm ((-16 . -1) (1 . 16)))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 1) (icmp sgt (constant ? 40) SImm (constant ? 0)))
      (br (tmp 1) bb_3 bb_4)
      (label bb_3)
      (= (tmp 2) (shl (constant ? 32) (constant ? 1) SImm))
      (= (tmp 3) (satmul (constant ? 32) dst (tmp 2)))
      (set-reg dst (tmp 3))
      (br bb_5)
      (label bb_4)
      (= (tmp 4) (icmp sgt (constant ? 32) SImm (constant ? 0)))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (= (tmp 5) (shl (constant ? 32) dst SImm))
      (set-reg dst (tmp 5))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (sub (constant ? 32) (constant ? 0) SImm))
      (= (tmp 7) (ashr (constant ? 32) dst (tmp 6)))
      (= (tmp 8) (sext (constant ? 32) (tmp 7) (constant ? 40)))
      (set-reg dst (tmp 8))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases (no-value (tmp 11)))
      (immediate SImm ((-16 . -1) (1 . 16)))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code)))

(instruction
  xor_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 6) (reg-flag ms dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_xor (constant ? 16) (tmp 0) src))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  shfta_a40_nimm7_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases ((tmp 10) (tmp 11)))
      (immediate SImm ((-32 . -1) (1 . 32)))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 1) (icmp sgt (constant ? 40) SImm (constant ? 0)))
      (br (tmp 1) bb_3 bb_4)
      (label bb_3)
      (= (tmp 2) (shl (constant ? 32) (constant ? 1) SImm))
      (= (tmp 3) (satmul (constant ? 32) src (tmp 2)))
      (set-reg dst (tmp 3))
      (br bb_5)
      (label bb_4)
      (= (tmp 4) (icmp sgt (constant ? 32) SImm (constant ? 0)))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (= (tmp 5) (shl (constant ? 32) src SImm))
      (set-reg dst (tmp 5))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (sub (constant ? 32) (constant ? 0) SImm))
      (= (tmp 7) (ashr (constant ? 32) src (tmp 6)))
      (= (tmp 8) (sext (constant ? 32) (tmp 7) (constant ? 40)))
      (set-reg dst (tmp 8))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases (no-value (tmp 11)))
      (immediate SImm ((-32 . -1) (1 . 32)))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code)))

(instruction
  exz_a40_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ac dst))
      (allocate-in (tmp 10) (reg-flag mi dst))
      (allocate-in (tmp 16) (reg-flag op dst))
      (allocate-in (tmp 14) (reg-flag ls dst))
      (allocate-in (tmp 12) (reg-flag ms dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (bit_and (constant ? 40) src2 (constant ? 3840)))
      (= (tmp 1) (lshr (constant ? 40) (tmp 0) (constant ? 8)))
      (= (tmp 2) (bit_and (constant ? 40) src1 (constant ? 15)))
      (= (tmp 3) (bit_and (constant ? 40) src1 (constant ? 3840)))
      (= (tmp 4) (lshr (constant ? 40) (tmp 3) (constant ? 8)))
      (= (tmp 5) (add (constant ? 40) (tmp 2) (tmp 4)))
      (= (tmp 6) (reg-range src1 (tmp 2) (tmp 5)))
      (= (tmp 7) (zext (tmp 1) (tmp 6) (constant ? 40)))
      (set-reg dst (tmp 7))
      (= (tmp 9) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 14) (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18)))))

(instruction
  mv_any16_r16_a16l
  (pattern
    (constraints
      (allocate-in src (a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr))
      (allocate-in (tmp 7) (reg-flag z rN))
      (aliases (src (tmp 5)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in regi (a0l a1l a2l a3l a4l a5l a6l a7l)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (store (constant ? 16) ldm (tmp 0) (tmp 5))
      (= (tmp 8) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 7) (tmp 9)))))

(instruction
  sat_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 1) (reg-flag ex dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst)))
    (code
      (= (tmp 0) (satadd (constant ? 32) (constant ? 0) src))
      (set-reg dst (tmp 0))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 3) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5)))))

(instruction
  exz_a40_a16_a16
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ac dst))
      (allocate-in (tmp 10) (reg-flag mi dst))
      (allocate-in (tmp 16) (reg-flag op dst))
      (allocate-in (tmp 14) (reg-flag ls dst))
      (allocate-in (tmp 12) (reg-flag ms dst))
      (allocate-in dst (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (bit_and (constant ? 40) src2 (constant ? 3840)))
      (= (tmp 1) (lshr (constant ? 40) (tmp 0) (constant ? 8)))
      (= (tmp 2) (bit_and (constant ? 40) src1 (constant ? 15)))
      (= (tmp 3) (bit_and (constant ? 40) src1 (constant ? 3840)))
      (= (tmp 4) (lshr (constant ? 40) (tmp 3) (constant ? 8)))
      (= (tmp 5) (add (constant ? 40) (tmp 2) (tmp 4)))
      (= (tmp 6) (reg-range src1 (tmp 2) (tmp 5)))
      (= (tmp 7) (zext (tmp 1) (tmp 6) (constant ? 16)))
      (set-reg dst (tmp 7))
      (= (tmp 9) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 14) (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18)))))

(instruction
  mv_any16_r16_a16h
  (pattern
    (constraints
      (allocate-in src (a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr))
      (allocate-in (tmp 7) (reg-flag z rN))
      (aliases (src (tmp 5)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in regi (a1h a2h a3h a4h a5h a6h a7h a0h)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (store (constant ? 16) ldm (tmp 0) (tmp 5))
      (= (tmp 8) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 7) (tmp 9)))))

(instruction
  xor_a16_a16_low
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ms dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 1) (reg-flag a dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in (tmp 13) (reg-flag a dst))
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag op dst)))
    (code
      (= (tmp 0) (bit_xor (constant ? 16) dst src))
      (set-reg dst (tmp 0))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 9) (reg-range (tmp 7) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 12) (reg-range (tmp 10) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 15) (icmp eq (constant ? 1) (tmp 13) (constant ? 0)))
      (br (tmp 15) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 16) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 14) (tmp 16)))))

(instruction
  scale2_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 8) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag ac dst))
      (allocate-in (tmp 6) (reg-flag a dst))
      (allocate-in (tmp 11) (reg-flag mi dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (ashr (constant ? 40) (tmp 1) (constant ? 1)))
      (set-reg (tmp 0) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 4) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 5) (ashr (constant ? 40) (tmp 4) (constant ? 1)))
      (set-reg (tmp 3) (tmp 5))
      (= (tmp 7) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 6) (tmp 7))
      (set-reg (tmp 8) (constant ? 0))
      (= (tmp 10) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 11) (tmp 12)))))

(instruction
  mv_r16_a16l_any16
  (pattern
    (constraints
      (allocate-in dst (a0g a1g a2g a3g a4g a5g a6g a7g ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (allocate-in regi (a0l a1l a2l a3l a4l a5l a6l a7l)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (reg-flag u dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (allocate-in regi (a0l a1l a2l a3l a4l a5l a6l a7l)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 28) (sext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 28))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (reg-flag u dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (allocate-in regi (a0l a1l a2l a3l a4l a5l a6l a7l)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 27) (zext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 27))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (reg-flag u dst ((0 . 0)))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 13) (reg-flag al dst))
      (allocate-in regi (a0l a1l a2l a3l a4l a5l a6l a7l)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 13) (constant ? 0))
      (= (tmp 19) (sext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 19))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (reg-flag u dst ((1 . 1)))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 13) (reg-flag al dst))
      (allocate-in regi (a0l a1l a2l a3l a4l a5l a6l a7l)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 13) (constant ? 0))
      (= (tmp 18) (zext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 18))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (allocate-in regi (a0l a1l a2l a3l a4l a5l a6l a7l)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg dst (tmp 1))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (reg-flag u dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (allocate-in regi (a0l a1l a2l a3l a4l a5l a6l a7l)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 5) (sext (constant ? 16) (tmp 1) (constant ? 40)))
      (set-reg dst (tmp 5))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (reg-flag u dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (allocate-in regi (a0l a1l a2l a3l a4l a5l a6l a7l)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 4) (zext (constant ? 16) (tmp 1) (constant ? 40)))
      (set-reg dst (tmp 4))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36)))))

(instruction
  exz_a40_nimm5_nimm5_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate ww ((0 . 31)))
      (allocate-in (tmp 9) (reg-flag ls dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag ms dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag op dst))
      (immediate ss ((0 . 31))))
    (code
      (= (tmp 0) (add (constant ? 5) ss ww))
      (= (tmp 1) (reg-range src ss (tmp 0)))
      (= (tmp 2) (zext ww (tmp 1) (constant ? 40)))
      (set-reg dst (tmp 2))
      (= (tmp 4) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  shfta_a16_nimm6_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (aliases ((tmp 10) (tmp 11)))
      (immediate SImm ((-16 . -1) (1 . 16)))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 1) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 1) bb_3 bb_4)
      (label bb_3)
      (= (tmp 2) (shl (constant ? 16) (constant ? 1) SImm))
      (= (tmp 3) (satmul (constant ? 16) src (tmp 2)))
      (set-reg dst (tmp 3))
      (br bb_5)
      (label bb_4)
      (= (tmp 4) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (= (tmp 5) (shl (constant ? 16) src SImm))
      (set-reg dst (tmp 5))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 7) (ashr (constant ? 16) src (tmp 6)))
      (= (tmp 8) (sext (constant ? 16) (tmp 7) (constant ? 16)))
      (set-reg dst (tmp 8))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (aliases (no-value (tmp 11)))
      (immediate SImm ((-16 . -1) (1 . 16)))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code)))

(instruction
  xor_a16_a16_high
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ms dst))
      (allocate-in dst (a1h a2h a3h a4h a5h a6h a7h a0h))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 1) (reg-flag a dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in (tmp 13) (reg-flag a dst))
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag op dst)))
    (code
      (= (tmp 0) (bit_xor (constant ? 16) dst src))
      (set-reg dst (tmp 0))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 9) (reg-range (tmp 7) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 12) (reg-range (tmp 10) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 15) (icmp eq (constant ? 1) (tmp 13) (constant ? 0)))
      (br (tmp 15) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 16) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 14) (tmp 16)))))

(instruction
  mv_r16_a16h_any16
  (pattern
    (constraints
      (allocate-in dst (a0g a1g a2g a3g a4g a5g a6g a7g ac0 ac1 af10 af32 af54 af76 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3 ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 tconfig2 tval tref tnr))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (allocate-in regi (a1h a2h a3h a4h a5h a6h a7h a0h)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (reg-flag u dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (allocate-in regi (a1h a2h a3h a4h a5h a6h a7h a0h)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 28) (sext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 28))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (reg-flag u dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (allocate-in regi (a1h a2h a3h a4h a5h a6h a7h a0h)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 27) (zext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 27))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (reg-flag u dst ((0 . 0)))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 13) (reg-flag al dst))
      (allocate-in regi (a1h a2h a3h a4h a5h a6h a7h a0h)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 13) (constant ? 0))
      (= (tmp 19) (sext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 19))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (reg-flag u dst ((1 . 1)))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 13) (reg-flag al dst))
      (allocate-in regi (a1h a2h a3h a4h a5h a6h a7h a0h)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 13) (constant ? 0))
      (= (tmp 18) (zext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 18))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (allocate-in regi (a1h a2h a3h a4h a5h a6h a7h a0h)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg dst (tmp 1))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (reg-flag u dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (allocate-in regi (a1h a2h a3h a4h a5h a6h a7h a0h)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 5) (sext (constant ? 16) (tmp 1) (constant ? 40)))
      (set-reg dst (tmp 5))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (reg-flag u dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (allocate-in regi (a1h a2h a3h a4h a5h a6h a7h a0h)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 4) (zext (constant ? 16) (tmp 1) (constant ? 40)))
      (set-reg dst (tmp 4))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36)))))

(instruction
  xorz_a16_a16_a16
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 6) (reg-flag ms dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (bit_xor (constant ? 16) src1 src2))
      (set-reg dst (tmp 0))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12))))
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 1) (reg-flag ag dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 6) (reg-flag ms dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (bit_xor (constant ? 16) src1 src2))
      (set-reg dst (tmp 0))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  addsp_nimm13
  (pattern
    (constraints
      (immediate UImm ((0 . 8191))))
    (code
      (= (tmp 0) (add (constant ? 16) (register sp) UImm))
      (set-reg (register sp) (tmp 0)))))

(instruction
  exs_a40_nimm5_nimm5_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate ww ((0 . 31)))
      (allocate-in (tmp 9) (reg-flag ls dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag ms dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag op dst))
      (immediate ss ((0 . 31))))
    (code
      (= (tmp 0) (add (constant ? 5) ss ww))
      (= (tmp 1) (reg-range src ss (tmp 0)))
      (= (tmp 2) (sext ww (tmp 1) (constant ? 40)))
      (set-reg dst (tmp 2))
      (= (tmp 4) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  exz_a40_nimm5_nimm4_a16
  (pattern
    (constraints
      (allocate-in dst (a4h a5h a6h a7h a4l a5l a6l a7l))
      (immediate ww ((0 . 15)))
      (allocate-in (tmp 9) (reg-flag ls dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag ms dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag op dst))
      (immediate ss ((0 . 31))))
    (code
      (= (tmp 0) (add (constant ? 5) ss ww))
      (= (tmp 1) (reg-range src ss (tmp 0)))
      (= (tmp 2) (zext ww (tmp 1) (constant ? 16)))
      (set-reg dst (tmp 2))
      (= (tmp 4) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  shfts_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases ((tmp 15) (tmp 16)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 0) (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 40) . bb_0) (src2 . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -40) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (sext (constant ? 32) src1 (constant ? 40)))
      (= (tmp 6) (icmp sgt (constant ? 40) (tmp 3) (constant ? 0)))
      (br (tmp 6) bb_9 bb_10)
      (label bb_9)
      (= (tmp 7) (shl (constant ? 32) (constant ? 1) (tmp 3)))
      (= (tmp 8) (satmul (constant ? 32) (tmp 4) (tmp 7)))
      (set-reg dst (tmp 8))
      (br bb_11)
      (label bb_10)
      (= (tmp 9) (icmp sgt (constant ? 32) (tmp 3) (constant ? 0)))
      (br (tmp 9) bb_6 bb_7)
      (label bb_6)
      (= (tmp 10) (shl (constant ? 32) (tmp 4) (tmp 3)))
      (set-reg dst (tmp 10))
      (br bb_8)
      (label bb_7)
      (= (tmp 11) (sub (constant ? 32) (constant ? 0) (tmp 3)))
      (= (tmp 12) (ashr (constant ? 32) (tmp 4) (tmp 11)))
      (= (tmp 13) (sext (constant ? 32) (tmp 12) (constant ? 40)))
      (set-reg dst (tmp 13))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 15) (phi ((no-value . bb_9) ((tmp 14) . bb_10))))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases (no-value (tmp 16)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 0) (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 40) . bb_0) (src2 . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -40) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (sext (constant ? 32) src1 (constant ? 40))))))

(instruction
  addsp_m16
  (pattern
    (constraints
      (allocate-in mN (m2 m3 m0 m1)))
    (code
      (= (tmp 0) (add (constant ? 16) (register sp) mN))
      (set-reg (register sp) (tmp 0)))))

(instruction
  add_nimm16_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag of dst))
      (allocate-in (tmp 24) (reg-flag of dst))
      (allocate-in (tmp 33) (reg-flag ac dst))
      (allocate-in (tmp 35) (reg-flag a dst))
      (immediate UImm ((0 . 65535)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 21) (reg-flag c dst))
      (allocate-in (tmp 40) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag of dst))
      (allocate-in (tmp 20) (reg-flag c dst))
      (allocate-in (tmp 37) (reg-flag ex dst))
      (allocate-in (tmp 38) (reg-flag a dst))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 17) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 18) (add (constant ? 40) dst (tmp 17)))
      (= (tmp 19) (icmp (constant ? 41) slt (constant ? 0) (tmp 18)))
      (br (tmp 19) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 20) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 21) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 22) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 23) (icmp (constant ? 40) slt (tmp 18) dst))
      (br (tmp 23) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 25) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 26) (icmp (constant ? 40) slt (tmp 18) (tmp 25)))
      (br (tmp 26) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 27) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 28) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 29) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 30) (phi ((no-value . bb_15) ((tmp 29) . bb_16))))
      (= (tmp 31) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 32) (add (constant ? 40) dst (tmp 31)))
      (set-reg dst (tmp 32))
      (= (tmp 34) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 33) (tmp 34))
      (= (tmp 36) (icmp (constant ? 40) eq (tmp 35) (constant ? 0)))
      (br (tmp 36) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 37) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 39) (icmp (constant ? 40) eq (tmp 38) (constant ? -1)))
      (br (tmp 39) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 41) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 42) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 43) (phi ((no-value . bb_21) ((tmp 42) . bb_22))))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45))))
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 35) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate UImm ((0 . 65535)))
      (allocate-in (tmp 12) (reg-flag of dst))
      (allocate-in (tmp 11) (reg-flag of dst))
      (allocate-in (tmp 40) (reg-flag ex dst))
      (allocate-in (tmp 8) (reg-flag of dst))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 5) (reg-flag c dst))
      (allocate-in (tmp 37) (reg-flag ex dst))
      (allocate-in (tmp 38) (reg-flag a dst))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 1) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 2) (add (constant ? 32) dst (tmp 1)))
      (= (tmp 3) (icmp (constant ? 33) slt (constant ? 0) (tmp 2)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 5) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 6) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (icmp (constant ? 32) slt (tmp 2) dst))
      (br (tmp 7) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 8) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 9) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 10) (icmp (constant ? 32) slt (tmp 2) (tmp 9)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 12) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 13) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) ((tmp 13) . bb_7))))
      (= (tmp 15) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 16) (satadd (constant ? 32) dst (tmp 15)))
      (set-reg dst (tmp 16))
      (= (tmp 34) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 33) (tmp 34))
      (= (tmp 36) (icmp (constant ? 40) eq (tmp 35) (constant ? 0)))
      (br (tmp 36) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 37) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 39) (icmp (constant ? 40) eq (tmp 38) (constant ? -1)))
      (br (tmp 39) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 41) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 42) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 43) (phi ((no-value . bb_21) ((tmp 42) . bb_22))))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45)))))

(instruction
  add4_a40_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 29) (reg-flag mi dst))
      (allocate-in (tmp 18) (reg-flag ac dst))
      (allocate-in (tmp 25) (reg-flag ex dst))
      (allocate-in (tmp 20) (reg-flag a dst))
      (allocate-in (tmp 26) (reg-flag ex dst))
      (allocate-in (tmp 22) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 23) (reg-flag a dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (satadd (constant ? 8) (tmp 1) (tmp 2)))
      (set-reg (tmp 0) (tmp 3))
      (= (tmp 4) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 5) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 6) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 7) (satadd (constant ? 8) (tmp 5) (tmp 6)))
      (set-reg (tmp 4) (tmp 7))
      (= (tmp 8) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 9) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 10) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 11) (satadd (constant ? 8) (tmp 9) (tmp 10)))
      (set-reg (tmp 8) (tmp 11))
      (= (tmp 12) (reg-range dst (constant ? 24) (constant ? 32)))
      (= (tmp 13) (reg-range src1 (constant ? 24) (constant ? 32)))
      (= (tmp 14) (reg-range src1 (constant ? 24) (constant ? 32)))
      (= (tmp 15) (satadd (constant ? 8) (tmp 13) (tmp 14)))
      (set-reg (tmp 12) (tmp 15))
      (= (tmp 16) (reg-range dst (constant ? 24) (constant ? 39)))
      (= (tmp 17) (sext (constant ? 8) dst (constant ? 16)))
      (set-reg (tmp 16) (tmp 17))
      (= (tmp 19) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 18) (tmp 19))
      (= (tmp 21) (icmp (constant ? 40) eq (tmp 20) (constant ? 0)))
      (br (tmp 21) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 22) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 24) (icmp (constant ? 40) eq (tmp 23) (constant ? -1)))
      (br (tmp 24) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 25) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 26) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 27) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 28) (phi ((no-value . bb_3) ((tmp 27) . bb_4))))
      (= (tmp 30) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 29) (tmp 30)))))

(instruction
  subsp_m16
  (pattern
    (constraints
      (allocate-in mN (m2 m3 m0 m1)))
    (code
      (= (tmp 0) (sub (constant ? 16) (register sp) mN))
      (set-reg (register sp) (tmp 0)))))

(instruction
  ins_a40_a16hh_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 13) (reg-flag op dst))
      (allocate-in (tmp 9) (reg-flag ms dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a6h a7h a6l a7l)))
    (code
      (= (tmp 0) (bit_and (constant ? 40) dst (constant ? 15)))
      (= (tmp 1) (bit_and (constant ? 40) dst (constant ? 3840)))
      (= (tmp 2) (lshr (constant ? 40) (tmp 1) (constant ? 8)))
      (= (tmp 3) (add (constant ? 40) (tmp 0) (tmp 2)))
      (= (tmp 4) (reg-range dst (tmp 0) (tmp 3)))
      (set-reg (tmp 4) src1)
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 14) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 14) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 15) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 13) (tmp 15)))))

(instruction
  xor_nimm16_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls (tmp 0)))
      (allocate-in (tmp 10) (reg-flag op (tmp 0)))
      (allocate-in (tmp 4) (reg-flag mi (tmp 0)))
      (allocate-in (tmp 2) (reg-flag ac (tmp 0)))
      (immediate UImm ((0 . 65535)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 6) (reg-flag ms (tmp 0))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_xor (constant ? 16) (tmp 0) UImm))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range (tmp 0) (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 1) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 1) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 1) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  mva_a40_r16++
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 6) (reg-flag z rN)))
    (code
      (= (tmp 0) (reg-range src (constant ? 32) (constant ? 39)))
      (store (constant ? 8) ldm rN (tmp 0))
      (= (tmp 2) (add (constant ? 16) rN (constant ? 1)))
      (= (tmp 3) (reg-range src (constant ? 32) (constant ? 39)))
      (store (constant ? 8) ldm (tmp 2) (tmp 3))
      (= (tmp 5) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 5))
      (= (tmp 7) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 7) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 8) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 6) (tmp 8)))))

(instruction
  nop_instr
  (pattern
    (constraints)
    (code)))

(instruction
  ins_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 13) (reg-flag op dst))
      (allocate-in (tmp 9) (reg-flag ms dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (bit_and (constant ? 40) dst (constant ? 15)))
      (= (tmp 1) (bit_and (constant ? 40) dst (constant ? 3840)))
      (= (tmp 2) (lshr (constant ? 40) (tmp 1) (constant ? 8)))
      (= (tmp 3) (add (constant ? 40) (tmp 0) (tmp 2)))
      (= (tmp 4) (reg-range dst (tmp 0) (tmp 3)))
      (set-reg (tmp 4) src1)
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 14) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 14) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 15) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 13) (tmp 15)))))

(instruction
  neg2_a40_nimm2_a40
  (pattern
    (constraints
      (allocate-in (tmp 24) (reg-flag ex dst))
      (immediate imm2b ((0 . 3)))
      (allocate-in (tmp 18) (reg-flag a dst))
      (allocate-in (tmp 25) (reg-flag a dst))
      (allocate-in (tmp 28) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag ex dst))
      (allocate-in (tmp 20) (reg-flag ac dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 22) (reg-flag a dst))
      (allocate-in (tmp 31) (reg-flag mi dst)))
    (code
      (= (tmp 0) (bit_and (constant ? 2) imm2b (constant ? 1)))
      (= (tmp 1) (icmp eq (constant ? 2) (tmp 0) (constant ? 1)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (sub (constant ? 8) (constant ? 0) (constant ? 15)))
      (= (tmp 4) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 5) (satsub (tmp 3) (constant ? 0) (tmp 4)))
      (set-reg (tmp 2) (tmp 5))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 7) (reg-range src (constant ? 0) (constant ? 15)))
      (set-reg (tmp 6) (tmp 7))
      (br bb_2)
      (label bb_2)
      (= (tmp 8) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 9) (bit_and (constant ? 2) imm2b (constant ? 2)))
      (= (tmp 10) (icmp eq (constant ? 2) (tmp 9) (constant ? 2)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (= (tmp 11) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 12) (sub (constant ? 8) (constant ? 16) (constant ? 31)))
      (= (tmp 13) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 14) (satsub (tmp 12) (constant ? 0) (tmp 13)))
      (set-reg (tmp 11) (tmp 14))
      (br bb_5)
      (label bb_4)
      (= (tmp 15) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 16) (reg-range src (constant ? 16) (constant ? 31)))
      (set-reg (tmp 15) (tmp 16))
      (br bb_5)
      (label bb_5)
      (= (tmp 17) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 19) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 18) (tmp 19))
      (= (tmp 21) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 20) (tmp 21))
      (= (tmp 23) (icmp (constant ? 40) eq (tmp 22) (constant ? 0)))
      (br (tmp 23) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 26) (icmp (constant ? 40) eq (tmp 25) (constant ? -1)))
      (br (tmp 26) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 27) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 28) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 29) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 30) (phi ((no-value . bb_9) ((tmp 29) . bb_10))))
      (= (tmp 32) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 31) (tmp 32)))))

(instruction
  mva_a40_r16--
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 6) (reg-flag z rN)))
    (code
      (= (tmp 0) (reg-range src (constant ? 32) (constant ? 39)))
      (store (constant ? 8) ldm rN (tmp 0))
      (= (tmp 2) (add (constant ? 16) rN (constant ? 1)))
      (= (tmp 3) (reg-range src (constant ? 32) (constant ? 39)))
      (store (constant ? 8) ldm (tmp 2) (tmp 3))
      (= (tmp 5) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 5))
      (= (tmp 7) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 7) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 8) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 6) (tmp 8)))))

(instruction
  xorh_nimm16_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls (tmp 0)))
      (allocate-in (tmp 10) (reg-flag op (tmp 0)))
      (allocate-in (tmp 4) (reg-flag mi (tmp 0)))
      (allocate-in (tmp 2) (reg-flag ac (tmp 0)))
      (immediate UImm ((0 . 65535)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 6) (reg-flag ms (tmp 0))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_xor (constant ? 16) (tmp 0) UImm))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range (tmp 0) (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 1) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 1) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 1) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  ins_a16_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 13) (reg-flag op dst))
      (allocate-in (tmp 9) (reg-flag ms dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag mi dst))
      (allocate-in src1 (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (bit_and (constant ? 40) dst (constant ? 15)))
      (= (tmp 1) (bit_and (constant ? 40) dst (constant ? 3840)))
      (= (tmp 2) (lshr (constant ? 40) (tmp 1) (constant ? 8)))
      (= (tmp 3) (add (constant ? 40) (tmp 0) (tmp 2)))
      (= (tmp 4) (reg-range dst (tmp 0) (tmp 3)))
      (set-reg (tmp 4) src1)
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 14) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 14) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 15) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 13) (tmp 15)))))

(instruction
  mva_a40_r16++Imm
  (pattern
    (constraints
      (immediate Imm ((1 . 15)))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 6) (reg-flag z rN)))
    (code
      (= (tmp 0) (reg-range src (constant ? 32) (constant ? 39)))
      (store (constant ? 8) ldm rN (tmp 0))
      (= (tmp 2) (add (constant ? 16) rN (constant ? 1)))
      (= (tmp 3) (reg-range src (constant ? 32) (constant ? 39)))
      (store (constant ? 8) ldm (tmp 2) (tmp 3))
      (= (tmp 5) (add (constant ? 16) rN Imm))
      (set-reg rN (tmp 5))
      (= (tmp 7) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 7) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 8) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 6) (tmp 8)))))

(instruction
  xorh_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 6) (reg-flag ms dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_xor (constant ? 16) (tmp 0) src))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  ins_a40_nimm5_nimm5_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate ww ((0 . 31)))
      (allocate-in (tmp 9) (reg-flag ls dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag ms dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag op dst))
      (immediate ss ((0 . 31))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 1) (add (constant ? 8) ss ww))
      (= (tmp 2) (reg-range (tmp 0) ss (tmp 1)))
      (set-reg (tmp 2) src)
      (= (tmp 4) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  mva_a40_r16--Imm
  (pattern
    (constraints
      (immediate Imm ((1 . 15)))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 6) (reg-flag z rN)))
    (code
      (= (tmp 0) (reg-range src (constant ? 32) (constant ? 39)))
      (store (constant ? 8) ldm rN (tmp 0))
      (= (tmp 2) (add (constant ? 16) rN (constant ? 1)))
      (= (tmp 3) (reg-range src (constant ? 32) (constant ? 39)))
      (store (constant ? 8) ldm (tmp 2) (tmp 3))
      (= (tmp 5) (sub (constant ? 16) rN Imm))
      (set-reg rN (tmp 5))
      (= (tmp 7) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 7) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 8) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 6) (tmp 8)))))

(instruction
  add_a40_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag of dst))
      (allocate-in (tmp 33) (reg-flag ac dst))
      (allocate-in (tmp 25) (reg-flag of dst))
      (allocate-in (tmp 35) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 21) (reg-flag c dst))
      (allocate-in (tmp 40) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag of dst))
      (allocate-in (tmp 20) (reg-flag c dst))
      (allocate-in (tmp 37) (reg-flag ex dst))
      (allocate-in (tmp 38) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 17) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 18) (add (constant ? 40) (tmp 17) src1))
      (= (tmp 19) (icmp (constant ? 41) slt (constant ? 0) (tmp 18)))
      (br (tmp 19) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 20) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 21) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 22) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 23) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 24) (icmp (constant ? 40) slt (tmp 18) (tmp 23)))
      (br (tmp 24) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 25) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 26) (icmp (constant ? 40) slt (tmp 18) src1))
      (br (tmp 26) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 27) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 28) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 29) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 30) (phi ((no-value . bb_15) ((tmp 29) . bb_16))))
      (= (tmp 31) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 32) (add (constant ? 40) (tmp 31) src1))
      (set-reg dst (tmp 32))
      (= (tmp 34) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 33) (tmp 34))
      (= (tmp 36) (icmp (constant ? 40) eq (tmp 35) (constant ? 0)))
      (br (tmp 36) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 37) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 39) (icmp (constant ? 40) eq (tmp 38) (constant ? -1)))
      (br (tmp 39) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 41) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 42) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 43) (phi ((no-value . bb_21) ((tmp 42) . bb_22))))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45))))
  (pattern
    (constraints
      (allocate-in (tmp 12) (reg-flag of dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 35) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 9) (reg-flag of dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag of dst))
      (allocate-in (tmp 40) (reg-flag ex dst))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 33) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 5) (reg-flag c dst))
      (allocate-in (tmp 37) (reg-flag ex dst))
      (allocate-in (tmp 38) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (add (constant ? 32) (tmp 1) src1))
      (= (tmp 3) (icmp (constant ? 33) slt (constant ? 0) (tmp 2)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 5) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 6) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 8) (icmp (constant ? 32) slt (tmp 2) (tmp 7)))
      (br (tmp 8) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 10) (icmp (constant ? 32) slt (tmp 2) src1))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 12) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 13) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) ((tmp 13) . bb_7))))
      (= (tmp 15) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 16) (satadd (constant ? 32) (tmp 15) src1))
      (set-reg dst (tmp 16))
      (= (tmp 34) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 33) (tmp 34))
      (= (tmp 36) (icmp (constant ? 40) eq (tmp 35) (constant ? 0)))
      (br (tmp 36) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 37) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 39) (icmp (constant ? 40) eq (tmp 38) (constant ? -1)))
      (br (tmp 39) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 41) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 42) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 43) (phi ((no-value . bb_21) ((tmp 42) . bb_22))))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45)))))

(instruction
  addscale2r_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 21) (reg-flag ex dst))
      (allocate-in (tmp 18) (reg-flag ex dst))
      (allocate-in (tmp 1) (reg-flag al src1))
      (allocate-in (tmp 2) (reg-flag al src2))
      (allocate-in (tmp 14) (reg-flag ac dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 22) (reg-flag ex dst))
      (allocate-in (tmp 0) (reg-flag al dst))
      (allocate-in (tmp 8) (reg-flag ah src2))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 25) (reg-flag mi dst))
      (allocate-in (tmp 19) (reg-flag a dst))
      (allocate-in (tmp 7) (reg-flag ah src1))
      (allocate-in (tmp 6) (reg-flag ah dst))
      (allocate-in (tmp 16) (reg-flag a dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 3) (add (constant ? 16) (tmp 1) (tmp 2)))
      (= (tmp 4) (add (constant ? 16) (constant ? 1) (tmp 3)))
      (= (tmp 5) (lshr (constant ? 16) (tmp 4) (constant ? 1)))
      (set-reg (tmp 0) (tmp 5))
      (= (tmp 9) (add (constant ? 16) (tmp 7) (tmp 8)))
      (= (tmp 10) (add (constant ? 16) (constant ? 1) (tmp 9)))
      (= (tmp 11) (lshr (constant ? 16) (tmp 10) (constant ? 1)))
      (set-reg (tmp 6) (tmp 11))
      (= (tmp 12) (reg-range dst (constant ? 16) (constant ? 39)))
      (= (tmp 13) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 14) (tmp 15))
      (= (tmp 17) (icmp (constant ? 40) eq (tmp 16) (constant ? 0)))
      (br (tmp 17) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 18) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 20) (icmp (constant ? 40) eq (tmp 19) (constant ? -1)))
      (br (tmp 20) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 21) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 22) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 23) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 24) (phi ((no-value . bb_3) ((tmp 23) . bb_4))))
      (= (tmp 26) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 25) (tmp 26)))))

(instruction
  xor_nimm16_a16_high
  (pattern
    (constraints
      (allocate-in dst (a1h a2h a3h a4h a5h a6h a7h a0h))
      (allocate-in (tmp 1) (reg-flag ac dst))
      (allocate-in (tmp 3) (reg-flag mi dst))
      (immediate UImm ((0 . 65535)))
      (allocate-in (tmp 5) (reg-flag ms dst))
      (allocate-in (tmp 7) (reg-flag ls dst))
      (allocate-in (tmp 9) (reg-flag op dst)))
    (code
      (= (tmp 0) (bit_xor (constant ? 16) dst UImm))
      (set-reg dst (tmp 0))
      (= (tmp 2) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 10) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 9) (tmp 11)))))

(instruction
  ins_a16_nimm5_nimm4_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate ww ((0 . 15)))
      (allocate-in (tmp 9) (reg-flag ls dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag ms dst))
      (allocate-in src (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in (tmp 11) (reg-flag op dst))
      (immediate ss ((0 . 31))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 1) (add (constant ? 8) ss ww))
      (= (tmp 2) (reg-range (tmp 0) ss (tmp 1)))
      (set-reg (tmp 2) src)
      (= (tmp 4) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  shfts_a40_nimm7_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases ((tmp 11) (tmp 12)))
      (immediate SImm ((-32 . -1) (1 . 32)))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 0) (sext (constant ? 32) src (constant ? 40)))
      (= (tmp 2) (icmp sgt (constant ? 40) SImm (constant ? 0)))
      (br (tmp 2) bb_3 bb_4)
      (label bb_3)
      (= (tmp 3) (shl (constant ? 32) (constant ? 1) SImm))
      (= (tmp 4) (satmul (constant ? 32) (tmp 0) (tmp 3)))
      (set-reg dst (tmp 4))
      (br bb_5)
      (label bb_4)
      (= (tmp 5) (icmp sgt (constant ? 32) SImm (constant ? 0)))
      (br (tmp 5) bb_0 bb_1)
      (label bb_0)
      (= (tmp 6) (shl (constant ? 32) (tmp 0) SImm))
      (set-reg dst (tmp 6))
      (br bb_2)
      (label bb_1)
      (= (tmp 7) (sub (constant ? 32) (constant ? 0) SImm))
      (= (tmp 8) (ashr (constant ? 32) (tmp 0) (tmp 7)))
      (= (tmp 9) (sext (constant ? 32) (tmp 8) (constant ? 40)))
      (set-reg dst (tmp 9))
      (br bb_2)
      (label bb_2)
      (= (tmp 10) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) ((tmp 10) . bb_4))))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases (no-value (tmp 12)))
      (immediate SImm ((-32 . -1) (1 . 32)))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 0) (sext (constant ? 32) src (constant ? 40))))))

(instruction
  mva_a40_r16--m
  (pattern
    (constraints
      (allocate-in (tmp 5) (reg-flag m rN))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2)))
    (code
      (= (tmp 0) (reg-range src (constant ? 32) (constant ? 39)))
      (store (constant ? 8) ldm rN (tmp 0))
      (= (tmp 2) (add (constant ? 16) rN (constant ? 1)))
      (= (tmp 3) (reg-range src (constant ? 32) (constant ? 39)))
      (store (constant ? 8) ldm (tmp 2) (tmp 3))
      (= (tmp 6) (sub (constant ? 16) rN (tmp 5)))
      (set-reg rN (tmp 6))
      (= (tmp 8) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 7) (tmp 9)))))

(instruction
  xnorz_a40_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag mi dst))
      (allocate-in (tmp 9) (reg-flag ac dst))
      (allocate-in (tmp 2) (reg-flag op dst))
      (allocate-in (tmp 5) (reg-flag ms dst))
      (allocate-in (tmp 7) (reg-flag ls dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (bit_xor (constant ? 32) src1 src2))
      (= (tmp 1) (bit_not (constant ? 32) (tmp 0)))
      (set-reg dst (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 1) (tmp 1) (constant ? 0)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 6) (reg-range (tmp 1) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range (tmp 1) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 11) (tmp 12)))))

(instruction
  ins_nimm8_nimm5_nimm3_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate ww ((0 . 7)))
      (allocate-in (tmp 9) (reg-flag ls dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag ms dst))
      (immediate imm8b ((0 . 255)))
      (allocate-in (tmp 11) (reg-flag op dst))
      (immediate ss ((0 . 31))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 1) (add (constant ? 8) ss ww))
      (= (tmp 2) (reg-range (tmp 0) ss (tmp 1)))
      (set-reg (tmp 2) imm8b)
      (= (tmp 4) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  subsp_nimm13
  (pattern
    (constraints
      (immediate UImm ((0 . 8191))))
    (code
      (= (tmp 0) (sub (constant ? 16) (register sp) UImm))
      (set-reg (register sp) (tmp 0)))))

(instruction
  xorz_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 6) (reg-flag ms dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (bit_xor (constant ? 32) src1 src2))
      (set-reg dst (tmp 0))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  mva_a40_r16-no-modifier
  (pattern
    (constraints
      (allocate-in (tmp 5) (reg-flag z rN))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2)))
    (code
      (= (tmp 0) (reg-range src (constant ? 32) (constant ? 39)))
      (store (constant ? 8) ldm rN (tmp 0))
      (= (tmp 2) (add (constant ? 16) rN (constant ? 1)))
      (= (tmp 3) (reg-range src (constant ? 32) (constant ? 39)))
      (store (constant ? 8) ldm (tmp 2) (tmp 3))
      (= (tmp 6) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 5) (tmp 7)))))

(instruction
  addscale4r_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag a dst))
      (allocate-in (tmp 31) (reg-flag a dst))
      (allocate-in (tmp 33) (reg-flag ex dst))
      (allocate-in (tmp 34) (reg-flag ex dst))
      (allocate-in (tmp 30) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 37) (reg-flag mi dst))
      (allocate-in (tmp 26) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (add (constant ? 8) (tmp 1) (tmp 2)))
      (= (tmp 4) (add (constant ? 8) (constant ? 1) (tmp 3)))
      (= (tmp 5) (lshr (constant ? 8) (tmp 4) (constant ? 1)))
      (set-reg (tmp 0) (tmp 5))
      (= (tmp 6) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 7) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 8) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 9) (add (constant ? 8) (tmp 7) (tmp 8)))
      (= (tmp 10) (add (constant ? 8) (constant ? 1) (tmp 9)))
      (= (tmp 11) (lshr (constant ? 8) (tmp 10) (constant ? 1)))
      (set-reg (tmp 6) (tmp 11))
      (= (tmp 12) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 13) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 14) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 15) (add (constant ? 8) (tmp 13) (tmp 14)))
      (= (tmp 16) (add (constant ? 8) (constant ? 1) (tmp 15)))
      (= (tmp 17) (lshr (constant ? 8) (tmp 16) (constant ? 1)))
      (set-reg (tmp 12) (tmp 17))
      (= (tmp 18) (reg-range dst (constant ? 24) (constant ? 32)))
      (= (tmp 19) (reg-range src1 (constant ? 24) (constant ? 32)))
      (= (tmp 20) (reg-range src1 (constant ? 24) (constant ? 32)))
      (= (tmp 21) (add (constant ? 8) (tmp 19) (tmp 20)))
      (= (tmp 22) (add (constant ? 8) (constant ? 1) (tmp 21)))
      (= (tmp 23) (lshr (constant ? 8) (tmp 22) (constant ? 1)))
      (set-reg (tmp 18) (tmp 23))
      (= (tmp 24) (reg-range dst (constant ? 24) (constant ? 39)))
      (= (tmp 25) (sext (constant ? 8) dst (constant ? 16)))
      (set-reg (tmp 24) (tmp 25))
      (= (tmp 27) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 26) (tmp 27))
      (= (tmp 29) (icmp (constant ? 40) eq (tmp 28) (constant ? 0)))
      (br (tmp 29) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 30) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 32) (icmp (constant ? 40) eq (tmp 31) (constant ? -1)))
      (br (tmp 32) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 33) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 34) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 35) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 36) (phi ((no-value . bb_3) ((tmp 35) . bb_4))))
      (= (tmp 38) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 37) (tmp 38)))))

(instruction
  not_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 3) (reg-flag mi dst))
      (allocate-in (tmp 7) (reg-flag ls dst))
      (allocate-in (tmp 1) (reg-flag ac dst))
      (allocate-in (tmp 9) (reg-flag op dst))
      (allocate-in (tmp 5) (reg-flag ms dst)))
    (code
      (= (tmp 0) (bit_not (constant ? 40) dst))
      (set-reg dst (tmp 0))
      (= (tmp 2) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 10) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 9) (tmp 11)))))

(instruction
  mva_r16_a40++)

(instruction
  div16
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls (register a4h)))
      (allocate-in (tmp 1) (reg-flag ag (register a4h)))
      (allocate-in (tmp 16) (reg-flag ac (register a4h)))
      (allocate-in (tmp 3) (reg-flag of (register a4h)))
      (allocate-in (tmp 12) (reg-flag ms (register a4h)))
      (allocate-in (tmp 7) (reg-flag ls (register a4h)))
      (allocate-in (tmp 0) (reg-flag al (register a4h)))
      (allocate-in (tmp 11) (reg-flag ms (register a4h))))
    (code
      (set-reg (tmp 0) (constant ? 0))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 2) (icmp eq (constant ? 16) (constant ? 0) (register a5h)))
      (br (tmp 2) bb_6 bb_7)
      (label bb_6)
      (set-reg (register a4h) (constant ? 0))
      (set-reg (tmp 3) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 4) (urem (constant ? 16) (register a4h) (register a5h)))
      (= (tmp 5) (udiv (constant ? 40) (register a5h) (constant ? 2)))
      (= (tmp 6) (icmp ugt (constant ? 16) (tmp 4) (tmp 5)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 7) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 8) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 10) (icmp eq (constant ? 16) (tmp 4) (constant ? 0)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 11) (constant ? 0))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_5)
      (label bb_5)
      (= (tmp 13) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 14) (udiv (constant ? 16) (register a4h) (register a5h)))
      (set-reg (register a4h) (tmp 14))
      (br bb_8)
      (label bb_8)
      (= (tmp 15) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 17) (icmp eq (constant ? 80) (register a4h) (constant ? 0)))
      (set-reg (tmp 16) (tmp 17)))))

(instruction
  not_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 1) (reg-flag ac dst))
      (allocate-in (tmp 9) (reg-flag op dst))
      (allocate-in (tmp 5) (reg-flag ms dst))
      (allocate-in (tmp 3) (reg-flag mi dst))
      (allocate-in (tmp 7) (reg-flag ls dst)))
    (code
      (= (tmp 0) (bit_not (constant ? 40) src))
      (set-reg dst (tmp 0))
      (= (tmp 2) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 10) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 9) (tmp 11)))))

(instruction
  shftz_a40_nimm7_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 13) (reg-flag ag dst))
      (aliases (no-value (tmp 12)))
      (immediate SImm ((-32 . -1) (1 . 32)))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 0) (zext (constant ? 32) src (constant ? 40)))
      (set-reg (tmp 13) (constant ? 0))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 13) (reg-flag ag dst))
      (aliases ((tmp 11) (tmp 12)))
      (immediate SImm ((-32 . -1) (1 . 32)))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 0) (zext (constant ? 32) src (constant ? 40)))
      (= (tmp 2) (icmp sgt (constant ? 40) SImm (constant ? 0)))
      (br (tmp 2) bb_3 bb_4)
      (label bb_3)
      (= (tmp 3) (shl (constant ? 32) (constant ? 1) SImm))
      (= (tmp 4) (satmul (constant ? 32) (tmp 0) (tmp 3)))
      (set-reg dst (tmp 4))
      (br bb_5)
      (label bb_4)
      (= (tmp 5) (icmp sgt (constant ? 32) SImm (constant ? 0)))
      (br (tmp 5) bb_0 bb_1)
      (label bb_0)
      (= (tmp 6) (shl (constant ? 32) (tmp 0) SImm))
      (set-reg dst (tmp 6))
      (br bb_2)
      (label bb_1)
      (= (tmp 7) (sub (constant ? 32) (constant ? 0) SImm))
      (= (tmp 8) (ashr (constant ? 32) (tmp 0) (tmp 7)))
      (= (tmp 9) (sext (constant ? 32) (tmp 8) (constant ? 40)))
      (set-reg dst (tmp 9))
      (br bb_2)
      (label bb_2)
      (= (tmp 10) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) ((tmp 10) . bb_4))))
      (set-reg (tmp 13) (constant ? 0)))))

(instruction
  mva_r16_a40--)

(instruction
  shfta4_a40_nimm5_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 56) (reg-flag a dst))
      (aliases ((tmp 55) (tmp 54)) ((tmp 41) (tmp 40)) ((tmp 27) (tmp 26)) ((tmp 12) (tmp 13)))
      (immediate SImm ((-8 . -1) (1 . 8)))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) SImm))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) SImm))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) SImm))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) SImm))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 56) (reg-flag a dst))
      (aliases (no-value (tmp 27) (tmp 41) (tmp 55) (tmp 13)))
      (immediate SImm ((-8 . -1) (1 . 8)))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57)))))

(instruction
  notz_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 1) (reg-flag ag dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 6) (reg-flag ms dst)))
    (code
      (= (tmp 0) (bit_not (constant ? 32) src))
      (set-reg dst (tmp 0))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 3) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  shftz_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (aliases (no-value (tmp 16)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 17) (reg-flag ag dst)))
    (code
      (= (tmp 0) (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 40) . bb_0) (src2 . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -40) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (zext (constant ? 32) src1 (constant ? 40)))
      (set-reg (tmp 17) (constant ? 0))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (aliases ((tmp 15) (tmp 16)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 17) (reg-flag ag dst)))
    (code
      (= (tmp 0) (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 40) . bb_0) (src2 . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -40) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (zext (constant ? 32) src1 (constant ? 40)))
      (= (tmp 6) (icmp sgt (constant ? 40) (tmp 3) (constant ? 0)))
      (br (tmp 6) bb_9 bb_10)
      (label bb_9)
      (= (tmp 7) (shl (constant ? 32) (constant ? 1) (tmp 3)))
      (= (tmp 8) (satmul (constant ? 32) (tmp 4) (tmp 7)))
      (set-reg dst (tmp 8))
      (br bb_11)
      (label bb_10)
      (= (tmp 9) (icmp sgt (constant ? 32) (tmp 3) (constant ? 0)))
      (br (tmp 9) bb_6 bb_7)
      (label bb_6)
      (= (tmp 10) (shl (constant ? 32) (tmp 4) (tmp 3)))
      (set-reg dst (tmp 10))
      (br bb_8)
      (label bb_7)
      (= (tmp 11) (sub (constant ? 32) (constant ? 0) (tmp 3)))
      (= (tmp 12) (ashr (constant ? 32) (tmp 4) (tmp 11)))
      (= (tmp 13) (sext (constant ? 32) (tmp 12) (constant ? 40)))
      (set-reg dst (tmp 13))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 15) (phi ((no-value . bb_9) ((tmp 14) . bb_10))))
      (set-reg (tmp 17) (constant ? 0)))))

(instruction
  mva_r16_a40++Imm)

(instruction
  shfta_a16_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (aliases ((tmp 14) (tmp 15)))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 0) (icmp slt (constant ? 16) src (constant ? -16)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src (constant ? 16)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 16) . bb_0) (src . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -16) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 5) (icmp sgt (constant ? 16) (tmp 3) (constant ? 0)))
      (br (tmp 5) bb_9 bb_10)
      (label bb_9)
      (= (tmp 6) (shl (constant ? 16) (constant ? 1) (tmp 3)))
      (= (tmp 7) (satmul (constant ? 16) dst (tmp 6)))
      (set-reg dst (tmp 7))
      (br bb_11)
      (label bb_10)
      (= (tmp 8) (icmp sgt (constant ? 16) (tmp 3) (constant ? 0)))
      (br (tmp 8) bb_6 bb_7)
      (label bb_6)
      (= (tmp 9) (shl (constant ? 16) dst (tmp 3)))
      (set-reg dst (tmp 9))
      (br bb_8)
      (label bb_7)
      (= (tmp 10) (sub (constant ? 16) (constant ? 0) (tmp 3)))
      (= (tmp 11) (ashr (constant ? 16) dst (tmp 10)))
      (= (tmp 12) (sext (constant ? 16) (tmp 11) (constant ? 16)))
      (set-reg dst (tmp 12))
      (br bb_8)
      (label bb_8)
      (= (tmp 13) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 14) (phi ((no-value . bb_9) ((tmp 13) . bb_10))))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (aliases (no-value (tmp 15)))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 0) (icmp slt (constant ? 16) src (constant ? -16)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src (constant ? 16)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 16) . bb_0) (src . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -16) . bb_3) ((tmp 2) . bb_4)))))))

(instruction
  not_a16
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ms dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 1) (reg-flag a dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 13) (reg-flag a dst))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 14) (reg-flag op dst)))
    (code
      (= (tmp 0) (bit_not (constant ? 16) dst))
      (set-reg dst (tmp 0))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 9) (reg-range (tmp 7) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 12) (reg-range (tmp 10) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 15) (icmp eq (constant ? 1) (tmp 13) (constant ? 0)))
      (br (tmp 15) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 16) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 14) (tmp 16)))))

(instruction
  div24
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls (tmp 1)))
      (allocate-in (tmp 17) (reg-flag ac (tmp 1)))
      (allocate-in (tmp 9) (reg-flag ls (tmp 1)))
      (allocate-in (tmp 2) (reg-flag al (tmp 1)))
      (allocate-in (tmp 4) (reg-flag of (tmp 1)))
      (allocate-in (tmp 12) (reg-flag ms (tmp 1)))
      (allocate-in (tmp 13) (reg-flag ms (tmp 1))))
    (code
      (= (tmp 0) (reg-range (register a5) (constant ? 16) (constant ? 39)))
      (= (tmp 1) (reg-range (register a4) (constant ? 16) (constant ? 39)))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 3) (icmp eq (constant ? 24) (constant ? 0) (tmp 0)))
      (br (tmp 3) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 1) (constant ? 0))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 5) (urem (constant ? 24) (tmp 1) (tmp 0)))
      (= (tmp 6) (udiv (constant ? 40) (tmp 0) (constant ? 2)))
      (= (tmp 7) (icmp ugt (constant ? 24) (tmp 5) (tmp 6)))
      (br (tmp 7) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 8) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 9) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 10) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 11) (icmp eq (constant ? 24) (tmp 5) (constant ? 0)))
      (br (tmp 11) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 12) (constant ? 0))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_5)
      (label bb_5)
      (= (tmp 14) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 15) (udiv (constant ? 24) (tmp 1) (tmp 0)))
      (set-reg (tmp 1) (tmp 15))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 18) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 17) (tmp 18)))))

(instruction
  mva_r16_a40--Imm)

(instruction
  not_a16_a16
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ms dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 1) (reg-flag a dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in (tmp 13) (reg-flag a dst))
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag op dst)))
    (code
      (= (tmp 0) (bit_not (constant ? 16) src))
      (set-reg dst (tmp 0))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 9) (reg-range (tmp 7) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 12) (reg-range (tmp 10) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 15) (icmp eq (constant ? 1) (tmp 13) (constant ? 0)))
      (br (tmp 15) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 16) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 14) (tmp 16)))))

(instruction
  addsh_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag of dst))
      (allocate-in (tmp 24) (reg-flag of dst))
      (allocate-in (tmp 33) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 21) (reg-flag c dst))
      (allocate-in (tmp 40) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag of dst))
      (allocate-in (tmp 20) (reg-flag c dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 37) (reg-flag ex dst))
      (allocate-in (tmp 38) (reg-flag a dst))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 17) (ashr (constant ? 40) src (constant ? 16)))
      (= (tmp 18) (add (constant ? 40) dst (tmp 17)))
      (= (tmp 19) (icmp (constant ? 41) slt (constant ? 0) (tmp 18)))
      (br (tmp 19) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 20) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 21) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 22) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 23) (icmp (constant ? 40) slt (tmp 18) dst))
      (br (tmp 23) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 25) (ashr (constant ? 40) src (constant ? 16)))
      (= (tmp 26) (icmp (constant ? 40) slt (tmp 18) (tmp 25)))
      (br (tmp 26) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 27) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 28) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 29) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 30) (phi ((no-value . bb_15) ((tmp 29) . bb_16))))
      (= (tmp 31) (ashr (constant ? 40) src (constant ? 16)))
      (= (tmp 32) (add (constant ? 40) dst (tmp 31)))
      (set-reg dst (tmp 32))
      (= (tmp 34) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 33) (tmp 34))
      (= (tmp 36) (icmp (constant ? 40) eq (tmp 35) (constant ? 0)))
      (br (tmp 36) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 37) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 39) (icmp (constant ? 40) eq (tmp 38) (constant ? -1)))
      (br (tmp 39) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 41) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 42) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 43) (phi ((no-value . bb_21) ((tmp 42) . bb_22))))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45))))
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag ac dst))
      (allocate-in (tmp 35) (reg-flag a dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 12) (reg-flag of dst))
      (allocate-in (tmp 11) (reg-flag of dst))
      (allocate-in (tmp 40) (reg-flag ex dst))
      (allocate-in (tmp 8) (reg-flag of dst))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 5) (reg-flag c dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 37) (reg-flag ex dst))
      (allocate-in (tmp 38) (reg-flag a dst))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 1) (ashr (constant ? 40) src (constant ? 16)))
      (= (tmp 2) (add (constant ? 32) dst (tmp 1)))
      (= (tmp 3) (icmp (constant ? 33) slt (constant ? 0) (tmp 2)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 5) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 6) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (icmp (constant ? 32) slt (tmp 2) dst))
      (br (tmp 7) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 8) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 9) (ashr (constant ? 40) src (constant ? 16)))
      (= (tmp 10) (icmp (constant ? 32) slt (tmp 2) (tmp 9)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 12) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 13) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) ((tmp 13) . bb_7))))
      (= (tmp 15) (ashr (constant ? 40) src (constant ? 16)))
      (= (tmp 16) (satadd (constant ? 32) dst (tmp 15)))
      (set-reg dst (tmp 16))
      (= (tmp 34) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 33) (tmp 34))
      (= (tmp 36) (icmp (constant ? 40) eq (tmp 35) (constant ? 0)))
      (br (tmp 36) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 37) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 39) (icmp (constant ? 40) eq (tmp 38) (constant ? -1)))
      (br (tmp 39) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 41) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 42) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 43) (phi ((no-value . bb_21) ((tmp 42) . bb_22))))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45)))))

(instruction
  mva_r16_a40++m)

(instruction
  xnorz_a16_a16_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 11) (reg-flag op dst))
      (allocate-in (tmp 9) (reg-flag ls dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 7) (reg-flag ms dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (bit_xor (constant ? 16) src1 src2))
      (= (tmp 1) (bit_not (constant ? 16) (tmp 0)))
      (set-reg dst (tmp 1))
      (= (tmp 4) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range (tmp 1) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range (tmp 1) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) (tmp 1) (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 11) (reg-flag op dst))
      (allocate-in (tmp 9) (reg-flag ls dst))
      (allocate-in (tmp 2) (reg-flag ag dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag ms dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (bit_xor (constant ? 16) src1 src2))
      (= (tmp 1) (bit_not (constant ? 16) (tmp 0)))
      (set-reg dst (tmp 1))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 4) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range (tmp 1) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range (tmp 1) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) (tmp 1) (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  or_a40_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 1) (reg-flag ac dst))
      (allocate-in (tmp 9) (reg-flag op dst))
      (allocate-in (tmp 5) (reg-flag ms dst))
      (allocate-in (tmp 3) (reg-flag mi dst))
      (allocate-in (tmp 7) (reg-flag ls dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (bit_or (constant ? 40) src1 src2))
      (set-reg dst (tmp 0))
      (= (tmp 2) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 10) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 9) (tmp 11)))))

(instruction
  div32
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls (tmp 1)))
      (allocate-in (tmp 17) (reg-flag ac (tmp 1)))
      (allocate-in (tmp 9) (reg-flag ls (tmp 1)))
      (allocate-in (tmp 2) (reg-flag al (tmp 1)))
      (allocate-in (tmp 4) (reg-flag of (tmp 1)))
      (allocate-in (tmp 12) (reg-flag ms (tmp 1)))
      (allocate-in (tmp 13) (reg-flag ms (tmp 1))))
    (code
      (= (tmp 0) (reg-range (register a5) (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range (register a4) (constant ? 0) (constant ? 31)))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 3) (icmp eq (constant ? 32) (constant ? 0) (tmp 0)))
      (br (tmp 3) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 1) (constant ? 0))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 5) (urem (constant ? 32) (tmp 1) (tmp 0)))
      (= (tmp 6) (udiv (constant ? 40) (tmp 0) (constant ? 2)))
      (= (tmp 7) (icmp ugt (constant ? 32) (tmp 5) (tmp 6)))
      (br (tmp 7) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 8) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 9) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 10) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 11) (icmp eq (constant ? 32) (tmp 5) (constant ? 0)))
      (br (tmp 11) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 12) (constant ? 0))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_5)
      (label bb_5)
      (= (tmp 14) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 15) (udiv (constant ? 32) (tmp 1) (tmp 0)))
      (set-reg (tmp 1) (tmp 15))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 18) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 17) (tmp 18)))))

(instruction
  mva_r16_a40--m)

(instruction
  shfta2_a40_nimm6_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases ((tmp 27) (tmp 26)) ((tmp 12) (tmp 13)))
      (allocate-in (tmp 28) (reg-flag a dst))
      (immediate SImm ((-16 . -1) (1 . 16)))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 3) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 16) (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 16) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 16) (tmp 1) SImm))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 9) (ashr (constant ? 16) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 16) (tmp 9) (constant ? 16)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 17) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 16) (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 16) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 16) (tmp 15) SImm))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 23) (ashr (constant ? 16) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 16) (tmp 23) (constant ? 16)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 28) (tmp 29))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases (no-value (tmp 27) (tmp 13)))
      (allocate-in (tmp 28) (reg-flag a dst))
      (immediate SImm ((-16 . -1) (1 . 16)))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 28) (tmp 29)))))

(instruction
  adds_a16_a16_a16
  (pattern
    (constraints
      (allocate-in (tmp 34) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag ac dst))
      (allocate-in (tmp 18) (reg-flag of dst))
      (allocate-in (tmp 29) (reg-flag a dst))
      (allocate-in (tmp 16) (reg-flag of dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 23) (reg-flag c dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 24) (reg-flag c dst))
      (allocate-in (tmp 31) (reg-flag ex dst))
      (allocate-in (tmp 19) (reg-flag of dst))
      (allocate-in (tmp 38) (reg-flag mi dst))
      (allocate-in (tmp 32) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 14) (add (constant ? 16) src1 src2))
      (= (tmp 15) (icmp (constant ? 16) slt (tmp 14) src1))
      (br (tmp 15) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 17) (icmp (constant ? 16) slt (tmp 14) src2))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 18) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 19) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 20) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 21) (phi ((no-value . bb_12) ((tmp 20) . bb_13))))
      (= (tmp 22) (icmp (constant ? 17) slt (constant ? 0) (tmp 14)))
      (br (tmp 22) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 24) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 25) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 26) (add (constant ? 16) src1 src2))
      (set-reg dst (tmp 26))
      (= (tmp 28) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 27) (tmp 28))
      (= (tmp 30) (icmp (constant ? 40) eq (tmp 29) (constant ? 0)))
      (br (tmp 30) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 31) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 33) (icmp (constant ? 40) eq (tmp 32) (constant ? -1)))
      (br (tmp 33) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 34) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 35) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 36) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 37) (phi ((no-value . bb_21) ((tmp 36) . bb_22))))
      (= (tmp 39) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 38) (tmp 39))))
  (pattern
    (constraints
      (allocate-in (tmp 29) (reg-flag a dst))
      (allocate-in (tmp 34) (reg-flag ex dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 11) (reg-flag c dst))
      (allocate-in (tmp 31) (reg-flag ex dst))
      (allocate-in (tmp 10) (reg-flag c dst))
      (allocate-in (tmp 32) (reg-flag a dst))
      (allocate-in (tmp 27) (reg-flag ac dst))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in (tmp 3) (reg-flag of dst))
      (allocate-in (tmp 38) (reg-flag mi dst))
      (allocate-in (tmp 6) (reg-flag of dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 1) (add (constant ? 16) src1 src2))
      (= (tmp 2) (icmp (constant ? 16) slt (tmp 1) src1))
      (br (tmp 2) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 3) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 4) (icmp (constant ? 16) slt (tmp 1) src2))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 6) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 8) (phi ((no-value . bb_3) ((tmp 7) . bb_4))))
      (= (tmp 9) (icmp (constant ? 17) slt (constant ? 0) (tmp 1)))
      (br (tmp 9) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 10) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 11) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 12) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 13) (satadd (constant ? 16) src1 src2))
      (set-reg dst (tmp 13))
      (= (tmp 28) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 27) (tmp 28))
      (= (tmp 30) (icmp (constant ? 40) eq (tmp 29) (constant ? 0)))
      (br (tmp 30) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 31) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 33) (icmp (constant ? 40) eq (tmp 32) (constant ? -1)))
      (br (tmp 33) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 34) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 35) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 36) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 37) (phi ((no-value . bb_21) ((tmp 36) . bb_22))))
      (= (tmp 39) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 38) (tmp 39)))))

(instruction
  or_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 6) (reg-flag ms dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_or (constant ? 16) (tmp 0) src))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  mva_r16_a40-no-modifier)

(instruction
  shfta4_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 56) (reg-flag a dst))
      (aliases ((tmp 55) (tmp 54)) ((tmp 41) (tmp 40)) ((tmp 27) (tmp 26)) ((tmp 12) (tmp 13)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) src2))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) src2))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) src2))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) src2))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 56) (reg-flag a dst))
      (aliases (no-value (tmp 27) (tmp 41) (tmp 55) (tmp 13)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57)))))

(instruction
  mva_a40_r16_nimm10
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (immediate UImm ((0 . 1023))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (reg-range src (constant ? 32) (constant ? 39)))
      (store (constant ? 8) ldm (tmp 0) (tmp 1))
      (= (tmp 3) (add (constant ? 16) UImm (constant ? 1)))
      (= (tmp 4) (add (constant ? 16) rN (tmp 3)))
      (= (tmp 5) (reg-range src (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 4) (tmp 5))
      (= (tmp 8) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 7) (tmp 9)))))

(instruction
  orh_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 6) (reg-flag ms dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_or (constant ? 16) (tmp 0) src))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  div40
  (pattern
    (constraints
      (allocate-in (tmp 5) (reg-flag ls (register a4)))
      (allocate-in (tmp 10) (reg-flag ms (register a4)))
      (allocate-in (tmp 1) (reg-flag of (register a4)))
      (allocate-in (tmp 6) (reg-flag ls (register a4)))
      (allocate-in (tmp 14) (reg-flag ac (register a4)))
      (allocate-in (tmp 9) (reg-flag ms (register a4))))
    (code
      (= (tmp 0) (icmp eq (constant ? 40) (constant ? 0) (register a5)))
      (br (tmp 0) bb_6 bb_7)
      (label bb_6)
      (set-reg (register a4) (constant ? 0))
      (set-reg (tmp 1) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 2) (urem (constant ? 40) (register a4) (register a5)))
      (= (tmp 3) (udiv (constant ? 40) (register a5) (constant ? 2)))
      (= (tmp 4) (icmp ugt (constant ? 40) (tmp 2) (tmp 3)))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 6) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 8) (icmp eq (constant ? 40) (tmp 2) (constant ? 0)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 9) (constant ? 0))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 10) (constant ? 1))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 12) (udiv (constant ? 40) (register a4) (register a5)))
      (set-reg (register a4) (tmp 12))
      (br bb_8)
      (label bb_8)
      (= (tmp 13) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 15) (icmp eq (constant ? 80) (register a4) (constant ? 0)))
      (set-reg (tmp 14) (tmp 15)))))

(instruction
  adds_a40_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag c dst))
      (allocate-in (tmp 33) (reg-flag ac dst))
      (allocate-in (tmp 29) (reg-flag c dst))
      (allocate-in (tmp 35) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 23) (reg-flag of dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 21) (reg-flag of dst))
      (allocate-in (tmp 24) (reg-flag of dst))
      (allocate-in (tmp 40) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 37) (reg-flag ex dst))
      (allocate-in (tmp 38) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 17) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 18) (add (constant ? 32) (tmp 17) src2))
      (= (tmp 19) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 20) (icmp (constant ? 32) slt (tmp 18) (tmp 19)))
      (br (tmp 20) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 21) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 22) (icmp (constant ? 32) slt (tmp 18) src2))
      (br (tmp 22) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 24) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 25) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 26) (phi ((no-value . bb_12) ((tmp 25) . bb_13))))
      (= (tmp 27) (icmp (constant ? 33) slt (constant ? 0) (tmp 18)))
      (br (tmp 27) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 30) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 31) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 32) (add (constant ? 32) (tmp 31) src2))
      (set-reg dst (tmp 32))
      (= (tmp 34) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 33) (tmp 34))
      (= (tmp 36) (icmp (constant ? 40) eq (tmp 35) (constant ? 0)))
      (br (tmp 36) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 37) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 39) (icmp (constant ? 40) eq (tmp 38) (constant ? -1)))
      (br (tmp 39) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 41) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 42) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 43) (phi ((no-value . bb_21) ((tmp 42) . bb_22))))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45))))
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag ac dst))
      (allocate-in (tmp 13) (reg-flag c dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 35) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 8) (reg-flag of dst))
      (allocate-in (tmp 12) (reg-flag c dst))
      (allocate-in (tmp 40) (reg-flag ex dst))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in (tmp 7) (reg-flag of dst))
      (allocate-in (tmp 37) (reg-flag ex dst))
      (allocate-in (tmp 38) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (add (constant ? 32) (tmp 1) src2))
      (= (tmp 3) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 4) (icmp (constant ? 32) slt (tmp 2) (tmp 3)))
      (br (tmp 4) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp (constant ? 32) slt (tmp 2) src2))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 7) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 8) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))
      (= (tmp 11) (icmp (constant ? 33) slt (constant ? 0) (tmp 2)))
      (br (tmp 11) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 13) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 15) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 16) (satadd (constant ? 32) (tmp 15) src2))
      (set-reg dst (tmp 16))
      (= (tmp 34) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 33) (tmp 34))
      (= (tmp 36) (icmp (constant ? 40) eq (tmp 35) (constant ? 0)))
      (br (tmp 36) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 37) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 39) (icmp (constant ? 40) eq (tmp 38) (constant ? -1)))
      (br (tmp 39) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 41) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 42) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 43) (phi ((no-value . bb_21) ((tmp 42) . bb_22))))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45)))))

(instruction
  sub_nimm5_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag c dst))
      (allocate-in (tmp 33) (reg-flag a dst))
      (allocate-in (tmp 39) (reg-flag ex dst))
      (allocate-in (tmp 29) (reg-flag c dst))
      (allocate-in (tmp 36) (reg-flag a dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate UImm ((1 . 32)))
      (allocate-in (tmp 23) (reg-flag of dst))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 24) (reg-flag of dst))
      (allocate-in (tmp 42) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 20) (reg-flag of dst))
      (allocate-in (tmp 38) (reg-flag ex dst)))
    (code
      (= (tmp 17) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 18) (sub (constant ? 40) dst (tmp 17)))
      (= (tmp 19) (icmp (constant ? 40) sgt (tmp 18) dst))
      (br (tmp 19) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 20) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 21) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 22) (icmp (constant ? 40) sgt (tmp 18) (tmp 21)))
      (br (tmp 22) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 24) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 25) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 26) (phi ((no-value . bb_12) ((tmp 25) . bb_13))))
      (= (tmp 27) (icmp (constant ? 41) slt (constant ? 0) (tmp 18)))
      (br (tmp 27) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 30) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 31) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 32) (sub (constant ? 40) dst (tmp 31)))
      (set-reg dst (tmp 32))
      (set-reg dst no-value)
      (= (tmp 34) (icmp (constant ? 40) eq (tmp 33) (constant ? 0)))
      (br (tmp 34) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 35) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 37) (icmp (constant ? 40) eq (tmp 36) (constant ? -1)))
      (br (tmp 37) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 38) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 39) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 40) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 41) (phi ((no-value . bb_21) ((tmp 40) . bb_22))))
      (= (tmp 43) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 42) (tmp 43))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45))))
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag a dst))
      (allocate-in (tmp 39) (reg-flag ex dst))
      (allocate-in (tmp 4) (reg-flag of dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in (tmp 36) (reg-flag a dst))
      (immediate UImm ((1 . 32)))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 8) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 42) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 12) (reg-flag c dst))
      (allocate-in (tmp 7) (reg-flag of dst))
      (allocate-in (tmp 13) (reg-flag c dst))
      (allocate-in (tmp 38) (reg-flag ex dst)))
    (code
      (= (tmp 1) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 2) (sub (constant ? 32) dst (tmp 1)))
      (= (tmp 3) (icmp (constant ? 32) sgt (tmp 2) dst))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 4) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 5) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 6) (icmp (constant ? 32) sgt (tmp 2) (tmp 5)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 7) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 8) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))
      (= (tmp 11) (icmp (constant ? 33) slt (constant ? 0) (tmp 2)))
      (br (tmp 11) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 13) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 15) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 16) (satsub (constant ? 32) dst (tmp 15)))
      (set-reg dst (tmp 16))
      (set-reg dst no-value)
      (= (tmp 34) (icmp (constant ? 40) eq (tmp 33) (constant ? 0)))
      (br (tmp 34) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 35) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 37) (icmp (constant ? 40) eq (tmp 36) (constant ? -1)))
      (br (tmp 37) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 38) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 39) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 40) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 41) (phi ((no-value . bb_21) ((tmp 40) . bb_22))))
      (= (tmp 43) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 42) (tmp 43))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45)))))

(instruction
  or_a16_a16_low
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ms dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 1) (reg-flag a dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in (tmp 13) (reg-flag a dst))
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag op dst)))
    (code
      (= (tmp 0) (bit_or (constant ? 16) dst src))
      (set-reg dst (tmp 0))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 9) (reg-range (tmp 7) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 12) (reg-range (tmp 10) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 15) (icmp eq (constant ? 1) (tmp 13) (constant ? 0)))
      (br (tmp 15) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 16) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 14) (tmp 16)))))

(instruction
  mva_r16_nimm10_a40)

(instruction
  divm16
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls (register a4h)))
      (allocate-in (tmp 1) (reg-flag ah (register a4h)))
      (allocate-in (tmp 3) (reg-flag of (register a4h)))
      (allocate-in (tmp 17) (reg-flag ac (register a4h)))
      (allocate-in (tmp 12) (reg-flag ms (register a4h)))
      (allocate-in (tmp 7) (reg-flag ls (register a4h)))
      (allocate-in (tmp 0) (reg-flag al (register a4h)))
      (allocate-in (tmp 11) (reg-flag ms (register a4h))))
    (code
      (set-reg (tmp 0) (constant ? 0))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 2) (icmp eq (constant ? 16) (register a5h) (constant ? 0)))
      (br (tmp 2) bb_6 bb_7)
      (label bb_6)
      (set-reg (register a4h) (constant ? 0))
      (set-reg (register a5h) (constant ? 0))
      (set-reg (tmp 3) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 4) (urem (constant ? 16) (register a4h) (register a5h)))
      (= (tmp 5) (udiv (constant ? 40) (register a5h) (constant ? 2)))
      (= (tmp 6) (icmp ugt (constant ? 16) (tmp 4) (tmp 5)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 7) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 8) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 10) (icmp eq (constant ? 16) (tmp 4) (constant ? 0)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 11) (constant ? 0))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_5)
      (label bb_5)
      (= (tmp 13) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 14) (udiv (constant ? 16) (register a4h) (register a5h)))
      (set-reg (register a4h) (tmp 14))
      (= (tmp 15) (urem (constant ? 16) (register a4h) (register a5h)))
      (set-reg (register a5h) (tmp 15))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 18) (icmp eq (constant ? 80) (register a4h) (constant ? 0)))
      (set-reg (tmp 17) (tmp 18)))))

(instruction
  or_a16_a16_high
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ms dst))
      (allocate-in dst (a1h a2h a3h a4h a5h a6h a7h a0h))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 1) (reg-flag a dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in (tmp 13) (reg-flag a dst))
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag op dst)))
    (code
      (= (tmp 0) (bit_or (constant ? 16) dst src))
      (set-reg dst (tmp 0))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 9) (reg-range (tmp 7) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 12) (reg-range (tmp 10) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 15) (icmp eq (constant ? 1) (tmp 13) (constant ? 0)))
      (br (tmp 15) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 16) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 14) (tmp 16)))))

(instruction
  orz_a16_a16_a16
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 6) (reg-flag ms dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (bit_or (constant ? 16) src1 src2))
      (set-reg dst (tmp 0))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12))))
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 1) (reg-flag ag dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 6) (reg-flag ms dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (bit_or (constant ? 16) src1 src2))
      (set-reg dst (tmp 0))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  subh_nimm5_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag of dst))
      (allocate-in (tmp 33) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 29) (reg-flag of dst))
      (allocate-in (tmp 34) (reg-flag c dst))
      (allocate-in (tmp 39) (reg-flag a dst))
      (immediate UImm ((1 . 32)))
      (allocate-in (tmp 44) (reg-flag ex dst))
      (allocate-in (tmp 48) (reg-flag ac dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in (tmp 24) (reg-flag of dst))
      (allocate-in (tmp 42) (reg-flag a dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 45) (reg-flag ex dst))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 20) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 21) (shl (constant ? 40) (tmp 20) (constant ? 16)))
      (= (tmp 22) (sub (constant ? 40) dst (tmp 21)))
      (= (tmp 23) (icmp (constant ? 40) sgt (tmp 22) dst))
      (br (tmp 23) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 25) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 26) (shl (constant ? 40) (tmp 25) (constant ? 16)))
      (= (tmp 27) (icmp (constant ? 40) sgt (tmp 22) (tmp 26)))
      (br (tmp 27) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 30) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 31) (phi ((no-value . bb_12) ((tmp 30) . bb_13))))
      (= (tmp 32) (icmp (constant ? 41) slt (constant ? 0) (tmp 22)))
      (br (tmp 32) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 33) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 34) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 35) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 36) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 37) (shl (constant ? 40) (tmp 36) (constant ? 16)))
      (= (tmp 38) (sub (constant ? 40) dst (tmp 37)))
      (set-reg dst (tmp 38))
      (set-reg dst no-value)
      (= (tmp 40) (icmp (constant ? 40) eq (tmp 39) (constant ? 0)))
      (br (tmp 40) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 41) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 43) (icmp (constant ? 40) eq (tmp 42) (constant ? -1)))
      (br (tmp 43) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 44) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 45) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 46) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 47) (phi ((no-value . bb_21) ((tmp 46) . bb_22))))
      (= (tmp 49) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 48) (tmp 49))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51))))
  (pattern
    (constraints
      (allocate-in (tmp 39) (reg-flag a dst))
      (allocate-in (tmp 9) (reg-flag of dst))
      (allocate-in (tmp 14) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate UImm ((1 . 32)))
      (allocate-in (tmp 48) (reg-flag ac dst))
      (allocate-in (tmp 44) (reg-flag ex dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in (tmp 10) (reg-flag of dst))
      (allocate-in (tmp 42) (reg-flag a dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in (tmp 15) (reg-flag c dst))
      (allocate-in (tmp 45) (reg-flag ex dst))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 1) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (sub (constant ? 32) dst (tmp 2)))
      (= (tmp 4) (icmp (constant ? 32) sgt (tmp 3) dst))
      (br (tmp 4) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 7) (shl (constant ? 40) (tmp 6) (constant ? 16)))
      (= (tmp 8) (icmp (constant ? 32) sgt (tmp 3) (tmp 7)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 10) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 13) (icmp (constant ? 33) slt (constant ? 0) (tmp 3)))
      (br (tmp 13) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 17) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 18) (shl (constant ? 40) (tmp 17) (constant ? 16)))
      (= (tmp 19) (satsub (constant ? 32) dst (tmp 18)))
      (set-reg dst (tmp 19))
      (set-reg dst no-value)
      (= (tmp 40) (icmp (constant ? 40) eq (tmp 39) (constant ? 0)))
      (br (tmp 40) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 41) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 43) (icmp (constant ? 40) eq (tmp 42) (constant ? -1)))
      (br (tmp 43) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 44) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 45) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 46) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 47) (phi ((no-value . bb_21) ((tmp 46) . bb_22))))
      (= (tmp 49) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 48) (tmp 49))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51)))))

(instruction
  xor_nimm16_a16_low
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 1) (reg-flag ac dst))
      (allocate-in (tmp 3) (reg-flag mi dst))
      (immediate UImm ((0 . 65535)))
      (allocate-in (tmp 5) (reg-flag ms dst))
      (allocate-in (tmp 7) (reg-flag ls dst))
      (allocate-in (tmp 9) (reg-flag op dst)))
    (code
      (= (tmp 0) (bit_xor (constant ? 16) dst UImm))
      (set-reg dst (tmp 0))
      (= (tmp 2) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 10) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 9) (tmp 11)))))

(instruction
  lcallr_addr
  (pattern
    (constraints
      (rel-address addr -524288 524287))
    (code
      (= (tmp 0) (add (size pc) (register pc) addr))
      (= (tmp 1) (urem (size pc) (tmp 0) (size pc)))
      (= (tmp 2) (sub (size sp) (register sp) (constant ? 2)))
      (set-reg (register sp) (tmp 2))
      (store (constant ? 23) ldm (register sp) (register retpc))
      (set-reg (register retpc) (register pc))
      (set-reg (register pc) (tmp 1)))))

(instruction
  addhs_a40_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag of dst))
      (allocate-in (tmp 33) (reg-flag c dst))
      (allocate-in (tmp 39) (reg-flag ac dst))
      (allocate-in (tmp 29) (reg-flag of dst))
      (allocate-in (tmp 34) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 47) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag a dst))
      (allocate-in (tmp 43) (reg-flag ex dst))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in (tmp 25) (reg-flag of dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 41) (reg-flag a dst)))
    (code
      (= (tmp 20) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 21) (shl (constant ? 32) src2 (constant ? 16)))
      (= (tmp 22) (add (constant ? 32) (tmp 20) (tmp 21)))
      (= (tmp 23) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 24) (icmp (constant ? 32) slt (tmp 22) (tmp 23)))
      (br (tmp 24) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 25) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 26) (shl (constant ? 32) src2 (constant ? 16)))
      (= (tmp 27) (icmp (constant ? 32) slt (tmp 22) (tmp 26)))
      (br (tmp 27) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 30) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 31) (phi ((no-value . bb_12) ((tmp 30) . bb_13))))
      (= (tmp 32) (icmp (constant ? 33) slt (constant ? 0) (tmp 22)))
      (br (tmp 32) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 33) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 34) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 35) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 36) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 37) (shl (constant ? 32) src2 (constant ? 16)))
      (= (tmp 38) (add (constant ? 32) (tmp 36) (tmp 37)))
      (set-reg dst (tmp 38))
      (= (tmp 40) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 39) (tmp 40))
      (= (tmp 42) (icmp (constant ? 40) eq (tmp 41) (constant ? 0)))
      (br (tmp 42) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 43) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? -1)))
      (br (tmp 45) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 47) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 48) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 49) (phi ((no-value . bb_21) ((tmp 48) . bb_22))))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51))))
  (pattern
    (constraints
      (allocate-in (tmp 39) (reg-flag ac dst))
      (allocate-in (tmp 9) (reg-flag of dst))
      (allocate-in (tmp 14) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag a dst))
      (allocate-in (tmp 43) (reg-flag ex dst))
      (allocate-in (tmp 10) (reg-flag of dst))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in (tmp 47) (reg-flag ex dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in (tmp 15) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag of dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 41) (reg-flag a dst)))
    (code
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (shl (constant ? 32) src2 (constant ? 16)))
      (= (tmp 3) (add (constant ? 32) (tmp 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 5) (icmp (constant ? 32) slt (tmp 3) (tmp 4)))
      (br (tmp 5) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 6) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 7) (shl (constant ? 32) src2 (constant ? 16)))
      (= (tmp 8) (icmp (constant ? 32) slt (tmp 3) (tmp 7)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 10) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 13) (icmp (constant ? 33) slt (constant ? 0) (tmp 3)))
      (br (tmp 13) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 17) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 18) (shl (constant ? 32) src2 (constant ? 16)))
      (= (tmp 19) (satadd (constant ? 32) (tmp 17) (tmp 18)))
      (set-reg dst (tmp 19))
      (= (tmp 40) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 39) (tmp 40))
      (= (tmp 42) (icmp (constant ? 40) eq (tmp 41) (constant ? 0)))
      (br (tmp 42) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 43) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? -1)))
      (br (tmp 45) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 47) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 48) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 49) (phi ((no-value . bb_21) ((tmp 48) . bb_22))))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51)))))

(instruction
  orz_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 1) (reg-flag ag dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 6) (reg-flag ms dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (bit_or (constant ? 32) src1 src2))
      (set-reg dst (tmp 0))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 3) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  mva_a40_r16_a16
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in regi (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (reg-range src (constant ? 32) (constant ? 39)))
      (store (constant ? 8) ldm (tmp 0) (tmp 1))
      (= (tmp 3) (add (constant ? 16) regi (constant ? 1)))
      (= (tmp 4) (add (constant ? 16) rN (tmp 3)))
      (= (tmp 5) (reg-range src (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 4) (tmp 5))
      (= (tmp 8) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 7) (tmp 9)))))

(instruction
  sub_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 27) (reg-flag a dst))
      (allocate-in (tmp 33) (reg-flag ex dst))
      (allocate-in (tmp 18) (reg-flag of dst))
      (allocate-in (tmp 29) (reg-flag ex dst))
      (allocate-in (tmp 36) (reg-flag ac dst))
      (allocate-in (tmp 30) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 23) (reg-flag c dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 24) (reg-flag c dst))
      (allocate-in (tmp 32) (reg-flag ex dst))
      (allocate-in (tmp 19) (reg-flag of dst))
      (allocate-in (tmp 38) (reg-flag mi dst))
      (allocate-in (tmp 16) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 14) (sub (constant ? 40) src1 src2))
      (= (tmp 15) (icmp (constant ? 40) sgt (tmp 14) src1))
      (br (tmp 15) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 17) (icmp (constant ? 40) sgt (tmp 14) src2))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 18) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 19) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 20) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 21) (phi ((no-value . bb_12) ((tmp 20) . bb_13))))
      (= (tmp 22) (icmp (constant ? 41) slt (constant ? 0) (tmp 14)))
      (br (tmp 22) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 24) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 25) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 26) (sub (constant ? 40) src1 src2))
      (set-reg dst (tmp 26))
      (set-reg dst no-value)
      (= (tmp 28) (icmp (constant ? 40) eq (tmp 27) (constant ? 0)))
      (br (tmp 28) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 29) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 31) (icmp (constant ? 40) eq (tmp 30) (constant ? -1)))
      (br (tmp 31) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 32) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 33) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 34) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 35) (phi ((no-value . bb_21) ((tmp 34) . bb_22))))
      (= (tmp 37) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 36) (tmp 37))
      (= (tmp 39) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 38) (tmp 39))))
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag ex dst))
      (allocate-in (tmp 29) (reg-flag ex dst))
      (allocate-in (tmp 36) (reg-flag ac dst))
      (allocate-in (tmp 30) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag c dst))
      (allocate-in (tmp 10) (reg-flag c dst))
      (allocate-in (tmp 32) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag a dst))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in (tmp 3) (reg-flag of dst))
      (allocate-in (tmp 38) (reg-flag mi dst))
      (allocate-in (tmp 6) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 1) (sub (constant ? 32) src1 src2))
      (= (tmp 2) (icmp (constant ? 32) sgt (tmp 1) src1))
      (br (tmp 2) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 3) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 4) (icmp (constant ? 32) sgt (tmp 1) src2))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 6) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 8) (phi ((no-value . bb_3) ((tmp 7) . bb_4))))
      (= (tmp 9) (icmp (constant ? 33) slt (constant ? 0) (tmp 1)))
      (br (tmp 9) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 10) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 11) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 12) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 13) (satsub (constant ? 32) src1 src2))
      (set-reg dst (tmp 13))
      (set-reg dst no-value)
      (= (tmp 28) (icmp (constant ? 40) eq (tmp 27) (constant ? 0)))
      (br (tmp 28) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 29) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 31) (icmp (constant ? 40) eq (tmp 30) (constant ? -1)))
      (br (tmp 31) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 32) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 33) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 34) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 35) (phi ((no-value . bb_21) ((tmp 34) . bb_22))))
      (= (tmp 37) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 36) (tmp 37))
      (= (tmp 39) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 38) (tmp 39)))))

(instruction
  mva_a40_r16++m
  (pattern
    (constraints
      (allocate-in (tmp 5) (reg-flag m rN))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2)))
    (code
      (= (tmp 0) (reg-range src (constant ? 32) (constant ? 39)))
      (store (constant ? 8) ldm rN (tmp 0))
      (= (tmp 2) (add (constant ? 16) rN (constant ? 1)))
      (= (tmp 3) (reg-range src (constant ? 32) (constant ? 39)))
      (store (constant ? 8) ldm (tmp 2) (tmp 3))
      (= (tmp 6) (add (constant ? 16) rN (tmp 5)))
      (set-reg rN (tmp 6))
      (= (tmp 8) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 7) (tmp 9)))))

(instruction
  lcallr_addr_alias
  (pattern
    (constraints
      (rel-address addr -524288 524287))
    (code
      (= (tmp 0) (add (size pc) (register pc) addr))
      (= (tmp 1) (urem (size pc) (tmp 0) (size pc)))
      (= (tmp 2) (sub (size sp) (register sp) (constant ? 2)))
      (set-reg (register sp) (tmp 2))
      (store (constant ? 23) ldm (register sp) (register retpc))
      (set-reg (register retpc) (register pc))
      (set-reg (register pc) (tmp 1)))))

(instruction
  divm24
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls (tmp 1)))
      (allocate-in (tmp 18) (reg-flag ac (tmp 1)))
      (allocate-in (tmp 9) (reg-flag ls (tmp 1)))
      (allocate-in (tmp 2) (reg-flag al (tmp 1)))
      (allocate-in (tmp 4) (reg-flag of (tmp 1)))
      (allocate-in (tmp 12) (reg-flag ms (tmp 1)))
      (allocate-in (tmp 13) (reg-flag ms (tmp 1))))
    (code
      (= (tmp 0) (reg-range (register a5) (constant ? 16) (constant ? 39)))
      (= (tmp 1) (reg-range (register a4) (constant ? 16) (constant ? 39)))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 3) (icmp eq (constant ? 24) (tmp 0) (constant ? 0)))
      (br (tmp 3) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 1) (constant ? 0))
      (set-reg (tmp 0) (constant ? 0))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 5) (urem (constant ? 24) (tmp 1) (tmp 0)))
      (= (tmp 6) (udiv (constant ? 40) (tmp 0) (constant ? 2)))
      (= (tmp 7) (icmp ugt (constant ? 24) (tmp 5) (tmp 6)))
      (br (tmp 7) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 8) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 9) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 10) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 11) (icmp eq (constant ? 24) (tmp 5) (constant ? 0)))
      (br (tmp 11) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 12) (constant ? 0))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_5)
      (label bb_5)
      (= (tmp 14) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 15) (udiv (constant ? 24) (tmp 1) (tmp 0)))
      (set-reg (tmp 1) (tmp 15))
      (= (tmp 16) (urem (constant ? 24) (tmp 1) (tmp 0)))
      (set-reg (tmp 0) (tmp 16))
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 19) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 18) (tmp 19)))))

(instruction
  or_nimm16_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (immediate UImm ((0 . 65535)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 6) (reg-flag ms dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_or (constant ? 16) (tmp 0) UImm))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  mva_r16_a16_a40)

(instruction
  fcallr_addr
  (pattern
    (constraints
      (rel-address addr -1073741824 1073741823))
    (code
      (= (tmp 0) (add (size pc) (register pc) addr))
      (= (tmp 1) (urem (size pc) (tmp 0) (size pc)))
      (= (tmp 2) (sub (size sp) (register sp) (constant ? 2)))
      (set-reg (register sp) (tmp 2))
      (store (constant ? 23) ldm (register sp) (register retpc))
      (set-reg (register retpc) (register pc))
      (set-reg (register pc) (tmp 1)))))

(instruction
  mpy_a16_a16_a40l
  (pattern
    (constraints
      (allocate-in dst (a1 a2 a3 a0))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 37) (tmp 38) (tmp 16)))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 12) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 14) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 15) (mul (constant ? 40) (tmp 12) (tmp 14)))
      (= (tmp 16) (shl (constant ? 40) (tmp 15) (constant ? 1)))
      (set-reg dst (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a1 a2 a3 a0))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 38) (tmp 7)))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 4) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 6) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 7) (mul (constant ? 40) (tmp 4) (tmp 6)))
      (set-reg dst (tmp 38)))))

(instruction
  addhz_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag ag dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 4) (zext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 5) (shl (constant ? 32) (tmp 4) (constant ? 16)))
      (= (tmp 6) (add (constant ? 32) src1 (tmp 5)))
      (set-reg dst (tmp 6))
      (set-reg (tmp 7) (constant ? 0))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag ag dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 1) (zext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 2) (shl (constant ? 32) (tmp 1) (constant ? 16)))
      (= (tmp 3) (satadd (constant ? 32) src1 (tmp 2)))
      (set-reg dst (tmp 3))
      (set-reg (tmp 7) (constant ? 0)))))

(instruction
  orh_nimm16_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (immediate UImm ((0 . 65535)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 6) (reg-flag ms dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_or (constant ? 16) (tmp 0) UImm))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  fcallr_addr_alias
  (pattern
    (constraints
      (rel-address addr -1073741824 1073741823))
    (code
      (= (tmp 0) (add (size pc) (register pc) addr))
      (= (tmp 1) (urem (size pc) (tmp 0) (size pc)))
      (= (tmp 2) (sub (size sp) (register sp) (constant ? 2)))
      (set-reg (register sp) (tmp 2))
      (store (constant ? 23) ldm (register sp) (register retpc))
      (set-reg (register retpc) (register pc))
      (set-reg (register pc) (tmp 1)))))

(instruction
  subh_nimm16_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag of dst))
      (allocate-in (tmp 33) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 29) (reg-flag of dst))
      (allocate-in (tmp 34) (reg-flag c dst))
      (allocate-in (tmp 39) (reg-flag a dst))
      (immediate UImm ((0 . 65535)))
      (allocate-in (tmp 44) (reg-flag ex dst))
      (allocate-in (tmp 48) (reg-flag ac dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in (tmp 24) (reg-flag of dst))
      (allocate-in (tmp 42) (reg-flag a dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 45) (reg-flag ex dst))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 20) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 21) (shl (constant ? 40) (tmp 20) (constant ? 16)))
      (= (tmp 22) (sub (constant ? 40) dst (tmp 21)))
      (= (tmp 23) (icmp (constant ? 40) sgt (tmp 22) dst))
      (br (tmp 23) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 25) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 26) (shl (constant ? 40) (tmp 25) (constant ? 16)))
      (= (tmp 27) (icmp (constant ? 40) sgt (tmp 22) (tmp 26)))
      (br (tmp 27) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 30) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 31) (phi ((no-value . bb_12) ((tmp 30) . bb_13))))
      (= (tmp 32) (icmp (constant ? 41) slt (constant ? 0) (tmp 22)))
      (br (tmp 32) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 33) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 34) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 35) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 36) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 37) (shl (constant ? 40) (tmp 36) (constant ? 16)))
      (= (tmp 38) (sub (constant ? 40) dst (tmp 37)))
      (set-reg dst (tmp 38))
      (set-reg dst no-value)
      (= (tmp 40) (icmp (constant ? 40) eq (tmp 39) (constant ? 0)))
      (br (tmp 40) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 41) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 43) (icmp (constant ? 40) eq (tmp 42) (constant ? -1)))
      (br (tmp 43) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 44) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 45) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 46) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 47) (phi ((no-value . bb_21) ((tmp 46) . bb_22))))
      (= (tmp 49) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 48) (tmp 49))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51))))
  (pattern
    (constraints
      (allocate-in (tmp 39) (reg-flag a dst))
      (allocate-in (tmp 9) (reg-flag of dst))
      (allocate-in (tmp 14) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate UImm ((0 . 65535)))
      (allocate-in (tmp 48) (reg-flag ac dst))
      (allocate-in (tmp 44) (reg-flag ex dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in (tmp 10) (reg-flag of dst))
      (allocate-in (tmp 42) (reg-flag a dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in (tmp 15) (reg-flag c dst))
      (allocate-in (tmp 45) (reg-flag ex dst))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 1) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (sub (constant ? 32) dst (tmp 2)))
      (= (tmp 4) (icmp (constant ? 32) sgt (tmp 3) dst))
      (br (tmp 4) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 7) (shl (constant ? 40) (tmp 6) (constant ? 16)))
      (= (tmp 8) (icmp (constant ? 32) sgt (tmp 3) (tmp 7)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 10) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 13) (icmp (constant ? 33) slt (constant ? 0) (tmp 3)))
      (br (tmp 13) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 17) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 18) (shl (constant ? 40) (tmp 17) (constant ? 16)))
      (= (tmp 19) (satsub (constant ? 32) dst (tmp 18)))
      (set-reg dst (tmp 19))
      (set-reg dst no-value)
      (= (tmp 40) (icmp (constant ? 40) eq (tmp 39) (constant ? 0)))
      (br (tmp 40) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 41) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 43) (icmp (constant ? 40) eq (tmp 42) (constant ? -1)))
      (br (tmp 43) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 44) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 45) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 46) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 47) (phi ((no-value . bb_21) ((tmp 46) . bb_22))))
      (= (tmp 49) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 48) (tmp 49))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51)))))

(instruction
  or_nimm16_a16_low
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ms dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 1) (reg-flag a dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (immediate UImm ((0 . 65535)))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 13) (reg-flag a dst))
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag op dst)))
    (code
      (= (tmp 0) (bit_or (constant ? 16) dst UImm))
      (set-reg dst (tmp 0))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 9) (reg-range (tmp 7) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 12) (reg-range (tmp 10) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 15) (icmp eq (constant ? 1) (tmp 13) (constant ? 0)))
      (br (tmp 15) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 16) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 14) (tmp 16)))))

(instruction
  divm32
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls (tmp 1)))
      (allocate-in (tmp 18) (reg-flag ac (tmp 1)))
      (allocate-in (tmp 9) (reg-flag ls (tmp 1)))
      (allocate-in (tmp 2) (reg-flag ag (tmp 1)))
      (allocate-in (tmp 4) (reg-flag of (tmp 1)))
      (allocate-in (tmp 12) (reg-flag ms (tmp 1)))
      (allocate-in (tmp 13) (reg-flag ms (tmp 1))))
    (code
      (= (tmp 0) (reg-range (register a5) (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range (register a4) (constant ? 0) (constant ? 31)))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 3) (icmp eq (constant ? 32) (tmp 0) (constant ? 0)))
      (br (tmp 3) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 1) (constant ? 0))
      (set-reg (tmp 0) (constant ? 0))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 5) (urem (constant ? 32) (tmp 1) (tmp 0)))
      (= (tmp 6) (udiv (constant ? 40) (tmp 0) (constant ? 2)))
      (= (tmp 7) (icmp ugt (constant ? 32) (tmp 5) (tmp 6)))
      (br (tmp 7) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 8) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 9) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 10) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 11) (icmp eq (constant ? 32) (tmp 5) (constant ? 0)))
      (br (tmp 11) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 12) (constant ? 0))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_5)
      (label bb_5)
      (= (tmp 14) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 15) (udiv (constant ? 32) (tmp 1) (tmp 0)))
      (set-reg (tmp 1) (tmp 15))
      (= (tmp 16) (urem (constant ? 32) (tmp 1) (tmp 0)))
      (set-reg (tmp 0) (tmp 16))
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 19) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 18) (tmp 19)))))

(instruction
  mv_ar32_r16_nimm12
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag z rN))
      (aliases ((tmp 2) (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag s src ((1 . 1)))
      (immediate UImm ((0 . 4095))))
    (code
      (= (tmp 2) (satadd (constant ? 32) (constant ? 0) src))
      (= (tmp 5) (add (constant ? 16) rN UImm))
      (= (tmp 6) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 5) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag z rN))
      (aliases (src (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag s src ((0 . 0)))
      (immediate UImm ((0 . 4095))))
    (code
      (= (tmp 5) (add (constant ? 16) rN UImm))
      (= (tmp 6) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 5) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13))))
  (pattern
    (constraints
      (allocate-in src (r01 r23 r45 r67 r89 r1011 r1213 r1415))
      (allocate-in (tmp 11) (reg-flag z rN))
      (aliases (src (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (immediate UImm ((0 . 4095))))
    (code
      (= (tmp 5) (add (constant ? 16) rN UImm))
      (= (tmp 6) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 5) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  callr_acc
  (pattern
    (constraints
      (allocate-in aN (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (add (size pc) (register pc) aN))
      (= (tmp 1) (urem (size pc) (tmp 0) (size pc)))
      (= (tmp 2) (sub (size sp) (register sp) (constant ? 2)))
      (set-reg (register sp) (tmp 2))
      (store (constant ? 23) ldm (register sp) (register retpc))
      (set-reg (register retpc) (register pc))
      (set-reg (register pc) (tmp 1)))))

(instruction
  or_nimm16_a16_high
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ms dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 1) (reg-flag a dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (immediate UImm ((0 . 65535)))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in dst (a1h a2h a3h a4h a5h a6h a7h a0h))
      (allocate-in (tmp 13) (reg-flag a dst))
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag op dst)))
    (code
      (= (tmp 0) (bit_or (constant ? 16) dst UImm))
      (set-reg dst (tmp 0))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 9) (reg-range (tmp 7) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 12) (reg-range (tmp 10) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 15) (icmp eq (constant ? 1) (tmp 13) (constant ? 0)))
      (br (tmp 15) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 16) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 14) (tmp 16)))))

(instruction
  perm_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 65) (reg-flag ac dst))
      (allocate-in (tmp 69) (reg-flag ms dst))
      (allocate-in (tmp 71) (reg-flag ls dst))
      (allocate-in (tmp 64) (reg-flag ag dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 67) (reg-flag mi dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 73) (reg-flag op dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 31) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 31) (constant ? 31)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 30) (constant ? 30)))
      (= (tmp 3) (reg-range src (constant ? 15) (constant ? 15)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 4) (reg-range dst (constant ? 29) (constant ? 29)))
      (= (tmp 5) (reg-range src (constant ? 23) (constant ? 23)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 6) (reg-range dst (constant ? 28) (constant ? 28)))
      (= (tmp 7) (reg-range src (constant ? 7) (constant ? 7)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 8) (reg-range dst (constant ? 27) (constant ? 27)))
      (= (tmp 9) (reg-range src (constant ? 27) (constant ? 27)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 10) (reg-range dst (constant ? 26) (constant ? 26)))
      (= (tmp 11) (reg-range src (constant ? 11) (constant ? 11)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 12) (reg-range dst (constant ? 25) (constant ? 25)))
      (= (tmp 13) (reg-range src (constant ? 19) (constant ? 19)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 14) (reg-range dst (constant ? 24) (constant ? 24)))
      (= (tmp 15) (reg-range src (constant ? 3) (constant ? 3)))
      (set-reg (tmp 14) (tmp 15))
      (= (tmp 16) (reg-range dst (constant ? 23) (constant ? 23)))
      (= (tmp 17) (reg-range src (constant ? 29) (constant ? 29)))
      (set-reg (tmp 16) (tmp 17))
      (= (tmp 18) (reg-range dst (constant ? 22) (constant ? 22)))
      (= (tmp 19) (reg-range src (constant ? 13) (constant ? 13)))
      (set-reg (tmp 18) (tmp 19))
      (= (tmp 20) (reg-range dst (constant ? 21) (constant ? 21)))
      (= (tmp 21) (reg-range src (constant ? 21) (constant ? 21)))
      (set-reg (tmp 20) (tmp 21))
      (= (tmp 22) (reg-range dst (constant ? 20) (constant ? 20)))
      (= (tmp 23) (reg-range src (constant ? 5) (constant ? 5)))
      (set-reg (tmp 22) (tmp 23))
      (= (tmp 24) (reg-range dst (constant ? 19) (constant ? 19)))
      (= (tmp 25) (reg-range src (constant ? 25) (constant ? 25)))
      (set-reg (tmp 24) (tmp 25))
      (= (tmp 26) (reg-range dst (constant ? 18) (constant ? 18)))
      (= (tmp 27) (reg-range src (constant ? 9) (constant ? 9)))
      (set-reg (tmp 26) (tmp 27))
      (= (tmp 28) (reg-range dst (constant ? 17) (constant ? 17)))
      (= (tmp 29) (reg-range src (constant ? 17) (constant ? 17)))
      (set-reg (tmp 28) (tmp 29))
      (= (tmp 30) (reg-range dst (constant ? 16) (constant ? 16)))
      (= (tmp 31) (reg-range src (constant ? 1) (constant ? 1)))
      (set-reg (tmp 30) (tmp 31))
      (= (tmp 32) (reg-range dst (constant ? 15) (constant ? 15)))
      (= (tmp 33) (reg-range src (constant ? 30) (constant ? 30)))
      (set-reg (tmp 32) (tmp 33))
      (= (tmp 34) (reg-range dst (constant ? 14) (constant ? 14)))
      (= (tmp 35) (reg-range src (constant ? 14) (constant ? 14)))
      (set-reg (tmp 34) (tmp 35))
      (= (tmp 36) (reg-range dst (constant ? 13) (constant ? 13)))
      (= (tmp 37) (reg-range src (constant ? 22) (constant ? 22)))
      (set-reg (tmp 36) (tmp 37))
      (= (tmp 38) (reg-range dst (constant ? 12) (constant ? 12)))
      (= (tmp 39) (reg-range src (constant ? 6) (constant ? 6)))
      (set-reg (tmp 38) (tmp 39))
      (= (tmp 40) (reg-range dst (constant ? 11) (constant ? 11)))
      (= (tmp 41) (reg-range src (constant ? 26) (constant ? 26)))
      (set-reg (tmp 40) (tmp 41))
      (= (tmp 42) (reg-range dst (constant ? 10) (constant ? 10)))
      (= (tmp 43) (reg-range src (constant ? 10) (constant ? 10)))
      (set-reg (tmp 42) (tmp 43))
      (= (tmp 44) (reg-range dst (constant ? 9) (constant ? 9)))
      (= (tmp 45) (reg-range src (constant ? 18) (constant ? 18)))
      (set-reg (tmp 44) (tmp 45))
      (= (tmp 46) (reg-range dst (constant ? 8) (constant ? 8)))
      (= (tmp 47) (reg-range src (constant ? 2) (constant ? 2)))
      (set-reg (tmp 46) (tmp 47))
      (= (tmp 48) (reg-range dst (constant ? 7) (constant ? 7)))
      (= (tmp 49) (reg-range src (constant ? 28) (constant ? 28)))
      (set-reg (tmp 48) (tmp 49))
      (= (tmp 50) (reg-range dst (constant ? 6) (constant ? 6)))
      (= (tmp 51) (reg-range src (constant ? 12) (constant ? 12)))
      (set-reg (tmp 50) (tmp 51))
      (= (tmp 52) (reg-range dst (constant ? 5) (constant ? 5)))
      (= (tmp 53) (reg-range src (constant ? 20) (constant ? 20)))
      (set-reg (tmp 52) (tmp 53))
      (= (tmp 54) (reg-range dst (constant ? 4) (constant ? 4)))
      (= (tmp 55) (reg-range src (constant ? 4) (constant ? 4)))
      (set-reg (tmp 54) (tmp 55))
      (= (tmp 56) (reg-range dst (constant ? 3) (constant ? 3)))
      (= (tmp 57) (reg-range src (constant ? 24) (constant ? 24)))
      (set-reg (tmp 56) (tmp 57))
      (= (tmp 58) (reg-range dst (constant ? 2) (constant ? 2)))
      (= (tmp 59) (reg-range src (constant ? 8) (constant ? 8)))
      (set-reg (tmp 58) (tmp 59))
      (= (tmp 60) (reg-range dst (constant ? 1) (constant ? 1)))
      (= (tmp 61) (reg-range src (constant ? 16) (constant ? 16)))
      (set-reg (tmp 60) (tmp 61))
      (= (tmp 62) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 63) (reg-range src (constant ? 0) (constant ? 0)))
      (set-reg (tmp 62) (tmp 63))
      (set-reg (tmp 64) (constant ? 0))
      (= (tmp 66) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 65) (tmp 66))
      (= (tmp 68) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 67) (tmp 68))
      (= (tmp 70) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 69) (tmp 70))
      (= (tmp 72) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 71) (tmp 72))
      (= (tmp 74) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 74) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 75) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 73) (tmp 75)))))

(instruction
  mv_r16_nimm12_ar32
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1)))
      (immediate UImm ((0 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 2) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 5) (load-mem (constant ? 16) ldm (tmp 4)))
      (set-reg (tmp 3) (tmp 5))
      (= (tmp 13) (zext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 13))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0)))
      (immediate UImm ((0 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 2) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 5) (load-mem (constant ? 16) ldm (tmp 4)))
      (set-reg (tmp 3) (tmp 5))
      (= (tmp 14) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 14))))
  (pattern
    (constraints
      (allocate-in dst (r01 r23 r45 r67 r89 r1011 r1213 r1415))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (immediate UImm ((0 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 2) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 5) (load-mem (constant ? 16) ldm (tmp 4)))
      (set-reg (tmp 3) (tmp 5))
      (set-reg dst dst))))

(instruction
  sub_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag c dst))
      (allocate-in (tmp 33) (reg-flag a dst))
      (allocate-in (tmp 39) (reg-flag ex dst))
      (allocate-in (tmp 29) (reg-flag c dst))
      (allocate-in (tmp 36) (reg-flag a dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 23) (reg-flag of dst))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 24) (reg-flag of dst))
      (allocate-in (tmp 42) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 20) (reg-flag of dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 38) (reg-flag ex dst)))
    (code
      (= (tmp 17) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 18) (sub (constant ? 40) dst (tmp 17)))
      (= (tmp 19) (icmp (constant ? 40) sgt (tmp 18) dst))
      (br (tmp 19) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 20) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 21) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 22) (icmp (constant ? 40) sgt (tmp 18) (tmp 21)))
      (br (tmp 22) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 24) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 25) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 26) (phi ((no-value . bb_12) ((tmp 25) . bb_13))))
      (= (tmp 27) (icmp (constant ? 41) slt (constant ? 0) (tmp 18)))
      (br (tmp 27) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 30) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 31) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 32) (sub (constant ? 40) dst (tmp 31)))
      (set-reg dst (tmp 32))
      (set-reg dst no-value)
      (= (tmp 34) (icmp (constant ? 40) eq (tmp 33) (constant ? 0)))
      (br (tmp 34) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 35) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 37) (icmp (constant ? 40) eq (tmp 36) (constant ? -1)))
      (br (tmp 37) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 38) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 39) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 40) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 41) (phi ((no-value . bb_21) ((tmp 40) . bb_22))))
      (= (tmp 43) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 42) (tmp 43))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45))))
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag a dst))
      (allocate-in (tmp 39) (reg-flag ex dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in (tmp 4) (reg-flag of dst))
      (allocate-in (tmp 36) (reg-flag a dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 8) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 42) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 12) (reg-flag c dst))
      (allocate-in (tmp 7) (reg-flag of dst))
      (allocate-in (tmp 13) (reg-flag c dst))
      (allocate-in (tmp 38) (reg-flag ex dst)))
    (code
      (= (tmp 1) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (sub (constant ? 32) dst (tmp 1)))
      (= (tmp 3) (icmp (constant ? 32) sgt (tmp 2) dst))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 4) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 5) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 6) (icmp (constant ? 32) sgt (tmp 2) (tmp 5)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 7) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 8) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))
      (= (tmp 11) (icmp (constant ? 33) slt (constant ? 0) (tmp 2)))
      (br (tmp 11) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 13) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 15) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 16) (satsub (constant ? 32) dst (tmp 15)))
      (set-reg dst (tmp 16))
      (set-reg dst no-value)
      (= (tmp 34) (icmp (constant ? 40) eq (tmp 33) (constant ? 0)))
      (br (tmp 34) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 35) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 37) (icmp (constant ? 40) eq (tmp 36) (constant ? -1)))
      (br (tmp 37) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 38) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 39) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 40) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 41) (phi ((no-value . bb_21) ((tmp 40) . bb_22))))
      (= (tmp 43) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 42) (tmp 43))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45)))))

(instruction
  addz_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 5) (reg-flag ag dst)))
    (code
      (= (tmp 3) (zext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 4) (add (constant ? 32) src1 (tmp 3)))
      (set-reg dst (tmp 4))
      (set-reg (tmp 5) (constant ? 0))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 5) (reg-flag ag dst)))
    (code
      (= (tmp 1) (zext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 2) (satadd (constant ? 32) src1 (tmp 1)))
      (set-reg dst (tmp 2))
      (set-reg (tmp 5) (constant ? 0)))))

(instruction
  lcalla_addr
  (pattern
    (constraints
      (abs-address addr 0 1048575))
    (code)))

(instruction
  lcalla_addr_alias
  (pattern
    (constraints
      (abs-address addr 0 1048575))
    (code)))

(instruction
  fcalla_addr
  (pattern
    (constraints
      (abs-address addr 0 2147483647))
    (code)))

(instruction
  fcalla_addr_alias
  (pattern
    (constraints
      (abs-address addr 0 2147483647))
    (code)))

(instruction
  calla_acc
  (pattern
    (constraints
      (allocate-in aN (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (urem (size pc) aN (size pc)))
      (= (tmp 1) (sub (size sp) (register sp) (constant ? 2)))
      (set-reg (register sp) (tmp 1))
      (store (constant ? 23) ldm (register sp) (register retpc))
      (set-reg (register retpc) (register pc))
      (set-reg (register pc) (tmp 0)))))

(instruction
  mpy_nimm1_a16_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 169) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 180) (reg-flag mi dst))
      (aliases ((tmp 83) (tmp 43) (tmp 12)) ((tmp 84) (tmp 168)))
      (allocate-in (tmp 173) (reg-flag ex dst))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 171) (reg-flag a dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 177) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 174) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 176) (reg-flag ex dst)))
    (code
      (= (tmp 9) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 11) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 12) (mul (constant ? 40) (tmp 9) (tmp 11)))
      (= (tmp 84) (add (constant ? 40) (tmp 83) (constant ? 32768)))
      (set-reg dst (tmp 168))
      (= (tmp 170) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 169) (tmp 170))
      (= (tmp 172) (icmp (constant ? 40) eq (tmp 171) (constant ? 0)))
      (br (tmp 172) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 173) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 175) (icmp (constant ? 40) eq (tmp 174) (constant ? -1)))
      (br (tmp 175) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 176) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 177) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 178) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 179) (phi ((no-value . bb_3) ((tmp 178) . bb_4))))
      (= (tmp 181) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 180) (tmp 181))))
  (pattern
    (constraints
      (allocate-in (tmp 169) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 180) (reg-flag mi dst))
      (aliases ((tmp 83) (tmp 43) (tmp 42) (tmp 21)) ((tmp 84) (tmp 168)))
      (allocate-in (tmp 173) (reg-flag ex dst))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 171) (reg-flag a dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 177) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 174) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 176) (reg-flag ex dst)))
    (code
      (= (tmp 17) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 19) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 20) (mul (constant ? 40) (tmp 17) (tmp 19)))
      (= (tmp 21) (shl (constant ? 40) (tmp 20) (constant ? 1)))
      (= (tmp 84) (add (constant ? 40) (tmp 83) (constant ? 32768)))
      (set-reg dst (tmp 168))
      (= (tmp 170) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 169) (tmp 170))
      (= (tmp 172) (icmp (constant ? 40) eq (tmp 171) (constant ? 0)))
      (br (tmp 172) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 173) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 175) (icmp (constant ? 40) eq (tmp 174) (constant ? -1)))
      (br (tmp 175) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 176) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 177) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 178) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 179) (phi ((no-value . bb_3) ((tmp 178) . bb_4))))
      (= (tmp 181) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 180) (tmp 181))))
  (pattern
    (constraints
      (allocate-in (tmp 169) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 180) (reg-flag mi dst))
      (aliases ((tmp 82) (tmp 83) (tmp 51)) ((tmp 84) (tmp 168)))
      (allocate-in (tmp 173) (reg-flag ex dst))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 171) (reg-flag a dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 177) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 174) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 176) (reg-flag ex dst)))
    (code
      (= (tmp 48) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 50) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 51) (mul (constant ? 40) (tmp 48) (tmp 50)))
      (= (tmp 84) (add (constant ? 40) (tmp 83) (constant ? 32768)))
      (set-reg dst (tmp 168))
      (= (tmp 170) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 169) (tmp 170))
      (= (tmp 172) (icmp (constant ? 40) eq (tmp 171) (constant ? 0)))
      (br (tmp 172) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 173) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 175) (icmp (constant ? 40) eq (tmp 174) (constant ? -1)))
      (br (tmp 175) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 176) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 177) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 178) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 179) (phi ((no-value . bb_3) ((tmp 178) . bb_4))))
      (= (tmp 181) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 180) (tmp 181))))
  (pattern
    (constraints
      (allocate-in (tmp 169) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 180) (reg-flag mi dst))
      (aliases ((tmp 60) (tmp 81) (tmp 82) (tmp 83)) ((tmp 84) (tmp 168)))
      (allocate-in (tmp 173) (reg-flag ex dst))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 171) (reg-flag a dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 177) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 174) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 176) (reg-flag ex dst)))
    (code
      (= (tmp 56) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 58) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 59) (mul (constant ? 40) (tmp 56) (tmp 58)))
      (= (tmp 60) (shl (constant ? 40) (tmp 59) (constant ? 1)))
      (= (tmp 84) (add (constant ? 40) (tmp 83) (constant ? 32768)))
      (set-reg dst (tmp 168))
      (= (tmp 170) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 169) (tmp 170))
      (= (tmp 172) (icmp (constant ? 40) eq (tmp 171) (constant ? 0)))
      (br (tmp 172) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 173) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 175) (icmp (constant ? 40) eq (tmp 174) (constant ? -1)))
      (br (tmp 175) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 176) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 177) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 178) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 179) (phi ((no-value . bb_3) ((tmp 178) . bb_4))))
      (= (tmp 181) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 180) (tmp 181))))
  (pattern
    (constraints
      (allocate-in (tmp 169) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 180) (reg-flag mi dst))
      (aliases ((tmp 167) (tmp 168) (tmp 127) (tmp 96)))
      (allocate-in (tmp 173) (reg-flag ex dst))
      (immediate imm1b ((0 . 0)))
      (allocate-in (tmp 171) (reg-flag a dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 177) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 174) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 176) (reg-flag ex dst)))
    (code
      (= (tmp 93) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 95) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 96) (mul (constant ? 40) (tmp 93) (tmp 95)))
      (set-reg dst (tmp 168))
      (= (tmp 170) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 169) (tmp 170))
      (= (tmp 172) (icmp (constant ? 40) eq (tmp 171) (constant ? 0)))
      (br (tmp 172) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 173) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 175) (icmp (constant ? 40) eq (tmp 174) (constant ? -1)))
      (br (tmp 175) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 176) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 177) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 178) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 179) (phi ((no-value . bb_3) ((tmp 178) . bb_4))))
      (= (tmp 181) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 180) (tmp 181))))
  (pattern
    (constraints
      (allocate-in (tmp 169) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 180) (reg-flag mi dst))
      (aliases ((tmp 167) (tmp 168) (tmp 127) (tmp 126) (tmp 105)))
      (allocate-in (tmp 173) (reg-flag ex dst))
      (immediate imm1b ((0 . 0)))
      (allocate-in (tmp 171) (reg-flag a dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 177) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 174) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 176) (reg-flag ex dst)))
    (code
      (= (tmp 101) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 103) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 104) (mul (constant ? 40) (tmp 101) (tmp 103)))
      (= (tmp 105) (shl (constant ? 40) (tmp 104) (constant ? 1)))
      (set-reg dst (tmp 168))
      (= (tmp 170) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 169) (tmp 170))
      (= (tmp 172) (icmp (constant ? 40) eq (tmp 171) (constant ? 0)))
      (br (tmp 172) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 173) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 175) (icmp (constant ? 40) eq (tmp 174) (constant ? -1)))
      (br (tmp 175) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 176) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 177) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 178) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 179) (phi ((no-value . bb_3) ((tmp 178) . bb_4))))
      (= (tmp 181) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 180) (tmp 181))))
  (pattern
    (constraints
      (allocate-in (tmp 169) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 180) (reg-flag mi dst))
      (aliases ((tmp 167) (tmp 166) (tmp 168) (tmp 135)))
      (allocate-in (tmp 173) (reg-flag ex dst))
      (immediate imm1b ((0 . 0)))
      (allocate-in (tmp 171) (reg-flag a dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 177) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 174) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 176) (reg-flag ex dst)))
    (code
      (= (tmp 132) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 134) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 135) (mul (constant ? 40) (tmp 132) (tmp 134)))
      (set-reg dst (tmp 168))
      (= (tmp 170) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 169) (tmp 170))
      (= (tmp 172) (icmp (constant ? 40) eq (tmp 171) (constant ? 0)))
      (br (tmp 172) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 173) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 175) (icmp (constant ? 40) eq (tmp 174) (constant ? -1)))
      (br (tmp 175) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 176) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 177) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 178) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 179) (phi ((no-value . bb_3) ((tmp 178) . bb_4))))
      (= (tmp 181) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 180) (tmp 181))))
  (pattern
    (constraints
      (allocate-in (tmp 169) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 180) (reg-flag mi dst))
      (aliases ((tmp 167) (tmp 166) (tmp 165) (tmp 168) (tmp 144)))
      (allocate-in (tmp 173) (reg-flag ex dst))
      (immediate imm1b ((0 . 0)))
      (allocate-in (tmp 171) (reg-flag a dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 177) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 174) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 176) (reg-flag ex dst)))
    (code
      (= (tmp 140) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 142) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 143) (mul (constant ? 40) (tmp 140) (tmp 142)))
      (= (tmp 144) (shl (constant ? 40) (tmp 143) (constant ? 1)))
      (set-reg dst (tmp 168))
      (= (tmp 170) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 169) (tmp 170))
      (= (tmp 172) (icmp (constant ? 40) eq (tmp 171) (constant ? 0)))
      (br (tmp 172) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 173) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 175) (icmp (constant ? 40) eq (tmp 174) (constant ? -1)))
      (br (tmp 175) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 176) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 177) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 178) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 179) (phi ((no-value . bb_3) ((tmp 178) . bb_4))))
      (= (tmp 181) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 180) (tmp 181)))))

(instruction
  mv_dp16_nimm13_any32
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dpop (dp))
      (reg-flag u dst ((1 . 1)))
      (immediate SImm ((-4096 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 2) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 5) (load-mem (constant ? 16) ldm (tmp 4)))
      (set-reg (tmp 3) (tmp 5))
      (= (tmp 13) (zext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 13))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dpop (dp))
      (reg-flag u dst ((0 . 0)))
      (immediate SImm ((-4096 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 2) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 5) (load-mem (constant ? 16) ldm (tmp 4)))
      (set-reg (tmp 3) (tmp 5))
      (= (tmp 14) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 14))))
  (pattern
    (constraints
      (allocate-in dst (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (allocate-in dpop (dp))
      (immediate SImm ((-4096 . 4095))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 2) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 5) (load-mem (constant ? 16) ldm (tmp 4)))
      (set-reg (tmp 3) (tmp 5))
      (set-reg dst dst))))

(instruction
  bpackh_a40_a16h
  (pattern
    (constraints
      (allocate-in dst (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 24) (constant ? 31)))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  mv_any32_r16_a0l_a7l
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag z rN))
      (aliases ((tmp 2) (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in regi (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag s src ((1 . 1))))
    (code
      (= (tmp 2) (satadd (constant ? 32) (constant ? 0) src))
      (= (tmp 5) (add (constant ? 16) rN regi))
      (= (tmp 6) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 5) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag z rN))
      (aliases (src (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in regi (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag s src ((0 . 0))))
    (code
      (= (tmp 5) (add (constant ? 16) rN regi))
      (= (tmp 6) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 5) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13))))
  (pattern
    (constraints
      (allocate-in src (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (allocate-in (tmp 11) (reg-flag z rN))
      (aliases (src (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in regi (a0l a1l a2l a3l a4l a5l a6l a7l)))
    (code
      (= (tmp 5) (add (constant ? 16) rN regi))
      (= (tmp 6) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 5) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  lbrr_offset
  (pattern
    (constraints
      (rel-address addr -524288 524287))
    (code
      (= (tmp 0) (add (size pc) (register pc) addr))
      (= (tmp 1) (urem (size pc) (tmp 0) (size pc)))
      (set-reg (register pc) (tmp 1)))))

(instruction
  shfta2_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 28) (reg-flag a dst))
      (aliases ((tmp 27) (tmp 26)) ((tmp 12) (tmp 13)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 16) (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 16) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 16) (tmp 1) src2))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 9) (ashr (constant ? 16) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 16) (tmp 9) (constant ? 16)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 17) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 16) (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 16) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 16) (tmp 15) src2))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 23) (ashr (constant ? 16) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 16) (tmp 23) (constant ? 16)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 28) (tmp 29))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 28) (reg-flag a dst))
      (aliases (no-value (tmp 27) (tmp 13)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 28) (tmp 29)))))

(instruction
  bpackh_a40_a16l
  (pattern
    (constraints
      (allocate-in dst (a1h a2h a3h a0l a1l a2l a3l a0h))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 24) (constant ? 31)))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  mac_nimm1_a16_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 385) (reg-flag ex dst))
      (allocate-in (tmp 377) (reg-flag ac dst))
      (allocate-in (tmp 90) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 384) (reg-flag ex dst))
      (aliases ((tmp 85) (tmp 45) (tmp 44) (tmp 23)) ((tmp 376) (tmp 188) (tmp 95)))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 379) (reg-flag a dst))
      (allocate-in (tmp 88) (reg-flag of dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 388) (reg-flag mi dst))
      (allocate-in (tmp 382) (reg-flag a dst))
      (allocate-in (tmp 381) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 91) (reg-flag of dst)))
    (code
      (= (tmp 19) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 21) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 22) (mul (constant ? 40) (tmp 19) (tmp 21)))
      (= (tmp 23) (shl (constant ? 40) (tmp 22) (constant ? 1)))
      (= (tmp 86) (add (constant ? 40) dst (tmp 85)))
      (= (tmp 87) (icmp (constant ? 40) slt (tmp 86) dst))
      (br (tmp 87) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 88) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 89) (icmp (constant ? 40) slt (tmp 86) (tmp 85)))
      (br (tmp 89) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 90) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 91) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 92) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 93) (phi ((no-value . bb_3) ((tmp 92) . bb_4))))
      (= (tmp 94) (add (constant ? 40) dst (tmp 85)))
      (set-reg dst (tmp 94))
      (= (tmp 95) (add (constant ? 40) no-value (constant ? 32768)))
      (set-reg dst (tmp 376))
      (= (tmp 378) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 377) (tmp 378))
      (= (tmp 380) (icmp (constant ? 40) eq (tmp 379) (constant ? 0)))
      (br (tmp 380) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 381) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 383) (icmp (constant ? 40) eq (tmp 382) (constant ? -1)))
      (br (tmp 383) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 384) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 385) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 386) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 387) (phi ((no-value . bb_27) ((tmp 386) . bb_28))))
      (= (tmp 389) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 388) (tmp 389))))
  (pattern
    (constraints
      (allocate-in (tmp 385) (reg-flag ex dst))
      (allocate-in (tmp 377) (reg-flag ac dst))
      (allocate-in (tmp 90) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 384) (reg-flag ex dst))
      (aliases ((tmp 85) (tmp 45) (tmp 14)) ((tmp 376) (tmp 188) (tmp 95)))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 379) (reg-flag a dst))
      (allocate-in (tmp 88) (reg-flag of dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 388) (reg-flag mi dst))
      (allocate-in (tmp 382) (reg-flag a dst))
      (allocate-in (tmp 381) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 91) (reg-flag of dst)))
    (code
      (= (tmp 11) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 13) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 14) (mul (constant ? 40) (tmp 11) (tmp 13)))
      (= (tmp 86) (add (constant ? 40) dst (tmp 85)))
      (= (tmp 87) (icmp (constant ? 40) slt (tmp 86) dst))
      (br (tmp 87) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 88) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 89) (icmp (constant ? 40) slt (tmp 86) (tmp 85)))
      (br (tmp 89) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 90) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 91) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 92) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 93) (phi ((no-value . bb_3) ((tmp 92) . bb_4))))
      (= (tmp 94) (add (constant ? 40) dst (tmp 85)))
      (set-reg dst (tmp 94))
      (= (tmp 95) (add (constant ? 40) no-value (constant ? 32768)))
      (set-reg dst (tmp 376))
      (= (tmp 378) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 377) (tmp 378))
      (= (tmp 380) (icmp (constant ? 40) eq (tmp 379) (constant ? 0)))
      (br (tmp 380) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 381) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 383) (icmp (constant ? 40) eq (tmp 382) (constant ? -1)))
      (br (tmp 383) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 384) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 385) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 386) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 387) (phi ((no-value . bb_27) ((tmp 386) . bb_28))))
      (= (tmp 389) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 388) (tmp 389))))
  (pattern
    (constraints
      (allocate-in (tmp 184) (reg-flag of dst))
      (allocate-in (tmp 377) (reg-flag ac dst))
      (allocate-in (tmp 379) (reg-flag a dst))
      (allocate-in (tmp 385) (reg-flag ex dst))
      (allocate-in (tmp 183) (reg-flag of dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 384) (reg-flag ex dst))
      (aliases ((tmp 178) (tmp 138) (tmp 137) (tmp 116)) (no-value (tmp 376) (tmp 188)))
      (immediate imm1b ((0 . 0)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 388) (reg-flag mi dst))
      (allocate-in (tmp 382) (reg-flag a dst))
      (allocate-in (tmp 181) (reg-flag of dst))
      (allocate-in (tmp 381) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag ap cuc ((0 . 0))))
    (code
      (= (tmp 112) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 114) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 115) (mul (constant ? 40) (tmp 112) (tmp 114)))
      (= (tmp 116) (shl (constant ? 40) (tmp 115) (constant ? 1)))
      (= (tmp 179) (add (constant ? 40) dst (tmp 178)))
      (= (tmp 180) (icmp (constant ? 40) slt (tmp 179) dst))
      (br (tmp 180) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 181) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 182) (icmp (constant ? 40) slt (tmp 179) (tmp 178)))
      (br (tmp 182) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 183) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 184) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 185) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 186) (phi ((no-value . bb_9) ((tmp 185) . bb_10))))
      (= (tmp 187) (add (constant ? 40) dst (tmp 178)))
      (set-reg dst (tmp 187))
      (set-reg dst (tmp 376))
      (= (tmp 378) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 377) (tmp 378))
      (= (tmp 380) (icmp (constant ? 40) eq (tmp 379) (constant ? 0)))
      (br (tmp 380) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 381) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 383) (icmp (constant ? 40) eq (tmp 382) (constant ? -1)))
      (br (tmp 383) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 384) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 385) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 386) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 387) (phi ((no-value . bb_27) ((tmp 386) . bb_28))))
      (= (tmp 389) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 388) (tmp 389))))
  (pattern
    (constraints
      (allocate-in (tmp 184) (reg-flag of dst))
      (allocate-in (tmp 377) (reg-flag ac dst))
      (allocate-in (tmp 379) (reg-flag a dst))
      (allocate-in (tmp 385) (reg-flag ex dst))
      (allocate-in (tmp 183) (reg-flag of dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 384) (reg-flag ex dst))
      (aliases ((tmp 178) (tmp 138) (tmp 107)) (no-value (tmp 376) (tmp 188)))
      (immediate imm1b ((0 . 0)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 388) (reg-flag mi dst))
      (allocate-in (tmp 382) (reg-flag a dst))
      (allocate-in (tmp 181) (reg-flag of dst))
      (allocate-in (tmp 381) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag ap cuc ((1 . 3))))
    (code
      (= (tmp 104) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 106) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 107) (mul (constant ? 40) (tmp 104) (tmp 106)))
      (= (tmp 179) (add (constant ? 40) dst (tmp 178)))
      (= (tmp 180) (icmp (constant ? 40) slt (tmp 179) dst))
      (br (tmp 180) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 181) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 182) (icmp (constant ? 40) slt (tmp 179) (tmp 178)))
      (br (tmp 182) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 183) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 184) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 185) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 186) (phi ((no-value . bb_9) ((tmp 185) . bb_10))))
      (= (tmp 187) (add (constant ? 40) dst (tmp 178)))
      (set-reg dst (tmp 187))
      (set-reg dst (tmp 376))
      (= (tmp 378) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 377) (tmp 378))
      (= (tmp 380) (icmp (constant ? 40) eq (tmp 379) (constant ? 0)))
      (br (tmp 380) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 381) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 383) (icmp (constant ? 40) eq (tmp 382) (constant ? -1)))
      (br (tmp 383) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 384) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 385) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 386) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 387) (phi ((no-value . bb_27) ((tmp 386) . bb_28))))
      (= (tmp 389) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 388) (tmp 389))))
  (pattern
    (constraints
      (allocate-in (tmp 275) (reg-flag of dst))
      (allocate-in (tmp 377) (reg-flag ac dst))
      (allocate-in (tmp 385) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 384) (reg-flag ex dst))
      (aliases ((tmp 249) (tmp 270) (tmp 271) (tmp 272)) ((tmp 282) (tmp 376) (tmp 375)))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 379) (reg-flag a dst))
      (allocate-in (tmp 277) (reg-flag of dst))
      (allocate-in (tmp 278) (reg-flag of dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 388) (reg-flag mi dst))
      (allocate-in (tmp 382) (reg-flag a dst))
      (allocate-in (tmp 381) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag ap cuc ((0 . 0))))
    (code
      (= (tmp 245) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 247) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 248) (mul (constant ? 40) (tmp 245) (tmp 247)))
      (= (tmp 249) (shl (constant ? 40) (tmp 248) (constant ? 1)))
      (= (tmp 273) (add (constant ? 40) dst (tmp 272)))
      (= (tmp 274) (icmp (constant ? 40) slt (tmp 273) dst))
      (br (tmp 274) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 275) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 276) (icmp (constant ? 40) slt (tmp 273) (tmp 272)))
      (br (tmp 276) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 277) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 278) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 279) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 280) (phi ((no-value . bb_15) ((tmp 279) . bb_16))))
      (= (tmp 281) (add (constant ? 40) dst (tmp 272)))
      (set-reg dst (tmp 281))
      (= (tmp 282) (add (constant ? 40) no-value (constant ? 32768)))
      (set-reg dst (tmp 376))
      (= (tmp 378) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 377) (tmp 378))
      (= (tmp 380) (icmp (constant ? 40) eq (tmp 379) (constant ? 0)))
      (br (tmp 380) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 381) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 383) (icmp (constant ? 40) eq (tmp 382) (constant ? -1)))
      (br (tmp 383) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 384) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 385) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 386) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 387) (phi ((no-value . bb_27) ((tmp 386) . bb_28))))
      (= (tmp 389) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 388) (tmp 389))))
  (pattern
    (constraints
      (allocate-in (tmp 275) (reg-flag of dst))
      (allocate-in (tmp 377) (reg-flag ac dst))
      (allocate-in (tmp 385) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 384) (reg-flag ex dst))
      (aliases ((tmp 271) (tmp 272) (tmp 240)) ((tmp 282) (tmp 376) (tmp 375)))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 379) (reg-flag a dst))
      (allocate-in (tmp 277) (reg-flag of dst))
      (allocate-in (tmp 278) (reg-flag of dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 388) (reg-flag mi dst))
      (allocate-in (tmp 382) (reg-flag a dst))
      (allocate-in (tmp 381) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag ap cuc ((1 . 3))))
    (code
      (= (tmp 237) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 239) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 240) (mul (constant ? 40) (tmp 237) (tmp 239)))
      (= (tmp 273) (add (constant ? 40) dst (tmp 272)))
      (= (tmp 274) (icmp (constant ? 40) slt (tmp 273) dst))
      (br (tmp 274) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 275) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 276) (icmp (constant ? 40) slt (tmp 273) (tmp 272)))
      (br (tmp 276) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 277) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 278) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 279) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 280) (phi ((no-value . bb_15) ((tmp 279) . bb_16))))
      (= (tmp 281) (add (constant ? 40) dst (tmp 272)))
      (set-reg dst (tmp 281))
      (= (tmp 282) (add (constant ? 40) no-value (constant ? 32768)))
      (set-reg dst (tmp 376))
      (= (tmp 378) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 377) (tmp 378))
      (= (tmp 380) (icmp (constant ? 40) eq (tmp 379) (constant ? 0)))
      (br (tmp 380) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 381) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 383) (icmp (constant ? 40) eq (tmp 382) (constant ? -1)))
      (br (tmp 383) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 384) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 385) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 386) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 387) (phi ((no-value . bb_27) ((tmp 386) . bb_28))))
      (= (tmp 389) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 388) (tmp 389))))
  (pattern
    (constraints
      (allocate-in (tmp 377) (reg-flag ac dst))
      (allocate-in (tmp 385) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 384) (reg-flag ex dst))
      (aliases ((tmp 342) (tmp 365) (tmp 364) (tmp 363)) (no-value (tmp 376) (tmp 375)))
      (allocate-in (tmp 368) (reg-flag of dst))
      (immediate imm1b ((0 . 0)))
      (allocate-in (tmp 379) (reg-flag a dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 388) (reg-flag mi dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 382) (reg-flag a dst))
      (allocate-in (tmp 381) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 371) (reg-flag of dst))
      (allocate-in (tmp 370) (reg-flag of dst)))
    (code
      (= (tmp 338) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 340) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 341) (mul (constant ? 40) (tmp 338) (tmp 340)))
      (= (tmp 342) (shl (constant ? 40) (tmp 341) (constant ? 1)))
      (= (tmp 366) (add (constant ? 40) dst (tmp 365)))
      (= (tmp 367) (icmp (constant ? 40) slt (tmp 366) dst))
      (br (tmp 367) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 368) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 369) (icmp (constant ? 40) slt (tmp 366) (tmp 365)))
      (br (tmp 369) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 370) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 371) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 372) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 373) (phi ((no-value . bb_21) ((tmp 372) . bb_22))))
      (= (tmp 374) (add (constant ? 40) dst (tmp 365)))
      (set-reg dst (tmp 374))
      (set-reg dst (tmp 376))
      (= (tmp 378) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 377) (tmp 378))
      (= (tmp 380) (icmp (constant ? 40) eq (tmp 379) (constant ? 0)))
      (br (tmp 380) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 381) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 383) (icmp (constant ? 40) eq (tmp 382) (constant ? -1)))
      (br (tmp 383) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 384) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 385) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 386) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 387) (phi ((no-value . bb_27) ((tmp 386) . bb_28))))
      (= (tmp 389) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 388) (tmp 389))))
  (pattern
    (constraints
      (allocate-in (tmp 377) (reg-flag ac dst))
      (allocate-in (tmp 385) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 384) (reg-flag ex dst))
      (aliases ((tmp 333) (tmp 365) (tmp 364)) (no-value (tmp 376) (tmp 375)))
      (allocate-in (tmp 368) (reg-flag of dst))
      (immediate imm1b ((0 . 0)))
      (allocate-in (tmp 379) (reg-flag a dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 388) (reg-flag mi dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 382) (reg-flag a dst))
      (allocate-in (tmp 381) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 371) (reg-flag of dst))
      (allocate-in (tmp 370) (reg-flag of dst)))
    (code
      (= (tmp 330) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 332) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 333) (mul (constant ? 40) (tmp 330) (tmp 332)))
      (= (tmp 366) (add (constant ? 40) dst (tmp 365)))
      (= (tmp 367) (icmp (constant ? 40) slt (tmp 366) dst))
      (br (tmp 367) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 368) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 369) (icmp (constant ? 40) slt (tmp 366) (tmp 365)))
      (br (tmp 369) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 370) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 371) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 372) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 373) (phi ((no-value . bb_21) ((tmp 372) . bb_22))))
      (= (tmp 374) (add (constant ? 40) dst (tmp 365)))
      (set-reg dst (tmp 374))
      (set-reg dst (tmp 376))
      (= (tmp 378) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 377) (tmp 378))
      (= (tmp 380) (icmp (constant ? 40) eq (tmp 379) (constant ? 0)))
      (br (tmp 380) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 381) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 383) (icmp (constant ? 40) eq (tmp 382) (constant ? -1)))
      (br (tmp 383) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 384) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 385) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 386) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 387) (phi ((no-value . bb_27) ((tmp 386) . bb_28))))
      (= (tmp 389) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 388) (tmp 389)))))

(instruction
  mv_any32_r16_a0h_a7h
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag z rN))
      (aliases ((tmp 2) (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in regi (a1h a2h a3h a4h a5h a6h a7h a0h))
      (reg-flag s src ((1 . 1))))
    (code
      (= (tmp 2) (satadd (constant ? 32) (constant ? 0) src))
      (= (tmp 5) (add (constant ? 16) rN regi))
      (= (tmp 6) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 5) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag z rN))
      (aliases (src (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in regi (a1h a2h a3h a4h a5h a6h a7h a0h))
      (reg-flag s src ((0 . 0))))
    (code
      (= (tmp 5) (add (constant ? 16) rN regi))
      (= (tmp 6) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 5) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13))))
  (pattern
    (constraints
      (allocate-in src (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (allocate-in (tmp 11) (reg-flag z rN))
      (aliases (src (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in regi (a1h a2h a3h a4h a5h a6h a7h a0h)))
    (code
      (= (tmp 5) (add (constant ? 16) rN regi))
      (= (tmp 6) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 5) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  mv_r16_a16l_any32
  (pattern
    (constraints
      (allocate-in dst (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (allocate-in (tmp 15) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in regi (a0l a1l a2l a3l a4l a5l a6l a7l)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 2) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 5) (load-mem (constant ? 16) ldm (tmp 4)))
      (set-reg (tmp 3) (tmp 5))
      (set-reg dst dst)
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag z rN))
      (reg-flag u dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in regi (a0l a1l a2l a3l a4l a5l a6l a7l)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 2) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 5) (load-mem (constant ? 16) ldm (tmp 4)))
      (set-reg (tmp 3) (tmp 5))
      (= (tmp 14) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 14))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag z rN))
      (reg-flag u dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in regi (a0l a1l a2l a3l a4l a5l a6l a7l)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 2) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 5) (load-mem (constant ? 16) ldm (tmp 4)))
      (set-reg (tmp 3) (tmp 5))
      (= (tmp 13) (zext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 13))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17)))))

(instruction
  bpackl_a40_a16h
  (pattern
    (constraints
      (allocate-in dst (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 16) (constant ? 23)))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  lbrr_offset_alias
  (pattern
    (constraints
      (rel-address addr -524288 524287))
    (code
      (= (tmp 0) (add (size pc) (register pc) addr))
      (= (tmp 1) (urem (size pc) (tmp 0) (size pc)))
      (set-reg (register pc) (tmp 1)))))

(instruction
  mv_r16_a16h_any32
  (pattern
    (constraints
      (allocate-in dst (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (allocate-in (tmp 15) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in regi (a1h a2h a3h a4h a5h a6h a7h a0h)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 2) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 5) (load-mem (constant ? 16) ldm (tmp 4)))
      (set-reg (tmp 3) (tmp 5))
      (set-reg dst dst)
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag z rN))
      (reg-flag u dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in regi (a1h a2h a3h a4h a5h a6h a7h a0h)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 2) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 5) (load-mem (constant ? 16) ldm (tmp 4)))
      (set-reg (tmp 3) (tmp 5))
      (= (tmp 14) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 14))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag z rN))
      (reg-flag u dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in regi (a1h a2h a3h a4h a5h a6h a7h a0h)))
    (code
      (= (tmp 0) (add (constant ? 16) rN regi))
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 2) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 5) (load-mem (constant ? 16) ldm (tmp 4)))
      (set-reg (tmp 3) (tmp 5))
      (= (tmp 13) (zext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 13))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17)))))

(instruction
  mac_a16_a16_a40l
  (pattern
    (constraints
      (allocate-in (tmp 21) (reg-flag of dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 62) (reg-flag ex dst))
      (allocate-in dst (a1 a2 a3 a0))
      (allocate-in (tmp 61) (reg-flag ex dst))
      (allocate-in (tmp 23) (reg-flag of dst))
      (aliases ((tmp 11) (tmp 18)))
      (allocate-in (tmp 24) (reg-flag of dst))
      (allocate-in (tmp 56) (reg-flag a dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 65) (reg-flag mi dst))
      (allocate-in (tmp 59) (reg-flag a dst))
      (allocate-in (tmp 58) (reg-flag ex dst))
      (allocate-in (tmp 54) (reg-flag ac dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 8) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 10) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 11) (mul (constant ? 40) (tmp 8) (tmp 10)))
      (= (tmp 19) (add (constant ? 40) dst (tmp 18)))
      (= (tmp 20) (icmp (constant ? 40) slt (tmp 19) dst))
      (br (tmp 20) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 21) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 22) (icmp (constant ? 40) slt (tmp 19) (tmp 18)))
      (br (tmp 22) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 24) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 25) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 26) (phi ((no-value . bb_3) ((tmp 25) . bb_4))))
      (= (tmp 27) (add (constant ? 40) dst (tmp 18)))
      (set-reg dst (tmp 27))
      (set-reg dst no-value)
      (= (tmp 55) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 54) (tmp 55))
      (= (tmp 57) (icmp (constant ? 40) eq (tmp 56) (constant ? 0)))
      (br (tmp 57) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 58) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 60) (icmp (constant ? 40) eq (tmp 59) (constant ? -1)))
      (br (tmp 60) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 61) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 62) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 63) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 64) (phi ((no-value . bb_15) ((tmp 63) . bb_16))))
      (= (tmp 66) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 65) (tmp 66))))
  (pattern
    (constraints
      (allocate-in (tmp 59) (reg-flag a dst))
      (allocate-in (tmp 49) (reg-flag of dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 62) (reg-flag ex dst))
      (allocate-in dst (a1 a2 a3 a0))
      (allocate-in (tmp 61) (reg-flag ex dst))
      (aliases ((tmp 43) (tmp 44)))
      (allocate-in (tmp 50) (reg-flag of dst))
      (allocate-in (tmp 56) (reg-flag a dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 65) (reg-flag mi dst))
      (allocate-in (tmp 47) (reg-flag of dst))
      (allocate-in (tmp 58) (reg-flag ex dst))
      (allocate-in (tmp 54) (reg-flag ac dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 40) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 42) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 43) (mul (constant ? 40) (tmp 40) (tmp 42)))
      (= (tmp 45) (add (constant ? 40) dst (tmp 44)))
      (= (tmp 46) (icmp (constant ? 40) slt (tmp 45) dst))
      (br (tmp 46) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 47) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 48) (icmp (constant ? 40) slt (tmp 45) (tmp 44)))
      (br (tmp 48) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 49) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 50) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 51) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 52) (phi ((no-value . bb_9) ((tmp 51) . bb_10))))
      (= (tmp 53) (add (constant ? 40) dst (tmp 44)))
      (set-reg dst (tmp 53))
      (set-reg dst no-value)
      (= (tmp 55) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 54) (tmp 55))
      (= (tmp 57) (icmp (constant ? 40) eq (tmp 56) (constant ? 0)))
      (br (tmp 57) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 58) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 60) (icmp (constant ? 40) eq (tmp 59) (constant ? -1)))
      (br (tmp 60) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 61) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 62) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 63) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 64) (phi ((no-value . bb_15) ((tmp 63) . bb_16))))
      (= (tmp 66) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 65) (tmp 66)))))

(instruction
  fbrr_offset
  (pattern
    (constraints
      (rel-address addr -1073741824 1073741823))
    (code
      (= (tmp 0) (add (size pc) (register pc) addr))
      (= (tmp 1) (urem (size pc) (tmp 0) (size pc)))
      (set-reg (register pc) (tmp 1)))))

(instruction
  mv_any32_r16++
  (pattern
    (constraints
      (allocate-in src (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (allocate-in (tmp 11) (reg-flag z rN))
      (aliases (src (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2)))
    (code
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 10) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag z rN))
      (aliases (src (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag s src ((0 . 0))))
    (code
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 10) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag z rN))
      (aliases ((tmp 2) (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag s src ((1 . 1))))
    (code
      (= (tmp 2) (satadd (constant ? 32) (constant ? 0) src))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 10) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  mas_nimm1_a16_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 385) (reg-flag ex dst))
      (allocate-in (tmp 377) (reg-flag ac dst))
      (allocate-in (tmp 90) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 384) (reg-flag ex dst))
      (aliases ((tmp 85) (tmp 45) (tmp 44) (tmp 23)) ((tmp 376) (tmp 188) (tmp 95)))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 379) (reg-flag a dst))
      (allocate-in (tmp 88) (reg-flag of dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 388) (reg-flag mi dst))
      (allocate-in (tmp 382) (reg-flag a dst))
      (allocate-in (tmp 381) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 91) (reg-flag of dst)))
    (code
      (= (tmp 19) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 21) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 22) (mul (constant ? 40) (tmp 19) (tmp 21)))
      (= (tmp 23) (shl (constant ? 40) (tmp 22) (constant ? 1)))
      (= (tmp 86) (sub (constant ? 40) dst (tmp 85)))
      (= (tmp 87) (icmp (constant ? 40) sgt (tmp 86) dst))
      (br (tmp 87) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 88) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 89) (icmp (constant ? 40) sgt (tmp 86) (tmp 85)))
      (br (tmp 89) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 90) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 91) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 92) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 93) (phi ((no-value . bb_3) ((tmp 92) . bb_4))))
      (= (tmp 94) (sub (constant ? 40) dst (tmp 85)))
      (set-reg dst (tmp 94))
      (= (tmp 95) (add (constant ? 40) no-value (constant ? 32768)))
      (set-reg dst (tmp 376))
      (= (tmp 378) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 377) (tmp 378))
      (= (tmp 380) (icmp (constant ? 40) eq (tmp 379) (constant ? 0)))
      (br (tmp 380) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 381) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 383) (icmp (constant ? 40) eq (tmp 382) (constant ? -1)))
      (br (tmp 383) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 384) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 385) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 386) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 387) (phi ((no-value . bb_27) ((tmp 386) . bb_28))))
      (= (tmp 389) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 388) (tmp 389))))
  (pattern
    (constraints
      (allocate-in (tmp 385) (reg-flag ex dst))
      (allocate-in (tmp 377) (reg-flag ac dst))
      (allocate-in (tmp 90) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 384) (reg-flag ex dst))
      (aliases ((tmp 85) (tmp 45) (tmp 14)) ((tmp 376) (tmp 188) (tmp 95)))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 379) (reg-flag a dst))
      (allocate-in (tmp 88) (reg-flag of dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 388) (reg-flag mi dst))
      (allocate-in (tmp 382) (reg-flag a dst))
      (allocate-in (tmp 381) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 91) (reg-flag of dst)))
    (code
      (= (tmp 11) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 13) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 14) (mul (constant ? 40) (tmp 11) (tmp 13)))
      (= (tmp 86) (sub (constant ? 40) dst (tmp 85)))
      (= (tmp 87) (icmp (constant ? 40) sgt (tmp 86) dst))
      (br (tmp 87) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 88) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 89) (icmp (constant ? 40) sgt (tmp 86) (tmp 85)))
      (br (tmp 89) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 90) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 91) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 92) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 93) (phi ((no-value . bb_3) ((tmp 92) . bb_4))))
      (= (tmp 94) (sub (constant ? 40) dst (tmp 85)))
      (set-reg dst (tmp 94))
      (= (tmp 95) (add (constant ? 40) no-value (constant ? 32768)))
      (set-reg dst (tmp 376))
      (= (tmp 378) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 377) (tmp 378))
      (= (tmp 380) (icmp (constant ? 40) eq (tmp 379) (constant ? 0)))
      (br (tmp 380) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 381) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 383) (icmp (constant ? 40) eq (tmp 382) (constant ? -1)))
      (br (tmp 383) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 384) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 385) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 386) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 387) (phi ((no-value . bb_27) ((tmp 386) . bb_28))))
      (= (tmp 389) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 388) (tmp 389))))
  (pattern
    (constraints
      (allocate-in (tmp 184) (reg-flag of dst))
      (allocate-in (tmp 377) (reg-flag ac dst))
      (allocate-in (tmp 379) (reg-flag a dst))
      (allocate-in (tmp 385) (reg-flag ex dst))
      (allocate-in (tmp 183) (reg-flag of dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 384) (reg-flag ex dst))
      (aliases ((tmp 178) (tmp 138) (tmp 137) (tmp 116)) (no-value (tmp 376) (tmp 188)))
      (immediate imm1b ((0 . 0)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 388) (reg-flag mi dst))
      (allocate-in (tmp 382) (reg-flag a dst))
      (allocate-in (tmp 181) (reg-flag of dst))
      (allocate-in (tmp 381) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag ap cuc ((0 . 0))))
    (code
      (= (tmp 112) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 114) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 115) (mul (constant ? 40) (tmp 112) (tmp 114)))
      (= (tmp 116) (shl (constant ? 40) (tmp 115) (constant ? 1)))
      (= (tmp 179) (sub (constant ? 40) dst (tmp 178)))
      (= (tmp 180) (icmp (constant ? 40) sgt (tmp 179) dst))
      (br (tmp 180) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 181) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 182) (icmp (constant ? 40) sgt (tmp 179) (tmp 178)))
      (br (tmp 182) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 183) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 184) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 185) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 186) (phi ((no-value . bb_9) ((tmp 185) . bb_10))))
      (= (tmp 187) (sub (constant ? 40) dst (tmp 178)))
      (set-reg dst (tmp 187))
      (set-reg dst (tmp 376))
      (= (tmp 378) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 377) (tmp 378))
      (= (tmp 380) (icmp (constant ? 40) eq (tmp 379) (constant ? 0)))
      (br (tmp 380) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 381) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 383) (icmp (constant ? 40) eq (tmp 382) (constant ? -1)))
      (br (tmp 383) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 384) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 385) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 386) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 387) (phi ((no-value . bb_27) ((tmp 386) . bb_28))))
      (= (tmp 389) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 388) (tmp 389))))
  (pattern
    (constraints
      (allocate-in (tmp 184) (reg-flag of dst))
      (allocate-in (tmp 377) (reg-flag ac dst))
      (allocate-in (tmp 379) (reg-flag a dst))
      (allocate-in (tmp 385) (reg-flag ex dst))
      (allocate-in (tmp 183) (reg-flag of dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 384) (reg-flag ex dst))
      (aliases ((tmp 178) (tmp 138) (tmp 107)) (no-value (tmp 376) (tmp 188)))
      (immediate imm1b ((0 . 0)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 388) (reg-flag mi dst))
      (allocate-in (tmp 382) (reg-flag a dst))
      (allocate-in (tmp 181) (reg-flag of dst))
      (allocate-in (tmp 381) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag ap cuc ((1 . 3))))
    (code
      (= (tmp 104) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 106) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 107) (mul (constant ? 40) (tmp 104) (tmp 106)))
      (= (tmp 179) (sub (constant ? 40) dst (tmp 178)))
      (= (tmp 180) (icmp (constant ? 40) sgt (tmp 179) dst))
      (br (tmp 180) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 181) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 182) (icmp (constant ? 40) sgt (tmp 179) (tmp 178)))
      (br (tmp 182) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 183) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 184) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 185) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 186) (phi ((no-value . bb_9) ((tmp 185) . bb_10))))
      (= (tmp 187) (sub (constant ? 40) dst (tmp 178)))
      (set-reg dst (tmp 187))
      (set-reg dst (tmp 376))
      (= (tmp 378) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 377) (tmp 378))
      (= (tmp 380) (icmp (constant ? 40) eq (tmp 379) (constant ? 0)))
      (br (tmp 380) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 381) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 383) (icmp (constant ? 40) eq (tmp 382) (constant ? -1)))
      (br (tmp 383) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 384) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 385) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 386) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 387) (phi ((no-value . bb_27) ((tmp 386) . bb_28))))
      (= (tmp 389) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 388) (tmp 389))))
  (pattern
    (constraints
      (allocate-in (tmp 275) (reg-flag of dst))
      (allocate-in (tmp 377) (reg-flag ac dst))
      (allocate-in (tmp 385) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 384) (reg-flag ex dst))
      (aliases ((tmp 249) (tmp 270) (tmp 271) (tmp 272)) ((tmp 282) (tmp 376) (tmp 375)))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 379) (reg-flag a dst))
      (allocate-in (tmp 277) (reg-flag of dst))
      (allocate-in (tmp 278) (reg-flag of dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 388) (reg-flag mi dst))
      (allocate-in (tmp 382) (reg-flag a dst))
      (allocate-in (tmp 381) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag ap cuc ((0 . 0))))
    (code
      (= (tmp 245) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 247) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 248) (mul (constant ? 40) (tmp 245) (tmp 247)))
      (= (tmp 249) (shl (constant ? 40) (tmp 248) (constant ? 1)))
      (= (tmp 273) (sub (constant ? 40) dst (tmp 272)))
      (= (tmp 274) (icmp (constant ? 40) sgt (tmp 273) dst))
      (br (tmp 274) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 275) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 276) (icmp (constant ? 40) sgt (tmp 273) (tmp 272)))
      (br (tmp 276) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 277) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 278) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 279) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 280) (phi ((no-value . bb_15) ((tmp 279) . bb_16))))
      (= (tmp 281) (sub (constant ? 40) dst (tmp 272)))
      (set-reg dst (tmp 281))
      (= (tmp 282) (add (constant ? 40) no-value (constant ? 32768)))
      (set-reg dst (tmp 376))
      (= (tmp 378) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 377) (tmp 378))
      (= (tmp 380) (icmp (constant ? 40) eq (tmp 379) (constant ? 0)))
      (br (tmp 380) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 381) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 383) (icmp (constant ? 40) eq (tmp 382) (constant ? -1)))
      (br (tmp 383) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 384) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 385) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 386) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 387) (phi ((no-value . bb_27) ((tmp 386) . bb_28))))
      (= (tmp 389) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 388) (tmp 389))))
  (pattern
    (constraints
      (allocate-in (tmp 275) (reg-flag of dst))
      (allocate-in (tmp 377) (reg-flag ac dst))
      (allocate-in (tmp 385) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 384) (reg-flag ex dst))
      (aliases ((tmp 271) (tmp 272) (tmp 240)) ((tmp 282) (tmp 376) (tmp 375)))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 379) (reg-flag a dst))
      (allocate-in (tmp 277) (reg-flag of dst))
      (allocate-in (tmp 278) (reg-flag of dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 388) (reg-flag mi dst))
      (allocate-in (tmp 382) (reg-flag a dst))
      (allocate-in (tmp 381) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag ap cuc ((1 . 3))))
    (code
      (= (tmp 237) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 239) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 240) (mul (constant ? 40) (tmp 237) (tmp 239)))
      (= (tmp 273) (sub (constant ? 40) dst (tmp 272)))
      (= (tmp 274) (icmp (constant ? 40) sgt (tmp 273) dst))
      (br (tmp 274) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 275) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 276) (icmp (constant ? 40) sgt (tmp 273) (tmp 272)))
      (br (tmp 276) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 277) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 278) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 279) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 280) (phi ((no-value . bb_15) ((tmp 279) . bb_16))))
      (= (tmp 281) (sub (constant ? 40) dst (tmp 272)))
      (set-reg dst (tmp 281))
      (= (tmp 282) (add (constant ? 40) no-value (constant ? 32768)))
      (set-reg dst (tmp 376))
      (= (tmp 378) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 377) (tmp 378))
      (= (tmp 380) (icmp (constant ? 40) eq (tmp 379) (constant ? 0)))
      (br (tmp 380) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 381) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 383) (icmp (constant ? 40) eq (tmp 382) (constant ? -1)))
      (br (tmp 383) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 384) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 385) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 386) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 387) (phi ((no-value . bb_27) ((tmp 386) . bb_28))))
      (= (tmp 389) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 388) (tmp 389))))
  (pattern
    (constraints
      (allocate-in (tmp 377) (reg-flag ac dst))
      (allocate-in (tmp 385) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 384) (reg-flag ex dst))
      (aliases ((tmp 342) (tmp 365) (tmp 364) (tmp 363)) (no-value (tmp 376) (tmp 375)))
      (allocate-in (tmp 368) (reg-flag of dst))
      (immediate imm1b ((0 . 0)))
      (allocate-in (tmp 379) (reg-flag a dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 388) (reg-flag mi dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 382) (reg-flag a dst))
      (allocate-in (tmp 381) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 371) (reg-flag of dst))
      (allocate-in (tmp 370) (reg-flag of dst)))
    (code
      (= (tmp 338) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 340) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 341) (mul (constant ? 40) (tmp 338) (tmp 340)))
      (= (tmp 342) (shl (constant ? 40) (tmp 341) (constant ? 1)))
      (= (tmp 366) (sub (constant ? 40) dst (tmp 365)))
      (= (tmp 367) (icmp (constant ? 40) sgt (tmp 366) dst))
      (br (tmp 367) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 368) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 369) (icmp (constant ? 40) sgt (tmp 366) (tmp 365)))
      (br (tmp 369) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 370) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 371) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 372) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 373) (phi ((no-value . bb_21) ((tmp 372) . bb_22))))
      (= (tmp 374) (sub (constant ? 40) dst (tmp 365)))
      (set-reg dst (tmp 374))
      (set-reg dst (tmp 376))
      (= (tmp 378) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 377) (tmp 378))
      (= (tmp 380) (icmp (constant ? 40) eq (tmp 379) (constant ? 0)))
      (br (tmp 380) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 381) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 383) (icmp (constant ? 40) eq (tmp 382) (constant ? -1)))
      (br (tmp 383) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 384) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 385) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 386) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 387) (phi ((no-value . bb_27) ((tmp 386) . bb_28))))
      (= (tmp 389) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 388) (tmp 389))))
  (pattern
    (constraints
      (allocate-in (tmp 377) (reg-flag ac dst))
      (allocate-in (tmp 385) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 384) (reg-flag ex dst))
      (aliases ((tmp 333) (tmp 365) (tmp 364)) (no-value (tmp 376) (tmp 375)))
      (allocate-in (tmp 368) (reg-flag of dst))
      (immediate imm1b ((0 . 0)))
      (allocate-in (tmp 379) (reg-flag a dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 388) (reg-flag mi dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 382) (reg-flag a dst))
      (allocate-in (tmp 381) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 371) (reg-flag of dst))
      (allocate-in (tmp 370) (reg-flag of dst)))
    (code
      (= (tmp 330) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 332) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 333) (mul (constant ? 40) (tmp 330) (tmp 332)))
      (= (tmp 366) (sub (constant ? 40) dst (tmp 365)))
      (= (tmp 367) (icmp (constant ? 40) sgt (tmp 366) dst))
      (br (tmp 367) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 368) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 369) (icmp (constant ? 40) sgt (tmp 366) (tmp 365)))
      (br (tmp 369) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 370) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 371) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 372) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 373) (phi ((no-value . bb_21) ((tmp 372) . bb_22))))
      (= (tmp 374) (sub (constant ? 40) dst (tmp 365)))
      (set-reg dst (tmp 374))
      (set-reg dst (tmp 376))
      (= (tmp 378) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 377) (tmp 378))
      (= (tmp 380) (icmp (constant ? 40) eq (tmp 379) (constant ? 0)))
      (br (tmp 380) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 381) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 383) (icmp (constant ? 40) eq (tmp 382) (constant ? -1)))
      (br (tmp 383) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 384) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 385) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 386) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 387) (phi ((no-value . bb_27) ((tmp 386) . bb_28))))
      (= (tmp 389) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 388) (tmp 389)))))

(instruction
  adds_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag of dst))
      (allocate-in (tmp 33) (reg-flag c dst))
      (allocate-in (tmp 39) (reg-flag ac dst))
      (allocate-in (tmp 29) (reg-flag of dst))
      (allocate-in (tmp 34) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 47) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag a dst))
      (allocate-in (tmp 43) (reg-flag ex dst))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in (tmp 25) (reg-flag of dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 41) (reg-flag a dst)))
    (code
      (= (tmp 20) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 21) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 22) (add (constant ? 32) (tmp 20) (tmp 21)))
      (= (tmp 23) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 24) (icmp (constant ? 32) slt (tmp 22) (tmp 23)))
      (br (tmp 24) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 25) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 26) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 27) (icmp (constant ? 32) slt (tmp 22) (tmp 26)))
      (br (tmp 27) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 30) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 31) (phi ((no-value . bb_12) ((tmp 30) . bb_13))))
      (= (tmp 32) (icmp (constant ? 33) slt (constant ? 0) (tmp 22)))
      (br (tmp 32) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 33) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 34) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 35) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 36) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 37) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 38) (add (constant ? 32) (tmp 36) (tmp 37)))
      (set-reg dst (tmp 38))
      (= (tmp 40) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 39) (tmp 40))
      (= (tmp 42) (icmp (constant ? 40) eq (tmp 41) (constant ? 0)))
      (br (tmp 42) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 43) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? -1)))
      (br (tmp 45) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 47) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 48) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 49) (phi ((no-value . bb_21) ((tmp 48) . bb_22))))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51))))
  (pattern
    (constraints
      (allocate-in (tmp 39) (reg-flag ac dst))
      (allocate-in (tmp 9) (reg-flag of dst))
      (allocate-in (tmp 14) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag a dst))
      (allocate-in (tmp 43) (reg-flag ex dst))
      (allocate-in (tmp 10) (reg-flag of dst))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in (tmp 47) (reg-flag ex dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in (tmp 15) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 41) (reg-flag a dst)))
    (code
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 3) (add (constant ? 32) (tmp 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 5) (icmp (constant ? 32) slt (tmp 3) (tmp 4)))
      (br (tmp 5) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 6) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 7) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 8) (icmp (constant ? 32) slt (tmp 3) (tmp 7)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 10) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 13) (icmp (constant ? 33) slt (constant ? 0) (tmp 3)))
      (br (tmp 13) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 17) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 18) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 19) (satadd (constant ? 32) (tmp 17) (tmp 18)))
      (set-reg dst (tmp 19))
      (= (tmp 40) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 39) (tmp 40))
      (= (tmp 42) (icmp (constant ? 40) eq (tmp 41) (constant ? 0)))
      (br (tmp 42) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 43) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? -1)))
      (br (tmp 45) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 47) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 48) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 49) (phi ((no-value . bb_21) ((tmp 48) . bb_22))))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51)))))

(instruction
  mv_any32_r16--
  (pattern
    (constraints
      (allocate-in src (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (allocate-in (tmp 11) (reg-flag z rN))
      (aliases (src (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2)))
    (code
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 10) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag z rN))
      (aliases (src (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag s src ((0 . 0))))
    (code
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 10) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag z rN))
      (aliases ((tmp 2) (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag s src ((1 . 1))))
    (code
      (= (tmp 2) (satadd (constant ? 32) (constant ? 0) src))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 10) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  fbrr_offset_alias
  (pattern
    (constraints
      (rel-address addr -1073741824 1073741823))
    (code
      (= (tmp 0) (add (size pc) (register pc) addr))
      (= (tmp 1) (urem (size pc) (tmp 0) (size pc)))
      (set-reg (register pc) (tmp 1)))))

(instruction
  mas_a16_a16_a40l
  (pattern
    (constraints
      (allocate-in (tmp 21) (reg-flag of dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 62) (reg-flag ex dst))
      (allocate-in dst (a1 a2 a3 a0))
      (allocate-in (tmp 61) (reg-flag ex dst))
      (allocate-in (tmp 23) (reg-flag of dst))
      (aliases ((tmp 11) (tmp 18)))
      (allocate-in (tmp 24) (reg-flag of dst))
      (allocate-in (tmp 56) (reg-flag a dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 65) (reg-flag mi dst))
      (allocate-in (tmp 59) (reg-flag a dst))
      (allocate-in (tmp 58) (reg-flag ex dst))
      (allocate-in (tmp 54) (reg-flag ac dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 8) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 10) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 11) (mul (constant ? 40) (tmp 8) (tmp 10)))
      (= (tmp 19) (sub (constant ? 40) dst (tmp 18)))
      (= (tmp 20) (icmp (constant ? 40) sgt (tmp 19) dst))
      (br (tmp 20) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 21) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 22) (icmp (constant ? 40) sgt (tmp 19) (tmp 18)))
      (br (tmp 22) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 24) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 25) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 26) (phi ((no-value . bb_3) ((tmp 25) . bb_4))))
      (= (tmp 27) (sub (constant ? 40) dst (tmp 18)))
      (set-reg dst (tmp 27))
      (set-reg dst no-value)
      (= (tmp 55) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 54) (tmp 55))
      (= (tmp 57) (icmp (constant ? 40) eq (tmp 56) (constant ? 0)))
      (br (tmp 57) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 58) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 60) (icmp (constant ? 40) eq (tmp 59) (constant ? -1)))
      (br (tmp 60) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 61) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 62) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 63) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 64) (phi ((no-value . bb_15) ((tmp 63) . bb_16))))
      (= (tmp 66) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 65) (tmp 66))))
  (pattern
    (constraints
      (allocate-in (tmp 59) (reg-flag a dst))
      (allocate-in (tmp 49) (reg-flag of dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 62) (reg-flag ex dst))
      (allocate-in dst (a1 a2 a3 a0))
      (allocate-in (tmp 61) (reg-flag ex dst))
      (aliases ((tmp 43) (tmp 44)))
      (allocate-in (tmp 50) (reg-flag of dst))
      (allocate-in (tmp 56) (reg-flag a dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 65) (reg-flag mi dst))
      (allocate-in (tmp 47) (reg-flag of dst))
      (allocate-in (tmp 58) (reg-flag ex dst))
      (allocate-in (tmp 54) (reg-flag ac dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 40) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 42) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 43) (mul (constant ? 40) (tmp 40) (tmp 42)))
      (= (tmp 45) (sub (constant ? 40) dst (tmp 44)))
      (= (tmp 46) (icmp (constant ? 40) sgt (tmp 45) dst))
      (br (tmp 46) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 47) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 48) (icmp (constant ? 40) sgt (tmp 45) (tmp 44)))
      (br (tmp 48) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 49) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 50) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 51) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 52) (phi ((no-value . bb_9) ((tmp 51) . bb_10))))
      (= (tmp 53) (sub (constant ? 40) dst (tmp 44)))
      (set-reg dst (tmp 53))
      (set-reg dst no-value)
      (= (tmp 55) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 54) (tmp 55))
      (= (tmp 57) (icmp (constant ? 40) eq (tmp 56) (constant ? 0)))
      (br (tmp 57) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 58) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 60) (icmp (constant ? 40) eq (tmp 59) (constant ? -1)))
      (br (tmp 60) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 61) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 62) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 63) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 64) (phi ((no-value . bb_15) ((tmp 63) . bb_16))))
      (= (tmp 66) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 65) (tmp 66)))))

(instruction
  mv_any32_r16++Imm
  (pattern
    (constraints
      (immediate Imm ((1 . 15)))
      (allocate-in src (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (aliases (src (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 11) (reg-flag z rN)))
    (code
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 10) (add (constant ? 16) rN Imm))
      (set-reg rN (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13))))
  (pattern
    (constraints
      (immediate Imm ((1 . 15)))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases (src (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag s src ((0 . 0)))
      (allocate-in (tmp 11) (reg-flag z rN)))
    (code
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 10) (add (constant ? 16) rN Imm))
      (set-reg rN (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13))))
  (pattern
    (constraints
      (immediate Imm ((1 . 15)))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases ((tmp 2) (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag s src ((1 . 1)))
      (allocate-in (tmp 11) (reg-flag z rN)))
    (code
      (= (tmp 2) (satadd (constant ? 32) (constant ? 0) src))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 10) (add (constant ? 16) rN Imm))
      (set-reg rN (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  bswap_a16h_a16h
  (pattern
    (constraints
      (allocate-in dst (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in src (a4h a5h a6h a7h a4l a5l a6l a7l)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  bswap_a16_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  brr_offset_acc
  (pattern
    (constraints
      (allocate-in aN (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (add (size pc) (register pc) aN))
      (= (tmp 1) (urem (size pc) (tmp 0) (size pc)))
      (set-reg (register pc) (tmp 1)))))

(instruction
  mpysu_a16_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 34) (reg-flag ex dst))
      (allocate-in (tmp 31) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 29) (reg-flag a dst))
      (allocate-in (tmp 32) (reg-flag a dst))
      (allocate-in (tmp 27) (reg-flag ac dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 38) (reg-flag mi dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (aliases ((tmp 26) (tmp 4))))
    (code
      (= (tmp 2) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 3) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 4) (mul (constant ? 40) (tmp 2) (tmp 3)))
      (set-reg dst (tmp 26))
      (= (tmp 28) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 27) (tmp 28))
      (= (tmp 30) (icmp (constant ? 40) eq (tmp 29) (constant ? 0)))
      (br (tmp 30) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 31) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 33) (icmp (constant ? 40) eq (tmp 32) (constant ? -1)))
      (br (tmp 33) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 34) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 35) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 37) (phi ((no-value . bb_3) ((tmp 36) . bb_4))))
      (= (tmp 39) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 38) (tmp 39))))
  (pattern
    (constraints
      (allocate-in (tmp 34) (reg-flag ex dst))
      (allocate-in (tmp 31) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 29) (reg-flag a dst))
      (allocate-in (tmp 32) (reg-flag a dst))
      (allocate-in (tmp 27) (reg-flag ac dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 38) (reg-flag mi dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (aliases ((tmp 26) (tmp 10) (tmp 25))))
    (code
      (= (tmp 7) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 8) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 9) (mul (constant ? 40) (tmp 7) (tmp 8)))
      (= (tmp 10) (shl (constant ? 40) (tmp 9) (constant ? 1)))
      (set-reg dst (tmp 26))
      (= (tmp 28) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 27) (tmp 28))
      (= (tmp 30) (icmp (constant ? 40) eq (tmp 29) (constant ? 0)))
      (br (tmp 30) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 31) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 33) (icmp (constant ? 40) eq (tmp 32) (constant ? -1)))
      (br (tmp 33) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 34) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 35) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 37) (phi ((no-value . bb_3) ((tmp 36) . bb_4))))
      (= (tmp 39) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 38) (tmp 39)))))

(instruction
  mv_any32_dp16_nimm13
  (pattern
    (constraints
      (allocate-in src (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (allocate-in dpop (dp))
      (aliases (src (tmp 4)))
      (immediate SImm ((-4096 . 4095))))
    (code
      (= (tmp 5) (add (constant ? 16) dpop SImm))
      (= (tmp 6) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 5) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dpop (dp))
      (aliases (src (tmp 3) (tmp 4)))
      (reg-flag s src ((0 . 0)))
      (immediate SImm ((-4096 . 4095))))
    (code
      (= (tmp 5) (add (constant ? 16) dpop SImm))
      (= (tmp 6) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 5) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dpop (dp))
      (aliases ((tmp 2) (tmp 3) (tmp 4)))
      (reg-flag s src ((1 . 1)))
      (immediate SImm ((-4096 . 4095))))
    (code
      (= (tmp 2) (satadd (constant ? 32) (constant ? 0) src))
      (= (tmp 5) (add (constant ? 16) dpop SImm))
      (= (tmp 6) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm (tmp 5) (tmp 6))
      (= (tmp 8) (add (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 9) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 8) (tmp 9)))))

(instruction
  mv_any32_r16--Imm
  (pattern
    (constraints
      (immediate Imm ((1 . 15)))
      (allocate-in src (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (aliases (src (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 11) (reg-flag z rN)))
    (code
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 10) (sub (constant ? 16) rN Imm))
      (set-reg rN (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13))))
  (pattern
    (constraints
      (immediate Imm ((1 . 15)))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases (src (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag s src ((0 . 0)))
      (allocate-in (tmp 11) (reg-flag z rN)))
    (code
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 10) (sub (constant ? 16) rN Imm))
      (set-reg rN (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13))))
  (pattern
    (constraints
      (immediate Imm ((1 . 15)))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases ((tmp 2) (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag s src ((1 . 1)))
      (allocate-in (tmp 11) (reg-flag z rN)))
    (code
      (= (tmp 2) (satadd (constant ? 32) (constant ? 0) src))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 10) (sub (constant ? 16) rN Imm))
      (set-reg rN (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  bupackh_a16l_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a1h a2h a3h a0l a1l a2l a3l a0h))
      (allocate-in (tmp 18) (reg-flag mi dst))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag ex dst))
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in (tmp 7) (reg-flag ac dst))
      (allocate-in (tmp 15) (reg-flag ex dst))
      (allocate-in (tmp 11) (reg-flag ex dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (constant ? 0))
      (= (tmp 1) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 2) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 23)))
      (set-reg (tmp 3) (constant ? 0))
      (= (tmp 4) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 5) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 6) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 6))
      (= (tmp 8) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? 0)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 13) (icmp (constant ? 40) eq (tmp 12) (constant ? -1)))
      (br (tmp 13) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 16) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 17) (phi ((no-value . bb_3) ((tmp 16) . bb_4))))
      (= (tmp 19) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 18) (tmp 19)))))

(instruction
  divm40
  (pattern
    (constraints
      (allocate-in (tmp 5) (reg-flag ls (register a4)))
      (allocate-in (tmp 10) (reg-flag ms (register a4)))
      (allocate-in (tmp 15) (reg-flag ac (register a4)))
      (allocate-in (tmp 1) (reg-flag of (register a4)))
      (allocate-in (tmp 6) (reg-flag ls (register a4)))
      (allocate-in (tmp 9) (reg-flag ms (register a4))))
    (code
      (= (tmp 0) (icmp eq (constant ? 40) (register a5) (constant ? 0)))
      (br (tmp 0) bb_6 bb_7)
      (label bb_6)
      (set-reg (register a4) (constant ? 0))
      (set-reg (register a5) (constant ? 0))
      (set-reg (tmp 1) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 2) (urem (constant ? 40) (register a4) (register a5)))
      (= (tmp 3) (udiv (constant ? 40) (register a5) (constant ? 2)))
      (= (tmp 4) (icmp ugt (constant ? 40) (tmp 2) (tmp 3)))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 6) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 8) (icmp eq (constant ? 40) (tmp 2) (constant ? 0)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 9) (constant ? 0))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 10) (constant ? 1))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 12) (udiv (constant ? 40) (register a4) (register a5)))
      (set-reg (register a4) (tmp 12))
      (= (tmp 13) (urem (constant ? 40) (register a4) (register a5)))
      (set-reg (register a5) (tmp 13))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 16) (icmp eq (constant ? 80) (register a4) (constant ? 0)))
      (set-reg (tmp 15) (tmp 16)))))

(instruction
  mv_any32_r16++m
  (pattern
    (constraints
      (allocate-in (tmp 12) (reg-flag z rN))
      (allocate-in src (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (aliases (src (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 10) (reg-flag m rN)))
    (code
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 11) (add (constant ? 16) rN (tmp 10)))
      (set-reg rN (tmp 11))
      (= (tmp 13) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 13) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 14) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 12) (tmp 14))))
  (pattern
    (constraints
      (allocate-in (tmp 12) (reg-flag z rN))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag s src ((0 . 0)))
      (aliases (src (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 10) (reg-flag m rN)))
    (code
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 11) (add (constant ? 16) rN (tmp 10)))
      (set-reg rN (tmp 11))
      (= (tmp 13) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 13) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 14) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 12) (tmp 14))))
  (pattern
    (constraints
      (allocate-in (tmp 12) (reg-flag z rN))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag s src ((1 . 1)))
      (aliases ((tmp 2) (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 10) (reg-flag m rN)))
    (code
      (= (tmp 2) (satadd (constant ? 32) (constant ? 0) src))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 11) (add (constant ? 16) rN (tmp 10)))
      (set-reg rN (tmp 11))
      (= (tmp 13) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 13) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 14) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 12) (tmp 14)))))

(instruction
  bupackl_a16h_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag a dst))
      (allocate-in (tmp 10) (reg-flag ex dst))
      (allocate-in (tmp 17) (reg-flag mi dst))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 14) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in (tmp 6) (reg-flag ac dst))
      (allocate-in (tmp 11) (reg-flag a dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (sext (constant ? 8) dst (constant ? 16)))
      (set-reg dst (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 4) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 5) (sext (constant ? 24) dst (constant ? 40)))
      (set-reg dst (tmp 5))
      (= (tmp 7) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (icmp (constant ? 40) eq (tmp 8) (constant ? 0)))
      (br (tmp 9) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 10) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 12) (icmp (constant ? 40) eq (tmp 11) (constant ? -1)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 14) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 15) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 16) (phi ((no-value . bb_3) ((tmp 15) . bb_4))))
      (= (tmp 18) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 17) (tmp 18)))))

(instruction
  lbra_offset
  (pattern
    (constraints
      (abs-address addr 0 1048575))
    (code
      (set-reg (register pc) addr))))

(instruction
  lbra_offset_alias
  (pattern
    (constraints
      (abs-address addr 0 1048575))
    (code
      (set-reg (register pc) addr))))

(instruction
  fbra_offset
  (pattern
    (constraints
      (abs-address addr 0 2147483647))
    (code
      (set-reg (register pc) addr))))

(instruction
  fbra_offset_alias
  (pattern
    (constraints
      (abs-address addr 0 2147483647))
    (code
      (set-reg (register pc) addr))))

(instruction
  bra_accumulator
  (pattern
    (constraints
      (allocate-in aN (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (urem (constant ? 40) aN (size pc)))
      (set-reg (register pc) (tmp 0)))))

(instruction
  bupackl_a16l_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag a dst))
      (allocate-in (tmp 10) (reg-flag ex dst))
      (allocate-in (tmp 17) (reg-flag mi dst))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 14) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a1h a2h a3h a0l a1l a2l a3l a0h))
      (allocate-in (tmp 6) (reg-flag ac dst))
      (allocate-in (tmp 11) (reg-flag a dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (sext (constant ? 8) dst (constant ? 16)))
      (set-reg dst (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 4) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 5) (sext (constant ? 24) dst (constant ? 40)))
      (set-reg dst (tmp 5))
      (= (tmp 7) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (icmp (constant ? 40) eq (tmp 8) (constant ? 0)))
      (br (tmp 9) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 10) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 12) (icmp (constant ? 40) eq (tmp 11) (constant ? -1)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 14) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 15) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 16) (phi ((no-value . bb_3) ((tmp 15) . bb_4))))
      (= (tmp 18) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 17) (tmp 18)))))

(instruction
  rev_a40
  (pattern
    (constraints
      (allocate-in (tmp 102) (reg-flag op dst))
      (allocate-in (tmp 94) (reg-flag ac dst))
      (allocate-in (tmp 98) (reg-flag ms dst))
      (allocate-in (tmp 96) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 100) (reg-flag ls dst))
      (allocate-in (tmp 93) (reg-flag ag dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 31) (constant ? 31)))
      (= (tmp 1) (add (constant ? 1) (constant ? 0) (tmp 0)))
      (= (tmp 2) (reg-range dst (constant ? 30) (constant ? 30)))
      (= (tmp 3) (add (constant ? 1) (constant ? 0) (tmp 2)))
      (= (tmp 4) (reg-range dst (constant ? 29) (constant ? 29)))
      (= (tmp 5) (add (constant ? 1) (constant ? 0) (tmp 4)))
      (= (tmp 6) (reg-range dst (constant ? 28) (constant ? 28)))
      (= (tmp 7) (add (constant ? 1) (constant ? 0) (tmp 6)))
      (= (tmp 8) (reg-range dst (constant ? 27) (constant ? 27)))
      (= (tmp 9) (add (constant ? 1) (constant ? 0) (tmp 8)))
      (= (tmp 10) (reg-range dst (constant ? 26) (constant ? 26)))
      (= (tmp 11) (add (constant ? 1) (constant ? 0) (tmp 10)))
      (= (tmp 12) (reg-range dst (constant ? 25) (constant ? 25)))
      (= (tmp 13) (add (constant ? 1) (constant ? 0) (tmp 12)))
      (= (tmp 14) (reg-range dst (constant ? 24) (constant ? 24)))
      (= (tmp 15) (add (constant ? 1) (constant ? 0) (tmp 14)))
      (= (tmp 16) (reg-range dst (constant ? 23) (constant ? 23)))
      (= (tmp 17) (add (constant ? 1) (constant ? 0) (tmp 16)))
      (= (tmp 18) (reg-range dst (constant ? 22) (constant ? 22)))
      (= (tmp 19) (add (constant ? 1) (constant ? 0) (tmp 18)))
      (= (tmp 20) (reg-range dst (constant ? 21) (constant ? 21)))
      (= (tmp 21) (add (constant ? 1) (constant ? 0) (tmp 20)))
      (= (tmp 22) (reg-range dst (constant ? 20) (constant ? 20)))
      (= (tmp 23) (add (constant ? 1) (constant ? 0) (tmp 22)))
      (= (tmp 24) (reg-range dst (constant ? 19) (constant ? 19)))
      (= (tmp 25) (add (constant ? 1) (constant ? 0) (tmp 24)))
      (= (tmp 26) (reg-range dst (constant ? 18) (constant ? 18)))
      (= (tmp 27) (add (constant ? 1) (constant ? 0) (tmp 26)))
      (= (tmp 28) (reg-range dst (constant ? 17) (constant ? 17)))
      (= (tmp 29) (add (constant ? 1) (constant ? 0) (tmp 28)))
      (= (tmp 30) (reg-range dst (constant ? 16) (constant ? 16)))
      (= (tmp 31) (add (constant ? 1) (constant ? 0) (tmp 30)))
      (= (tmp 32) (reg-range dst (constant ? 15) (constant ? 15)))
      (= (tmp 33) (add (constant ? 1) (constant ? 0) (tmp 32)))
      (= (tmp 34) (reg-range dst (constant ? 14) (constant ? 14)))
      (= (tmp 35) (add (constant ? 1) (constant ? 0) (tmp 34)))
      (= (tmp 36) (reg-range dst (constant ? 13) (constant ? 13)))
      (= (tmp 37) (add (constant ? 1) (constant ? 0) (tmp 36)))
      (= (tmp 38) (reg-range dst (constant ? 12) (constant ? 12)))
      (= (tmp 39) (add (constant ? 1) (constant ? 0) (tmp 38)))
      (= (tmp 40) (reg-range dst (constant ? 11) (constant ? 11)))
      (= (tmp 41) (add (constant ? 1) (constant ? 0) (tmp 40)))
      (= (tmp 42) (reg-range dst (constant ? 10) (constant ? 10)))
      (= (tmp 43) (add (constant ? 1) (constant ? 0) (tmp 42)))
      (= (tmp 44) (reg-range dst (constant ? 9) (constant ? 9)))
      (= (tmp 45) (add (constant ? 1) (constant ? 0) (tmp 44)))
      (= (tmp 46) (reg-range dst (constant ? 8) (constant ? 8)))
      (= (tmp 47) (add (constant ? 1) (constant ? 0) (tmp 46)))
      (= (tmp 48) (reg-range dst (constant ? 7) (constant ? 7)))
      (= (tmp 49) (add (constant ? 1) (constant ? 0) (tmp 48)))
      (= (tmp 50) (reg-range dst (constant ? 6) (constant ? 6)))
      (= (tmp 51) (add (constant ? 1) (constant ? 0) (tmp 50)))
      (= (tmp 52) (reg-range dst (constant ? 5) (constant ? 5)))
      (= (tmp 53) (add (constant ? 1) (constant ? 0) (tmp 52)))
      (= (tmp 54) (reg-range dst (constant ? 4) (constant ? 4)))
      (= (tmp 55) (add (constant ? 1) (constant ? 0) (tmp 54)))
      (= (tmp 56) (reg-range dst (constant ? 3) (constant ? 3)))
      (= (tmp 57) (add (constant ? 1) (constant ? 0) (tmp 56)))
      (= (tmp 58) (reg-range dst (constant ? 2) (constant ? 2)))
      (= (tmp 59) (add (constant ? 1) (constant ? 0) (tmp 58)))
      (= (tmp 60) (reg-range dst (constant ? 1) (constant ? 1)))
      (= (tmp 61) (add (constant ? 1) (constant ? 0) (tmp 60)))
      (= (tmp 62) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 62) (tmp 1))
      (= (tmp 63) (reg-range dst (constant ? 1) (constant ? 1)))
      (set-reg (tmp 63) (tmp 3))
      (= (tmp 64) (reg-range dst (constant ? 2) (constant ? 2)))
      (set-reg (tmp 64) (tmp 5))
      (= (tmp 65) (reg-range dst (constant ? 3) (constant ? 3)))
      (set-reg (tmp 65) (tmp 7))
      (= (tmp 66) (reg-range dst (constant ? 4) (constant ? 4)))
      (set-reg (tmp 66) (tmp 9))
      (= (tmp 67) (reg-range dst (constant ? 5) (constant ? 5)))
      (set-reg (tmp 67) (tmp 11))
      (= (tmp 68) (reg-range dst (constant ? 6) (constant ? 6)))
      (set-reg (tmp 68) (tmp 13))
      (= (tmp 69) (reg-range dst (constant ? 7) (constant ? 7)))
      (set-reg (tmp 69) (tmp 15))
      (= (tmp 70) (reg-range dst (constant ? 8) (constant ? 8)))
      (set-reg (tmp 70) (tmp 17))
      (= (tmp 71) (reg-range dst (constant ? 9) (constant ? 9)))
      (set-reg (tmp 71) (tmp 19))
      (= (tmp 72) (reg-range dst (constant ? 10) (constant ? 10)))
      (set-reg (tmp 72) (tmp 21))
      (= (tmp 73) (reg-range dst (constant ? 11) (constant ? 11)))
      (set-reg (tmp 73) (tmp 23))
      (= (tmp 74) (reg-range dst (constant ? 12) (constant ? 12)))
      (set-reg (tmp 74) (tmp 25))
      (= (tmp 75) (reg-range dst (constant ? 13) (constant ? 13)))
      (set-reg (tmp 75) (tmp 27))
      (= (tmp 76) (reg-range dst (constant ? 14) (constant ? 14)))
      (set-reg (tmp 76) (tmp 29))
      (= (tmp 77) (reg-range dst (constant ? 15) (constant ? 15)))
      (set-reg (tmp 77) (tmp 31))
      (= (tmp 78) (reg-range dst (constant ? 16) (constant ? 16)))
      (set-reg (tmp 78) (tmp 33))
      (= (tmp 79) (reg-range dst (constant ? 17) (constant ? 17)))
      (set-reg (tmp 79) (tmp 35))
      (= (tmp 80) (reg-range dst (constant ? 18) (constant ? 18)))
      (set-reg (tmp 80) (tmp 37))
      (= (tmp 81) (reg-range dst (constant ? 19) (constant ? 19)))
      (set-reg (tmp 81) (tmp 39))
      (= (tmp 82) (reg-range dst (constant ? 20) (constant ? 20)))
      (set-reg (tmp 82) (tmp 41))
      (= (tmp 83) (reg-range dst (constant ? 21) (constant ? 21)))
      (set-reg (tmp 83) (tmp 43))
      (= (tmp 84) (reg-range dst (constant ? 22) (constant ? 22)))
      (set-reg (tmp 84) (tmp 45))
      (= (tmp 85) (reg-range dst (constant ? 23) (constant ? 23)))
      (set-reg (tmp 85) (tmp 47))
      (= (tmp 86) (reg-range dst (constant ? 24) (constant ? 24)))
      (set-reg (tmp 86) (tmp 49))
      (= (tmp 87) (reg-range dst (constant ? 25) (constant ? 25)))
      (set-reg (tmp 87) (tmp 51))
      (= (tmp 88) (reg-range dst (constant ? 26) (constant ? 26)))
      (set-reg (tmp 88) (tmp 53))
      (= (tmp 89) (reg-range dst (constant ? 27) (constant ? 27)))
      (set-reg (tmp 89) (tmp 55))
      (= (tmp 90) (reg-range dst (constant ? 28) (constant ? 28)))
      (set-reg (tmp 90) (tmp 57))
      (= (tmp 91) (reg-range dst (constant ? 29) (constant ? 29)))
      (set-reg (tmp 91) (tmp 59))
      (= (tmp 92) (reg-range dst (constant ? 30) (constant ? 30)))
      (set-reg (tmp 92) (tmp 61))
      (set-reg (tmp 93) (constant ? 0))
      (= (tmp 95) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 94) (tmp 95))
      (= (tmp 97) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 96) (tmp 97))
      (= (tmp 99) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 98) (tmp 99))
      (= (tmp 101) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 100) (tmp 101))
      (= (tmp 103) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 103) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 104) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 102) (tmp 104)))))

(instruction
  mv_any32_r16--m
  (pattern
    (constraints
      (allocate-in (tmp 12) (reg-flag z rN))
      (allocate-in src (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (aliases (src (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 10) (reg-flag m rN)))
    (code
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 11) (sub (constant ? 16) rN (tmp 10)))
      (set-reg rN (tmp 11))
      (= (tmp 13) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 13) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 14) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 12) (tmp 14))))
  (pattern
    (constraints
      (allocate-in (tmp 12) (reg-flag z rN))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag s src ((0 . 0)))
      (aliases (src (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 10) (reg-flag m rN)))
    (code
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 11) (sub (constant ? 16) rN (tmp 10)))
      (set-reg rN (tmp 11))
      (= (tmp 13) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 13) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 14) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 12) (tmp 14))))
  (pattern
    (constraints
      (allocate-in (tmp 12) (reg-flag z rN))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag s src ((1 . 1)))
      (aliases ((tmp 2) (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 10) (reg-flag m rN)))
    (code
      (= (tmp 2) (satadd (constant ? 32) (constant ? 0) src))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 11) (sub (constant ? 16) rN (tmp 10)))
      (set-reg rN (tmp 11))
      (= (tmp 13) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 13) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 14) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 12) (tmp 14)))))

(instruction
  sub_nimm16_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag c dst))
      (allocate-in (tmp 33) (reg-flag a dst))
      (allocate-in (tmp 39) (reg-flag ex dst))
      (allocate-in (tmp 29) (reg-flag c dst))
      (allocate-in (tmp 36) (reg-flag a dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate UImm ((0 . 65535)))
      (allocate-in (tmp 23) (reg-flag of dst))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 24) (reg-flag of dst))
      (allocate-in (tmp 42) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 20) (reg-flag of dst))
      (allocate-in (tmp 38) (reg-flag ex dst)))
    (code
      (= (tmp 17) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 18) (sub (constant ? 40) dst (tmp 17)))
      (= (tmp 19) (icmp (constant ? 40) sgt (tmp 18) dst))
      (br (tmp 19) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 20) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 21) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 22) (icmp (constant ? 40) sgt (tmp 18) (tmp 21)))
      (br (tmp 22) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 24) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 25) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 26) (phi ((no-value . bb_12) ((tmp 25) . bb_13))))
      (= (tmp 27) (icmp (constant ? 41) slt (constant ? 0) (tmp 18)))
      (br (tmp 27) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 30) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 31) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 32) (sub (constant ? 40) dst (tmp 31)))
      (set-reg dst (tmp 32))
      (set-reg dst no-value)
      (= (tmp 34) (icmp (constant ? 40) eq (tmp 33) (constant ? 0)))
      (br (tmp 34) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 35) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 37) (icmp (constant ? 40) eq (tmp 36) (constant ? -1)))
      (br (tmp 37) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 38) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 39) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 40) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 41) (phi ((no-value . bb_21) ((tmp 40) . bb_22))))
      (= (tmp 43) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 42) (tmp 43))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45))))
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag a dst))
      (allocate-in (tmp 39) (reg-flag ex dst))
      (allocate-in (tmp 4) (reg-flag of dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in (tmp 36) (reg-flag a dst))
      (immediate UImm ((0 . 65535)))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 8) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 42) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 12) (reg-flag c dst))
      (allocate-in (tmp 7) (reg-flag of dst))
      (allocate-in (tmp 13) (reg-flag c dst))
      (allocate-in (tmp 38) (reg-flag ex dst)))
    (code
      (= (tmp 1) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 2) (sub (constant ? 32) dst (tmp 1)))
      (= (tmp 3) (icmp (constant ? 32) sgt (tmp 2) dst))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 4) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 5) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 6) (icmp (constant ? 32) sgt (tmp 2) (tmp 5)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 7) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 8) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))
      (= (tmp 11) (icmp (constant ? 33) slt (constant ? 0) (tmp 2)))
      (br (tmp 11) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 13) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 15) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 16) (satsub (constant ? 32) dst (tmp 15)))
      (set-reg dst (tmp 16))
      (set-reg dst no-value)
      (= (tmp 34) (icmp (constant ? 40) eq (tmp 33) (constant ? 0)))
      (br (tmp 34) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 35) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 37) (icmp (constant ? 40) eq (tmp 36) (constant ? -1)))
      (br (tmp 37) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 38) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 39) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 40) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 41) (phi ((no-value . bb_21) ((tmp 40) . bb_22))))
      (= (tmp 43) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 42) (tmp 43))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45)))))

(instruction
  rets
  (pattern
    (constraints)
    (code
      (set-reg (register pc) (register retpc))
      (= (tmp 0) (load-mem (constant ? 16) ldm (register sp)))
      (set-reg (register retpc) (tmp 0))
      (= (tmp 1) (add (size sp) (register sp) (constant ? 1)))
      (set-reg (register sp) (tmp 1)))))

(instruction
  reti
  (pattern
    (constraints)
    (code
      (set-reg (register pc) (register retpc))
      (= (tmp 0) (load-mem (constant ? 16) ldm (register sp)))
      (set-reg (register retpc) (tmp 0))
      (= (tmp 1) (add (size sp) (register sp) (constant ? 1)))
      (set-reg (register sp) (tmp 1))
      (set-reg (register isb) (constant ? 1)))))

(instruction
  e_int
  (pattern
    (constraints)
    (code
      (set-reg (register isb) (constant ? 1)))))

(instruction
  d_int
  (pattern
    (constraints)
    (code
      (set-reg (register isb) (constant ? 0)))))

(instruction
  aload_reg
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in aN (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range aN (constant ? 0) (constant ? 31)))
      (= (tmp 1) (icmp ult (constant ? 32) (tmp 0) (register cdl)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (add (constant ? 32) (tmp 0) (register cdo)))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi (((tmp 2) . bb_0) ((tmp 0) . bb_1))))
      (set-reg (register cmtype) (constant ? 8))
      (= (tmp 4) (load-mem (constant ? 32) cm (tmp 3)))
      (set-reg dst (tmp 4)))))

(instruction
  mv_any32_r16-no-modifier
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag s src ((1 . 1)))
      (aliases ((tmp 2) (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 10) (reg-flag z rN)))
    (code
      (= (tmp 2) (satadd (constant ? 32) (constant ? 0) src))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 11) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag s src ((0 . 0)))
      (aliases (src (tmp 3) (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 10) (reg-flag z rN)))
    (code
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 11) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12))))
  (pattern
    (constraints
      (allocate-in src (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (aliases (src (tmp 4)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 10) (reg-flag z rN)))
    (code
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 31)))
      (store (constant ? 16) ldm rN (tmp 5))
      (= (tmp 7) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 8) (reg-range (tmp 4) (constant ? 0) (constant ? 15)))
      (store (constant ? 16) ldm (tmp 7) (tmp 8))
      (= (tmp 11) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  suba_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 27) (reg-flag a dst))
      (allocate-in (tmp 33) (reg-flag ex dst))
      (allocate-in (tmp 18) (reg-flag of dst))
      (allocate-in (tmp 29) (reg-flag ex dst))
      (allocate-in (tmp 36) (reg-flag ac dst))
      (allocate-in (tmp 30) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 23) (reg-flag c dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 24) (reg-flag c dst))
      (allocate-in (tmp 32) (reg-flag ex dst))
      (allocate-in (tmp 19) (reg-flag of dst))
      (allocate-in (tmp 38) (reg-flag mi dst))
      (allocate-in (tmp 16) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 14) (sub (constant ? 40) src1 src2))
      (= (tmp 15) (icmp (constant ? 40) sgt (tmp 14) src1))
      (br (tmp 15) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 17) (icmp (constant ? 40) sgt (tmp 14) src2))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 18) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 19) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 20) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 21) (phi ((no-value . bb_12) ((tmp 20) . bb_13))))
      (= (tmp 22) (icmp (constant ? 41) slt (constant ? 0) (tmp 14)))
      (br (tmp 22) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 24) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 25) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 26) (sub (constant ? 40) src1 src2))
      (set-reg dst (tmp 26))
      (set-reg dst no-value)
      (= (tmp 28) (icmp (constant ? 40) eq (tmp 27) (constant ? 0)))
      (br (tmp 28) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 29) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 31) (icmp (constant ? 40) eq (tmp 30) (constant ? -1)))
      (br (tmp 31) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 32) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 33) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 34) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 35) (phi ((no-value . bb_21) ((tmp 34) . bb_22))))
      (= (tmp 37) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 36) (tmp 37))
      (= (tmp 39) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 38) (tmp 39))))
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag ex dst))
      (allocate-in (tmp 29) (reg-flag ex dst))
      (allocate-in (tmp 36) (reg-flag ac dst))
      (allocate-in (tmp 30) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag c dst))
      (allocate-in (tmp 10) (reg-flag c dst))
      (allocate-in (tmp 32) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag a dst))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in (tmp 3) (reg-flag of dst))
      (allocate-in (tmp 38) (reg-flag mi dst))
      (allocate-in (tmp 6) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 1) (sub (constant ? 40) src1 src2))
      (= (tmp 2) (icmp (constant ? 40) sgt (tmp 1) src1))
      (br (tmp 2) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 3) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 4) (icmp (constant ? 40) sgt (tmp 1) src2))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 6) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 8) (phi ((no-value . bb_3) ((tmp 7) . bb_4))))
      (= (tmp 9) (icmp (constant ? 41) slt (constant ? 0) (tmp 1)))
      (br (tmp 9) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 10) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 11) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 12) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 13) (satsub (constant ? 40) src1 src2))
      (set-reg dst (tmp 13))
      (set-reg dst no-value)
      (= (tmp 28) (icmp (constant ? 40) eq (tmp 27) (constant ? 0)))
      (br (tmp 28) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 29) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 31) (icmp (constant ? 40) eq (tmp 30) (constant ? -1)))
      (br (tmp 31) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 32) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 33) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 34) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 35) (phi ((no-value . bb_21) ((tmp 34) . bb_22))))
      (= (tmp 37) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 36) (tmp 37))
      (= (tmp 39) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 38) (tmp 39)))))

(instruction
  rev_a40_a16h_a40
  (pattern
    (constraints
      (allocate-in (tmp 105) (reg-flag ls dst))
      (allocate-in (tmp 101) (reg-flag mi dst))
      (allocate-in (tmp 98) (reg-flag ag dst))
      (allocate-in (tmp 107) (reg-flag op dst))
      (allocate-in (tmp 99) (reg-flag ac dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 103) (reg-flag ms dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a4h a5h a6h a7h a4l a5l a6l a7l)))
    (code
      (= (tmp 0) (bit_and (constant ? 40) src1 (constant ? 15)))
      (= (tmp 1) (bit_and (constant ? 40) src1 (constant ? 3840)))
      (= (tmp 2) (lshr (constant ? 40) (tmp 1) (constant ? 8)))
      (= (tmp 3) (add (constant ? 40) (tmp 0) (tmp 2)))
      (= (tmp 4) (reg-range src1 (tmp 0) (tmp 3)))
      (set-reg dst (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 31) (constant ? 31)))
      (= (tmp 6) (add (constant ? 1) (constant ? 0) (tmp 5)))
      (= (tmp 7) (reg-range dst (constant ? 30) (constant ? 30)))
      (= (tmp 8) (add (constant ? 1) (constant ? 0) (tmp 7)))
      (= (tmp 9) (reg-range dst (constant ? 29) (constant ? 29)))
      (= (tmp 10) (add (constant ? 1) (constant ? 0) (tmp 9)))
      (= (tmp 11) (reg-range dst (constant ? 28) (constant ? 28)))
      (= (tmp 12) (add (constant ? 1) (constant ? 0) (tmp 11)))
      (= (tmp 13) (reg-range dst (constant ? 27) (constant ? 27)))
      (= (tmp 14) (add (constant ? 1) (constant ? 0) (tmp 13)))
      (= (tmp 15) (reg-range dst (constant ? 26) (constant ? 26)))
      (= (tmp 16) (add (constant ? 1) (constant ? 0) (tmp 15)))
      (= (tmp 17) (reg-range dst (constant ? 25) (constant ? 25)))
      (= (tmp 18) (add (constant ? 1) (constant ? 0) (tmp 17)))
      (= (tmp 19) (reg-range dst (constant ? 24) (constant ? 24)))
      (= (tmp 20) (add (constant ? 1) (constant ? 0) (tmp 19)))
      (= (tmp 21) (reg-range dst (constant ? 23) (constant ? 23)))
      (= (tmp 22) (add (constant ? 1) (constant ? 0) (tmp 21)))
      (= (tmp 23) (reg-range dst (constant ? 22) (constant ? 22)))
      (= (tmp 24) (add (constant ? 1) (constant ? 0) (tmp 23)))
      (= (tmp 25) (reg-range dst (constant ? 21) (constant ? 21)))
      (= (tmp 26) (add (constant ? 1) (constant ? 0) (tmp 25)))
      (= (tmp 27) (reg-range dst (constant ? 20) (constant ? 20)))
      (= (tmp 28) (add (constant ? 1) (constant ? 0) (tmp 27)))
      (= (tmp 29) (reg-range dst (constant ? 19) (constant ? 19)))
      (= (tmp 30) (add (constant ? 1) (constant ? 0) (tmp 29)))
      (= (tmp 31) (reg-range dst (constant ? 18) (constant ? 18)))
      (= (tmp 32) (add (constant ? 1) (constant ? 0) (tmp 31)))
      (= (tmp 33) (reg-range dst (constant ? 17) (constant ? 17)))
      (= (tmp 34) (add (constant ? 1) (constant ? 0) (tmp 33)))
      (= (tmp 35) (reg-range dst (constant ? 16) (constant ? 16)))
      (= (tmp 36) (add (constant ? 1) (constant ? 0) (tmp 35)))
      (= (tmp 37) (reg-range dst (constant ? 15) (constant ? 15)))
      (= (tmp 38) (add (constant ? 1) (constant ? 0) (tmp 37)))
      (= (tmp 39) (reg-range dst (constant ? 14) (constant ? 14)))
      (= (tmp 40) (add (constant ? 1) (constant ? 0) (tmp 39)))
      (= (tmp 41) (reg-range dst (constant ? 13) (constant ? 13)))
      (= (tmp 42) (add (constant ? 1) (constant ? 0) (tmp 41)))
      (= (tmp 43) (reg-range dst (constant ? 12) (constant ? 12)))
      (= (tmp 44) (add (constant ? 1) (constant ? 0) (tmp 43)))
      (= (tmp 45) (reg-range dst (constant ? 11) (constant ? 11)))
      (= (tmp 46) (add (constant ? 1) (constant ? 0) (tmp 45)))
      (= (tmp 47) (reg-range dst (constant ? 10) (constant ? 10)))
      (= (tmp 48) (add (constant ? 1) (constant ? 0) (tmp 47)))
      (= (tmp 49) (reg-range dst (constant ? 9) (constant ? 9)))
      (= (tmp 50) (add (constant ? 1) (constant ? 0) (tmp 49)))
      (= (tmp 51) (reg-range dst (constant ? 8) (constant ? 8)))
      (= (tmp 52) (add (constant ? 1) (constant ? 0) (tmp 51)))
      (= (tmp 53) (reg-range dst (constant ? 7) (constant ? 7)))
      (= (tmp 54) (add (constant ? 1) (constant ? 0) (tmp 53)))
      (= (tmp 55) (reg-range dst (constant ? 6) (constant ? 6)))
      (= (tmp 56) (add (constant ? 1) (constant ? 0) (tmp 55)))
      (= (tmp 57) (reg-range dst (constant ? 5) (constant ? 5)))
      (= (tmp 58) (add (constant ? 1) (constant ? 0) (tmp 57)))
      (= (tmp 59) (reg-range dst (constant ? 4) (constant ? 4)))
      (= (tmp 60) (add (constant ? 1) (constant ? 0) (tmp 59)))
      (= (tmp 61) (reg-range dst (constant ? 3) (constant ? 3)))
      (= (tmp 62) (add (constant ? 1) (constant ? 0) (tmp 61)))
      (= (tmp 63) (reg-range dst (constant ? 2) (constant ? 2)))
      (= (tmp 64) (add (constant ? 1) (constant ? 0) (tmp 63)))
      (= (tmp 65) (reg-range dst (constant ? 1) (constant ? 1)))
      (= (tmp 66) (add (constant ? 1) (constant ? 0) (tmp 65)))
      (= (tmp 67) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 67) (tmp 6))
      (= (tmp 68) (reg-range dst (constant ? 1) (constant ? 1)))
      (set-reg (tmp 68) (tmp 8))
      (= (tmp 69) (reg-range dst (constant ? 2) (constant ? 2)))
      (set-reg (tmp 69) (tmp 10))
      (= (tmp 70) (reg-range dst (constant ? 3) (constant ? 3)))
      (set-reg (tmp 70) (tmp 12))
      (= (tmp 71) (reg-range dst (constant ? 4) (constant ? 4)))
      (set-reg (tmp 71) (tmp 14))
      (= (tmp 72) (reg-range dst (constant ? 5) (constant ? 5)))
      (set-reg (tmp 72) (tmp 16))
      (= (tmp 73) (reg-range dst (constant ? 6) (constant ? 6)))
      (set-reg (tmp 73) (tmp 18))
      (= (tmp 74) (reg-range dst (constant ? 7) (constant ? 7)))
      (set-reg (tmp 74) (tmp 20))
      (= (tmp 75) (reg-range dst (constant ? 8) (constant ? 8)))
      (set-reg (tmp 75) (tmp 22))
      (= (tmp 76) (reg-range dst (constant ? 9) (constant ? 9)))
      (set-reg (tmp 76) (tmp 24))
      (= (tmp 77) (reg-range dst (constant ? 10) (constant ? 10)))
      (set-reg (tmp 77) (tmp 26))
      (= (tmp 78) (reg-range dst (constant ? 11) (constant ? 11)))
      (set-reg (tmp 78) (tmp 28))
      (= (tmp 79) (reg-range dst (constant ? 12) (constant ? 12)))
      (set-reg (tmp 79) (tmp 30))
      (= (tmp 80) (reg-range dst (constant ? 13) (constant ? 13)))
      (set-reg (tmp 80) (tmp 32))
      (= (tmp 81) (reg-range dst (constant ? 14) (constant ? 14)))
      (set-reg (tmp 81) (tmp 34))
      (= (tmp 82) (reg-range dst (constant ? 15) (constant ? 15)))
      (set-reg (tmp 82) (tmp 36))
      (= (tmp 83) (reg-range dst (constant ? 16) (constant ? 16)))
      (set-reg (tmp 83) (tmp 38))
      (= (tmp 84) (reg-range dst (constant ? 17) (constant ? 17)))
      (set-reg (tmp 84) (tmp 40))
      (= (tmp 85) (reg-range dst (constant ? 18) (constant ? 18)))
      (set-reg (tmp 85) (tmp 42))
      (= (tmp 86) (reg-range dst (constant ? 19) (constant ? 19)))
      (set-reg (tmp 86) (tmp 44))
      (= (tmp 87) (reg-range dst (constant ? 20) (constant ? 20)))
      (set-reg (tmp 87) (tmp 46))
      (= (tmp 88) (reg-range dst (constant ? 21) (constant ? 21)))
      (set-reg (tmp 88) (tmp 48))
      (= (tmp 89) (reg-range dst (constant ? 22) (constant ? 22)))
      (set-reg (tmp 89) (tmp 50))
      (= (tmp 90) (reg-range dst (constant ? 23) (constant ? 23)))
      (set-reg (tmp 90) (tmp 52))
      (= (tmp 91) (reg-range dst (constant ? 24) (constant ? 24)))
      (set-reg (tmp 91) (tmp 54))
      (= (tmp 92) (reg-range dst (constant ? 25) (constant ? 25)))
      (set-reg (tmp 92) (tmp 56))
      (= (tmp 93) (reg-range dst (constant ? 26) (constant ? 26)))
      (set-reg (tmp 93) (tmp 58))
      (= (tmp 94) (reg-range dst (constant ? 27) (constant ? 27)))
      (set-reg (tmp 94) (tmp 60))
      (= (tmp 95) (reg-range dst (constant ? 28) (constant ? 28)))
      (set-reg (tmp 95) (tmp 62))
      (= (tmp 96) (reg-range dst (constant ? 29) (constant ? 29)))
      (set-reg (tmp 96) (tmp 64))
      (= (tmp 97) (reg-range dst (constant ? 30) (constant ? 30)))
      (set-reg (tmp 97) (tmp 66))
      (set-reg (tmp 98) (constant ? 0))
      (= (tmp 100) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 99) (tmp 100))
      (= (tmp 102) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 101) (tmp 102))
      (= (tmp 104) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 103) (tmp 104))
      (= (tmp 106) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 105) (tmp 106))
      (= (tmp 108) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 108) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 109) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 107) (tmp 109)))))

(instruction
  subh_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag of dst))
      (allocate-in (tmp 33) (reg-flag c dst))
      (allocate-in (tmp 39) (reg-flag a dst))
      (allocate-in (tmp 29) (reg-flag of dst))
      (allocate-in (tmp 34) (reg-flag c dst))
      (allocate-in (tmp 44) (reg-flag ex dst))
      (allocate-in (tmp 48) (reg-flag ac dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in (tmp 24) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 42) (reg-flag a dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 45) (reg-flag ex dst))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 20) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 21) (shl (constant ? 40) (tmp 20) (constant ? 16)))
      (= (tmp 22) (sub (constant ? 40) dst (tmp 21)))
      (= (tmp 23) (icmp (constant ? 40) sgt (tmp 22) dst))
      (br (tmp 23) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 25) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 26) (shl (constant ? 40) (tmp 25) (constant ? 16)))
      (= (tmp 27) (icmp (constant ? 40) sgt (tmp 22) (tmp 26)))
      (br (tmp 27) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 30) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 31) (phi ((no-value . bb_12) ((tmp 30) . bb_13))))
      (= (tmp 32) (icmp (constant ? 41) slt (constant ? 0) (tmp 22)))
      (br (tmp 32) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 33) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 34) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 35) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 36) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 37) (shl (constant ? 40) (tmp 36) (constant ? 16)))
      (= (tmp 38) (sub (constant ? 40) dst (tmp 37)))
      (set-reg dst (tmp 38))
      (set-reg dst no-value)
      (= (tmp 40) (icmp (constant ? 40) eq (tmp 39) (constant ? 0)))
      (br (tmp 40) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 41) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 43) (icmp (constant ? 40) eq (tmp 42) (constant ? -1)))
      (br (tmp 43) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 44) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 45) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 46) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 47) (phi ((no-value . bb_21) ((tmp 46) . bb_22))))
      (= (tmp 49) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 48) (tmp 49))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51))))
  (pattern
    (constraints
      (allocate-in (tmp 15) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 9) (reg-flag of dst))
      (allocate-in (tmp 39) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag c dst))
      (allocate-in (tmp 44) (reg-flag ex dst))
      (allocate-in (tmp 48) (reg-flag ac dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in (tmp 42) (reg-flag a dst))
      (allocate-in (tmp 10) (reg-flag of dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 45) (reg-flag ex dst))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 1) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (sub (constant ? 32) dst (tmp 2)))
      (= (tmp 4) (icmp (constant ? 32) sgt (tmp 3) dst))
      (br (tmp 4) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 7) (shl (constant ? 40) (tmp 6) (constant ? 16)))
      (= (tmp 8) (icmp (constant ? 32) sgt (tmp 3) (tmp 7)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 10) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 13) (icmp (constant ? 33) slt (constant ? 0) (tmp 3)))
      (br (tmp 13) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 17) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 18) (shl (constant ? 40) (tmp 17) (constant ? 16)))
      (= (tmp 19) (satsub (constant ? 32) dst (tmp 18)))
      (set-reg dst (tmp 19))
      (set-reg dst no-value)
      (= (tmp 40) (icmp (constant ? 40) eq (tmp 39) (constant ? 0)))
      (br (tmp 40) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 41) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 43) (icmp (constant ? 40) eq (tmp 42) (constant ? -1)))
      (br (tmp 43) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 44) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 45) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 46) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 47) (phi ((no-value . bb_21) ((tmp 46) . bb_22))))
      (= (tmp 49) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 48) (tmp 49))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51)))))

(instruction
  mach_nimm1_a16_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 87) (reg-flag of (tmp 47)))
      (allocate-in (tmp 85) (reg-flag of (tmp 47)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 98) (reg-flag a dst))
      (allocate-in (tmp 92) (reg-flag al dst))
      (allocate-in (tmp 97) (reg-flag ex dst))
      (allocate-in (tmp 100) (reg-flag ex dst))
      (allocate-in (tmp 104) (reg-flag mi dst))
      (aliases ((tmp 74) (tmp 81) (tmp 82)))
      (allocate-in (tmp 93) (reg-flag ac dst))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 95) (reg-flag a dst))
      (allocate-in (tmp 88) (reg-flag of (tmp 47)))
      (allocate-in (tmp 101) (reg-flag ex dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 47) (bit_and (constant ? 40) dst (constant ? 1099511562240)))
      (= (tmp 70) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 72) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 73) (mul (constant ? 40) (tmp 70) (tmp 72)))
      (= (tmp 74) (add (constant ? 40) (tmp 73) (constant ? 32768)))
      (= (tmp 83) (add (constant ? 40) (tmp 47) (tmp 82)))
      (= (tmp 84) (icmp (constant ? 40) slt (tmp 83) (tmp 47)))
      (br (tmp 84) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 85) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 86) (icmp (constant ? 40) slt (tmp 83) (tmp 82)))
      (br (tmp 86) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 87) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 88) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 89) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 90) (phi ((no-value . bb_9) ((tmp 89) . bb_10))))
      (= (tmp 91) (add (constant ? 40) (tmp 47) (tmp 82)))
      (set-reg (tmp 47) (tmp 91))
      (set-reg dst no-value)
      (set-reg (tmp 92) (constant ? 0))
      (= (tmp 94) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 93) (tmp 94))
      (= (tmp 96) (icmp (constant ? 40) eq (tmp 95) (constant ? 0)))
      (br (tmp 96) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 97) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 99) (icmp (constant ? 40) eq (tmp 98) (constant ? -1)))
      (br (tmp 99) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 100) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 101) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 102) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 103) (phi ((no-value . bb_15) ((tmp 102) . bb_16))))
      (= (tmp 105) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 104) (tmp 105))))
  (pattern
    (constraints
      (allocate-in (tmp 87) (reg-flag of (tmp 47)))
      (allocate-in (tmp 85) (reg-flag of (tmp 47)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 98) (reg-flag a dst))
      (allocate-in (tmp 92) (reg-flag al dst))
      (allocate-in (tmp 97) (reg-flag ex dst))
      (allocate-in (tmp 100) (reg-flag ex dst))
      (allocate-in (tmp 104) (reg-flag mi dst))
      (aliases ((tmp 81) (tmp 80) (tmp 82)))
      (allocate-in (tmp 93) (reg-flag ac dst))
      (immediate imm1b ((0 . 0)))
      (allocate-in (tmp 95) (reg-flag a dst))
      (allocate-in (tmp 88) (reg-flag of (tmp 47)))
      (allocate-in (tmp 101) (reg-flag ex dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 47) (bit_and (constant ? 40) dst (constant ? 1099511562240)))
      (= (tmp 77) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 79) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 80) (mul (constant ? 40) (tmp 77) (tmp 79)))
      (= (tmp 83) (add (constant ? 40) (tmp 47) (tmp 82)))
      (= (tmp 84) (icmp (constant ? 40) slt (tmp 83) (tmp 47)))
      (br (tmp 84) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 85) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 86) (icmp (constant ? 40) slt (tmp 83) (tmp 82)))
      (br (tmp 86) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 87) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 88) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 89) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 90) (phi ((no-value . bb_9) ((tmp 89) . bb_10))))
      (= (tmp 91) (add (constant ? 40) (tmp 47) (tmp 82)))
      (set-reg (tmp 47) (tmp 91))
      (set-reg dst no-value)
      (set-reg (tmp 92) (constant ? 0))
      (= (tmp 94) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 93) (tmp 94))
      (= (tmp 96) (icmp (constant ? 40) eq (tmp 95) (constant ? 0)))
      (br (tmp 96) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 97) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 99) (icmp (constant ? 40) eq (tmp 98) (constant ? -1)))
      (br (tmp 99) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 100) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 101) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 102) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 103) (phi ((no-value . bb_15) ((tmp 102) . bb_16))))
      (= (tmp 105) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 104) (tmp 105))))
  (pattern
    (constraints
      (allocate-in (tmp 98) (reg-flag a dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 93) (reg-flag ac dst))
      (allocate-in (tmp 92) (reg-flag al dst))
      (allocate-in (tmp 97) (reg-flag ex dst))
      (allocate-in (tmp 100) (reg-flag ex dst))
      (allocate-in (tmp 104) (reg-flag mi dst))
      (aliases ((tmp 37) (tmp 14) (tmp 21)))
      (allocate-in (tmp 43) (reg-flag of (tmp 2)))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 40) (reg-flag of (tmp 2)))
      (allocate-in (tmp 95) (reg-flag a dst))
      (allocate-in (tmp 101) (reg-flag ex dst))
      (allocate-in (tmp 42) (reg-flag of (tmp 2)))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 2) (bit_and (constant ? 40) dst (constant ? 1099511562240)))
      (= (tmp 10) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 12) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 13) (mul (constant ? 40) (tmp 10) (tmp 12)))
      (= (tmp 14) (add (constant ? 40) (tmp 13) (constant ? 32768)))
      (= (tmp 38) (add (constant ? 40) (tmp 2) (tmp 37)))
      (= (tmp 39) (icmp (constant ? 40) slt (tmp 38) (tmp 2)))
      (br (tmp 39) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 41) (icmp (constant ? 40) slt (tmp 38) (tmp 37)))
      (br (tmp 41) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 42) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 43) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 44) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 45) (phi ((no-value . bb_3) ((tmp 44) . bb_4))))
      (= (tmp 46) (add (constant ? 40) (tmp 2) (tmp 37)))
      (set-reg (tmp 2) (tmp 46))
      (set-reg dst no-value)
      (set-reg (tmp 92) (constant ? 0))
      (= (tmp 94) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 93) (tmp 94))
      (= (tmp 96) (icmp (constant ? 40) eq (tmp 95) (constant ? 0)))
      (br (tmp 96) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 97) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 99) (icmp (constant ? 40) eq (tmp 98) (constant ? -1)))
      (br (tmp 99) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 100) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 101) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 102) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 103) (phi ((no-value . bb_15) ((tmp 102) . bb_16))))
      (= (tmp 105) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 104) (tmp 105))))
  (pattern
    (constraints
      (allocate-in (tmp 98) (reg-flag a dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 93) (reg-flag ac dst))
      (allocate-in (tmp 92) (reg-flag al dst))
      (allocate-in (tmp 97) (reg-flag ex dst))
      (allocate-in (tmp 100) (reg-flag ex dst))
      (allocate-in (tmp 104) (reg-flag mi dst))
      (aliases ((tmp 37) (tmp 20) (tmp 21)))
      (allocate-in (tmp 43) (reg-flag of (tmp 2)))
      (immediate imm1b ((0 . 0)))
      (allocate-in (tmp 40) (reg-flag of (tmp 2)))
      (allocate-in (tmp 95) (reg-flag a dst))
      (allocate-in (tmp 101) (reg-flag ex dst))
      (allocate-in (tmp 42) (reg-flag of (tmp 2)))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 2) (bit_and (constant ? 40) dst (constant ? 1099511562240)))
      (= (tmp 17) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 19) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 20) (mul (constant ? 40) (tmp 17) (tmp 19)))
      (= (tmp 38) (add (constant ? 40) (tmp 2) (tmp 37)))
      (= (tmp 39) (icmp (constant ? 40) slt (tmp 38) (tmp 2)))
      (br (tmp 39) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 41) (icmp (constant ? 40) slt (tmp 38) (tmp 37)))
      (br (tmp 41) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 42) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 43) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 44) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 45) (phi ((no-value . bb_3) ((tmp 44) . bb_4))))
      (= (tmp 46) (add (constant ? 40) (tmp 2) (tmp 37)))
      (set-reg (tmp 2) (tmp 46))
      (set-reg dst no-value)
      (set-reg (tmp 92) (constant ? 0))
      (= (tmp 94) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 93) (tmp 94))
      (= (tmp 96) (icmp (constant ? 40) eq (tmp 95) (constant ? 0)))
      (br (tmp 96) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 97) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 99) (icmp (constant ? 40) eq (tmp 98) (constant ? -1)))
      (br (tmp 99) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 100) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 101) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 102) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 103) (phi ((no-value . bb_15) ((tmp 102) . bb_16))))
      (= (tmp 105) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 104) (tmp 105)))))

(instruction
  bpackl_a40_a16l
  (pattern
    (constraints
      (allocate-in dst (a1h a2h a3h a0l a1l a2l a3l a0h))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 16) (constant ? 23)))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  cmp_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 0) (reg-flag ac dst))
      (allocate-in (tmp 2) (reg-flag mi dst)))
    (code
      (= (tmp 1) (icmp eq (constant ? 40) dst src))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp slt (constant ? 40) dst src))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  aload_acc
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in aN (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range aN (constant ? 0) (constant ? 31)))
      (= (tmp 1) (icmp ult (constant ? 32) (tmp 0) (register cdl)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (add (constant ? 32) (tmp 0) (register cdo)))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi (((tmp 2) . bb_0) ((tmp 0) . bb_1))))
      (set-reg (register cmtype) (constant ? 9))
      (= (tmp 4) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 5) (load-mem (constant ? 32) cm (tmp 3)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 6) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 7) (add (constant ? 32) (tmp 3) (constant ? 1)))
      (= (tmp 8) (load-mem (constant ? 32) cm (tmp 7)))
      (set-reg (tmp 6) (tmp 8)))))

(instruction
  cmps_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 31)))
      (= (tmp 3) (icmp eq (constant ? 32) (tmp 0) (tmp 1)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (icmp slt (constant ? 32) (tmp 0) (tmp 1)))
      (set-reg (tmp 4) (tmp 5)))))

(instruction
  mv_r16_any32++Imm
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate Imm ((1 . 15)))
      (allocate-in (tmp 15) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 12) (zext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 12))
      (= (tmp 14) (add (constant ? 16) rN Imm))
      (set-reg rN (tmp 14))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate Imm ((1 . 15)))
      (allocate-in (tmp 15) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 13) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 13))
      (= (tmp 14) (add (constant ? 16) rN Imm))
      (set-reg rN (tmp 14))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (immediate Imm ((1 . 15)))
      (allocate-in (tmp 15) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (set-reg dst dst)
      (= (tmp 14) (add (constant ? 16) rN Imm))
      (set-reg rN (tmp 14))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17)))))

(instruction
  cmpz_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 31)))
      (= (tmp 3) (icmp eq (constant ? 32) (tmp 0) (tmp 1)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (icmp ult (constant ? 32) (tmp 0) (tmp 1)))
      (set-reg (tmp 4) (tmp 5)))))

(instruction
  sub2_a40_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 17) (reg-flag a dst))
      (allocate-in (tmp 19) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 14) (reg-flag a dst))
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in (tmp 25) (reg-flag mi dst))
      (allocate-in (tmp 23) (reg-flag ac dst))
      (allocate-in (tmp 16) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 20) (reg-flag ex dst)))
    (code
      (= (tmp 0) (- (constant ? 15) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 4) (satsub (tmp 1) (tmp 2) (tmp 3)))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 15)))
      (set-reg (tmp 5) (tmp 4))
      (= (tmp 6) (- (constant ? 31) (constant ? 16)))
      (= (tmp 7) (+ (constant ? 1) (tmp 6)))
      (= (tmp 8) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 9) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 10) (satsub (tmp 7) (tmp 8) (tmp 9)))
      (= (tmp 11) (reg-range dst (constant ? 16) (constant ? 31)))
      (set-reg (tmp 11) (tmp 10))
      (= (tmp 13) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (icmp (constant ? 40) eq (tmp 14) (constant ? 0)))
      (br (tmp 15) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 18) (icmp (constant ? 40) eq (tmp 17) (constant ? -1)))
      (br (tmp 18) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 19) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 20) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 21) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 22) (phi ((no-value . bb_3) ((tmp 21) . bb_4))))
      (= (tmp 24) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 23) (tmp 24))
      (= (tmp 26) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 25) (tmp 26)))))

(instruction
  mv_r16_any32++m
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 16) (reg-flag z rN))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 14) (reg-flag m rN)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 12) (zext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 12))
      (= (tmp 15) (add (constant ? 16) rN (tmp 14)))
      (set-reg rN (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 16) (reg-flag z rN))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 14) (reg-flag m rN)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 13) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 13))
      (= (tmp 15) (add (constant ? 16) rN (tmp 14)))
      (set-reg rN (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18))))
  (pattern
    (constraints
      (allocate-in dst (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 16) (reg-flag z rN))
      (allocate-in (tmp 14) (reg-flag m rN)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (set-reg dst dst)
      (= (tmp 15) (add (constant ? 16) rN (tmp 14)))
      (set-reg rN (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18)))))

(instruction
  subh_a40_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag of dst))
      (allocate-in (tmp 33) (reg-flag c dst))
      (allocate-in (tmp 39) (reg-flag a dst))
      (allocate-in (tmp 29) (reg-flag of dst))
      (allocate-in (tmp 34) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag ex dst))
      (allocate-in (tmp 24) (reg-flag of dst))
      (allocate-in (tmp 42) (reg-flag a dst))
      (allocate-in (tmp 48) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in (tmp 45) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 20) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 21) (shl (constant ? 40) (tmp 20) (constant ? 16)))
      (= (tmp 22) (sub (constant ? 40) src1 (tmp 21)))
      (= (tmp 23) (icmp (constant ? 40) sgt (tmp 22) src1))
      (br (tmp 23) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 25) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 26) (shl (constant ? 40) (tmp 25) (constant ? 16)))
      (= (tmp 27) (icmp (constant ? 40) sgt (tmp 22) (tmp 26)))
      (br (tmp 27) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 30) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 31) (phi ((no-value . bb_12) ((tmp 30) . bb_13))))
      (= (tmp 32) (icmp (constant ? 41) slt (constant ? 0) (tmp 22)))
      (br (tmp 32) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 33) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 34) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 35) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 36) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 37) (shl (constant ? 40) (tmp 36) (constant ? 16)))
      (= (tmp 38) (sub (constant ? 40) src1 (tmp 37)))
      (set-reg dst (tmp 38))
      (set-reg dst no-value)
      (= (tmp 40) (icmp (constant ? 40) eq (tmp 39) (constant ? 0)))
      (br (tmp 40) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 41) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 43) (icmp (constant ? 40) eq (tmp 42) (constant ? -1)))
      (br (tmp 43) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 44) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 45) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 46) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 47) (phi ((no-value . bb_21) ((tmp 46) . bb_22))))
      (= (tmp 49) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 48) (tmp 49))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51))))
  (pattern
    (constraints
      (allocate-in (tmp 39) (reg-flag a dst))
      (allocate-in (tmp 9) (reg-flag of dst))
      (allocate-in (tmp 14) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag ex dst))
      (allocate-in (tmp 50) (reg-flag mi dst))
      (allocate-in (tmp 10) (reg-flag of dst))
      (allocate-in (tmp 42) (reg-flag a dst))
      (allocate-in (tmp 48) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in (tmp 15) (reg-flag c dst))
      (allocate-in (tmp 45) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (sub (constant ? 32) src1 (tmp 2)))
      (= (tmp 4) (icmp (constant ? 32) sgt (tmp 3) src1))
      (br (tmp 4) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 7) (shl (constant ? 40) (tmp 6) (constant ? 16)))
      (= (tmp 8) (icmp (constant ? 32) sgt (tmp 3) (tmp 7)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 10) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 13) (icmp (constant ? 33) slt (constant ? 0) (tmp 3)))
      (br (tmp 13) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 17) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 18) (shl (constant ? 40) (tmp 17) (constant ? 16)))
      (= (tmp 19) (satsub (constant ? 32) src1 (tmp 18)))
      (set-reg dst (tmp 19))
      (set-reg dst no-value)
      (= (tmp 40) (icmp (constant ? 40) eq (tmp 39) (constant ? 0)))
      (br (tmp 40) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 41) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 43) (icmp (constant ? 40) eq (tmp 42) (constant ? -1)))
      (br (tmp 43) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 44) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 45) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 46) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 47) (phi ((no-value . bb_21) ((tmp 46) . bb_22))))
      (= (tmp 49) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 48) (tmp 49))
      (= (tmp 51) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 50) (tmp 51)))))

(instruction
  mash_nimm1_a16_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 87) (reg-flag of (tmp 47)))
      (allocate-in (tmp 85) (reg-flag of (tmp 47)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 98) (reg-flag a dst))
      (allocate-in (tmp 92) (reg-flag al dst))
      (allocate-in (tmp 97) (reg-flag ex dst))
      (allocate-in (tmp 100) (reg-flag ex dst))
      (allocate-in (tmp 104) (reg-flag mi dst))
      (aliases ((tmp 74) (tmp 81) (tmp 82)))
      (allocate-in (tmp 93) (reg-flag ac dst))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 95) (reg-flag a dst))
      (allocate-in (tmp 88) (reg-flag of (tmp 47)))
      (allocate-in (tmp 101) (reg-flag ex dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 47) (bit_and (constant ? 40) dst (constant ? 1099511562240)))
      (= (tmp 70) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 72) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 73) (mul (constant ? 40) (tmp 70) (tmp 72)))
      (= (tmp 74) (add (constant ? 40) (tmp 73) (constant ? 32768)))
      (= (tmp 83) (add (constant ? 40) (tmp 47) (tmp 82)))
      (= (tmp 84) (icmp (constant ? 40) slt (tmp 83) (tmp 47)))
      (br (tmp 84) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 85) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 86) (icmp (constant ? 40) slt (tmp 83) (tmp 82)))
      (br (tmp 86) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 87) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 88) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 89) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 90) (phi ((no-value . bb_9) ((tmp 89) . bb_10))))
      (= (tmp 91) (add (constant ? 40) (tmp 47) (tmp 82)))
      (set-reg (tmp 47) (tmp 91))
      (set-reg dst no-value)
      (set-reg (tmp 92) (constant ? 0))
      (= (tmp 94) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 93) (tmp 94))
      (= (tmp 96) (icmp (constant ? 40) eq (tmp 95) (constant ? 0)))
      (br (tmp 96) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 97) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 99) (icmp (constant ? 40) eq (tmp 98) (constant ? -1)))
      (br (tmp 99) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 100) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 101) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 102) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 103) (phi ((no-value . bb_15) ((tmp 102) . bb_16))))
      (= (tmp 105) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 104) (tmp 105))))
  (pattern
    (constraints
      (allocate-in (tmp 87) (reg-flag of (tmp 47)))
      (allocate-in (tmp 85) (reg-flag of (tmp 47)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 98) (reg-flag a dst))
      (allocate-in (tmp 92) (reg-flag al dst))
      (allocate-in (tmp 97) (reg-flag ex dst))
      (allocate-in (tmp 100) (reg-flag ex dst))
      (allocate-in (tmp 104) (reg-flag mi dst))
      (aliases ((tmp 81) (tmp 80) (tmp 82)))
      (allocate-in (tmp 93) (reg-flag ac dst))
      (immediate imm1b ((0 . 0)))
      (allocate-in (tmp 95) (reg-flag a dst))
      (allocate-in (tmp 88) (reg-flag of (tmp 47)))
      (allocate-in (tmp 101) (reg-flag ex dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 47) (bit_and (constant ? 40) dst (constant ? 1099511562240)))
      (= (tmp 77) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 79) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 80) (mul (constant ? 40) (tmp 77) (tmp 79)))
      (= (tmp 83) (add (constant ? 40) (tmp 47) (tmp 82)))
      (= (tmp 84) (icmp (constant ? 40) slt (tmp 83) (tmp 47)))
      (br (tmp 84) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 85) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 86) (icmp (constant ? 40) slt (tmp 83) (tmp 82)))
      (br (tmp 86) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 87) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 88) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 89) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 90) (phi ((no-value . bb_9) ((tmp 89) . bb_10))))
      (= (tmp 91) (add (constant ? 40) (tmp 47) (tmp 82)))
      (set-reg (tmp 47) (tmp 91))
      (set-reg dst no-value)
      (set-reg (tmp 92) (constant ? 0))
      (= (tmp 94) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 93) (tmp 94))
      (= (tmp 96) (icmp (constant ? 40) eq (tmp 95) (constant ? 0)))
      (br (tmp 96) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 97) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 99) (icmp (constant ? 40) eq (tmp 98) (constant ? -1)))
      (br (tmp 99) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 100) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 101) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 102) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 103) (phi ((no-value . bb_15) ((tmp 102) . bb_16))))
      (= (tmp 105) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 104) (tmp 105))))
  (pattern
    (constraints
      (allocate-in (tmp 98) (reg-flag a dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 93) (reg-flag ac dst))
      (allocate-in (tmp 92) (reg-flag al dst))
      (allocate-in (tmp 97) (reg-flag ex dst))
      (allocate-in (tmp 100) (reg-flag ex dst))
      (allocate-in (tmp 104) (reg-flag mi dst))
      (aliases ((tmp 37) (tmp 14) (tmp 21)))
      (allocate-in (tmp 43) (reg-flag of (tmp 2)))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 40) (reg-flag of (tmp 2)))
      (allocate-in (tmp 95) (reg-flag a dst))
      (allocate-in (tmp 101) (reg-flag ex dst))
      (allocate-in (tmp 42) (reg-flag of (tmp 2)))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 2) (bit_and (constant ? 40) dst (constant ? 1099511562240)))
      (= (tmp 10) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 12) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 13) (mul (constant ? 40) (tmp 10) (tmp 12)))
      (= (tmp 14) (add (constant ? 40) (tmp 13) (constant ? 32768)))
      (= (tmp 38) (add (constant ? 40) (tmp 2) (tmp 37)))
      (= (tmp 39) (icmp (constant ? 40) slt (tmp 38) (tmp 2)))
      (br (tmp 39) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 41) (icmp (constant ? 40) slt (tmp 38) (tmp 37)))
      (br (tmp 41) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 42) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 43) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 44) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 45) (phi ((no-value . bb_3) ((tmp 44) . bb_4))))
      (= (tmp 46) (add (constant ? 40) (tmp 2) (tmp 37)))
      (set-reg (tmp 2) (tmp 46))
      (set-reg dst no-value)
      (set-reg (tmp 92) (constant ? 0))
      (= (tmp 94) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 93) (tmp 94))
      (= (tmp 96) (icmp (constant ? 40) eq (tmp 95) (constant ? 0)))
      (br (tmp 96) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 97) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 99) (icmp (constant ? 40) eq (tmp 98) (constant ? -1)))
      (br (tmp 99) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 100) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 101) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 102) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 103) (phi ((no-value . bb_15) ((tmp 102) . bb_16))))
      (= (tmp 105) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 104) (tmp 105))))
  (pattern
    (constraints
      (allocate-in (tmp 98) (reg-flag a dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 93) (reg-flag ac dst))
      (allocate-in (tmp 92) (reg-flag al dst))
      (allocate-in (tmp 97) (reg-flag ex dst))
      (allocate-in (tmp 100) (reg-flag ex dst))
      (allocate-in (tmp 104) (reg-flag mi dst))
      (aliases ((tmp 37) (tmp 20) (tmp 21)))
      (allocate-in (tmp 43) (reg-flag of (tmp 2)))
      (immediate imm1b ((0 . 0)))
      (allocate-in (tmp 40) (reg-flag of (tmp 2)))
      (allocate-in (tmp 95) (reg-flag a dst))
      (allocate-in (tmp 101) (reg-flag ex dst))
      (allocate-in (tmp 42) (reg-flag of (tmp 2)))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 2) (bit_and (constant ? 40) dst (constant ? 1099511562240)))
      (= (tmp 17) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 19) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 20) (mul (constant ? 40) (tmp 17) (tmp 19)))
      (= (tmp 38) (add (constant ? 40) (tmp 2) (tmp 37)))
      (= (tmp 39) (icmp (constant ? 40) slt (tmp 38) (tmp 2)))
      (br (tmp 39) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 41) (icmp (constant ? 40) slt (tmp 38) (tmp 37)))
      (br (tmp 41) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 42) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 43) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 44) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 45) (phi ((no-value . bb_3) ((tmp 44) . bb_4))))
      (= (tmp 46) (add (constant ? 40) (tmp 2) (tmp 37)))
      (set-reg (tmp 2) (tmp 46))
      (set-reg dst no-value)
      (set-reg (tmp 92) (constant ? 0))
      (= (tmp 94) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 93) (tmp 94))
      (= (tmp 96) (icmp (constant ? 40) eq (tmp 95) (constant ? 0)))
      (br (tmp 96) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 97) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 99) (icmp (constant ? 40) eq (tmp 98) (constant ? -1)))
      (br (tmp 99) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 100) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 101) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 102) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 103) (phi ((no-value . bb_15) ((tmp 102) . bb_16))))
      (= (tmp 105) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 104) (tmp 105)))))

(instruction
  cmp_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 1) (reg-flag ac dst))
      (allocate-in (tmp 3) (reg-flag mi dst)))
    (code
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (icmp eq (constant ? 40) dst (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (icmp slt (constant ? 40) dst (tmp 0)))
      (set-reg (tmp 3) (tmp 4)))))

(instruction
  rol1_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ac dst))
      (allocate-in (tmp 10) (reg-flag mi dst))
      (allocate-in (tmp 12) (reg-flag ms dst))
      (allocate-in (tmp 14) (reg-flag ls dst))
      (allocate-in (tmp 5) (reg-flag ag dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 16) (reg-flag op dst))
      (allocate-in (tmp 6) (reg-flag c dst)))
    (code
      (= (tmp 0) (add (constant ? 32) dst (constant ? 0)))
      (= (tmp 1) (reg-range dst (constant ? 1) (constant ? 31)))
      (= (tmp 2) (bit_and (constant ? 31) (tmp 0) (constant ? 65535)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 4) (lshr (constant ? 1) (tmp 0) (constant ? 30)))
      (set-reg (tmp 3) (tmp 4))
      (set-reg (tmp 5) (constant ? 0))
      (= (tmp 7) (lshr (constant ? 1) (tmp 0) (constant ? 30)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 14) (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18)))))

(instruction
  pref16
  (pattern
    (constraints
      (allocate-in aN (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range aN (constant ? 0) (constant ? 31)))
      (= (tmp 1) (icmp ult (constant ? 32) (tmp 0) (register cdl)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (add (constant ? 32) (tmp 0) (register cdo)))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi (((tmp 2) . bb_0) ((tmp 0) . bb_1))))
      (set-reg (register cmtype) (constant ? 12))
      (= (tmp 4) (load-mem (constant ? 16) cm (tmp 3)))
      (set-reg (register pref0l) (tmp 4)))))

(instruction
  mv_r16_any32--
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 12) (zext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 12))
      (= (tmp 14) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 14))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 13) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 13))
      (= (tmp 14) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 14))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (allocate-in (tmp 15) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (set-reg dst dst)
      (= (tmp 14) (sub (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 14))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17)))))

(instruction
  subscale2_a40_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 29) (reg-flag ac dst))
      (allocate-in (tmp 18) (reg-flag a dst))
      (allocate-in (tmp 25) (reg-flag ex dst))
      (allocate-in (tmp 31) (reg-flag mi dst))
      (allocate-in (tmp 20) (reg-flag a dst))
      (allocate-in (tmp 26) (reg-flag ex dst))
      (allocate-in (tmp 22) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 23) (reg-flag a dst)))
    (code
      (= (tmp 0) (- (constant ? 15) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 15) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 6) (sub (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (sdiv (tmp 6) (constant ? 2)))
      (= (tmp 8) (reg-range dst (constant ? 0) (constant ? 15)))
      (set-reg (tmp 8) (tmp 7))
      (= (tmp 9) (- (constant ? 31) (constant ? 16)))
      (= (tmp 10) (+ (constant ? 1) (tmp 9)))
      (= (tmp 11) (- (constant ? 31) (constant ? 16)))
      (= (tmp 12) (+ (constant ? 1) (tmp 11)))
      (= (tmp 13) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 14) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 15) (sub (tmp 12) (tmp 13) (tmp 14)))
      (= (tmp 16) (sdiv (tmp 15) (constant ? 2)))
      (= (tmp 17) (reg-range dst (constant ? 16) (constant ? 31)))
      (set-reg (tmp 17) (tmp 16))
      (= (tmp 19) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 18) (tmp 19))
      (= (tmp 21) (icmp (constant ? 40) eq (tmp 20) (constant ? 0)))
      (br (tmp 21) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 22) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 24) (icmp (constant ? 40) eq (tmp 23) (constant ? -1)))
      (br (tmp 24) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 25) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 26) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 27) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 28) (phi ((no-value . bb_3) ((tmp 27) . bb_4))))
      (= (tmp 30) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 29) (tmp 30))
      (= (tmp 32) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 31) (tmp 32)))))

(instruction
  addscale4_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 24) (reg-flag a dst))
      (allocate-in (tmp 33) (reg-flag mi dst))
      (allocate-in (tmp 29) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 26) (reg-flag ex dst))
      (allocate-in (tmp 22) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 30) (reg-flag ex dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (add (constant ? 8) (tmp 1) (tmp 2)))
      (= (tmp 4) (lshr (constant ? 8) (tmp 3) (constant ? 1)))
      (set-reg (tmp 0) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 6) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 7) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 8) (add (constant ? 8) (tmp 6) (tmp 7)))
      (= (tmp 9) (lshr (constant ? 8) (tmp 8) (constant ? 1)))
      (set-reg (tmp 5) (tmp 9))
      (= (tmp 10) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 11) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 12) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 13) (add (constant ? 8) (tmp 11) (tmp 12)))
      (= (tmp 14) (lshr (constant ? 8) (tmp 13) (constant ? 1)))
      (set-reg (tmp 10) (tmp 14))
      (= (tmp 15) (reg-range dst (constant ? 24) (constant ? 32)))
      (= (tmp 16) (reg-range src1 (constant ? 24) (constant ? 32)))
      (= (tmp 17) (reg-range src1 (constant ? 24) (constant ? 32)))
      (= (tmp 18) (add (constant ? 8) (tmp 16) (tmp 17)))
      (= (tmp 19) (lshr (constant ? 8) (tmp 18) (constant ? 1)))
      (set-reg (tmp 15) (tmp 19))
      (= (tmp 20) (reg-range dst (constant ? 24) (constant ? 39)))
      (= (tmp 21) (sext (constant ? 8) dst (constant ? 16)))
      (set-reg (tmp 20) (tmp 21))
      (= (tmp 23) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 22) (tmp 23))
      (= (tmp 25) (icmp (constant ? 40) eq (tmp 24) (constant ? 0)))
      (br (tmp 25) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 26) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 28) (icmp (constant ? 40) eq (tmp 27) (constant ? -1)))
      (br (tmp 28) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 29) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 30) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 31) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 32) (phi ((no-value . bb_3) ((tmp 31) . bb_4))))
      (= (tmp 34) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 33) (tmp 34)))))

(instruction
  mv_r16_any32--Imm
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate Imm ((1 . 15)))
      (allocate-in (tmp 15) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 12) (zext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 12))
      (= (tmp 14) (sub (constant ? 16) rN Imm))
      (set-reg rN (tmp 14))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate Imm ((1 . 15)))
      (allocate-in (tmp 15) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 13) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 13))
      (= (tmp 14) (sub (constant ? 16) rN Imm))
      (set-reg rN (tmp 14))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (immediate Imm ((1 . 15)))
      (allocate-in (tmp 15) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (set-reg dst dst)
      (= (tmp 14) (sub (constant ? 16) rN Imm))
      (set-reg rN (tmp 14))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17)))))

(instruction
  macsu_nimm1_a16_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag ex dst))
      (allocate-in (tmp 25) (reg-flag ac dst))
      (allocate-in (tmp 36) (reg-flag mi dst))
      (allocate-in (tmp 30) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 9) (reg-flag of dst))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 32) (reg-flag ex dst))
      (allocate-in (tmp 8) (reg-flag of dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 27) (reg-flag a dst))
      (allocate-in (tmp 29) (reg-flag ex dst))
      (allocate-in (tmp 6) (reg-flag of dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 1) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 2) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 3) (mul (constant ? 40) (tmp 1) (tmp 2)))
      (= (tmp 4) (add (constant ? 40) dst (tmp 3)))
      (= (tmp 5) (icmp (constant ? 40) slt (tmp 4) dst))
      (br (tmp 5) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 6) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 7) (icmp (constant ? 40) slt (tmp 4) (tmp 3)))
      (br (tmp 7) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 8) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 9) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 10) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) ((tmp 10) . bb_4))))
      (= (tmp 12) (add (constant ? 40) dst (tmp 3)))
      (set-reg dst (tmp 12))
      (set-reg dst no-value)
      (= (tmp 26) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 25) (tmp 26))
      (= (tmp 28) (icmp (constant ? 40) eq (tmp 27) (constant ? 0)))
      (br (tmp 28) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 29) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 31) (icmp (constant ? 40) eq (tmp 30) (constant ? -1)))
      (br (tmp 31) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 32) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 33) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 34) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 35) (phi ((no-value . bb_15) ((tmp 34) . bb_16))))
      (= (tmp 37) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 36) (tmp 37))))
  (pattern
    (constraints
      (allocate-in (tmp 21) (reg-flag of dst))
      (allocate-in (tmp 33) (reg-flag ex dst))
      (allocate-in (tmp 18) (reg-flag of dst))
      (allocate-in (tmp 29) (reg-flag ex dst))
      (allocate-in (tmp 36) (reg-flag mi dst))
      (allocate-in (tmp 30) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 25) (reg-flag ac dst))
      (immediate imm1b ((0 . 0)))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 27) (reg-flag a dst))
      (allocate-in (tmp 20) (reg-flag of dst))
      (allocate-in (tmp 32) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 13) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 14) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 15) (mul (constant ? 40) (tmp 13) (tmp 14)))
      (= (tmp 16) (add (constant ? 40) dst (tmp 15)))
      (= (tmp 17) (icmp (constant ? 40) slt (tmp 16) dst))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 18) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 19) (icmp (constant ? 40) slt (tmp 16) (tmp 15)))
      (br (tmp 19) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 20) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 21) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 22) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 23) (phi ((no-value . bb_9) ((tmp 22) . bb_10))))
      (= (tmp 24) (add (constant ? 40) dst (tmp 15)))
      (set-reg dst (tmp 24))
      (set-reg dst no-value)
      (= (tmp 26) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 25) (tmp 26))
      (= (tmp 28) (icmp (constant ? 40) eq (tmp 27) (constant ? 0)))
      (br (tmp 28) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 29) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 31) (icmp (constant ? 40) eq (tmp 30) (constant ? -1)))
      (br (tmp 31) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 32) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 33) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 34) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 35) (phi ((no-value . bb_15) ((tmp 34) . bb_16))))
      (= (tmp 37) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 36) (tmp 37)))))

(instruction
  pref32
  (pattern
    (constraints
      (allocate-in aN (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range aN (constant ? 0) (constant ? 31)))
      (= (tmp 1) (icmp ult (constant ? 32) (tmp 0) (register cdl)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (add (constant ? 32) (tmp 0) (register cdo)))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi (((tmp 2) . bb_0) ((tmp 0) . bb_1))))
      (set-reg (register cmtype) (constant ? 13))
      (= (tmp 4) (load-mem (constant ? 16) cm (tmp 3)))
      (set-reg (register pref0h) (tmp 4))
      (= (tmp 5) (add (constant ? 32) (tmp 3) (constant ? 1)))
      (= (tmp 6) (load-mem (constant ? 16) cm (tmp 5)))
      (set-reg (register pref0l) (tmp 6)))))

(instruction
  maclh_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 21) (reg-flag ex dst))
      (allocate-in (tmp 18) (reg-flag ex dst))
      (allocate-in (tmp 1) (reg-flag al dst))
      (allocate-in (tmp 16) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag ac dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 9) (reg-flag of dst))
      (allocate-in (tmp 8) (reg-flag of dst))
      (allocate-in (tmp 25) (reg-flag mi dst))
      (allocate-in (tmp 19) (reg-flag a dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 22) (reg-flag ex dst))
      (allocate-in (tmp 13) (reg-flag al dst))
      (allocate-in (tmp 6) (reg-flag of dst)))
    (code
      (= (tmp 0) (zext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (sext (constant ? 16) (tmp 1) (constant ? 40)))
      (= (tmp 3) (mul (constant ? 40) (tmp 0) (tmp 2)))
      (= (tmp 4) (add (constant ? 40) dst (tmp 3)))
      (= (tmp 5) (icmp (constant ? 40) slt (tmp 4) dst))
      (br (tmp 5) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 6) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 7) (icmp (constant ? 40) slt (tmp 4) (tmp 3)))
      (br (tmp 7) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 8) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 9) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 10) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) ((tmp 10) . bb_4))))
      (= (tmp 12) (add (constant ? 40) dst (tmp 3)))
      (set-reg dst (tmp 12))
      (set-reg dst no-value)
      (set-reg (tmp 13) (constant ? 0))
      (= (tmp 15) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 14) (tmp 15))
      (= (tmp 17) (icmp (constant ? 40) eq (tmp 16) (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 18) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp (constant ? 40) eq (tmp 19) (constant ? -1)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 21) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 22) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 23) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 24) (phi ((no-value . bb_9) ((tmp 23) . bb_10))))
      (= (tmp 26) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 25) (tmp 26)))))

(instruction
  ror1_a40
  (pattern
    (constraints
      (allocate-in (tmp 11) (reg-flag mi dst))
      (allocate-in (tmp 9) (reg-flag ac dst))
      (allocate-in (tmp 17) (reg-flag op dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag c dst))
      (allocate-in (tmp 15) (reg-flag ls dst))
      (allocate-in (tmp 13) (reg-flag ms dst))
      (allocate-in (tmp 6) (reg-flag ag dst)))
    (code
      (= (tmp 0) (add (constant ? 32) dst (constant ? 0)))
      (= (tmp 1) (reg-range dst (constant ? 0) (constant ? 30)))
      (= (tmp 2) (lshr (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 3) (bit_and (constant ? 31) (tmp 2) (constant ? 65535)))
      (set-reg (tmp 1) (tmp 3))
      (= (tmp 4) (reg-range dst (constant ? 31) (constant ? 31)))
      (= (tmp 5) (bit_and (constant ? 1) (tmp 0) (constant ? 1)))
      (set-reg (tmp 4) (tmp 5))
      (set-reg (tmp 6) (constant ? 0))
      (= (tmp 8) (bit_and (constant ? 1) (tmp 0) (constant ? 1)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 14) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 13) (tmp 14))
      (= (tmp 16) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 15) (tmp 16))
      (= (tmp 18) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 18) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 19) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 17) (tmp 19)))))

(instruction
  mv_r16_any32--m
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 16) (reg-flag z rN))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 14) (reg-flag m rN)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 12) (zext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 12))
      (= (tmp 15) (sub (constant ? 16) rN (tmp 14)))
      (set-reg rN (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 16) (reg-flag z rN))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 14) (reg-flag m rN)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 13) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 13))
      (= (tmp 15) (sub (constant ? 16) rN (tmp 14)))
      (set-reg rN (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18))))
  (pattern
    (constraints
      (allocate-in dst (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 16) (reg-flag z rN))
      (allocate-in (tmp 14) (reg-flag m rN)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (set-reg dst dst)
      (= (tmp 15) (sub (constant ? 16) rN (tmp 14)))
      (set-reg rN (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18)))))

(instruction
  sub4_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag ex dst))
      (allocate-in (tmp 24) (reg-flag a dst))
      (allocate-in (tmp 31) (reg-flag ex dst))
      (allocate-in (tmp 29) (reg-flag a dst))
      (allocate-in (tmp 32) (reg-flag ex dst))
      (allocate-in (tmp 35) (reg-flag ac dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 37) (reg-flag mi dst))
      (allocate-in (tmp 26) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (- (constant ? 7) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 4) (satsub (tmp 1) (tmp 2) (tmp 3)))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 7)))
      (set-reg (tmp 5) (tmp 4))
      (= (tmp 6) (- (constant ? 15) (constant ? 8)))
      (= (tmp 7) (+ (constant ? 1) (tmp 6)))
      (= (tmp 8) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 9) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 10) (satsub (tmp 7) (tmp 8) (tmp 9)))
      (= (tmp 11) (reg-range dst (constant ? 8) (constant ? 15)))
      (set-reg (tmp 11) (tmp 10))
      (= (tmp 12) (- (constant ? 23) (constant ? 16)))
      (= (tmp 13) (+ (constant ? 1) (tmp 12)))
      (= (tmp 14) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 15) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 16) (satsub (tmp 13) (tmp 14) (tmp 15)))
      (= (tmp 17) (reg-range dst (constant ? 16) (constant ? 23)))
      (set-reg (tmp 17) (tmp 16))
      (= (tmp 18) (- (constant ? 31) (constant ? 24)))
      (= (tmp 19) (+ (constant ? 1) (tmp 18)))
      (= (tmp 20) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 21) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 22) (satsub (tmp 19) (tmp 20) (tmp 21)))
      (= (tmp 23) (reg-range dst (constant ? 24) (constant ? 31)))
      (set-reg (tmp 23) (tmp 22))
      (= (tmp 25) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 24) (tmp 25))
      (= (tmp 27) (icmp (constant ? 40) eq (tmp 26) (constant ? 0)))
      (br (tmp 27) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 30) (icmp (constant ? 40) eq (tmp 29) (constant ? -1)))
      (br (tmp 30) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 31) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 32) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 33) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 34) (phi ((no-value . bb_3) ((tmp 33) . bb_4))))
      (= (tmp 36) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 35) (tmp 36))
      (= (tmp 38) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 37) (tmp 38)))))

(instruction
  cmp_nimm16_a16h
  (pattern
    (constraints
      (allocate-in dst (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in (tmp 0) (reg-flag ac dst))
      (allocate-in (tmp 2) (reg-flag mi dst))
      (immediate SImm ((-32768 . 32767))))
    (code
      (= (tmp 1) (icmp eq (constant ? 16) dst SImm))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp slt (constant ? 16) dst SImm))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  massu_nimm1_a16_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag ex dst))
      (allocate-in (tmp 25) (reg-flag ac dst))
      (allocate-in (tmp 36) (reg-flag mi dst))
      (allocate-in (tmp 30) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 9) (reg-flag of dst))
      (immediate imm1b ((1 . 1)))
      (allocate-in (tmp 32) (reg-flag ex dst))
      (allocate-in (tmp 8) (reg-flag of dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 27) (reg-flag a dst))
      (allocate-in (tmp 29) (reg-flag ex dst))
      (allocate-in (tmp 6) (reg-flag of dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 1) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 2) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 3) (mul (constant ? 40) (tmp 1) (tmp 2)))
      (= (tmp 4) (sub (constant ? 40) dst (tmp 3)))
      (= (tmp 5) (icmp (constant ? 40) sgt (tmp 4) dst))
      (br (tmp 5) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 6) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 7) (icmp (constant ? 40) sgt (tmp 4) (tmp 3)))
      (br (tmp 7) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 8) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 9) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 10) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) ((tmp 10) . bb_4))))
      (= (tmp 12) (sub (constant ? 40) dst (tmp 3)))
      (set-reg dst (tmp 12))
      (set-reg dst no-value)
      (= (tmp 26) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 25) (tmp 26))
      (= (tmp 28) (icmp (constant ? 40) eq (tmp 27) (constant ? 0)))
      (br (tmp 28) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 29) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 31) (icmp (constant ? 40) eq (tmp 30) (constant ? -1)))
      (br (tmp 31) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 32) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 33) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 34) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 35) (phi ((no-value . bb_15) ((tmp 34) . bb_16))))
      (= (tmp 37) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 36) (tmp 37))))
  (pattern
    (constraints
      (allocate-in (tmp 21) (reg-flag of dst))
      (allocate-in (tmp 33) (reg-flag ex dst))
      (allocate-in (tmp 18) (reg-flag of dst))
      (allocate-in (tmp 29) (reg-flag ex dst))
      (allocate-in (tmp 36) (reg-flag mi dst))
      (allocate-in (tmp 30) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 25) (reg-flag ac dst))
      (immediate imm1b ((0 . 0)))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 27) (reg-flag a dst))
      (allocate-in (tmp 20) (reg-flag of dst))
      (allocate-in (tmp 32) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 13) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 14) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 15) (mul (constant ? 40) (tmp 13) (tmp 14)))
      (= (tmp 16) (sub (constant ? 40) dst (tmp 15)))
      (= (tmp 17) (icmp (constant ? 40) sgt (tmp 16) dst))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 18) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 19) (icmp (constant ? 40) sgt (tmp 16) (tmp 15)))
      (br (tmp 19) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 20) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 21) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 22) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 23) (phi ((no-value . bb_9) ((tmp 22) . bb_10))))
      (= (tmp 24) (sub (constant ? 40) dst (tmp 15)))
      (set-reg dst (tmp 24))
      (set-reg dst no-value)
      (= (tmp 26) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 25) (tmp 26))
      (= (tmp 28) (icmp (constant ? 40) eq (tmp 27) (constant ? 0)))
      (br (tmp 28) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 29) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 31) (icmp (constant ? 40) eq (tmp 30) (constant ? -1)))
      (br (tmp 31) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 32) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 33) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 34) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 35) (phi ((no-value . bb_15) ((tmp 34) . bb_16))))
      (= (tmp 37) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 36) (tmp 37)))))

(instruction
  mv_r16_any32-no-modifier
  (pattern
    (constraints
      (allocate-in dst (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 14) (reg-flag z rN)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (set-reg dst dst)
      (= (tmp 15) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 15) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 16) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 14) (tmp 16))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 14) (reg-flag z rN)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 13) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 13))
      (= (tmp 15) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 15) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 16) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 14) (tmp 16))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 14) (reg-flag z rN)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 12) (zext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 12))
      (= (tmp 15) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 15) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 16) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 14) (tmp 16)))))

(instruction
  cmp_a16_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 0) (reg-flag ac dst))
      (allocate-in (tmp 2) (reg-flag mi dst)))
    (code
      (= (tmp 1) (icmp eq (constant ? 16) dst src))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp slt (constant ? 16) dst src))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  pref48
  (pattern
    (constraints
      (allocate-in aN (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range aN (constant ? 0) (constant ? 31)))
      (= (tmp 1) (icmp ult (constant ? 32) (tmp 0) (register cdl)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (add (constant ? 32) (tmp 0) (register cdo)))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi (((tmp 2) . bb_0) ((tmp 0) . bb_1))))
      (set-reg (register cmtype) (constant ? 14))
      (= (tmp 4) (load-mem (constant ? 16) cm (tmp 3)))
      (set-reg (register pref1l) (tmp 4))
      (= (tmp 5) (add (constant ? 32) (tmp 3) (constant ? 1)))
      (= (tmp 6) (load-mem (constant ? 16) cm (tmp 5)))
      (set-reg (register pref0h) (tmp 6))
      (= (tmp 7) (add (constant ? 32) (tmp 3) (constant ? 2)))
      (= (tmp 8) (load-mem (constant ? 16) cm (tmp 7)))
      (set-reg (register pref0l) (tmp 8)))))

(instruction
  cmpz_a16_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 0) (reg-flag ac dst))
      (allocate-in (tmp 2) (reg-flag mi dst)))
    (code
      (= (tmp 1) (icmp eq (constant ? 16) dst src))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp ult (constant ? 16) dst src))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  mv_ext32_ext32
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases (src (tmp 3) (tmp 4)))
      (reg-flag s src ((0 . 0)))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 12) (zext (constant ? 32) (tmp 4) (constant ? 40)))
      (set-reg dst (tmp 12))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases (src (tmp 3) (tmp 4)))
      (reg-flag s src ((0 . 0)))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 13) (sext (constant ? 32) (tmp 4) (constant ? 40)))
      (set-reg dst (tmp 13))))
  (pattern
    (constraints
      (allocate-in dst (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 brad0 brad1 brlen01 lpa cpa cdo cpo cdl cpl retpc pce bfn pref0 pref1 ipl01 isr0 isr1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 dmref dmmask dmaddr dmpc dmpcl1 dmpcc0 dmpcc1 ppc msgnr msgsl dirqpc trcd psid dmsd dmpcl0 pc))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases (src (tmp 3) (tmp 4)))
      (reg-flag s src ((0 . 0))))
    (code
      (set-reg dst (tmp 4))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases ((tmp 2) (tmp 3) (tmp 4)))
      (reg-flag s src ((1 . 1)))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 2) (satadd (constant ? 32) (constant ? 0) src))
      (= (tmp 12) (zext (constant ? 32) (tmp 4) (constant ? 40)))
      (set-reg dst (tmp 12))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases ((tmp 2) (tmp 3) (tmp 4)))
      (reg-flag s src ((1 . 1)))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 2) (satadd (constant ? 32) (constant ? 0) src))
      (= (tmp 13) (sext (constant ? 32) (tmp 4) (constant ? 40)))
      (set-reg dst (tmp 13))))
  (pattern
    (constraints
      (allocate-in dst (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 brad0 brad1 brlen01 lpa cpa cdo cpo cdl cpl retpc pce bfn pref0 pref1 ipl01 isr0 isr1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 dmref dmmask dmaddr dmpc dmpcl1 dmpcc0 dmpcc1 ppc msgnr msgsl dirqpc trcd psid dmsd dmpcl0 pc))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases ((tmp 2) (tmp 3) (tmp 4)))
      (reg-flag s src ((1 . 1))))
    (code
      (= (tmp 2) (satadd (constant ? 32) (constant ? 0) src))
      (set-reg dst (tmp 4))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 brad0 brad1 brlen01 lpa cpa cdo cpo cdl cpl retpc pce bfn pref0 pref1 ipl01 isr0 isr1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 dmref dmmask dmaddr dmpc dmpcl1 dmpcc0 dmpcc1 ppc msgnr msgsl dirqpc trcd psid dmsd dmpcl0 pc))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 21) (zext (constant ? 32) src (constant ? 40)))
      (set-reg dst (tmp 21))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 brad0 brad1 brlen01 lpa cpa cdo cpo cdl cpl retpc pce bfn pref0 pref1 ipl01 isr0 isr1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 dmref dmmask dmaddr dmpc dmpcl1 dmpcc0 dmpcc1 ppc msgnr msgsl dirqpc trcd psid dmsd dmpcl0 pc))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 22) (sext (constant ? 32) src (constant ? 40)))
      (set-reg dst (tmp 22))))
  (pattern
    (constraints
      (allocate-in dst (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 brad0 brad1 brlen01 lpa cpa cdo cpo cdl cpl retpc pce bfn pref0 pref1 ipl01 isr0 isr1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 dmref dmmask dmaddr dmpc dmpcl1 dmpcc0 dmpcc1 ppc msgnr msgsl dirqpc trcd psid dmsd dmpcl0 pc))
      (allocate-in src (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 brad0 brad1 brlen01 lpa cpa cdo cpo cdl cpl retpc pce bfn pref0 pref1 ipl01 isr0 isr1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 dmref dmmask dmaddr dmpc dmpcl1 dmpcc0 dmpcc1 ppc msgnr msgsl dirqpc trcd psid dmsd dmpcl0 pc)))
    (code
      (set-reg dst src))))

(instruction
  rolc1_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ac dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 12) (reg-flag ms dst))
      (allocate-in (tmp 10) (reg-flag mi dst))
      (allocate-in (tmp 4) (reg-flag c src))
      (allocate-in (tmp 5) (reg-flag ag dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 16) (reg-flag op dst))
      (allocate-in (tmp 6) (reg-flag c dst))
      (allocate-in (tmp 14) (reg-flag ls dst)))
    (code
      (= (tmp 0) (add (constant ? 32) dst (constant ? 0)))
      (= (tmp 1) (reg-range dst (constant ? 1) (constant ? 31)))
      (= (tmp 2) (bit_and (constant ? 31) (tmp 0) (constant ? 65535)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (set-reg (tmp 5) (constant ? 0))
      (= (tmp 7) (lshr (constant ? 1) (tmp 0) (constant ? 30)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 14) (tmp 15))
      (= (tmp 17) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 17) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 18) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 16) (tmp 18)))))

(instruction
  copys_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 10) (reg-flag ex dst))
      (allocate-in (tmp 13) (reg-flag mi dst))
      (allocate-in (tmp 9) (reg-flag ex dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in (tmp 0) (reg-flag a dst))
      (allocate-in (tmp 6) (reg-flag ex dst)))
    (code
      (set-reg dst src)
      (= (tmp 1) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (icmp (constant ? 40) eq (tmp 4) (constant ? 0)))
      (br (tmp 5) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 6) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 8) (icmp (constant ? 40) eq (tmp 7) (constant ? -1)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 10) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 13) (tmp 14)))))

(instruction
  mv_r16_any32++
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 12) (zext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 12))
      (= (tmp 14) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 14))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (= (tmp 13) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 13))
      (= (tmp 14) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 14))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a01g a23g a45g a67g r01 r23 r45 r67 r89 r1011 r1213 r1415 m01 m23 balen0 balen1 balen2 balen3 dc01 dfdp brc12 lpa cpa retpc pref0 pref1 ac01 af1032 af5476 cnt pid pia cbd pr0 pr1 pc))
      (allocate-in (tmp 15) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (add (constant ? 32) rN (constant ? 1)))
      (= (tmp 4) (load-mem (constant ? 16) ldm (tmp 3)))
      (set-reg (tmp 2) (tmp 4))
      (set-reg dst dst)
      (= (tmp 14) (add (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 14))
      (= (tmp 16) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 16) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 17) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 15) (tmp 17)))))

(instruction
  sub2_a40_a40_a40h
  (pattern
    (constraints
      (allocate-in dst (a4 a5 a6 a7))
      (allocate-in (tmp 17) (reg-flag a dst))
      (allocate-in (tmp 19) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 14) (reg-flag a dst))
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in (tmp 25) (reg-flag mi dst))
      (allocate-in (tmp 23) (reg-flag ac dst))
      (allocate-in (tmp 16) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 20) (reg-flag ex dst)))
    (code
      (= (tmp 0) (- (constant ? 15) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 4) (satsub (tmp 1) (tmp 2) (tmp 3)))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 15)))
      (set-reg (tmp 5) (tmp 4))
      (= (tmp 6) (- (constant ? 31) (constant ? 16)))
      (= (tmp 7) (+ (constant ? 1) (tmp 6)))
      (= (tmp 8) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 9) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 10) (satsub (tmp 7) (tmp 8) (tmp 9)))
      (= (tmp 11) (reg-range dst (constant ? 16) (constant ? 31)))
      (set-reg (tmp 11) (tmp 10))
      (= (tmp 13) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (icmp (constant ? 40) eq (tmp 14) (constant ? 0)))
      (br (tmp 15) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 18) (icmp (constant ? 40) eq (tmp 17) (constant ? -1)))
      (br (tmp 18) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 19) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 20) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 21) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 22) (phi ((no-value . bb_3) ((tmp 21) . bb_4))))
      (= (tmp 24) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 23) (tmp 24))
      (= (tmp 26) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 25) (tmp 26)))))

(instruction
  copyz_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 10) (reg-flag ex dst))
      (allocate-in (tmp 13) (reg-flag mi dst))
      (allocate-in (tmp 9) (reg-flag ex dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in (tmp 0) (reg-flag a dst))
      (allocate-in (tmp 6) (reg-flag ex dst)))
    (code
      (set-reg dst src)
      (= (tmp 1) (zext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (icmp (constant ? 40) eq (tmp 4) (constant ? 0)))
      (br (tmp 5) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 6) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 8) (icmp (constant ? 40) eq (tmp 7) (constant ? -1)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 10) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 13) (tmp 14)))))

(instruction
  rev_a40_nimm5_nimm5_a40
  (pattern
    (constraints
      (allocate-in (tmp 102) (reg-flag ls dst))
      (allocate-in (tmp 95) (reg-flag ag dst))
      (immediate ww ((0 . 31)))
      (allocate-in (tmp 98) (reg-flag mi dst))
      (allocate-in (tmp 96) (reg-flag ac dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 100) (reg-flag ms dst))
      (allocate-in (tmp 104) (reg-flag op dst))
      (immediate ss ((0 . 31))))
    (code
      (= (tmp 0) (add (constant ? 32) ss ww))
      (= (tmp 1) (reg-range src ss (tmp 0)))
      (set-reg dst (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 31) (constant ? 31)))
      (= (tmp 3) (add (constant ? 1) (constant ? 0) (tmp 2)))
      (= (tmp 4) (reg-range dst (constant ? 30) (constant ? 30)))
      (= (tmp 5) (add (constant ? 1) (constant ? 0) (tmp 4)))
      (= (tmp 6) (reg-range dst (constant ? 29) (constant ? 29)))
      (= (tmp 7) (add (constant ? 1) (constant ? 0) (tmp 6)))
      (= (tmp 8) (reg-range dst (constant ? 28) (constant ? 28)))
      (= (tmp 9) (add (constant ? 1) (constant ? 0) (tmp 8)))
      (= (tmp 10) (reg-range dst (constant ? 27) (constant ? 27)))
      (= (tmp 11) (add (constant ? 1) (constant ? 0) (tmp 10)))
      (= (tmp 12) (reg-range dst (constant ? 26) (constant ? 26)))
      (= (tmp 13) (add (constant ? 1) (constant ? 0) (tmp 12)))
      (= (tmp 14) (reg-range dst (constant ? 25) (constant ? 25)))
      (= (tmp 15) (add (constant ? 1) (constant ? 0) (tmp 14)))
      (= (tmp 16) (reg-range dst (constant ? 24) (constant ? 24)))
      (= (tmp 17) (add (constant ? 1) (constant ? 0) (tmp 16)))
      (= (tmp 18) (reg-range dst (constant ? 23) (constant ? 23)))
      (= (tmp 19) (add (constant ? 1) (constant ? 0) (tmp 18)))
      (= (tmp 20) (reg-range dst (constant ? 22) (constant ? 22)))
      (= (tmp 21) (add (constant ? 1) (constant ? 0) (tmp 20)))
      (= (tmp 22) (reg-range dst (constant ? 21) (constant ? 21)))
      (= (tmp 23) (add (constant ? 1) (constant ? 0) (tmp 22)))
      (= (tmp 24) (reg-range dst (constant ? 20) (constant ? 20)))
      (= (tmp 25) (add (constant ? 1) (constant ? 0) (tmp 24)))
      (= (tmp 26) (reg-range dst (constant ? 19) (constant ? 19)))
      (= (tmp 27) (add (constant ? 1) (constant ? 0) (tmp 26)))
      (= (tmp 28) (reg-range dst (constant ? 18) (constant ? 18)))
      (= (tmp 29) (add (constant ? 1) (constant ? 0) (tmp 28)))
      (= (tmp 30) (reg-range dst (constant ? 17) (constant ? 17)))
      (= (tmp 31) (add (constant ? 1) (constant ? 0) (tmp 30)))
      (= (tmp 32) (reg-range dst (constant ? 16) (constant ? 16)))
      (= (tmp 33) (add (constant ? 1) (constant ? 0) (tmp 32)))
      (= (tmp 34) (reg-range dst (constant ? 15) (constant ? 15)))
      (= (tmp 35) (add (constant ? 1) (constant ? 0) (tmp 34)))
      (= (tmp 36) (reg-range dst (constant ? 14) (constant ? 14)))
      (= (tmp 37) (add (constant ? 1) (constant ? 0) (tmp 36)))
      (= (tmp 38) (reg-range dst (constant ? 13) (constant ? 13)))
      (= (tmp 39) (add (constant ? 1) (constant ? 0) (tmp 38)))
      (= (tmp 40) (reg-range dst (constant ? 12) (constant ? 12)))
      (= (tmp 41) (add (constant ? 1) (constant ? 0) (tmp 40)))
      (= (tmp 42) (reg-range dst (constant ? 11) (constant ? 11)))
      (= (tmp 43) (add (constant ? 1) (constant ? 0) (tmp 42)))
      (= (tmp 44) (reg-range dst (constant ? 10) (constant ? 10)))
      (= (tmp 45) (add (constant ? 1) (constant ? 0) (tmp 44)))
      (= (tmp 46) (reg-range dst (constant ? 9) (constant ? 9)))
      (= (tmp 47) (add (constant ? 1) (constant ? 0) (tmp 46)))
      (= (tmp 48) (reg-range dst (constant ? 8) (constant ? 8)))
      (= (tmp 49) (add (constant ? 1) (constant ? 0) (tmp 48)))
      (= (tmp 50) (reg-range dst (constant ? 7) (constant ? 7)))
      (= (tmp 51) (add (constant ? 1) (constant ? 0) (tmp 50)))
      (= (tmp 52) (reg-range dst (constant ? 6) (constant ? 6)))
      (= (tmp 53) (add (constant ? 1) (constant ? 0) (tmp 52)))
      (= (tmp 54) (reg-range dst (constant ? 5) (constant ? 5)))
      (= (tmp 55) (add (constant ? 1) (constant ? 0) (tmp 54)))
      (= (tmp 56) (reg-range dst (constant ? 4) (constant ? 4)))
      (= (tmp 57) (add (constant ? 1) (constant ? 0) (tmp 56)))
      (= (tmp 58) (reg-range dst (constant ? 3) (constant ? 3)))
      (= (tmp 59) (add (constant ? 1) (constant ? 0) (tmp 58)))
      (= (tmp 60) (reg-range dst (constant ? 2) (constant ? 2)))
      (= (tmp 61) (add (constant ? 1) (constant ? 0) (tmp 60)))
      (= (tmp 62) (reg-range dst (constant ? 1) (constant ? 1)))
      (= (tmp 63) (add (constant ? 1) (constant ? 0) (tmp 62)))
      (= (tmp 64) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 64) (tmp 3))
      (= (tmp 65) (reg-range dst (constant ? 1) (constant ? 1)))
      (set-reg (tmp 65) (tmp 5))
      (= (tmp 66) (reg-range dst (constant ? 2) (constant ? 2)))
      (set-reg (tmp 66) (tmp 7))
      (= (tmp 67) (reg-range dst (constant ? 3) (constant ? 3)))
      (set-reg (tmp 67) (tmp 9))
      (= (tmp 68) (reg-range dst (constant ? 4) (constant ? 4)))
      (set-reg (tmp 68) (tmp 11))
      (= (tmp 69) (reg-range dst (constant ? 5) (constant ? 5)))
      (set-reg (tmp 69) (tmp 13))
      (= (tmp 70) (reg-range dst (constant ? 6) (constant ? 6)))
      (set-reg (tmp 70) (tmp 15))
      (= (tmp 71) (reg-range dst (constant ? 7) (constant ? 7)))
      (set-reg (tmp 71) (tmp 17))
      (= (tmp 72) (reg-range dst (constant ? 8) (constant ? 8)))
      (set-reg (tmp 72) (tmp 19))
      (= (tmp 73) (reg-range dst (constant ? 9) (constant ? 9)))
      (set-reg (tmp 73) (tmp 21))
      (= (tmp 74) (reg-range dst (constant ? 10) (constant ? 10)))
      (set-reg (tmp 74) (tmp 23))
      (= (tmp 75) (reg-range dst (constant ? 11) (constant ? 11)))
      (set-reg (tmp 75) (tmp 25))
      (= (tmp 76) (reg-range dst (constant ? 12) (constant ? 12)))
      (set-reg (tmp 76) (tmp 27))
      (= (tmp 77) (reg-range dst (constant ? 13) (constant ? 13)))
      (set-reg (tmp 77) (tmp 29))
      (= (tmp 78) (reg-range dst (constant ? 14) (constant ? 14)))
      (set-reg (tmp 78) (tmp 31))
      (= (tmp 79) (reg-range dst (constant ? 15) (constant ? 15)))
      (set-reg (tmp 79) (tmp 33))
      (= (tmp 80) (reg-range dst (constant ? 16) (constant ? 16)))
      (set-reg (tmp 80) (tmp 35))
      (= (tmp 81) (reg-range dst (constant ? 17) (constant ? 17)))
      (set-reg (tmp 81) (tmp 37))
      (= (tmp 82) (reg-range dst (constant ? 18) (constant ? 18)))
      (set-reg (tmp 82) (tmp 39))
      (= (tmp 83) (reg-range dst (constant ? 19) (constant ? 19)))
      (set-reg (tmp 83) (tmp 41))
      (= (tmp 84) (reg-range dst (constant ? 20) (constant ? 20)))
      (set-reg (tmp 84) (tmp 43))
      (= (tmp 85) (reg-range dst (constant ? 21) (constant ? 21)))
      (set-reg (tmp 85) (tmp 45))
      (= (tmp 86) (reg-range dst (constant ? 22) (constant ? 22)))
      (set-reg (tmp 86) (tmp 47))
      (= (tmp 87) (reg-range dst (constant ? 23) (constant ? 23)))
      (set-reg (tmp 87) (tmp 49))
      (= (tmp 88) (reg-range dst (constant ? 24) (constant ? 24)))
      (set-reg (tmp 88) (tmp 51))
      (= (tmp 89) (reg-range dst (constant ? 25) (constant ? 25)))
      (set-reg (tmp 89) (tmp 53))
      (= (tmp 90) (reg-range dst (constant ? 26) (constant ? 26)))
      (set-reg (tmp 90) (tmp 55))
      (= (tmp 91) (reg-range dst (constant ? 27) (constant ? 27)))
      (set-reg (tmp 91) (tmp 57))
      (= (tmp 92) (reg-range dst (constant ? 28) (constant ? 28)))
      (set-reg (tmp 92) (tmp 59))
      (= (tmp 93) (reg-range dst (constant ? 29) (constant ? 29)))
      (set-reg (tmp 93) (tmp 61))
      (= (tmp 94) (reg-range dst (constant ? 30) (constant ? 30)))
      (set-reg (tmp 94) (tmp 63))
      (set-reg (tmp 95) (constant ? 0))
      (= (tmp 97) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 96) (tmp 97))
      (= (tmp 99) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 98) (tmp 99))
      (= (tmp 101) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 100) (tmp 101))
      (= (tmp 103) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 102) (tmp 103))
      (= (tmp 105) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 105) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 106) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 104) (tmp 106)))))

(instruction
  mac_nimm4_a40_a40_a40
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((0 . 0)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 127) (tmp 126)) ((tmp 123) (tmp 122)) ((tmp 128) (tmp 130) (tmp 129)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 122) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 126) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 128) (mul (constant ? 40) (tmp 123) (tmp 127)))
      (= (tmp 131) (add (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) slt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) slt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (add (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((0 . 0)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 125) (tmp 127)) ((tmp 123) (tmp 121)) ((tmp 128) (tmp 130) (tmp 129)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 121) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 125) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 128) (mul (constant ? 40) (tmp 123) (tmp 127)))
      (= (tmp 131) (add (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) slt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) slt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (add (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 88) (tmp 89)) ((tmp 85) (tmp 84)) ((tmp 130) (tmp 129) (tmp 91) (tmp 119) (tmp 118)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 84) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 88) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 90) (mul (constant ? 40) (tmp 85) (tmp 89)))
      (= (tmp 91) (shl (constant ? 40) (tmp 90) (constant ? 1)))
      (= (tmp 131) (add (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) slt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) slt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (add (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 87) (tmp 89)) ((tmp 85) (tmp 83)) ((tmp 130) (tmp 129) (tmp 91) (tmp 119) (tmp 118)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 83) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 87) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 90) (mul (constant ? 40) (tmp 85) (tmp 89)))
      (= (tmp 91) (shl (constant ? 40) (tmp 90) (constant ? 1)))
      (= (tmp 131) (add (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) slt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) slt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (add (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 77) (tmp 78)) ((tmp 73) (tmp 74)) ((tmp 79) (tmp 130) (tmp 129) (tmp 119)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 73) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 77) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 79) (mul (constant ? 40) (tmp 74) (tmp 78)))
      (= (tmp 131) (add (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) slt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) slt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (add (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 76) (tmp 78)) ((tmp 72) (tmp 74)) ((tmp 79) (tmp 130) (tmp 129) (tmp 119)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 72) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 76) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 79) (mul (constant ? 40) (tmp 74) (tmp 78)))
      (= (tmp 131) (add (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) slt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) slt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (add (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((0 . 0)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 65) (tmp 64)) ((tmp 61) (tmp 60)) ((tmp 67) (tmp 66) (tmp 130)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 60) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 64) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 66) (mul (constant ? 40) (tmp 61) (tmp 65)))
      (= (tmp 131) (add (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) slt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) slt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (add (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((0 . 0)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 63) (tmp 65)) ((tmp 59) (tmp 61)) ((tmp 67) (tmp 66) (tmp 130)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 59) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 63) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 66) (mul (constant ? 40) (tmp 61) (tmp 65)))
      (= (tmp 131) (add (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) slt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) slt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (add (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 27) (tmp 26)) ((tmp 22) (tmp 23)) ((tmp 67) (tmp 29) (tmp 57) (tmp 56) (tmp 130)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 22) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 26) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 28) (mul (constant ? 40) (tmp 23) (tmp 27)))
      (= (tmp 29) (shl (constant ? 40) (tmp 28) (constant ? 1)))
      (= (tmp 131) (add (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) slt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) slt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (add (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 27) (tmp 25)) ((tmp 21) (tmp 23)) ((tmp 67) (tmp 29) (tmp 57) (tmp 56) (tmp 130)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 21) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 25) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 28) (mul (constant ? 40) (tmp 23) (tmp 27)))
      (= (tmp 29) (shl (constant ? 40) (tmp 28) (constant ? 1)))
      (= (tmp 131) (add (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) slt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) slt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (add (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 15) (tmp 16)) ((tmp 11) (tmp 12)) ((tmp 67) (tmp 57) (tmp 17) (tmp 130)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 11) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 15) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 17) (mul (constant ? 40) (tmp 12) (tmp 16)))
      (= (tmp 131) (add (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) slt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) slt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (add (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 14) (tmp 16)) ((tmp 10) (tmp 12)) ((tmp 67) (tmp 57) (tmp 17) (tmp 130)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 10) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 14) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 17) (mul (constant ? 40) (tmp 12) (tmp 16)))
      (= (tmp 131) (add (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) slt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) slt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (add (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 264) (tmp 265)) ((tmp 260) (tmp 261)) ((tmp 268) (tmp 266) (tmp 267)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 260) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 264) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 266) (mul (constant ? 40) (tmp 261) (tmp 265)))
      (= (tmp 269) (add (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) slt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) slt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (add (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 263) (tmp 265)) ((tmp 261) (tmp 259)) ((tmp 268) (tmp 266) (tmp 267)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 259) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 263) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 266) (mul (constant ? 40) (tmp 261) (tmp 265)))
      (= (tmp 269) (add (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) slt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) slt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (add (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 227) (tmp 226)) ((tmp 223) (tmp 222)) ((tmp 268) (tmp 256) (tmp 257) (tmp 267) (tmp 229)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 222) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 226) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 228) (mul (constant ? 40) (tmp 223) (tmp 227)))
      (= (tmp 229) (shl (constant ? 40) (tmp 228) (constant ? 1)))
      (= (tmp 269) (add (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) slt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) slt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (add (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 227) (tmp 225)) ((tmp 221) (tmp 223)) ((tmp 268) (tmp 256) (tmp 257) (tmp 267) (tmp 229)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 221) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 225) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 228) (mul (constant ? 40) (tmp 223) (tmp 227)))
      (= (tmp 229) (shl (constant ? 40) (tmp 228) (constant ? 1)))
      (= (tmp 269) (add (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) slt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) slt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (add (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 216) (tmp 215)) ((tmp 211) (tmp 212)) ((tmp 268) (tmp 257) (tmp 267) (tmp 217)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 211) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 215) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 217) (mul (constant ? 40) (tmp 212) (tmp 216)))
      (= (tmp 269) (add (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) slt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) slt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (add (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 216) (tmp 214)) ((tmp 210) (tmp 212)) ((tmp 268) (tmp 257) (tmp 267) (tmp 217)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 210) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 214) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 217) (mul (constant ? 40) (tmp 212) (tmp 216)))
      (= (tmp 269) (add (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) slt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) slt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (add (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 202) (tmp 203)) ((tmp 198) (tmp 199)) ((tmp 268) (tmp 205) (tmp 204)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 198) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 202) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 204) (mul (constant ? 40) (tmp 199) (tmp 203)))
      (= (tmp 269) (add (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) slt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) slt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (add (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 201) (tmp 203)) ((tmp 197) (tmp 199)) ((tmp 268) (tmp 205) (tmp 204)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 197) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 201) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 204) (mul (constant ? 40) (tmp 199) (tmp 203)))
      (= (tmp 269) (add (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) slt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) slt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (add (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 165) (tmp 164)) ((tmp 161) (tmp 160)) ((tmp 268) (tmp 194) (tmp 195) (tmp 205) (tmp 167)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 160) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 164) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 166) (mul (constant ? 40) (tmp 161) (tmp 165)))
      (= (tmp 167) (shl (constant ? 40) (tmp 166) (constant ? 1)))
      (= (tmp 269) (add (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) slt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) slt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (add (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 163) (tmp 165)) ((tmp 159) (tmp 161)) ((tmp 268) (tmp 194) (tmp 195) (tmp 205) (tmp 167)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 159) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 163) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 166) (mul (constant ? 40) (tmp 161) (tmp 165)))
      (= (tmp 167) (shl (constant ? 40) (tmp 166) (constant ? 1)))
      (= (tmp 269) (add (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) slt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) slt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (add (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 153) (tmp 154)) ((tmp 150) (tmp 149)) ((tmp 268) (tmp 195) (tmp 205) (tmp 155)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 149) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 153) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 155) (mul (constant ? 40) (tmp 150) (tmp 154)))
      (= (tmp 269) (add (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) slt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) slt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (add (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 152) (tmp 154)) ((tmp 150) (tmp 148)) ((tmp 268) (tmp 195) (tmp 205) (tmp 155)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 148) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 152) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 155) (mul (constant ? 40) (tmp 150) (tmp 154)))
      (= (tmp 269) (add (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) slt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) slt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (add (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 404) (tmp 405)) ((tmp 400) (tmp 401)) ((tmp 408) (tmp 406) (tmp 407)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 400) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 404) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 406) (mul (constant ? 40) (tmp 401) (tmp 405)))
      (= (tmp 409) (add (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) slt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) slt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (add (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 403) (tmp 405)) ((tmp 399) (tmp 401)) ((tmp 408) (tmp 406) (tmp 407)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 399) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 403) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 406) (mul (constant ? 40) (tmp 401) (tmp 405)))
      (= (tmp 409) (add (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) slt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) slt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (add (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 367) (tmp 366)) ((tmp 363) (tmp 362)) ((tmp 408) (tmp 407) (tmp 396) (tmp 397) (tmp 369)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 362) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 366) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 368) (mul (constant ? 40) (tmp 363) (tmp 367)))
      (= (tmp 369) (shl (constant ? 40) (tmp 368) (constant ? 1)))
      (= (tmp 409) (add (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) slt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) slt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (add (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 365) (tmp 367)) ((tmp 363) (tmp 361)) ((tmp 408) (tmp 407) (tmp 396) (tmp 397) (tmp 369)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 361) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 365) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 368) (mul (constant ? 40) (tmp 363) (tmp 367)))
      (= (tmp 369) (shl (constant ? 40) (tmp 368) (constant ? 1)))
      (= (tmp 409) (add (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) slt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) slt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (add (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 356) (tmp 355)) ((tmp 351) (tmp 352)) ((tmp 408) (tmp 407) (tmp 397) (tmp 357)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 351) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 355) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 357) (mul (constant ? 40) (tmp 352) (tmp 356)))
      (= (tmp 409) (add (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) slt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) slt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (add (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 356) (tmp 354)) ((tmp 350) (tmp 352)) ((tmp 408) (tmp 407) (tmp 397) (tmp 357)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 350) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 354) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 357) (mul (constant ? 40) (tmp 352) (tmp 356)))
      (= (tmp 409) (add (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) slt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) slt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (add (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 343) (tmp 342)) ((tmp 338) (tmp 339)) ((tmp 408) (tmp 345) (tmp 344)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 338) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 342) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 344) (mul (constant ? 40) (tmp 339) (tmp 343)))
      (= (tmp 409) (add (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) slt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) slt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (add (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 341) (tmp 343)) ((tmp 339) (tmp 337)) ((tmp 408) (tmp 345) (tmp 344)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 337) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 341) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 344) (mul (constant ? 40) (tmp 339) (tmp 343)))
      (= (tmp 409) (add (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) slt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) slt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (add (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 305) (tmp 304)) ((tmp 301) (tmp 300)) ((tmp 334) (tmp 335) (tmp 307) (tmp 408) (tmp 345)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 300) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 304) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 306) (mul (constant ? 40) (tmp 301) (tmp 305)))
      (= (tmp 307) (shl (constant ? 40) (tmp 306) (constant ? 1)))
      (= (tmp 409) (add (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) slt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) slt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (add (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 303) (tmp 305)) ((tmp 301) (tmp 299)) ((tmp 334) (tmp 335) (tmp 307) (tmp 408) (tmp 345)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 299) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 303) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 306) (mul (constant ? 40) (tmp 301) (tmp 305)))
      (= (tmp 307) (shl (constant ? 40) (tmp 306) (constant ? 1)))
      (= (tmp 409) (add (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) slt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) slt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (add (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 293) (tmp 294)) ((tmp 290) (tmp 289)) ((tmp 335) (tmp 295) (tmp 408) (tmp 345)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 289) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 293) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 295) (mul (constant ? 40) (tmp 290) (tmp 294)))
      (= (tmp 409) (add (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) slt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) slt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (add (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 292) (tmp 294)) ((tmp 290) (tmp 288)) ((tmp 335) (tmp 295) (tmp 408) (tmp 345)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 288) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 292) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 295) (mul (constant ? 40) (tmp 290) (tmp 294)))
      (= (tmp 409) (add (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) slt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) slt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (add (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 542) (tmp 543)) ((tmp 538) (tmp 539)) ((tmp 545) (tmp 544) (tmp 546)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 538) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 542) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 544) (mul (constant ? 40) (tmp 539) (tmp 543)))
      (= (tmp 547) (add (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) slt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) slt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (add (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 541) (tmp 543)) ((tmp 539) (tmp 537)) ((tmp 545) (tmp 544) (tmp 546)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 537) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 541) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 544) (mul (constant ? 40) (tmp 539) (tmp 543)))
      (= (tmp 547) (add (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) slt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) slt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (add (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 505) (tmp 504)) ((tmp 501) (tmp 500)) ((tmp 545) (tmp 535) (tmp 534) (tmp 546) (tmp 507)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 500) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 504) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 506) (mul (constant ? 40) (tmp 501) (tmp 505)))
      (= (tmp 507) (shl (constant ? 40) (tmp 506) (constant ? 1)))
      (= (tmp 547) (add (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) slt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) slt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (add (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 505) (tmp 503)) ((tmp 501) (tmp 499)) ((tmp 545) (tmp 535) (tmp 534) (tmp 546) (tmp 507)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 499) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 503) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 506) (mul (constant ? 40) (tmp 501) (tmp 505)))
      (= (tmp 507) (shl (constant ? 40) (tmp 506) (constant ? 1)))
      (= (tmp 547) (add (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) slt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) slt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (add (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 494) (tmp 493)) ((tmp 490) (tmp 489)) ((tmp 545) (tmp 535) (tmp 546) (tmp 495)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 489) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 493) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 495) (mul (constant ? 40) (tmp 490) (tmp 494)))
      (= (tmp 547) (add (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) slt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) slt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (add (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 494) (tmp 492)) ((tmp 490) (tmp 488)) ((tmp 545) (tmp 535) (tmp 546) (tmp 495)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 488) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 492) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 495) (mul (constant ? 40) (tmp 490) (tmp 494)))
      (= (tmp 547) (add (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) slt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) slt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (add (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 481) (tmp 480)) ((tmp 477) (tmp 476)) ((tmp 546) (tmp 483) (tmp 482)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 476) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 480) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 482) (mul (constant ? 40) (tmp 477) (tmp 481)))
      (= (tmp 547) (add (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) slt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) slt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (add (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 479) (tmp 481)) ((tmp 477) (tmp 475)) ((tmp 546) (tmp 483) (tmp 482)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 475) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 479) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 482) (mul (constant ? 40) (tmp 477) (tmp 481)))
      (= (tmp 547) (add (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) slt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) slt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (add (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 443) (tmp 442)) ((tmp 439) (tmp 438)) ((tmp 445) (tmp 546) (tmp 483) (tmp 473) (tmp 472)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 438) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 442) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 444) (mul (constant ? 40) (tmp 439) (tmp 443)))
      (= (tmp 445) (shl (constant ? 40) (tmp 444) (constant ? 1)))
      (= (tmp 547) (add (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) slt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) slt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (add (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 441) (tmp 443)) ((tmp 439) (tmp 437)) ((tmp 445) (tmp 546) (tmp 483) (tmp 473) (tmp 472)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 437) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 441) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 444) (mul (constant ? 40) (tmp 439) (tmp 443)))
      (= (tmp 445) (shl (constant ? 40) (tmp 444) (constant ? 1)))
      (= (tmp 547) (add (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) slt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) slt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (add (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 431) (tmp 432)) ((tmp 427) (tmp 428)) ((tmp 433) (tmp 546) (tmp 483) (tmp 473)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 427) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 431) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 433) (mul (constant ? 40) (tmp 428) (tmp 432)))
      (= (tmp 547) (add (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) slt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) slt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (add (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 430) (tmp 432)) ((tmp 426) (tmp 428)) ((tmp 433) (tmp 546) (tmp 483) (tmp 473)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 426) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 430) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 433) (mul (constant ? 40) (tmp 428) (tmp 432)))
      (= (tmp 547) (add (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) slt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) slt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (add (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570)))))

(instruction
  pref64
  (pattern
    (constraints
      (allocate-in aN (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range aN (constant ? 0) (constant ? 31)))
      (= (tmp 1) (icmp ult (constant ? 32) (tmp 0) (register cdl)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (add (constant ? 32) (tmp 0) (register cdo)))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi (((tmp 2) . bb_0) ((tmp 0) . bb_1))))
      (set-reg (register cmtype) (constant ? 15))
      (= (tmp 4) (load-mem (constant ? 16) cm (tmp 3)))
      (set-reg (register pref1h) (tmp 4))
      (= (tmp 5) (add (constant ? 32) (tmp 3) (constant ? 1)))
      (= (tmp 6) (load-mem (constant ? 16) cm (tmp 5)))
      (set-reg (register pref1l) (tmp 6))
      (= (tmp 7) (add (constant ? 32) (tmp 3) (constant ? 2)))
      (= (tmp 8) (load-mem (constant ? 16) cm (tmp 7)))
      (set-reg (register pref0h) (tmp 8))
      (= (tmp 9) (add (constant ? 32) (tmp 3) (constant ? 3)))
      (= (tmp 10) (load-mem (constant ? 16) cm (tmp 9)))
      (set-reg (register pref0l) (tmp 10)))))

(instruction
  rorc1_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 17) (reg-flag op dst))
      (allocate-in (tmp 9) (reg-flag ac dst))
      (allocate-in (tmp 11) (reg-flag mi dst))
      (allocate-in (tmp 5) (reg-flag c src))
      (allocate-in (tmp 7) (reg-flag c dst))
      (allocate-in (tmp 15) (reg-flag ls dst))
      (allocate-in (tmp 13) (reg-flag ms dst))
      (allocate-in (tmp 6) (reg-flag ag dst)))
    (code
      (= (tmp 0) (add (constant ? 32) dst (constant ? 0)))
      (= (tmp 1) (reg-range dst (constant ? 0) (constant ? 30)))
      (= (tmp 2) (lshr (constant ? 32) (tmp 0) (constant ? 1)))
      (= (tmp 3) (bit_and (constant ? 31) (tmp 2) (constant ? 65535)))
      (set-reg (tmp 1) (tmp 3))
      (= (tmp 4) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 4) (tmp 5))
      (set-reg (tmp 6) (constant ? 0))
      (= (tmp 8) (bit_and (constant ? 1) (tmp 0) (constant ? 1)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 14) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 13) (tmp 14))
      (= (tmp 16) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 15) (tmp 16))
      (= (tmp 18) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 18) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 19) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 17) (tmp 19)))))

(instruction
  divs_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag a dst))
      (allocate-in (tmp 10) (reg-flag ex dst))
      (allocate-in (tmp 17) (reg-flag mi dst))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 14) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 6) (reg-flag ac dst))
      (allocate-in (tmp 11) (reg-flag a dst)))
    (code
      (= (tmp 0) (icmp slt (constant ? 40) dst src))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (shl (constant ? 40) dst (constant ? 1)))
      (set-reg dst (tmp 1))
      (br bb_2)
      (label bb_1)
      (= (tmp 2) (sub (constant ? 40) dst src))
      (= (tmp 3) (shl (constant ? 40) (tmp 2) (constant ? 1)))
      (set-reg dst (tmp 3))
      (= (tmp 4) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (icmp (constant ? 40) eq (tmp 8) (constant ? 0)))
      (br (tmp 9) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 10) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 12) (icmp (constant ? 40) eq (tmp 11) (constant ? -1)))
      (br (tmp 12) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 14) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 15) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) ((tmp 15) . bb_7))))
      (= (tmp 18) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 17) (tmp 18)))))

(instruction
  bupackh_a16h_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in (tmp 18) (reg-flag mi dst))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag ex dst))
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in (tmp 7) (reg-flag ac dst))
      (allocate-in (tmp 15) (reg-flag ex dst))
      (allocate-in (tmp 11) (reg-flag ex dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (constant ? 0))
      (= (tmp 1) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 2) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 23)))
      (set-reg (tmp 3) (constant ? 0))
      (= (tmp 4) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 5) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 6) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 6))
      (= (tmp 8) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? 0)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 13) (icmp (constant ? 40) eq (tmp 12) (constant ? -1)))
      (br (tmp 13) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 16) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 17) (phi ((no-value . bb_3) ((tmp 16) . bb_4))))
      (= (tmp 19) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 18) (tmp 19)))))

(instruction
  mod16
  (pattern
    (constraints
      (allocate-in (tmp 3) (reg-flag of (register a4h)))
      (allocate-in (tmp 0) (reg-flag ag (register a4h)))
      (allocate-in (tmp 6) (reg-flag ac (register a4h)))
      (allocate-in (tmp 1) (reg-flag al (register a4h))))
    (code
      (set-reg (tmp 0) (constant ? 0))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 2) (icmp (constant ? 16) eq (register a5h) (constant ? 0)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg (register a4h) (constant ? 0))
      (set-reg (tmp 3) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (= (tmp 4) (urem (constant ? 16) (register a4h) (register a5h)))
      (set-reg (register a4h) (tmp 4))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (icmp eq (constant ? 80) (register a4h) (constant ? 0)))
      (set-reg (tmp 6) (tmp 7)))))

(instruction
  subs_a16_a16_a16
  (pattern
    (constraints
      (allocate-in (tmp 41) (reg-flag mi dst))
      (allocate-in (tmp 33) (reg-flag a dst))
      (allocate-in (tmp 39) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 36) (reg-flag ex dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 11) (reg-flag c dst))
      (allocate-in (tmp 10) (reg-flag c dst))
      (allocate-in (tmp 32) (reg-flag ex dst))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in (tmp 3) (reg-flag of dst))
      (allocate-in (tmp 6) (reg-flag of dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 30) (reg-flag a dst)))
    (code
      (= (tmp 1) (sub (constant ? 16) src1 src2))
      (= (tmp 2) (icmp (constant ? 16) sgt (tmp 1) src1))
      (br (tmp 2) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 3) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 4) (icmp (constant ? 16) sgt (tmp 1) src2))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 6) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 8) (phi ((no-value . bb_3) ((tmp 7) . bb_4))))
      (= (tmp 9) (icmp (constant ? 17) slt (constant ? 0) (tmp 1)))
      (br (tmp 9) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 10) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 11) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 12) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 13) (satsub (constant ? 16) src1 src2))
      (set-reg dst (tmp 13))
      (set-reg dst no-value)
      (= (tmp 31) (icmp (constant ? 40) eq (tmp 30) (constant ? 0)))
      (br (tmp 31) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 32) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 34) (icmp (constant ? 40) eq (tmp 33) (constant ? -1)))
      (br (tmp 34) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 35) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 36) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 37) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 38) (phi ((no-value . bb_21) ((tmp 37) . bb_22))))
      (= (tmp 40) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 39) (tmp 40))
      (= (tmp 42) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 41) (tmp 42))))
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag a dst))
      (allocate-in (tmp 39) (reg-flag ac dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in (tmp 36) (reg-flag ex dst))
      (allocate-in (tmp 30) (reg-flag a dst))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 11) (reg-flag c dst))
      (allocate-in (tmp 10) (reg-flag c dst))
      (allocate-in (tmp 32) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag a dst))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in (tmp 3) (reg-flag of dst))
      (allocate-in (tmp 6) (reg-flag of dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 41) (reg-flag mi dst)))
    (code
      (= (tmp 1) (sub (constant ? 16) src1 src2))
      (= (tmp 2) (icmp (constant ? 16) sgt (tmp 1) src1))
      (br (tmp 2) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 3) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 4) (icmp (constant ? 16) sgt (tmp 1) src2))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 6) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 8) (phi ((no-value . bb_3) ((tmp 7) . bb_4))))
      (= (tmp 9) (icmp (constant ? 17) slt (constant ? 0) (tmp 1)))
      (br (tmp 9) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 10) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 11) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 12) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 13) (satsub (constant ? 16) src1 src2))
      (set-reg dst (tmp 13))
      (set-reg dst no-value)
      (= (tmp 28) (reg-range (tmp 27) (constant ? 16) (constant ? 39)))
      (= (tmp 29) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 28) (tmp 29))
      (= (tmp 31) (icmp (constant ? 40) eq (tmp 30) (constant ? 0)))
      (br (tmp 31) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 32) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 34) (icmp (constant ? 40) eq (tmp 33) (constant ? -1)))
      (br (tmp 34) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 35) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 36) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 37) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 38) (phi ((no-value . bb_21) ((tmp 37) . bb_22))))
      (= (tmp 40) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 39) (tmp 40))
      (= (tmp 42) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 41) (tmp 42))))
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag a dst))
      (allocate-in (tmp 18) (reg-flag of dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in (tmp 36) (reg-flag ex dst))
      (allocate-in (tmp 39) (reg-flag ac dst))
      (allocate-in (tmp 30) (reg-flag a dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 23) (reg-flag c dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 24) (reg-flag c dst))
      (allocate-in (tmp 32) (reg-flag ex dst))
      (allocate-in (tmp 19) (reg-flag of dst))
      (allocate-in (tmp 16) (reg-flag of dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 41) (reg-flag mi dst)))
    (code
      (= (tmp 14) (sub (constant ? 16) src1 src2))
      (= (tmp 15) (icmp (constant ? 16) sgt (tmp 14) src1))
      (br (tmp 15) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 17) (icmp (constant ? 16) sgt (tmp 14) src2))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 18) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 19) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 20) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 21) (phi ((no-value . bb_12) ((tmp 20) . bb_13))))
      (= (tmp 22) (icmp (constant ? 17) slt (constant ? 0) (tmp 14)))
      (br (tmp 22) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 24) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 25) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 26) (sub (constant ? 16) src1 src2))
      (set-reg dst (tmp 26))
      (set-reg dst no-value)
      (= (tmp 31) (icmp (constant ? 40) eq (tmp 30) (constant ? 0)))
      (br (tmp 31) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 32) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 34) (icmp (constant ? 40) eq (tmp 33) (constant ? -1)))
      (br (tmp 34) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 35) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 36) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 37) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 38) (phi ((no-value . bb_21) ((tmp 37) . bb_22))))
      (= (tmp 40) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 39) (tmp 40))
      (= (tmp 42) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 41) (tmp 42))))
  (pattern
    (constraints
      (allocate-in (tmp 27) (reg-flag a dst))
      (allocate-in (tmp 33) (reg-flag a dst))
      (allocate-in (tmp 18) (reg-flag of dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in (tmp 36) (reg-flag ex dst))
      (allocate-in (tmp 39) (reg-flag ac dst))
      (allocate-in (tmp 30) (reg-flag a dst))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 23) (reg-flag c dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 24) (reg-flag c dst))
      (allocate-in (tmp 32) (reg-flag ex dst))
      (allocate-in (tmp 19) (reg-flag of dst))
      (allocate-in (tmp 16) (reg-flag of dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 41) (reg-flag mi dst)))
    (code
      (= (tmp 14) (sub (constant ? 16) src1 src2))
      (= (tmp 15) (icmp (constant ? 16) sgt (tmp 14) src1))
      (br (tmp 15) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 17) (icmp (constant ? 16) sgt (tmp 14) src2))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 18) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 19) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 20) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 21) (phi ((no-value . bb_12) ((tmp 20) . bb_13))))
      (= (tmp 22) (icmp (constant ? 17) slt (constant ? 0) (tmp 14)))
      (br (tmp 22) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 24) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 25) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 26) (sub (constant ? 16) src1 src2))
      (set-reg dst (tmp 26))
      (set-reg dst no-value)
      (= (tmp 28) (reg-range (tmp 27) (constant ? 16) (constant ? 39)))
      (= (tmp 29) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 28) (tmp 29))
      (= (tmp 31) (icmp (constant ? 40) eq (tmp 30) (constant ? 0)))
      (br (tmp 31) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 32) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 34) (icmp (constant ? 40) eq (tmp 33) (constant ? -1)))
      (br (tmp 34) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 35) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 36) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 37) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 38) (phi ((no-value . bb_21) ((tmp 37) . bb_22))))
      (= (tmp 40) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 39) (tmp 40))
      (= (tmp 42) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 41) (tmp 42)))))

(instruction
  mas_nimm4_a40_a40_a40
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((0 . 0)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 127) (tmp 126)) ((tmp 123) (tmp 122)) ((tmp 128) (tmp 130) (tmp 129)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 122) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 126) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 128) (mul (constant ? 40) (tmp 123) (tmp 127)))
      (= (tmp 131) (sub (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) sgt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) sgt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (sub (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((0 . 0)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 125) (tmp 127)) ((tmp 123) (tmp 121)) ((tmp 128) (tmp 130) (tmp 129)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 121) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 125) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 128) (mul (constant ? 40) (tmp 123) (tmp 127)))
      (= (tmp 131) (sub (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) sgt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) sgt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (sub (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 88) (tmp 89)) ((tmp 85) (tmp 84)) ((tmp 130) (tmp 129) (tmp 91) (tmp 119) (tmp 118)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 84) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 88) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 90) (mul (constant ? 40) (tmp 85) (tmp 89)))
      (= (tmp 91) (shl (constant ? 40) (tmp 90) (constant ? 1)))
      (= (tmp 131) (sub (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) sgt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) sgt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (sub (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 87) (tmp 89)) ((tmp 85) (tmp 83)) ((tmp 130) (tmp 129) (tmp 91) (tmp 119) (tmp 118)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 83) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 87) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 90) (mul (constant ? 40) (tmp 85) (tmp 89)))
      (= (tmp 91) (shl (constant ? 40) (tmp 90) (constant ? 1)))
      (= (tmp 131) (sub (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) sgt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) sgt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (sub (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 77) (tmp 78)) ((tmp 73) (tmp 74)) ((tmp 79) (tmp 130) (tmp 129) (tmp 119)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 73) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 77) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 79) (mul (constant ? 40) (tmp 74) (tmp 78)))
      (= (tmp 131) (sub (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) sgt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) sgt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (sub (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 76) (tmp 78)) ((tmp 72) (tmp 74)) ((tmp 79) (tmp 130) (tmp 129) (tmp 119)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 72) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 76) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 79) (mul (constant ? 40) (tmp 74) (tmp 78)))
      (= (tmp 131) (sub (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) sgt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) sgt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (sub (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((0 . 0)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 65) (tmp 64)) ((tmp 61) (tmp 60)) ((tmp 67) (tmp 66) (tmp 130)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 60) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 64) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 66) (mul (constant ? 40) (tmp 61) (tmp 65)))
      (= (tmp 131) (sub (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) sgt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) sgt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (sub (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((0 . 0)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 63) (tmp 65)) ((tmp 59) (tmp 61)) ((tmp 67) (tmp 66) (tmp 130)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 59) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 63) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 66) (mul (constant ? 40) (tmp 61) (tmp 65)))
      (= (tmp 131) (sub (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) sgt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) sgt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (sub (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 27) (tmp 26)) ((tmp 22) (tmp 23)) ((tmp 67) (tmp 29) (tmp 57) (tmp 56) (tmp 130)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 22) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 26) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 28) (mul (constant ? 40) (tmp 23) (tmp 27)))
      (= (tmp 29) (shl (constant ? 40) (tmp 28) (constant ? 1)))
      (= (tmp 131) (sub (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) sgt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) sgt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (sub (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 27) (tmp 25)) ((tmp 21) (tmp 23)) ((tmp 67) (tmp 29) (tmp 57) (tmp 56) (tmp 130)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 21) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 25) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 28) (mul (constant ? 40) (tmp 23) (tmp 27)))
      (= (tmp 29) (shl (constant ? 40) (tmp 28) (constant ? 1)))
      (= (tmp 131) (sub (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) sgt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) sgt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (sub (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 15) (tmp 16)) ((tmp 11) (tmp 12)) ((tmp 67) (tmp 57) (tmp 17) (tmp 130)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 11) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 15) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 17) (mul (constant ? 40) (tmp 12) (tmp 16)))
      (= (tmp 131) (sub (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) sgt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) sgt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (sub (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (allocate-in (tmp 133) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 14) (tmp 16)) ((tmp 10) (tmp 12)) ((tmp 67) (tmp 57) (tmp 17) (tmp 130)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 135) (reg-flag of dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 136) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 10) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 14) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 17) (mul (constant ? 40) (tmp 12) (tmp 16)))
      (= (tmp 131) (sub (constant ? 40) dst (tmp 130)))
      (= (tmp 132) (icmp (constant ? 40) sgt (tmp 131) dst))
      (br (tmp 132) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 133) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 134) (icmp (constant ? 40) sgt (tmp 131) (tmp 130)))
      (br (tmp 134) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 135) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 136) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 137) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 138) (phi ((no-value . bb_3) ((tmp 137) . bb_4))))
      (= (tmp 139) (sub (constant ? 40) dst (tmp 130)))
      (set-reg dst (tmp 139))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 264) (tmp 265)) ((tmp 260) (tmp 261)) ((tmp 268) (tmp 266) (tmp 267)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 260) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 264) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 266) (mul (constant ? 40) (tmp 261) (tmp 265)))
      (= (tmp 269) (sub (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) sgt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) sgt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (sub (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 263) (tmp 265)) ((tmp 261) (tmp 259)) ((tmp 268) (tmp 266) (tmp 267)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 259) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 263) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 266) (mul (constant ? 40) (tmp 261) (tmp 265)))
      (= (tmp 269) (sub (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) sgt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) sgt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (sub (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 227) (tmp 226)) ((tmp 223) (tmp 222)) ((tmp 268) (tmp 256) (tmp 257) (tmp 267) (tmp 229)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 222) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 226) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 228) (mul (constant ? 40) (tmp 223) (tmp 227)))
      (= (tmp 229) (shl (constant ? 40) (tmp 228) (constant ? 1)))
      (= (tmp 269) (sub (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) sgt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) sgt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (sub (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 227) (tmp 225)) ((tmp 221) (tmp 223)) ((tmp 268) (tmp 256) (tmp 257) (tmp 267) (tmp 229)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 221) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 225) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 228) (mul (constant ? 40) (tmp 223) (tmp 227)))
      (= (tmp 229) (shl (constant ? 40) (tmp 228) (constant ? 1)))
      (= (tmp 269) (sub (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) sgt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) sgt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (sub (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 216) (tmp 215)) ((tmp 211) (tmp 212)) ((tmp 268) (tmp 257) (tmp 267) (tmp 217)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 211) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 215) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 217) (mul (constant ? 40) (tmp 212) (tmp 216)))
      (= (tmp 269) (sub (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) sgt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) sgt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (sub (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 216) (tmp 214)) ((tmp 210) (tmp 212)) ((tmp 268) (tmp 257) (tmp 267) (tmp 217)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 210) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 214) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 217) (mul (constant ? 40) (tmp 212) (tmp 216)))
      (= (tmp 269) (sub (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) sgt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) sgt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (sub (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 202) (tmp 203)) ((tmp 198) (tmp 199)) ((tmp 268) (tmp 205) (tmp 204)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 198) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 202) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 204) (mul (constant ? 40) (tmp 199) (tmp 203)))
      (= (tmp 269) (sub (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) sgt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) sgt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (sub (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 201) (tmp 203)) ((tmp 197) (tmp 199)) ((tmp 268) (tmp 205) (tmp 204)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 197) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 201) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 204) (mul (constant ? 40) (tmp 199) (tmp 203)))
      (= (tmp 269) (sub (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) sgt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) sgt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (sub (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 165) (tmp 164)) ((tmp 161) (tmp 160)) ((tmp 268) (tmp 194) (tmp 195) (tmp 205) (tmp 167)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 160) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 164) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 166) (mul (constant ? 40) (tmp 161) (tmp 165)))
      (= (tmp 167) (shl (constant ? 40) (tmp 166) (constant ? 1)))
      (= (tmp 269) (sub (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) sgt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) sgt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (sub (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 163) (tmp 165)) ((tmp 159) (tmp 161)) ((tmp 268) (tmp 194) (tmp 195) (tmp 205) (tmp 167)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 159) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 163) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 166) (mul (constant ? 40) (tmp 161) (tmp 165)))
      (= (tmp 167) (shl (constant ? 40) (tmp 166) (constant ? 1)))
      (= (tmp 269) (sub (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) sgt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) sgt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (sub (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 153) (tmp 154)) ((tmp 150) (tmp 149)) ((tmp 268) (tmp 195) (tmp 205) (tmp 155)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 149) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 153) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 155) (mul (constant ? 40) (tmp 150) (tmp 154)))
      (= (tmp 269) (sub (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) sgt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) sgt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (sub (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 274) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 273) (reg-flag of dst))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 152) (tmp 154)) ((tmp 150) (tmp 148)) ((tmp 268) (tmp 195) (tmp 205) (tmp 155)) ((tmp 278) (tmp 557)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 271) (reg-flag of dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 148) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 152) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 155) (mul (constant ? 40) (tmp 150) (tmp 154)))
      (= (tmp 269) (sub (constant ? 40) dst (tmp 268)))
      (= (tmp 270) (icmp (constant ? 40) sgt (tmp 269) dst))
      (br (tmp 270) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 271) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 272) (icmp (constant ? 40) sgt (tmp 269) (tmp 268)))
      (br (tmp 272) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 273) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 274) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 275) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 276) (phi ((no-value . bb_9) ((tmp 275) . bb_10))))
      (= (tmp 277) (sub (constant ? 40) dst (tmp 268)))
      (set-reg dst (tmp 277))
      (= (tmp 278) (trunc (constant ? 64) no-value (constant ? 40)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 404) (tmp 405)) ((tmp 400) (tmp 401)) ((tmp 408) (tmp 406) (tmp 407)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 400) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 404) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 406) (mul (constant ? 40) (tmp 401) (tmp 405)))
      (= (tmp 409) (sub (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) sgt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) sgt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (sub (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 403) (tmp 405)) ((tmp 399) (tmp 401)) ((tmp 408) (tmp 406) (tmp 407)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 399) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 403) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 406) (mul (constant ? 40) (tmp 401) (tmp 405)))
      (= (tmp 409) (sub (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) sgt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) sgt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (sub (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 367) (tmp 366)) ((tmp 363) (tmp 362)) ((tmp 408) (tmp 407) (tmp 396) (tmp 397) (tmp 369)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 362) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 366) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 368) (mul (constant ? 40) (tmp 363) (tmp 367)))
      (= (tmp 369) (shl (constant ? 40) (tmp 368) (constant ? 1)))
      (= (tmp 409) (sub (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) sgt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) sgt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (sub (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 365) (tmp 367)) ((tmp 363) (tmp 361)) ((tmp 408) (tmp 407) (tmp 396) (tmp 397) (tmp 369)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 361) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 365) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 368) (mul (constant ? 40) (tmp 363) (tmp 367)))
      (= (tmp 369) (shl (constant ? 40) (tmp 368) (constant ? 1)))
      (= (tmp 409) (sub (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) sgt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) sgt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (sub (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 356) (tmp 355)) ((tmp 351) (tmp 352)) ((tmp 408) (tmp 407) (tmp 397) (tmp 357)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 351) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 355) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 357) (mul (constant ? 40) (tmp 352) (tmp 356)))
      (= (tmp 409) (sub (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) sgt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) sgt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (sub (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 356) (tmp 354)) ((tmp 350) (tmp 352)) ((tmp 408) (tmp 407) (tmp 397) (tmp 357)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 350) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 354) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 357) (mul (constant ? 40) (tmp 352) (tmp 356)))
      (= (tmp 409) (sub (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) sgt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) sgt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (sub (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 343) (tmp 342)) ((tmp 338) (tmp 339)) ((tmp 408) (tmp 345) (tmp 344)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 338) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 342) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 344) (mul (constant ? 40) (tmp 339) (tmp 343)))
      (= (tmp 409) (sub (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) sgt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) sgt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (sub (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 341) (tmp 343)) ((tmp 339) (tmp 337)) ((tmp 408) (tmp 345) (tmp 344)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 337) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 341) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 344) (mul (constant ? 40) (tmp 339) (tmp 343)))
      (= (tmp 409) (sub (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) sgt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) sgt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (sub (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 305) (tmp 304)) ((tmp 301) (tmp 300)) ((tmp 334) (tmp 335) (tmp 307) (tmp 408) (tmp 345)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 300) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 304) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 306) (mul (constant ? 40) (tmp 301) (tmp 305)))
      (= (tmp 307) (shl (constant ? 40) (tmp 306) (constant ? 1)))
      (= (tmp 409) (sub (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) sgt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) sgt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (sub (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 303) (tmp 305)) ((tmp 301) (tmp 299)) ((tmp 334) (tmp 335) (tmp 307) (tmp 408) (tmp 345)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 299) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 303) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 306) (mul (constant ? 40) (tmp 301) (tmp 305)))
      (= (tmp 307) (shl (constant ? 40) (tmp 306) (constant ? 1)))
      (= (tmp 409) (sub (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) sgt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) sgt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (sub (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 293) (tmp 294)) ((tmp 290) (tmp 289)) ((tmp 335) (tmp 295) (tmp 408) (tmp 345)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 289) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 293) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 295) (mul (constant ? 40) (tmp 290) (tmp 294)))
      (= (tmp 409) (sub (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) sgt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) sgt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (sub (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (allocate-in (tmp 414) (reg-flag of dst))
      (allocate-in (tmp 411) (reg-flag of dst))
      (immediate sat-mode ((1 . 1)))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 292) (tmp 294)) ((tmp 290) (tmp 288)) ((tmp 335) (tmp 295) (tmp 408) (tmp 345)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 413) (reg-flag of dst))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 560) (reg-flag a dst))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 288) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 292) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 295) (mul (constant ? 40) (tmp 290) (tmp 294)))
      (= (tmp 409) (sub (constant ? 40) dst (tmp 408)))
      (= (tmp 410) (icmp (constant ? 40) sgt (tmp 409) dst))
      (br (tmp 410) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 411) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 412) (icmp (constant ? 40) sgt (tmp 409) (tmp 408)))
      (br (tmp 412) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 413) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 414) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 415) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 416) (phi ((no-value . bb_15) ((tmp 415) . bb_16))))
      (= (tmp 417) (sub (constant ? 40) dst (tmp 408)))
      (set-reg dst (tmp 417))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 542) (tmp 543)) ((tmp 538) (tmp 539)) ((tmp 545) (tmp 544) (tmp 546)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 538) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 542) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 544) (mul (constant ? 40) (tmp 539) (tmp 543)))
      (= (tmp 547) (sub (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) sgt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) sgt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (sub (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 541) (tmp 543)) ((tmp 539) (tmp 537)) ((tmp 545) (tmp 544) (tmp 546)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 537) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 541) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 544) (mul (constant ? 40) (tmp 539) (tmp 543)))
      (= (tmp 547) (sub (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) sgt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) sgt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (sub (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 505) (tmp 504)) ((tmp 501) (tmp 500)) ((tmp 545) (tmp 535) (tmp 534) (tmp 546) (tmp 507)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 500) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 504) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 506) (mul (constant ? 40) (tmp 501) (tmp 505)))
      (= (tmp 507) (shl (constant ? 40) (tmp 506) (constant ? 1)))
      (= (tmp 547) (sub (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) sgt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) sgt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (sub (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 505) (tmp 503)) ((tmp 501) (tmp 499)) ((tmp 545) (tmp 535) (tmp 534) (tmp 546) (tmp 507)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 499) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 503) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 506) (mul (constant ? 40) (tmp 501) (tmp 505)))
      (= (tmp 507) (shl (constant ? 40) (tmp 506) (constant ? 1)))
      (= (tmp 547) (sub (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) sgt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) sgt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (sub (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 494) (tmp 493)) ((tmp 490) (tmp 489)) ((tmp 545) (tmp 535) (tmp 546) (tmp 495)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 489) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 493) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 495) (mul (constant ? 40) (tmp 490) (tmp 494)))
      (= (tmp 547) (sub (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) sgt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) sgt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (sub (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 494) (tmp 492)) ((tmp 490) (tmp 488)) ((tmp 545) (tmp 535) (tmp 546) (tmp 495)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 488) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 492) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 495) (mul (constant ? 40) (tmp 490) (tmp 494)))
      (= (tmp 547) (sub (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) sgt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) sgt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (sub (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 481) (tmp 480)) ((tmp 477) (tmp 476)) ((tmp 546) (tmp 483) (tmp 482)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 476) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 480) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 482) (mul (constant ? 40) (tmp 477) (tmp 481)))
      (= (tmp 547) (sub (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) sgt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) sgt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (sub (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 479) (tmp 481)) ((tmp 477) (tmp 475)) ((tmp 546) (tmp 483) (tmp 482)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 475) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 479) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 482) (mul (constant ? 40) (tmp 477) (tmp 481)))
      (= (tmp 547) (sub (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) sgt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) sgt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (sub (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 443) (tmp 442)) ((tmp 439) (tmp 438)) ((tmp 445) (tmp 546) (tmp 483) (tmp 473) (tmp 472)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 438) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 442) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 444) (mul (constant ? 40) (tmp 439) (tmp 443)))
      (= (tmp 445) (shl (constant ? 40) (tmp 444) (constant ? 1)))
      (= (tmp 547) (sub (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) sgt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) sgt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (sub (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 441) (tmp 443)) ((tmp 439) (tmp 437)) ((tmp 445) (tmp 546) (tmp 483) (tmp 473) (tmp 472)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (reg-flag ap cuc ((0 . 0)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 437) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 441) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 444) (mul (constant ? 40) (tmp 439) (tmp 443)))
      (= (tmp 445) (shl (constant ? 40) (tmp 444) (constant ? 1)))
      (= (tmp 547) (sub (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) sgt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) sgt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (sub (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 431) (tmp 432)) ((tmp 427) (tmp 428)) ((tmp 433) (tmp 546) (tmp 483) (tmp 473)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 427) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 431) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 433) (mul (constant ? 40) (tmp 428) (tmp 432)))
      (= (tmp 547) (sub (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) sgt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) sgt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (sub (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 566) (reg-flag ex dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 563) (reg-flag a dst))
      (aliases ((tmp 430) (tmp 432)) ((tmp 426) (tmp 428)) ((tmp 433) (tmp 546) (tmp 483) (tmp 473)) ((tmp 557) (tmp 556)))
      (allocate-in (tmp 565) (reg-flag ex dst))
      (allocate-in (tmp 569) (reg-flag mi dst))
      (allocate-in (tmp 558) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 549) (reg-flag of dst))
      (allocate-in (tmp 551) (reg-flag of dst))
      (reg-flag ap cuc ((1 . 3)))
      (allocate-in (tmp 562) (reg-flag ex dst))
      (allocate-in (tmp 552) (reg-flag of dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 560) (reg-flag a dst)))
    (code
      (= (tmp 426) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 430) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 433) (mul (constant ? 40) (tmp 428) (tmp 432)))
      (= (tmp 547) (sub (constant ? 40) dst (tmp 546)))
      (= (tmp 548) (icmp (constant ? 40) sgt (tmp 547) dst))
      (br (tmp 548) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 549) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 550) (icmp (constant ? 40) sgt (tmp 547) (tmp 546)))
      (br (tmp 550) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 551) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 552) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 553) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 554) (phi ((no-value . bb_21) ((tmp 553) . bb_22))))
      (= (tmp 555) (sub (constant ? 40) dst (tmp 546)))
      (set-reg dst (tmp 555))
      (= (tmp 556) (trunc (constant ? 64) no-value (constant ? 32)))
      (set-reg dst (tmp 557))
      (= (tmp 559) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 558) (tmp 559))
      (= (tmp 561) (icmp (constant ? 40) eq (tmp 560) (constant ? 0)))
      (br (tmp 561) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 562) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (= (tmp 564) (icmp (constant ? 40) eq (tmp 563) (constant ? -1)))
      (br (tmp 564) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 565) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 566) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 567) (phi ((no-value . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_29)
      (= (tmp 568) (phi ((no-value . bb_27) ((tmp 567) . bb_28))))
      (= (tmp 570) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 569) (tmp 570)))))

(instruction
  cmp_nimm16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 3) (reg-flag mi dst))
      (allocate-in (tmp 1) (reg-flag ac dst))
      (immediate SImm ((-32768 . 32767))))
    (code
      (= (tmp 0) (sext (constant ? 16) SImm (constant ? 40)))
      (= (tmp 2) (icmp eq (constant ? 40) dst (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (icmp slt (constant ? 40) dst (tmp 0)))
      (set-reg (tmp 3) (tmp 4)))))

(instruction
  ldc_nimm9_a16
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (immediate simm8b ((-128 . -1) (1 . 128)))
      (allocate-in (tmp 0) (reg-flag a dst)))
    (code
      (set-reg dst simm8b)
      (= (tmp 1) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 0) (tmp 1))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (immediate simm8b ((-128 . -1) (1 . 128))))
    (code
      (set-reg dst simm8b))))

(instruction
  roli8_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 13) (reg-flag op dst))
      (allocate-in (tmp 9) (reg-flag ms dst))
      (allocate-in (tmp 4) (reg-flag ag dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 8) (constant ? 31)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 23)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 3) (reg-range src2 (constant ? 8) (constant ? 15)))
      (set-reg (tmp 2) (tmp 3))
      (set-reg (tmp 4) (constant ? 0))
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 14) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 14) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 15) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 13) (tmp 15)))))

(instruction
  subscale2r_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 24) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 33) (reg-flag mi dst))
      (allocate-in (tmp 25) (reg-flag a dst))
      (allocate-in (tmp 28) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag ex dst))
      (allocate-in (tmp 20) (reg-flag a dst))
      (allocate-in (tmp 31) (reg-flag ac dst))
      (allocate-in (tmp 22) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (- (constant ? 15) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 15) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 6) (sub (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (add (tmp 1) (tmp 6) (constant ? 1)))
      (= (tmp 8) (sdiv (tmp 7) (constant ? 2)))
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 15)))
      (set-reg (tmp 9) (tmp 8))
      (= (tmp 10) (- (constant ? 31) (constant ? 16)))
      (= (tmp 11) (+ (constant ? 1) (tmp 10)))
      (= (tmp 12) (- (constant ? 31) (constant ? 16)))
      (= (tmp 13) (+ (constant ? 1) (tmp 12)))
      (= (tmp 14) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 16) (sub (tmp 13) (tmp 14) (tmp 15)))
      (= (tmp 17) (add (tmp 11) (tmp 16) (constant ? 1)))
      (= (tmp 18) (sdiv (tmp 17) (constant ? 2)))
      (= (tmp 19) (reg-range dst (constant ? 16) (constant ? 31)))
      (set-reg (tmp 19) (tmp 18))
      (= (tmp 21) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 20) (tmp 21))
      (= (tmp 23) (icmp (constant ? 40) eq (tmp 22) (constant ? 0)))
      (br (tmp 23) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 26) (icmp (constant ? 40) eq (tmp 25) (constant ? -1)))
      (br (tmp 26) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 27) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 28) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 29) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 30) (phi ((no-value . bb_3) ((tmp 29) . bb_4))))
      (= (tmp 32) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 31) (tmp 32))
      (= (tmp 34) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 33) (tmp 34)))))

(instruction
  cmph_nimm16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (immediate SImm ((-32768 . 32767)))
      (allocate-in (tmp 4) (reg-flag mi dst)))
    (code
      (= (tmp 0) (sext (constant ? 16) SImm (constant ? 40)))
      (= (tmp 1) (shl (constant ? 40) (tmp 0) (constant ? 16)))
      (= (tmp 3) (icmp eq (constant ? 40) dst (tmp 1)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (icmp slt (constant ? 40) dst (tmp 1)))
      (set-reg (tmp 4) (tmp 5)))))

(instruction
  mod24
  (pattern
    (constraints
      (allocate-in (tmp 7) (reg-flag ac (tmp 1)))
      (allocate-in (tmp 2) (reg-flag al (tmp 1)))
      (allocate-in (tmp 4) (reg-flag of (tmp 1))))
    (code
      (= (tmp 0) (reg-range (register a5) (constant ? 16) (constant ? 39)))
      (= (tmp 1) (reg-range (register a4) (constant ? 16) (constant ? 39)))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 3) (icmp (constant ? 24) eq (tmp 0) (constant ? 0)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 1) (constant ? 0))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (= (tmp 5) (urem (constant ? 24) (tmp 1) (tmp 0)))
      (set-reg (tmp 1) (tmp 5))
      (br bb_2)
      (label bb_2)
      (= (tmp 6) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 8) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 7) (tmp 8)))))

(instruction
  exp_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ex dst))
      (allocate-in (tmp 11) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in (tmp 2) (reg-flag al dst))
      (allocate-in (tmp 4) (reg-flag ac dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag mi dst))
      (allocate-in (tmp 12) (reg-flag ex dst))
      (allocate-in (tmp 6) (reg-flag a dst)))
    (code
      (= (tmp 0) (icmp eq (constant ? 40) src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 39)))
      (set-reg (tmp 1) (constant ? 1))
      (set-reg (tmp 2) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (icmp (constant ? 40) eq (tmp 6) (constant ? 0)))
      (br (tmp 7) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 8) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? -1)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 12) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 13) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) ((tmp 13) . bb_7))))
      (= (tmp 16) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 15) (tmp 16)))))

(instruction
  cmp_nimm16_a16l
  (pattern
    (constraints
      (allocate-in dst (a1h a2h a3h a0l a1l a2l a3l a0h))
      (allocate-in (tmp 0) (reg-flag ac dst))
      (allocate-in (tmp 2) (reg-flag mi dst))
      (immediate SImm ((-32768 . 32767))))
    (code
      (= (tmp 1) (icmp eq (constant ? 16) dst SImm))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp slt (constant ? 16) dst SImm))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  cfixs_a40_a16h_a16h
  (pattern
    (constraints
      (allocate-in dst (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in (tmp 3) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in (tmp 1) (reg-flag ac dst)))
    (code
      (= (tmp 0) (fptosi (constant ? 32) src1 (constant ? 16)))
      (set-reg dst (tmp 0))
      (= (tmp 2) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 3) (tmp 4)))))

(instruction
  rori8_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 13) (reg-flag op dst))
      (allocate-in (tmp 9) (reg-flag ms dst))
      (allocate-in (tmp 4) (reg-flag ag dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 23)))
      (= (tmp 1) (reg-range src1 (constant ? 8) (constant ? 31)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 7)))
      (set-reg (tmp 2) (tmp 3))
      (set-reg (tmp 4) (constant ? 0))
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 14) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 14) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 15) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 13) (tmp 15)))))

(instruction
  astore_acc
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in aN (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range aN (constant ? 0) (constant ? 31)))
      (= (tmp 1) (icmp ult (constant ? 32) (tmp 0) (register cdl)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (add (constant ? 32) (tmp 0) (register cdo)))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi (((tmp 2) . bb_0) ((tmp 0) . bb_1))))
      (set-reg (register cmtype) (constant ? 11))
      (= (tmp 4) (reg-range src (constant ? 16) (constant ? 31)))
      (store (constant ? 16) cm (tmp 3) (tmp 4))
      (= (tmp 6) (add (constant ? 32) (tmp 3) (constant ? 1)))
      (= (tmp 7) (reg-range src (constant ? 0) (constant ? 15)))
      (store (constant ? 16) cm (tmp 6) (tmp 7)))))

(instruction
  rev_a16
  (pattern
    (constraints
      (allocate-in (tmp 45) (reg-flag ag dst))
      (allocate-in (tmp 46) (reg-flag ac dst))
      (allocate-in (tmp 52) (reg-flag ls dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 48) (reg-flag mi dst))
      (allocate-in (tmp 54) (reg-flag op dst))
      (allocate-in (tmp 50) (reg-flag ms dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 15) (constant ? 15)))
      (= (tmp 1) (add (constant ? 1) (constant ? 0) (tmp 0)))
      (= (tmp 2) (reg-range dst (constant ? 14) (constant ? 14)))
      (= (tmp 3) (add (constant ? 1) (constant ? 0) (tmp 2)))
      (= (tmp 4) (reg-range dst (constant ? 13) (constant ? 13)))
      (= (tmp 5) (add (constant ? 1) (constant ? 0) (tmp 4)))
      (= (tmp 6) (reg-range dst (constant ? 12) (constant ? 12)))
      (= (tmp 7) (add (constant ? 1) (constant ? 0) (tmp 6)))
      (= (tmp 8) (reg-range dst (constant ? 11) (constant ? 11)))
      (= (tmp 9) (add (constant ? 1) (constant ? 0) (tmp 8)))
      (= (tmp 10) (reg-range dst (constant ? 10) (constant ? 10)))
      (= (tmp 11) (add (constant ? 1) (constant ? 0) (tmp 10)))
      (= (tmp 12) (reg-range dst (constant ? 9) (constant ? 9)))
      (= (tmp 13) (add (constant ? 1) (constant ? 0) (tmp 12)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 8)))
      (= (tmp 15) (add (constant ? 1) (constant ? 0) (tmp 14)))
      (= (tmp 16) (reg-range dst (constant ? 7) (constant ? 7)))
      (= (tmp 17) (add (constant ? 1) (constant ? 0) (tmp 16)))
      (= (tmp 18) (reg-range dst (constant ? 6) (constant ? 6)))
      (= (tmp 19) (add (constant ? 1) (constant ? 0) (tmp 18)))
      (= (tmp 20) (reg-range dst (constant ? 5) (constant ? 5)))
      (= (tmp 21) (add (constant ? 1) (constant ? 0) (tmp 20)))
      (= (tmp 22) (reg-range dst (constant ? 4) (constant ? 4)))
      (= (tmp 23) (add (constant ? 1) (constant ? 0) (tmp 22)))
      (= (tmp 24) (reg-range dst (constant ? 3) (constant ? 3)))
      (= (tmp 25) (add (constant ? 1) (constant ? 0) (tmp 24)))
      (= (tmp 26) (reg-range dst (constant ? 2) (constant ? 2)))
      (= (tmp 27) (add (constant ? 1) (constant ? 0) (tmp 26)))
      (= (tmp 28) (reg-range dst (constant ? 1) (constant ? 1)))
      (= (tmp 29) (add (constant ? 1) (constant ? 0) (tmp 28)))
      (= (tmp 30) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 30) (tmp 1))
      (= (tmp 31) (reg-range dst (constant ? 1) (constant ? 1)))
      (set-reg (tmp 31) (tmp 3))
      (= (tmp 32) (reg-range dst (constant ? 2) (constant ? 2)))
      (set-reg (tmp 32) (tmp 5))
      (= (tmp 33) (reg-range dst (constant ? 3) (constant ? 3)))
      (set-reg (tmp 33) (tmp 7))
      (= (tmp 34) (reg-range dst (constant ? 4) (constant ? 4)))
      (set-reg (tmp 34) (tmp 9))
      (= (tmp 35) (reg-range dst (constant ? 5) (constant ? 5)))
      (set-reg (tmp 35) (tmp 11))
      (= (tmp 36) (reg-range dst (constant ? 6) (constant ? 6)))
      (set-reg (tmp 36) (tmp 13))
      (= (tmp 37) (reg-range dst (constant ? 7) (constant ? 7)))
      (set-reg (tmp 37) (tmp 15))
      (= (tmp 38) (reg-range dst (constant ? 8) (constant ? 8)))
      (set-reg (tmp 38) (tmp 17))
      (= (tmp 39) (reg-range dst (constant ? 9) (constant ? 9)))
      (set-reg (tmp 39) (tmp 19))
      (= (tmp 40) (reg-range dst (constant ? 10) (constant ? 10)))
      (set-reg (tmp 40) (tmp 21))
      (= (tmp 41) (reg-range dst (constant ? 11) (constant ? 11)))
      (set-reg (tmp 41) (tmp 23))
      (= (tmp 42) (reg-range dst (constant ? 12) (constant ? 12)))
      (set-reg (tmp 42) (tmp 25))
      (= (tmp 43) (reg-range dst (constant ? 13) (constant ? 13)))
      (set-reg (tmp 43) (tmp 27))
      (= (tmp 44) (reg-range dst (constant ? 14) (constant ? 14)))
      (set-reg (tmp 44) (tmp 29))
      (set-reg (tmp 45) (constant ? 0))
      (= (tmp 47) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 46) (tmp 47))
      (= (tmp 49) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 48) (tmp 49))
      (= (tmp 51) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 50) (tmp 51))
      (= (tmp 53) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 52) (tmp 53))
      (= (tmp 55) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 55) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 56) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 54) (tmp 56)))))

(instruction
  mod32
  (pattern
    (constraints
      (allocate-in (tmp 7) (reg-flag ac (tmp 1)))
      (allocate-in (tmp 2) (reg-flag ag (tmp 1)))
      (allocate-in (tmp 4) (reg-flag of (tmp 1))))
    (code
      (= (tmp 0) (reg-range (register a5) (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range (register a4) (constant ? 0) (constant ? 31)))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 3) (icmp (constant ? 32) eq (tmp 0) (constant ? 0)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 1) (constant ? 0))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (= (tmp 5) (urem (constant ? 32) (tmp 1) (tmp 0)))
      (set-reg (tmp 1) (tmp 5))
      (br bb_2)
      (label bb_2)
      (= (tmp 6) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 8) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 7) (tmp 8)))))

(instruction
  cfl16_a40_a16h_a16h
  (pattern
    (constraints
      (allocate-in dst (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in (tmp 2) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in (tmp 0) (reg-flag ac dst)))
    (code
      (= (tmp 1) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  subs_a40_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 12) (reg-flag c dst))
      (allocate-in (tmp 39) (reg-flag a dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 36) (reg-flag a dst))
      (allocate-in (tmp 13) (reg-flag c dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 8) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 42) (reg-flag ex dst))
      (allocate-in (tmp 47) (reg-flag mi dst))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in (tmp 7) (reg-flag of dst))
      (allocate-in (tmp 45) (reg-flag ac dst))
      (allocate-in (tmp 38) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (sub (constant ? 32) (tmp 1) src2))
      (= (tmp 3) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 4) (icmp (constant ? 32) sgt (tmp 2) (tmp 3)))
      (br (tmp 4) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp (constant ? 32) sgt (tmp 2) src2))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 7) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 8) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))
      (= (tmp 11) (icmp (constant ? 33) slt (constant ? 0) (tmp 2)))
      (br (tmp 11) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 13) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 15) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 16) (satsub (constant ? 32) (tmp 15) src2))
      (set-reg dst (tmp 16))
      (set-reg dst no-value)
      (= (tmp 37) (icmp (constant ? 40) eq (tmp 36) (constant ? 0)))
      (br (tmp 37) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 38) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 40) (icmp (constant ? 40) eq (tmp 39) (constant ? -1)))
      (br (tmp 40) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 41) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 42) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 43) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 44) (phi ((no-value . bb_21) ((tmp 43) . bb_22))))
      (= (tmp 46) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 45) (tmp 46))
      (= (tmp 48) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 47) (tmp 48))))
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag c dst))
      (allocate-in (tmp 39) (reg-flag a dst))
      (allocate-in (tmp 29) (reg-flag c dst))
      (allocate-in (tmp 36) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 23) (reg-flag of dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 21) (reg-flag of dst))
      (allocate-in (tmp 24) (reg-flag of dst))
      (allocate-in (tmp 42) (reg-flag ex dst))
      (allocate-in (tmp 47) (reg-flag mi dst))
      (allocate-in (tmp 45) (reg-flag ac dst))
      (allocate-in (tmp 38) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 17) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 18) (sub (constant ? 32) (tmp 17) src2))
      (= (tmp 19) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 20) (icmp (constant ? 32) sgt (tmp 18) (tmp 19)))
      (br (tmp 20) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 21) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 22) (icmp (constant ? 32) sgt (tmp 18) src2))
      (br (tmp 22) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 24) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 25) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 26) (phi ((no-value . bb_12) ((tmp 25) . bb_13))))
      (= (tmp 27) (icmp (constant ? 33) slt (constant ? 0) (tmp 18)))
      (br (tmp 27) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 30) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 31) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 32) (sub (constant ? 32) (tmp 31) src2))
      (set-reg dst (tmp 32))
      (set-reg dst no-value)
      (= (tmp 37) (icmp (constant ? 40) eq (tmp 36) (constant ? 0)))
      (br (tmp 37) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 38) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 40) (icmp (constant ? 40) eq (tmp 39) (constant ? -1)))
      (br (tmp 40) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 41) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 42) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 43) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 44) (phi ((no-value . bb_21) ((tmp 43) . bb_22))))
      (= (tmp 46) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 45) (tmp 46))
      (= (tmp 48) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 47) (tmp 48)))))

(instruction
  cfloats_a16h_a16h_a40
  (pattern
    (constraints
      (allocate-in (tmp 2) (reg-flag a dst))
      (allocate-in (tmp 8) (reg-flag ex dst))
      (allocate-in (tmp 11) (reg-flag mi dst))
      (allocate-in src1 (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in (tmp 5) (reg-flag a dst))
      (allocate-in (tmp 4) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag ex dst))
      (allocate-in (tmp 0) (reg-flag ac dst))
      (allocate-in src2 (a4h a5h a6h a7h a4l a5l a6l a7l)))
    (code
      (= (tmp 1) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp (constant ? 40) eq (tmp 2) (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 4) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp (constant ? 40) eq (tmp 5) (constant ? -1)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 7) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 8) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))
      (= (tmp 12) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 11) (tmp 12)))))

(instruction
  subscale4_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 40) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag ex dst))
      (allocate-in (tmp 43) (reg-flag ex dst))
      (allocate-in (tmp 47) (reg-flag ac dst))
      (allocate-in (tmp 36) (reg-flag a dst))
      (allocate-in (tmp 49) (reg-flag mi dst))
      (allocate-in (tmp 38) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 41) (reg-flag a dst)))
    (code
      (= (tmp 0) (- (constant ? 7) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 7) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 6) (sub (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (sdiv (tmp 6) (constant ? 2)))
      (= (tmp 8) (reg-range dst (constant ? 0) (constant ? 7)))
      (set-reg (tmp 8) (tmp 7))
      (= (tmp 9) (- (constant ? 15) (constant ? 8)))
      (= (tmp 10) (+ (constant ? 1) (tmp 9)))
      (= (tmp 11) (- (constant ? 15) (constant ? 8)))
      (= (tmp 12) (+ (constant ? 1) (tmp 11)))
      (= (tmp 13) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 14) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 15) (sub (tmp 12) (tmp 13) (tmp 14)))
      (= (tmp 16) (sdiv (tmp 15) (constant ? 2)))
      (= (tmp 17) (reg-range dst (constant ? 8) (constant ? 15)))
      (set-reg (tmp 17) (tmp 16))
      (= (tmp 18) (- (constant ? 23) (constant ? 16)))
      (= (tmp 19) (+ (constant ? 1) (tmp 18)))
      (= (tmp 20) (- (constant ? 23) (constant ? 16)))
      (= (tmp 21) (+ (constant ? 1) (tmp 20)))
      (= (tmp 22) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 23) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 24) (sub (tmp 21) (tmp 22) (tmp 23)))
      (= (tmp 25) (sdiv (tmp 24) (constant ? 2)))
      (= (tmp 26) (reg-range dst (constant ? 16) (constant ? 23)))
      (set-reg (tmp 26) (tmp 25))
      (= (tmp 27) (- (constant ? 31) (constant ? 24)))
      (= (tmp 28) (+ (constant ? 1) (tmp 27)))
      (= (tmp 29) (- (constant ? 31) (constant ? 24)))
      (= (tmp 30) (+ (constant ? 1) (tmp 29)))
      (= (tmp 31) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 32) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 33) (sub (tmp 30) (tmp 31) (tmp 32)))
      (= (tmp 34) (sdiv (tmp 33) (constant ? 2)))
      (= (tmp 35) (reg-range dst (constant ? 24) (constant ? 31)))
      (set-reg (tmp 35) (tmp 34))
      (= (tmp 37) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 36) (tmp 37))
      (= (tmp 39) (icmp (constant ? 40) eq (tmp 38) (constant ? 0)))
      (br (tmp 39) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 42) (icmp (constant ? 40) eq (tmp 41) (constant ? -1)))
      (br (tmp 42) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 43) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 44) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 45) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 46) (phi ((no-value . bb_3) ((tmp 45) . bb_4))))
      (= (tmp 48) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 47) (tmp 48))
      (= (tmp 50) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 49) (tmp 50)))))

(instruction
  roli16_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 13) (reg-flag op dst))
      (allocate-in (tmp 9) (reg-flag ms dst))
      (allocate-in (tmp 4) (reg-flag ag dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 15)))
      (set-reg (tmp 2) (tmp 3))
      (set-reg (tmp 4) (constant ? 0))
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 14) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 14) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 15) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 13) (tmp 15)))))

(instruction
  cfl32_a16h_a16h_a40
  (pattern
    (constraints
      (allocate-in (tmp 2) (reg-flag a dst))
      (allocate-in (tmp 8) (reg-flag ex dst))
      (allocate-in (tmp 11) (reg-flag mi dst))
      (allocate-in src1 (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in (tmp 5) (reg-flag a dst))
      (allocate-in (tmp 4) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag ex dst))
      (allocate-in (tmp 0) (reg-flag ac dst))
      (allocate-in src2 (a4h a5h a6h a7h a4l a5l a6l a7l)))
    (code
      (= (tmp 1) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp (constant ? 40) eq (tmp 2) (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 4) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp (constant ? 40) eq (tmp 5) (constant ? -1)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 7) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 8) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))
      (= (tmp 12) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 11) (tmp 12)))))

(instruction
  mod40
  (pattern
    (constraints
      (allocate-in (tmp 1) (reg-flag of (register a4)))
      (allocate-in (tmp 4) (reg-flag ac (register a4))))
    (code
      (= (tmp 0) (icmp (constant ? 40) eq (register a5) (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg (register a4) (constant ? 0))
      (set-reg (tmp 1) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (= (tmp 2) (urem (constant ? 40) (register a4) (register a5)))
      (set-reg (register a4) (tmp 2))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (icmp eq (constant ? 80) (register a4) (constant ? 0)))
      (set-reg (tmp 4) (tmp 5)))))

(instruction
  mac_nimm2_a40_a40_a80
  (pattern
    (constraints
      (allocate-in (tmp 74) (reg-flag a dst))
      (allocate-in (tmp 76) (reg-flag ex dst))
      (allocate-in (tmp 66) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 80) (reg-flag ex dst))
      (allocate-in dst (a10 a32 a54 a76))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 8) (tmp 10)) ((tmp 4) (tmp 6)) ((tmp 61) (tmp 51) (tmp 11)))
      (allocate-in (tmp 79) (reg-flag ex dst))
      (allocate-in (tmp 71) (reg-flag ag dst))
      (allocate-in (tmp 77) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 83) (reg-flag mi dst))
      (allocate-in (tmp 67) (reg-flag of dst))
      (allocate-in (tmp 72) (reg-flag ac dst))
      (immediate align_mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 64) (reg-flag of dst)))
    (code
      (= (tmp 4) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 8) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 11) (mul (constant ? 40) (tmp 6) (tmp 10)))
      (= (tmp 62) (add (constant ? 40) dst (tmp 61)))
      (= (tmp 63) (icmp (constant ? 40) slt (tmp 62) dst))
      (br (tmp 63) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 64) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 65) (icmp (constant ? 40) slt (tmp 62) (tmp 61)))
      (br (tmp 65) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 68) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 69) (phi ((no-value . bb_3) ((tmp 68) . bb_4))))
      (= (tmp 70) (add (constant ? 40) dst (tmp 61)))
      (set-reg dst (tmp 70))
      (set-reg dst no-value)
      (set-reg (tmp 71) (constant ? 0))
      (= (tmp 73) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 72) (tmp 73))
      (= (tmp 75) (icmp (constant ? 40) eq (tmp 74) (constant ? 0)))
      (br (tmp 75) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 76) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 78) (icmp (constant ? 40) eq (tmp 77) (constant ? -1)))
      (br (tmp 78) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 79) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 80) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 81) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 82) (phi ((no-value . bb_9) ((tmp 81) . bb_10))))
      (= (tmp 84) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 83) (tmp 84))))
  (pattern
    (constraints
      (allocate-in (tmp 74) (reg-flag a dst))
      (allocate-in (tmp 76) (reg-flag ex dst))
      (allocate-in (tmp 66) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 80) (reg-flag ex dst))
      (allocate-in dst (a10 a32 a54 a76))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 9) (tmp 10)) ((tmp 5) (tmp 6)) ((tmp 61) (tmp 51) (tmp 11)))
      (allocate-in (tmp 79) (reg-flag ex dst))
      (allocate-in (tmp 71) (reg-flag ag dst))
      (allocate-in (tmp 77) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 83) (reg-flag mi dst))
      (allocate-in (tmp 67) (reg-flag of dst))
      (allocate-in (tmp 72) (reg-flag ac dst))
      (immediate align_mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 64) (reg-flag of dst)))
    (code
      (= (tmp 5) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 9) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 11) (mul (constant ? 40) (tmp 6) (tmp 10)))
      (= (tmp 62) (add (constant ? 40) dst (tmp 61)))
      (= (tmp 63) (icmp (constant ? 40) slt (tmp 62) dst))
      (br (tmp 63) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 64) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 65) (icmp (constant ? 40) slt (tmp 62) (tmp 61)))
      (br (tmp 65) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 68) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 69) (phi ((no-value . bb_3) ((tmp 68) . bb_4))))
      (= (tmp 70) (add (constant ? 40) dst (tmp 61)))
      (set-reg dst (tmp 70))
      (set-reg dst no-value)
      (set-reg (tmp 71) (constant ? 0))
      (= (tmp 73) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 72) (tmp 73))
      (= (tmp 75) (icmp (constant ? 40) eq (tmp 74) (constant ? 0)))
      (br (tmp 75) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 76) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 78) (icmp (constant ? 40) eq (tmp 77) (constant ? -1)))
      (br (tmp 78) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 79) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 80) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 81) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 82) (phi ((no-value . bb_9) ((tmp 81) . bb_10))))
      (= (tmp 84) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 83) (tmp 84))))
  (pattern
    (constraints
      (allocate-in (tmp 74) (reg-flag a dst))
      (allocate-in (tmp 76) (reg-flag ex dst))
      (allocate-in (tmp 66) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 80) (reg-flag ex dst))
      (allocate-in dst (a10 a32 a54 a76))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 19) (tmp 21)) ((tmp 15) (tmp 17)) ((tmp 61) (tmp 51) (tmp 50) (tmp 23)))
      (allocate-in (tmp 79) (reg-flag ex dst))
      (allocate-in (tmp 71) (reg-flag ag dst))
      (allocate-in (tmp 77) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 83) (reg-flag mi dst))
      (allocate-in (tmp 67) (reg-flag of dst))
      (allocate-in (tmp 72) (reg-flag ac dst))
      (immediate align_mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 64) (reg-flag of dst)))
    (code
      (= (tmp 15) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 19) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 22) (mul (constant ? 40) (tmp 17) (tmp 21)))
      (= (tmp 23) (shl (constant ? 40) (tmp 22) (constant ? 1)))
      (= (tmp 62) (add (constant ? 40) dst (tmp 61)))
      (= (tmp 63) (icmp (constant ? 40) slt (tmp 62) dst))
      (br (tmp 63) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 64) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 65) (icmp (constant ? 40) slt (tmp 62) (tmp 61)))
      (br (tmp 65) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 68) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 69) (phi ((no-value . bb_3) ((tmp 68) . bb_4))))
      (= (tmp 70) (add (constant ? 40) dst (tmp 61)))
      (set-reg dst (tmp 70))
      (set-reg dst no-value)
      (set-reg (tmp 71) (constant ? 0))
      (= (tmp 73) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 72) (tmp 73))
      (= (tmp 75) (icmp (constant ? 40) eq (tmp 74) (constant ? 0)))
      (br (tmp 75) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 76) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 78) (icmp (constant ? 40) eq (tmp 77) (constant ? -1)))
      (br (tmp 78) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 79) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 80) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 81) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 82) (phi ((no-value . bb_9) ((tmp 81) . bb_10))))
      (= (tmp 84) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 83) (tmp 84))))
  (pattern
    (constraints
      (allocate-in (tmp 74) (reg-flag a dst))
      (allocate-in (tmp 76) (reg-flag ex dst))
      (allocate-in (tmp 66) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 80) (reg-flag ex dst))
      (allocate-in dst (a10 a32 a54 a76))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 20) (tmp 21)) ((tmp 16) (tmp 17)) ((tmp 61) (tmp 51) (tmp 50) (tmp 23)))
      (allocate-in (tmp 79) (reg-flag ex dst))
      (allocate-in (tmp 71) (reg-flag ag dst))
      (allocate-in (tmp 77) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 83) (reg-flag mi dst))
      (allocate-in (tmp 67) (reg-flag of dst))
      (allocate-in (tmp 72) (reg-flag ac dst))
      (immediate align_mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 64) (reg-flag of dst)))
    (code
      (= (tmp 16) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 20) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 22) (mul (constant ? 40) (tmp 17) (tmp 21)))
      (= (tmp 23) (shl (constant ? 40) (tmp 22) (constant ? 1)))
      (= (tmp 62) (add (constant ? 40) dst (tmp 61)))
      (= (tmp 63) (icmp (constant ? 40) slt (tmp 62) dst))
      (br (tmp 63) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 64) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 65) (icmp (constant ? 40) slt (tmp 62) (tmp 61)))
      (br (tmp 65) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 68) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 69) (phi ((no-value . bb_3) ((tmp 68) . bb_4))))
      (= (tmp 70) (add (constant ? 40) dst (tmp 61)))
      (set-reg dst (tmp 70))
      (set-reg dst no-value)
      (set-reg (tmp 71) (constant ? 0))
      (= (tmp 73) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 72) (tmp 73))
      (= (tmp 75) (icmp (constant ? 40) eq (tmp 74) (constant ? 0)))
      (br (tmp 75) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 76) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 78) (icmp (constant ? 40) eq (tmp 77) (constant ? -1)))
      (br (tmp 78) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 79) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 80) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 81) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 82) (phi ((no-value . bb_9) ((tmp 81) . bb_10))))
      (= (tmp 84) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 83) (tmp 84))))
  (pattern
    (constraints
      (allocate-in (tmp 74) (reg-flag a dst))
      (allocate-in (tmp 76) (reg-flag ex dst))
      (allocate-in (tmp 66) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 80) (reg-flag ex dst))
      (allocate-in dst (a10 a32 a54 a76))
      (aliases ((tmp 59) (tmp 57)) ((tmp 53) (tmp 55)) ((tmp 61) (tmp 60)))
      (allocate-in (tmp 79) (reg-flag ex dst))
      (allocate-in (tmp 71) (reg-flag ag dst))
      (allocate-in (tmp 77) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 83) (reg-flag mi dst))
      (allocate-in (tmp 67) (reg-flag of dst))
      (allocate-in (tmp 72) (reg-flag ac dst))
      (immediate align_mode ((0 . 0)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 64) (reg-flag of dst)))
    (code
      (= (tmp 53) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 57) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 60) (mul (constant ? 40) (tmp 55) (tmp 59)))
      (= (tmp 62) (add (constant ? 40) dst (tmp 61)))
      (= (tmp 63) (icmp (constant ? 40) slt (tmp 62) dst))
      (br (tmp 63) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 64) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 65) (icmp (constant ? 40) slt (tmp 62) (tmp 61)))
      (br (tmp 65) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 68) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 69) (phi ((no-value . bb_3) ((tmp 68) . bb_4))))
      (= (tmp 70) (add (constant ? 40) dst (tmp 61)))
      (set-reg dst (tmp 70))
      (set-reg dst no-value)
      (set-reg (tmp 71) (constant ? 0))
      (= (tmp 73) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 72) (tmp 73))
      (= (tmp 75) (icmp (constant ? 40) eq (tmp 74) (constant ? 0)))
      (br (tmp 75) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 76) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 78) (icmp (constant ? 40) eq (tmp 77) (constant ? -1)))
      (br (tmp 78) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 79) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 80) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 81) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 82) (phi ((no-value . bb_9) ((tmp 81) . bb_10))))
      (= (tmp 84) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 83) (tmp 84))))
  (pattern
    (constraints
      (allocate-in (tmp 74) (reg-flag a dst))
      (allocate-in (tmp 76) (reg-flag ex dst))
      (allocate-in (tmp 66) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 80) (reg-flag ex dst))
      (allocate-in dst (a10 a32 a54 a76))
      (aliases ((tmp 59) (tmp 58)) ((tmp 55) (tmp 54)) ((tmp 61) (tmp 60)))
      (allocate-in (tmp 79) (reg-flag ex dst))
      (allocate-in (tmp 71) (reg-flag ag dst))
      (allocate-in (tmp 77) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 83) (reg-flag mi dst))
      (allocate-in (tmp 67) (reg-flag of dst))
      (allocate-in (tmp 72) (reg-flag ac dst))
      (immediate align_mode ((0 . 0)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 64) (reg-flag of dst)))
    (code
      (= (tmp 54) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 58) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 60) (mul (constant ? 40) (tmp 55) (tmp 59)))
      (= (tmp 62) (add (constant ? 40) dst (tmp 61)))
      (= (tmp 63) (icmp (constant ? 40) slt (tmp 62) dst))
      (br (tmp 63) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 64) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 65) (icmp (constant ? 40) slt (tmp 62) (tmp 61)))
      (br (tmp 65) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 68) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 69) (phi ((no-value . bb_3) ((tmp 68) . bb_4))))
      (= (tmp 70) (add (constant ? 40) dst (tmp 61)))
      (set-reg dst (tmp 70))
      (set-reg dst no-value)
      (set-reg (tmp 71) (constant ? 0))
      (= (tmp 73) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 72) (tmp 73))
      (= (tmp 75) (icmp (constant ? 40) eq (tmp 74) (constant ? 0)))
      (br (tmp 75) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 76) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 78) (icmp (constant ? 40) eq (tmp 77) (constant ? -1)))
      (br (tmp 78) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 79) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 80) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 81) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 82) (phi ((no-value . bb_9) ((tmp 81) . bb_10))))
      (= (tmp 84) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 83) (tmp 84)))))

(instruction
  rori16_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag ls dst))
      (allocate-in (tmp 13) (reg-flag op dst))
      (allocate-in (tmp 9) (reg-flag ms dst))
      (allocate-in (tmp 4) (reg-flag ag dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 16) (constant ? 31)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 15)))
      (set-reg (tmp 2) (tmp 3))
      (set-reg (tmp 4) (constant ? 0))
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 14) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 14) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 15) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 13) (tmp 15)))))

(instruction
  subscale4r_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 40) (reg-flag a dst))
      (allocate-in (tmp 42) (reg-flag a dst))
      (allocate-in (tmp 48) (reg-flag ex dst))
      (allocate-in (tmp 51) (reg-flag ac dst))
      (allocate-in (tmp 47) (reg-flag ex dst))
      (allocate-in (tmp 44) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 53) (reg-flag mi dst))
      (allocate-in (tmp 45) (reg-flag a dst)))
    (code
      (= (tmp 0) (- (constant ? 7) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 7) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 6) (sub (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (add (tmp 1) (tmp 6) (constant ? 1)))
      (= (tmp 8) (sdiv (tmp 7) (constant ? 2)))
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 7)))
      (set-reg (tmp 9) (tmp 8))
      (= (tmp 10) (- (constant ? 15) (constant ? 8)))
      (= (tmp 11) (+ (constant ? 1) (tmp 10)))
      (= (tmp 12) (- (constant ? 15) (constant ? 8)))
      (= (tmp 13) (+ (constant ? 1) (tmp 12)))
      (= (tmp 14) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 16) (sub (tmp 13) (tmp 14) (tmp 15)))
      (= (tmp 17) (add (tmp 11) (tmp 16) (constant ? 1)))
      (= (tmp 18) (sdiv (tmp 17) (constant ? 2)))
      (= (tmp 19) (reg-range dst (constant ? 8) (constant ? 15)))
      (set-reg (tmp 19) (tmp 18))
      (= (tmp 20) (- (constant ? 23) (constant ? 16)))
      (= (tmp 21) (+ (constant ? 1) (tmp 20)))
      (= (tmp 22) (- (constant ? 23) (constant ? 16)))
      (= (tmp 23) (+ (constant ? 1) (tmp 22)))
      (= (tmp 24) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 25) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 26) (sub (tmp 23) (tmp 24) (tmp 25)))
      (= (tmp 27) (add (tmp 21) (tmp 26) (constant ? 1)))
      (= (tmp 28) (sdiv (tmp 27) (constant ? 2)))
      (= (tmp 29) (reg-range dst (constant ? 16) (constant ? 23)))
      (set-reg (tmp 29) (tmp 28))
      (= (tmp 30) (- (constant ? 31) (constant ? 24)))
      (= (tmp 31) (+ (constant ? 1) (tmp 30)))
      (= (tmp 32) (- (constant ? 31) (constant ? 24)))
      (= (tmp 33) (+ (constant ? 1) (tmp 32)))
      (= (tmp 34) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 35) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 36) (sub (tmp 33) (tmp 34) (tmp 35)))
      (= (tmp 37) (add (tmp 31) (tmp 36) (constant ? 1)))
      (= (tmp 38) (sdiv (tmp 37) (constant ? 2)))
      (= (tmp 39) (reg-range dst (constant ? 24) (constant ? 31)))
      (set-reg (tmp 39) (tmp 38))
      (= (tmp 41) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 40) (tmp 41))
      (= (tmp 43) (icmp (constant ? 40) eq (tmp 42) (constant ? 0)))
      (br (tmp 43) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 44) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 46) (icmp (constant ? 40) eq (tmp 45) (constant ? -1)))
      (br (tmp 46) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 47) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 48) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 49) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 50) (phi ((no-value . bb_3) ((tmp 49) . bb_4))))
      (= (tmp 52) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 51) (tmp 52))
      (= (tmp 54) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 53) (tmp 54)))))

(instruction
  rot_a40_a16h_a40
  (pattern
    (constraints
      (allocate-in (tmp 265) (reg-flag op dst))
      (allocate-in (tmp 261) (reg-flag ms dst))
      (allocate-in (tmp 263) (reg-flag ls dst))
      (allocate-in (tmp 256) (reg-flag ag dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 259) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a4h a5h a6h a7h a4l a5l a6l a7l))
      (allocate-in (tmp 257) (reg-flag ac dst)))
    (code
      (set-reg dst src1)
      (= (tmp 0) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 1) (sub (constant ? 32) (tmp 0) (constant ? 0)))
      (= (tmp 2) (icmp sgt (constant ? 32) (tmp 1) (constant ? 0)))
      (br (tmp 2) bb_93 bb_94)
      (label bb_93)
      (= (tmp 3) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 4) (shl (constant ? 32) (tmp 3) (constant ? 1)))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 6) (bit_or (constant ? 32) (tmp 4) (tmp 5)))
      (set-reg dst (tmp 6))
      (= (tmp 7) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 8) (sub (constant ? 32) (tmp 7) (constant ? 1)))
      (= (tmp 9) (icmp sgt (constant ? 32) (tmp 8) (constant ? 0)))
      (br (tmp 9) bb_90 bb_91)
      (label bb_90)
      (= (tmp 10) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 11) (shl (constant ? 32) (tmp 10) (constant ? 1)))
      (= (tmp 12) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 13) (bit_or (constant ? 32) (tmp 11) (tmp 12)))
      (set-reg dst (tmp 13))
      (= (tmp 14) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 15) (sub (constant ? 32) (tmp 14) (constant ? 2)))
      (= (tmp 16) (icmp sgt (constant ? 32) (tmp 15) (constant ? 0)))
      (br (tmp 16) bb_87 bb_88)
      (label bb_87)
      (= (tmp 17) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 18) (shl (constant ? 32) (tmp 17) (constant ? 1)))
      (= (tmp 19) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 20) (bit_or (constant ? 32) (tmp 18) (tmp 19)))
      (set-reg dst (tmp 20))
      (= (tmp 21) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 22) (sub (constant ? 32) (tmp 21) (constant ? 3)))
      (= (tmp 23) (icmp sgt (constant ? 32) (tmp 22) (constant ? 0)))
      (br (tmp 23) bb_84 bb_85)
      (label bb_84)
      (= (tmp 24) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 25) (shl (constant ? 32) (tmp 24) (constant ? 1)))
      (= (tmp 26) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 27) (bit_or (constant ? 32) (tmp 25) (tmp 26)))
      (set-reg dst (tmp 27))
      (= (tmp 28) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 29) (sub (constant ? 32) (tmp 28) (constant ? 4)))
      (= (tmp 30) (icmp sgt (constant ? 32) (tmp 29) (constant ? 0)))
      (br (tmp 30) bb_81 bb_82)
      (label bb_81)
      (= (tmp 31) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 32) (shl (constant ? 32) (tmp 31) (constant ? 1)))
      (= (tmp 33) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 34) (bit_or (constant ? 32) (tmp 32) (tmp 33)))
      (set-reg dst (tmp 34))
      (= (tmp 35) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 36) (sub (constant ? 32) (tmp 35) (constant ? 5)))
      (= (tmp 37) (icmp sgt (constant ? 32) (tmp 36) (constant ? 0)))
      (br (tmp 37) bb_78 bb_79)
      (label bb_78)
      (= (tmp 38) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 39) (shl (constant ? 32) (tmp 38) (constant ? 1)))
      (= (tmp 40) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 41) (bit_or (constant ? 32) (tmp 39) (tmp 40)))
      (set-reg dst (tmp 41))
      (= (tmp 42) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 43) (sub (constant ? 32) (tmp 42) (constant ? 6)))
      (= (tmp 44) (icmp sgt (constant ? 32) (tmp 43) (constant ? 0)))
      (br (tmp 44) bb_75 bb_76)
      (label bb_75)
      (= (tmp 45) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 46) (shl (constant ? 32) (tmp 45) (constant ? 1)))
      (= (tmp 47) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 48) (bit_or (constant ? 32) (tmp 46) (tmp 47)))
      (set-reg dst (tmp 48))
      (= (tmp 49) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 50) (sub (constant ? 32) (tmp 49) (constant ? 7)))
      (= (tmp 51) (icmp sgt (constant ? 32) (tmp 50) (constant ? 0)))
      (br (tmp 51) bb_72 bb_73)
      (label bb_72)
      (= (tmp 52) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 53) (shl (constant ? 32) (tmp 52) (constant ? 1)))
      (= (tmp 54) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 55) (bit_or (constant ? 32) (tmp 53) (tmp 54)))
      (set-reg dst (tmp 55))
      (= (tmp 56) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 57) (sub (constant ? 32) (tmp 56) (constant ? 8)))
      (= (tmp 58) (icmp sgt (constant ? 32) (tmp 57) (constant ? 0)))
      (br (tmp 58) bb_69 bb_70)
      (label bb_69)
      (= (tmp 59) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 60) (shl (constant ? 32) (tmp 59) (constant ? 1)))
      (= (tmp 61) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 62) (bit_or (constant ? 32) (tmp 60) (tmp 61)))
      (set-reg dst (tmp 62))
      (= (tmp 63) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 64) (sub (constant ? 32) (tmp 63) (constant ? 9)))
      (= (tmp 65) (icmp sgt (constant ? 32) (tmp 64) (constant ? 0)))
      (br (tmp 65) bb_66 bb_67)
      (label bb_66)
      (= (tmp 66) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 67) (shl (constant ? 32) (tmp 66) (constant ? 1)))
      (= (tmp 68) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 69) (bit_or (constant ? 32) (tmp 67) (tmp 68)))
      (set-reg dst (tmp 69))
      (= (tmp 70) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 71) (sub (constant ? 32) (tmp 70) (constant ? 10)))
      (= (tmp 72) (icmp sgt (constant ? 32) (tmp 71) (constant ? 0)))
      (br (tmp 72) bb_63 bb_64)
      (label bb_63)
      (= (tmp 73) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 74) (shl (constant ? 32) (tmp 73) (constant ? 1)))
      (= (tmp 75) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 76) (bit_or (constant ? 32) (tmp 74) (tmp 75)))
      (set-reg dst (tmp 76))
      (= (tmp 77) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 78) (sub (constant ? 32) (tmp 77) (constant ? 11)))
      (= (tmp 79) (icmp sgt (constant ? 32) (tmp 78) (constant ? 0)))
      (br (tmp 79) bb_60 bb_61)
      (label bb_60)
      (= (tmp 80) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 81) (shl (constant ? 32) (tmp 80) (constant ? 1)))
      (= (tmp 82) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 83) (bit_or (constant ? 32) (tmp 81) (tmp 82)))
      (set-reg dst (tmp 83))
      (= (tmp 84) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 85) (sub (constant ? 32) (tmp 84) (constant ? 12)))
      (= (tmp 86) (icmp sgt (constant ? 32) (tmp 85) (constant ? 0)))
      (br (tmp 86) bb_57 bb_58)
      (label bb_57)
      (= (tmp 87) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 88) (shl (constant ? 32) (tmp 87) (constant ? 1)))
      (= (tmp 89) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 90) (bit_or (constant ? 32) (tmp 88) (tmp 89)))
      (set-reg dst (tmp 90))
      (= (tmp 91) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 92) (sub (constant ? 32) (tmp 91) (constant ? 13)))
      (= (tmp 93) (icmp sgt (constant ? 32) (tmp 92) (constant ? 0)))
      (br (tmp 93) bb_54 bb_55)
      (label bb_54)
      (= (tmp 94) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 95) (shl (constant ? 32) (tmp 94) (constant ? 1)))
      (= (tmp 96) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 97) (bit_or (constant ? 32) (tmp 95) (tmp 96)))
      (set-reg dst (tmp 97))
      (= (tmp 98) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 99) (sub (constant ? 32) (tmp 98) (constant ? 14)))
      (= (tmp 100) (icmp sgt (constant ? 32) (tmp 99) (constant ? 0)))
      (br (tmp 100) bb_51 bb_52)
      (label bb_51)
      (= (tmp 101) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 102) (shl (constant ? 32) (tmp 101) (constant ? 1)))
      (= (tmp 103) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 104) (bit_or (constant ? 32) (tmp 102) (tmp 103)))
      (set-reg dst (tmp 104))
      (= (tmp 105) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 106) (sub (constant ? 32) (tmp 105) (constant ? 15)))
      (= (tmp 107) (icmp sgt (constant ? 32) (tmp 106) (constant ? 0)))
      (br (tmp 107) bb_48 bb_49)
      (label bb_48)
      (= (tmp 108) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 109) (shl (constant ? 32) (tmp 108) (constant ? 1)))
      (= (tmp 110) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 111) (bit_or (constant ? 32) (tmp 109) (tmp 110)))
      (set-reg dst (tmp 111))
      (= (tmp 112) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 113) (sub (constant ? 32) (tmp 112) (constant ? 16)))
      (= (tmp 114) (icmp sgt (constant ? 32) (tmp 113) (constant ? 0)))
      (br (tmp 114) bb_45 bb_46)
      (label bb_45)
      (= (tmp 115) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 116) (shl (constant ? 32) (tmp 115) (constant ? 1)))
      (= (tmp 117) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 118) (bit_or (constant ? 32) (tmp 116) (tmp 117)))
      (set-reg dst (tmp 118))
      (= (tmp 119) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 120) (sub (constant ? 32) (tmp 119) (constant ? 17)))
      (= (tmp 121) (icmp sgt (constant ? 32) (tmp 120) (constant ? 0)))
      (br (tmp 121) bb_42 bb_43)
      (label bb_42)
      (= (tmp 122) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 123) (shl (constant ? 32) (tmp 122) (constant ? 1)))
      (= (tmp 124) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 125) (bit_or (constant ? 32) (tmp 123) (tmp 124)))
      (set-reg dst (tmp 125))
      (= (tmp 126) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 127) (sub (constant ? 32) (tmp 126) (constant ? 18)))
      (= (tmp 128) (icmp sgt (constant ? 32) (tmp 127) (constant ? 0)))
      (br (tmp 128) bb_39 bb_40)
      (label bb_39)
      (= (tmp 129) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 130) (shl (constant ? 32) (tmp 129) (constant ? 1)))
      (= (tmp 131) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 132) (bit_or (constant ? 32) (tmp 130) (tmp 131)))
      (set-reg dst (tmp 132))
      (= (tmp 133) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 134) (sub (constant ? 32) (tmp 133) (constant ? 19)))
      (= (tmp 135) (icmp sgt (constant ? 32) (tmp 134) (constant ? 0)))
      (br (tmp 135) bb_36 bb_37)
      (label bb_36)
      (= (tmp 136) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 137) (shl (constant ? 32) (tmp 136) (constant ? 1)))
      (= (tmp 138) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 139) (bit_or (constant ? 32) (tmp 137) (tmp 138)))
      (set-reg dst (tmp 139))
      (= (tmp 140) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 141) (sub (constant ? 32) (tmp 140) (constant ? 20)))
      (= (tmp 142) (icmp sgt (constant ? 32) (tmp 141) (constant ? 0)))
      (br (tmp 142) bb_33 bb_34)
      (label bb_33)
      (= (tmp 143) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 144) (shl (constant ? 32) (tmp 143) (constant ? 1)))
      (= (tmp 145) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 146) (bit_or (constant ? 32) (tmp 144) (tmp 145)))
      (set-reg dst (tmp 146))
      (= (tmp 147) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 148) (sub (constant ? 32) (tmp 147) (constant ? 21)))
      (= (tmp 149) (icmp sgt (constant ? 32) (tmp 148) (constant ? 0)))
      (br (tmp 149) bb_30 bb_31)
      (label bb_30)
      (= (tmp 150) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 151) (shl (constant ? 32) (tmp 150) (constant ? 1)))
      (= (tmp 152) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 153) (bit_or (constant ? 32) (tmp 151) (tmp 152)))
      (set-reg dst (tmp 153))
      (= (tmp 154) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 155) (sub (constant ? 32) (tmp 154) (constant ? 22)))
      (= (tmp 156) (icmp sgt (constant ? 32) (tmp 155) (constant ? 0)))
      (br (tmp 156) bb_27 bb_28)
      (label bb_27)
      (= (tmp 157) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 158) (shl (constant ? 32) (tmp 157) (constant ? 1)))
      (= (tmp 159) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 160) (bit_or (constant ? 32) (tmp 158) (tmp 159)))
      (set-reg dst (tmp 160))
      (= (tmp 161) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 162) (sub (constant ? 32) (tmp 161) (constant ? 23)))
      (= (tmp 163) (icmp sgt (constant ? 32) (tmp 162) (constant ? 0)))
      (br (tmp 163) bb_24 bb_25)
      (label bb_24)
      (= (tmp 164) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 165) (shl (constant ? 32) (tmp 164) (constant ? 1)))
      (= (tmp 166) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 167) (bit_or (constant ? 32) (tmp 165) (tmp 166)))
      (set-reg dst (tmp 167))
      (= (tmp 168) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 169) (sub (constant ? 32) (tmp 168) (constant ? 24)))
      (= (tmp 170) (icmp sgt (constant ? 32) (tmp 169) (constant ? 0)))
      (br (tmp 170) bb_21 bb_22)
      (label bb_21)
      (= (tmp 171) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 172) (shl (constant ? 32) (tmp 171) (constant ? 1)))
      (= (tmp 173) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 174) (bit_or (constant ? 32) (tmp 172) (tmp 173)))
      (set-reg dst (tmp 174))
      (= (tmp 175) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 176) (sub (constant ? 32) (tmp 175) (constant ? 25)))
      (= (tmp 177) (icmp sgt (constant ? 32) (tmp 176) (constant ? 0)))
      (br (tmp 177) bb_18 bb_19)
      (label bb_18)
      (= (tmp 178) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 179) (shl (constant ? 32) (tmp 178) (constant ? 1)))
      (= (tmp 180) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 181) (bit_or (constant ? 32) (tmp 179) (tmp 180)))
      (set-reg dst (tmp 181))
      (= (tmp 182) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 183) (sub (constant ? 32) (tmp 182) (constant ? 26)))
      (= (tmp 184) (icmp sgt (constant ? 32) (tmp 183) (constant ? 0)))
      (br (tmp 184) bb_15 bb_16)
      (label bb_15)
      (= (tmp 185) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 186) (shl (constant ? 32) (tmp 185) (constant ? 1)))
      (= (tmp 187) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 188) (bit_or (constant ? 32) (tmp 186) (tmp 187)))
      (set-reg dst (tmp 188))
      (= (tmp 189) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 190) (sub (constant ? 32) (tmp 189) (constant ? 27)))
      (= (tmp 191) (icmp sgt (constant ? 32) (tmp 190) (constant ? 0)))
      (br (tmp 191) bb_12 bb_13)
      (label bb_12)
      (= (tmp 192) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 193) (shl (constant ? 32) (tmp 192) (constant ? 1)))
      (= (tmp 194) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 195) (bit_or (constant ? 32) (tmp 193) (tmp 194)))
      (set-reg dst (tmp 195))
      (= (tmp 196) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 197) (sub (constant ? 32) (tmp 196) (constant ? 28)))
      (= (tmp 198) (icmp sgt (constant ? 32) (tmp 197) (constant ? 0)))
      (br (tmp 198) bb_9 bb_10)
      (label bb_9)
      (= (tmp 199) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 200) (shl (constant ? 32) (tmp 199) (constant ? 1)))
      (= (tmp 201) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 202) (bit_or (constant ? 32) (tmp 200) (tmp 201)))
      (set-reg dst (tmp 202))
      (= (tmp 203) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 204) (sub (constant ? 32) (tmp 203) (constant ? 29)))
      (= (tmp 205) (icmp sgt (constant ? 32) (tmp 204) (constant ? 0)))
      (br (tmp 205) bb_6 bb_7)
      (label bb_6)
      (= (tmp 206) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 207) (shl (constant ? 32) (tmp 206) (constant ? 1)))
      (= (tmp 208) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 209) (bit_or (constant ? 32) (tmp 207) (tmp 208)))
      (set-reg dst (tmp 209))
      (= (tmp 210) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 211) (sub (constant ? 32) (tmp 210) (constant ? 30)))
      (= (tmp 212) (icmp sgt (constant ? 32) (tmp 211) (constant ? 0)))
      (br (tmp 212) bb_3 bb_4)
      (label bb_3)
      (= (tmp 213) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 214) (shl (constant ? 32) (tmp 213) (constant ? 1)))
      (= (tmp 215) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 216) (bit_or (constant ? 32) (tmp 214) (tmp 215)))
      (set-reg dst (tmp 216))
      (= (tmp 217) (reg-range src2 (constant ? 0) (constant ? 4)))
      (= (tmp 218) (sub (constant ? 32) (tmp 217) (constant ? 31)))
      (= (tmp 219) (icmp sgt (constant ? 32) (tmp 218) (constant ? 0)))
      (br (tmp 219) bb_0 bb_1)
      (label bb_0)
      (= (tmp 220) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 221) (shl (constant ? 32) (tmp 220) (constant ? 1)))
      (= (tmp 222) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 223) (bit_or (constant ? 32) (tmp 221) (tmp 222)))
      (set-reg dst (tmp 223))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 224) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_4)
      (br bb_5)
      (label bb_5)
      (= (tmp 225) (phi (((tmp 224) . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_7)
      (br bb_8)
      (label bb_8)
      (= (tmp 226) (phi (((tmp 225) . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_10)
      (br bb_11)
      (label bb_11)
      (= (tmp 227) (phi (((tmp 226) . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_13)
      (br bb_14)
      (label bb_14)
      (= (tmp 228) (phi (((tmp 227) . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_16)
      (br bb_17)
      (label bb_17)
      (= (tmp 229) (phi (((tmp 228) . bb_15) (no-value . bb_16))))
      (br bb_20)
      (label bb_19)
      (br bb_20)
      (label bb_20)
      (= (tmp 230) (phi (((tmp 229) . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_22)
      (br bb_23)
      (label bb_23)
      (= (tmp 231) (phi (((tmp 230) . bb_21) (no-value . bb_22))))
      (br bb_26)
      (label bb_25)
      (br bb_26)
      (label bb_26)
      (= (tmp 232) (phi (((tmp 231) . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_28)
      (br bb_29)
      (label bb_29)
      (= (tmp 233) (phi (((tmp 232) . bb_27) (no-value . bb_28))))
      (br bb_32)
      (label bb_31)
      (br bb_32)
      (label bb_32)
      (= (tmp 234) (phi (((tmp 233) . bb_30) (no-value . bb_31))))
      (br bb_35)
      (label bb_34)
      (br bb_35)
      (label bb_35)
      (= (tmp 235) (phi (((tmp 234) . bb_33) (no-value . bb_34))))
      (br bb_38)
      (label bb_37)
      (br bb_38)
      (label bb_38)
      (= (tmp 236) (phi (((tmp 235) . bb_36) (no-value . bb_37))))
      (br bb_41)
      (label bb_40)
      (br bb_41)
      (label bb_41)
      (= (tmp 237) (phi (((tmp 236) . bb_39) (no-value . bb_40))))
      (br bb_44)
      (label bb_43)
      (br bb_44)
      (label bb_44)
      (= (tmp 238) (phi (((tmp 237) . bb_42) (no-value . bb_43))))
      (br bb_47)
      (label bb_46)
      (br bb_47)
      (label bb_47)
      (= (tmp 239) (phi (((tmp 238) . bb_45) (no-value . bb_46))))
      (br bb_50)
      (label bb_49)
      (br bb_50)
      (label bb_50)
      (= (tmp 240) (phi (((tmp 239) . bb_48) (no-value . bb_49))))
      (br bb_53)
      (label bb_52)
      (br bb_53)
      (label bb_53)
      (= (tmp 241) (phi (((tmp 240) . bb_51) (no-value . bb_52))))
      (br bb_56)
      (label bb_55)
      (br bb_56)
      (label bb_56)
      (= (tmp 242) (phi (((tmp 241) . bb_54) (no-value . bb_55))))
      (br bb_59)
      (label bb_58)
      (br bb_59)
      (label bb_59)
      (= (tmp 243) (phi (((tmp 242) . bb_57) (no-value . bb_58))))
      (br bb_62)
      (label bb_61)
      (br bb_62)
      (label bb_62)
      (= (tmp 244) (phi (((tmp 243) . bb_60) (no-value . bb_61))))
      (br bb_65)
      (label bb_64)
      (br bb_65)
      (label bb_65)
      (= (tmp 245) (phi (((tmp 244) . bb_63) (no-value . bb_64))))
      (br bb_68)
      (label bb_67)
      (br bb_68)
      (label bb_68)
      (= (tmp 246) (phi (((tmp 245) . bb_66) (no-value . bb_67))))
      (br bb_71)
      (label bb_70)
      (br bb_71)
      (label bb_71)
      (= (tmp 247) (phi (((tmp 246) . bb_69) (no-value . bb_70))))
      (br bb_74)
      (label bb_73)
      (br bb_74)
      (label bb_74)
      (= (tmp 248) (phi (((tmp 247) . bb_72) (no-value . bb_73))))
      (br bb_77)
      (label bb_76)
      (br bb_77)
      (label bb_77)
      (= (tmp 249) (phi (((tmp 248) . bb_75) (no-value . bb_76))))
      (br bb_80)
      (label bb_79)
      (br bb_80)
      (label bb_80)
      (= (tmp 250) (phi (((tmp 249) . bb_78) (no-value . bb_79))))
      (br bb_83)
      (label bb_82)
      (br bb_83)
      (label bb_83)
      (= (tmp 251) (phi (((tmp 250) . bb_81) (no-value . bb_82))))
      (br bb_86)
      (label bb_85)
      (br bb_86)
      (label bb_86)
      (= (tmp 252) (phi (((tmp 251) . bb_84) (no-value . bb_85))))
      (br bb_89)
      (label bb_88)
      (br bb_89)
      (label bb_89)
      (= (tmp 253) (phi (((tmp 252) . bb_87) (no-value . bb_88))))
      (br bb_92)
      (label bb_91)
      (br bb_92)
      (label bb_92)
      (= (tmp 254) (phi (((tmp 253) . bb_90) (no-value . bb_91))))
      (br bb_95)
      (label bb_94)
      (br bb_95)
      (label bb_95)
      (= (tmp 255) (phi (((tmp 254) . bb_93) (no-value . bb_94))))
      (set-reg (tmp 256) (constant ? 0))
      (= (tmp 258) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 257) (tmp 258))
      (= (tmp 260) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 259) (tmp 260))
      (= (tmp 262) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 261) (tmp 262))
      (= (tmp 264) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 263) (tmp 264))
      (= (tmp 266) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 266) bb_96 bb_97)
      (label bb_96)
      (br bb_98)
      (label bb_97)
      (br bb_98)
      (label bb_98)
      (= (tmp 267) (phi (((constant ? 1) . bb_96) ((constant ? 0) . bb_97))))
      (set-reg (tmp 265) (tmp 267)))))

(instruction
  mas_nimm2_a40_a40_a80
  (pattern
    (constraints
      (allocate-in (tmp 74) (reg-flag a dst))
      (allocate-in (tmp 76) (reg-flag ex dst))
      (allocate-in (tmp 66) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 80) (reg-flag ex dst))
      (allocate-in dst (a10 a32 a54 a76))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 8) (tmp 10)) ((tmp 4) (tmp 6)) ((tmp 61) (tmp 51) (tmp 11)))
      (allocate-in (tmp 79) (reg-flag ex dst))
      (allocate-in (tmp 71) (reg-flag ag dst))
      (allocate-in (tmp 77) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 83) (reg-flag mi dst))
      (allocate-in (tmp 67) (reg-flag of dst))
      (allocate-in (tmp 72) (reg-flag ac dst))
      (immediate align_mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 64) (reg-flag of dst)))
    (code
      (= (tmp 4) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 8) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 11) (mul (constant ? 40) (tmp 6) (tmp 10)))
      (= (tmp 62) (sub (constant ? 40) dst (tmp 61)))
      (= (tmp 63) (icmp (constant ? 40) sgt (tmp 62) dst))
      (br (tmp 63) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 64) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 65) (icmp (constant ? 40) sgt (tmp 62) (tmp 61)))
      (br (tmp 65) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 68) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 69) (phi ((no-value . bb_3) ((tmp 68) . bb_4))))
      (= (tmp 70) (sub (constant ? 40) dst (tmp 61)))
      (set-reg dst (tmp 70))
      (set-reg dst no-value)
      (set-reg (tmp 71) (constant ? 0))
      (= (tmp 73) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 72) (tmp 73))
      (= (tmp 75) (icmp (constant ? 40) eq (tmp 74) (constant ? 0)))
      (br (tmp 75) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 76) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 78) (icmp (constant ? 40) eq (tmp 77) (constant ? -1)))
      (br (tmp 78) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 79) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 80) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 81) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 82) (phi ((no-value . bb_9) ((tmp 81) . bb_10))))
      (= (tmp 84) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 83) (tmp 84))))
  (pattern
    (constraints
      (allocate-in (tmp 74) (reg-flag a dst))
      (allocate-in (tmp 76) (reg-flag ex dst))
      (allocate-in (tmp 66) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 80) (reg-flag ex dst))
      (allocate-in dst (a10 a32 a54 a76))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 9) (tmp 10)) ((tmp 5) (tmp 6)) ((tmp 61) (tmp 51) (tmp 11)))
      (allocate-in (tmp 79) (reg-flag ex dst))
      (allocate-in (tmp 71) (reg-flag ag dst))
      (allocate-in (tmp 77) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 83) (reg-flag mi dst))
      (allocate-in (tmp 67) (reg-flag of dst))
      (allocate-in (tmp 72) (reg-flag ac dst))
      (immediate align_mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 64) (reg-flag of dst)))
    (code
      (= (tmp 5) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 9) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 11) (mul (constant ? 40) (tmp 6) (tmp 10)))
      (= (tmp 62) (sub (constant ? 40) dst (tmp 61)))
      (= (tmp 63) (icmp (constant ? 40) sgt (tmp 62) dst))
      (br (tmp 63) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 64) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 65) (icmp (constant ? 40) sgt (tmp 62) (tmp 61)))
      (br (tmp 65) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 68) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 69) (phi ((no-value . bb_3) ((tmp 68) . bb_4))))
      (= (tmp 70) (sub (constant ? 40) dst (tmp 61)))
      (set-reg dst (tmp 70))
      (set-reg dst no-value)
      (set-reg (tmp 71) (constant ? 0))
      (= (tmp 73) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 72) (tmp 73))
      (= (tmp 75) (icmp (constant ? 40) eq (tmp 74) (constant ? 0)))
      (br (tmp 75) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 76) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 78) (icmp (constant ? 40) eq (tmp 77) (constant ? -1)))
      (br (tmp 78) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 79) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 80) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 81) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 82) (phi ((no-value . bb_9) ((tmp 81) . bb_10))))
      (= (tmp 84) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 83) (tmp 84))))
  (pattern
    (constraints
      (allocate-in (tmp 74) (reg-flag a dst))
      (allocate-in (tmp 76) (reg-flag ex dst))
      (allocate-in (tmp 66) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 80) (reg-flag ex dst))
      (allocate-in dst (a10 a32 a54 a76))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 19) (tmp 21)) ((tmp 15) (tmp 17)) ((tmp 61) (tmp 51) (tmp 50) (tmp 23)))
      (allocate-in (tmp 79) (reg-flag ex dst))
      (allocate-in (tmp 71) (reg-flag ag dst))
      (allocate-in (tmp 77) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 83) (reg-flag mi dst))
      (allocate-in (tmp 67) (reg-flag of dst))
      (allocate-in (tmp 72) (reg-flag ac dst))
      (immediate align_mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 64) (reg-flag of dst)))
    (code
      (= (tmp 15) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 19) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 22) (mul (constant ? 40) (tmp 17) (tmp 21)))
      (= (tmp 23) (shl (constant ? 40) (tmp 22) (constant ? 1)))
      (= (tmp 62) (sub (constant ? 40) dst (tmp 61)))
      (= (tmp 63) (icmp (constant ? 40) sgt (tmp 62) dst))
      (br (tmp 63) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 64) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 65) (icmp (constant ? 40) sgt (tmp 62) (tmp 61)))
      (br (tmp 65) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 68) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 69) (phi ((no-value . bb_3) ((tmp 68) . bb_4))))
      (= (tmp 70) (sub (constant ? 40) dst (tmp 61)))
      (set-reg dst (tmp 70))
      (set-reg dst no-value)
      (set-reg (tmp 71) (constant ? 0))
      (= (tmp 73) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 72) (tmp 73))
      (= (tmp 75) (icmp (constant ? 40) eq (tmp 74) (constant ? 0)))
      (br (tmp 75) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 76) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 78) (icmp (constant ? 40) eq (tmp 77) (constant ? -1)))
      (br (tmp 78) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 79) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 80) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 81) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 82) (phi ((no-value . bb_9) ((tmp 81) . bb_10))))
      (= (tmp 84) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 83) (tmp 84))))
  (pattern
    (constraints
      (allocate-in (tmp 74) (reg-flag a dst))
      (allocate-in (tmp 76) (reg-flag ex dst))
      (allocate-in (tmp 66) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 80) (reg-flag ex dst))
      (allocate-in dst (a10 a32 a54 a76))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 20) (tmp 21)) ((tmp 16) (tmp 17)) ((tmp 61) (tmp 51) (tmp 50) (tmp 23)))
      (allocate-in (tmp 79) (reg-flag ex dst))
      (allocate-in (tmp 71) (reg-flag ag dst))
      (allocate-in (tmp 77) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 83) (reg-flag mi dst))
      (allocate-in (tmp 67) (reg-flag of dst))
      (allocate-in (tmp 72) (reg-flag ac dst))
      (immediate align_mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 64) (reg-flag of dst)))
    (code
      (= (tmp 16) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 20) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 22) (mul (constant ? 40) (tmp 17) (tmp 21)))
      (= (tmp 23) (shl (constant ? 40) (tmp 22) (constant ? 1)))
      (= (tmp 62) (sub (constant ? 40) dst (tmp 61)))
      (= (tmp 63) (icmp (constant ? 40) sgt (tmp 62) dst))
      (br (tmp 63) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 64) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 65) (icmp (constant ? 40) sgt (tmp 62) (tmp 61)))
      (br (tmp 65) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 68) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 69) (phi ((no-value . bb_3) ((tmp 68) . bb_4))))
      (= (tmp 70) (sub (constant ? 40) dst (tmp 61)))
      (set-reg dst (tmp 70))
      (set-reg dst no-value)
      (set-reg (tmp 71) (constant ? 0))
      (= (tmp 73) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 72) (tmp 73))
      (= (tmp 75) (icmp (constant ? 40) eq (tmp 74) (constant ? 0)))
      (br (tmp 75) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 76) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 78) (icmp (constant ? 40) eq (tmp 77) (constant ? -1)))
      (br (tmp 78) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 79) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 80) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 81) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 82) (phi ((no-value . bb_9) ((tmp 81) . bb_10))))
      (= (tmp 84) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 83) (tmp 84))))
  (pattern
    (constraints
      (allocate-in (tmp 74) (reg-flag a dst))
      (allocate-in (tmp 76) (reg-flag ex dst))
      (allocate-in (tmp 66) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 80) (reg-flag ex dst))
      (allocate-in dst (a10 a32 a54 a76))
      (aliases ((tmp 59) (tmp 57)) ((tmp 53) (tmp 55)) ((tmp 61) (tmp 60)))
      (allocate-in (tmp 79) (reg-flag ex dst))
      (allocate-in (tmp 71) (reg-flag ag dst))
      (allocate-in (tmp 77) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 83) (reg-flag mi dst))
      (allocate-in (tmp 67) (reg-flag of dst))
      (allocate-in (tmp 72) (reg-flag ac dst))
      (immediate align_mode ((0 . 0)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 64) (reg-flag of dst)))
    (code
      (= (tmp 53) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 57) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 60) (mul (constant ? 40) (tmp 55) (tmp 59)))
      (= (tmp 62) (sub (constant ? 40) dst (tmp 61)))
      (= (tmp 63) (icmp (constant ? 40) sgt (tmp 62) dst))
      (br (tmp 63) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 64) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 65) (icmp (constant ? 40) sgt (tmp 62) (tmp 61)))
      (br (tmp 65) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 68) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 69) (phi ((no-value . bb_3) ((tmp 68) . bb_4))))
      (= (tmp 70) (sub (constant ? 40) dst (tmp 61)))
      (set-reg dst (tmp 70))
      (set-reg dst no-value)
      (set-reg (tmp 71) (constant ? 0))
      (= (tmp 73) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 72) (tmp 73))
      (= (tmp 75) (icmp (constant ? 40) eq (tmp 74) (constant ? 0)))
      (br (tmp 75) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 76) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 78) (icmp (constant ? 40) eq (tmp 77) (constant ? -1)))
      (br (tmp 78) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 79) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 80) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 81) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 82) (phi ((no-value . bb_9) ((tmp 81) . bb_10))))
      (= (tmp 84) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 83) (tmp 84))))
  (pattern
    (constraints
      (allocate-in (tmp 74) (reg-flag a dst))
      (allocate-in (tmp 76) (reg-flag ex dst))
      (allocate-in (tmp 66) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 80) (reg-flag ex dst))
      (allocate-in dst (a10 a32 a54 a76))
      (aliases ((tmp 59) (tmp 58)) ((tmp 55) (tmp 54)) ((tmp 61) (tmp 60)))
      (allocate-in (tmp 79) (reg-flag ex dst))
      (allocate-in (tmp 71) (reg-flag ag dst))
      (allocate-in (tmp 77) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 83) (reg-flag mi dst))
      (allocate-in (tmp 67) (reg-flag of dst))
      (allocate-in (tmp 72) (reg-flag ac dst))
      (immediate align_mode ((0 . 0)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 64) (reg-flag of dst)))
    (code
      (= (tmp 54) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 58) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 60) (mul (constant ? 40) (tmp 55) (tmp 59)))
      (= (tmp 62) (sub (constant ? 40) dst (tmp 61)))
      (= (tmp 63) (icmp (constant ? 40) sgt (tmp 62) dst))
      (br (tmp 63) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 64) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 65) (icmp (constant ? 40) sgt (tmp 62) (tmp 61)))
      (br (tmp 65) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 68) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 69) (phi ((no-value . bb_3) ((tmp 68) . bb_4))))
      (= (tmp 70) (sub (constant ? 40) dst (tmp 61)))
      (set-reg dst (tmp 70))
      (set-reg dst no-value)
      (set-reg (tmp 71) (constant ? 0))
      (= (tmp 73) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 72) (tmp 73))
      (= (tmp 75) (icmp (constant ? 40) eq (tmp 74) (constant ? 0)))
      (br (tmp 75) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 76) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 78) (icmp (constant ? 40) eq (tmp 77) (constant ? -1)))
      (br (tmp 78) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 79) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 80) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 81) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 82) (phi ((no-value . bb_9) ((tmp 81) . bb_10))))
      (= (tmp 84) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 83) (tmp 84)))))

(instruction
  addz_a40_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 3) (reg-flag ag dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 2) (add (constant ? 32) src1 src2))
      (set-reg dst (tmp 2))
      (set-reg (tmp 3) (constant ? 0))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 3) (reg-flag ag dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 1) (satadd (constant ? 32) src1 src2))
      (set-reg dst (tmp 1))
      (set-reg (tmp 3) (constant ? 0)))))

(instruction
  subhs_a40_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 53) (reg-flag mi dst))
      (allocate-in (tmp 48) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag of dst))
      (allocate-in (tmp 14) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag ex dst))
      (allocate-in (tmp 42) (reg-flag a dst))
      (allocate-in (tmp 10) (reg-flag of dst))
      (allocate-in (tmp 47) (reg-flag ex dst))
      (allocate-in (tmp 15) (reg-flag c dst))
      (allocate-in (tmp 45) (reg-flag a dst))
      (allocate-in (tmp 6) (reg-flag of dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 51) (reg-flag ac dst)))
    (code
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (shl (constant ? 32) src2 (constant ? 16)))
      (= (tmp 3) (sub (constant ? 32) (tmp 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 5) (icmp (constant ? 32) sgt (tmp 3) (tmp 4)))
      (br (tmp 5) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 6) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 7) (shl (constant ? 32) src2 (constant ? 16)))
      (= (tmp 8) (icmp (constant ? 32) sgt (tmp 3) (tmp 7)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 10) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 13) (icmp (constant ? 33) slt (constant ? 0) (tmp 3)))
      (br (tmp 13) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 17) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 18) (shl (constant ? 32) src2 (constant ? 16)))
      (= (tmp 19) (satsub (constant ? 32) (tmp 17) (tmp 18)))
      (set-reg dst (tmp 19))
      (set-reg dst no-value)
      (= (tmp 43) (icmp (constant ? 40) eq (tmp 42) (constant ? 0)))
      (br (tmp 43) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 44) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 46) (icmp (constant ? 40) eq (tmp 45) (constant ? -1)))
      (br (tmp 46) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 47) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 48) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 49) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 50) (phi ((no-value . bb_21) ((tmp 49) . bb_22))))
      (= (tmp 52) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 51) (tmp 52))
      (= (tmp 54) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 53) (tmp 54))))
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag of dst))
      (allocate-in (tmp 33) (reg-flag c dst))
      (allocate-in (tmp 48) (reg-flag ex dst))
      (allocate-in (tmp 29) (reg-flag of dst))
      (allocate-in (tmp 34) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 25) (reg-flag of dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag ex dst))
      (allocate-in (tmp 53) (reg-flag mi dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 42) (reg-flag a dst))
      (allocate-in (tmp 47) (reg-flag ex dst))
      (allocate-in (tmp 45) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 51) (reg-flag ac dst)))
    (code
      (= (tmp 20) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 21) (shl (constant ? 32) src2 (constant ? 16)))
      (= (tmp 22) (sub (constant ? 32) (tmp 20) (tmp 21)))
      (= (tmp 23) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 24) (icmp (constant ? 32) sgt (tmp 22) (tmp 23)))
      (br (tmp 24) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 25) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 26) (shl (constant ? 32) src2 (constant ? 16)))
      (= (tmp 27) (icmp (constant ? 32) sgt (tmp 22) (tmp 26)))
      (br (tmp 27) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 30) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 31) (phi ((no-value . bb_12) ((tmp 30) . bb_13))))
      (= (tmp 32) (icmp (constant ? 33) slt (constant ? 0) (tmp 22)))
      (br (tmp 32) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 33) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 34) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 35) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 36) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 37) (shl (constant ? 32) src2 (constant ? 16)))
      (= (tmp 38) (sub (constant ? 32) (tmp 36) (tmp 37)))
      (set-reg dst (tmp 38))
      (set-reg dst no-value)
      (= (tmp 43) (icmp (constant ? 40) eq (tmp 42) (constant ? 0)))
      (br (tmp 43) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 44) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 46) (icmp (constant ? 40) eq (tmp 45) (constant ? -1)))
      (br (tmp 46) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 47) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 48) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 49) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 50) (phi ((no-value . bb_21) ((tmp 49) . bb_22))))
      (= (tmp 52) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 51) (tmp 52))
      (= (tmp 54) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 53) (tmp 54)))))

(instruction
  norm2_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 10) (reg-flag ex dst))
      (allocate-in (tmp 13) (reg-flag mi dst))
      (allocate-in (tmp 9) (reg-flag ex dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in (tmp 6) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 39)))
      (set-reg (tmp 0) (constant ? 1))
      (= (tmp 1) (reg-range dst (constant ? 0) (constant ? 15)))
      (set-reg (tmp 1) (constant ? 1))
      (= (tmp 3) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (icmp (constant ? 40) eq (tmp 4) (constant ? 0)))
      (br (tmp 5) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 6) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 8) (icmp (constant ? 40) eq (tmp 7) (constant ? -1)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 10) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 13) (tmp 14)))))

(instruction
  rot_a40_nimm6_a40
  (pattern
    (constraints
      (allocate-in (tmp 227) (reg-flag ag dst))
      (allocate-in (tmp 236) (reg-flag op dst))
      (allocate-in (tmp 234) (reg-flag ls dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 232) (reg-flag ms dst))
      (allocate-in (tmp 230) (reg-flag mi dst))
      (aliases ((tmp 1) (tmp 2)))
      (allocate-in (tmp 228) (reg-flag ac dst))
      (immediate SImm ((0 . 31))))
    (code
      (= (tmp 1) (add (constant ? 8) SImm (constant ? 32)))
      (set-reg dst src)
      (= (tmp 3) (sub (constant ? 32) (tmp 2) (constant ? 0)))
      (= (tmp 4) (icmp sgt (constant ? 32) (tmp 3) (constant ? 0)))
      (br (tmp 4) bb_93 bb_94)
      (label bb_93)
      (= (tmp 5) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 6) (shl (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 7) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 8) (bit_or (constant ? 32) (tmp 6) (tmp 7)))
      (set-reg dst (tmp 8))
      (= (tmp 9) (sub (constant ? 32) (tmp 3) (constant ? 1)))
      (= (tmp 10) (icmp sgt (constant ? 32) (tmp 9) (constant ? 0)))
      (br (tmp 10) bb_90 bb_91)
      (label bb_90)
      (= (tmp 11) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 12) (shl (constant ? 32) (tmp 11) (constant ? 1)))
      (= (tmp 13) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 14) (bit_or (constant ? 32) (tmp 12) (tmp 13)))
      (set-reg dst (tmp 14))
      (= (tmp 15) (sub (constant ? 32) (tmp 9) (constant ? 2)))
      (= (tmp 16) (icmp sgt (constant ? 32) (tmp 15) (constant ? 0)))
      (br (tmp 16) bb_87 bb_88)
      (label bb_87)
      (= (tmp 17) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 18) (shl (constant ? 32) (tmp 17) (constant ? 1)))
      (= (tmp 19) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 20) (bit_or (constant ? 32) (tmp 18) (tmp 19)))
      (set-reg dst (tmp 20))
      (= (tmp 21) (sub (constant ? 32) (tmp 15) (constant ? 3)))
      (= (tmp 22) (icmp sgt (constant ? 32) (tmp 21) (constant ? 0)))
      (br (tmp 22) bb_84 bb_85)
      (label bb_84)
      (= (tmp 23) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 24) (shl (constant ? 32) (tmp 23) (constant ? 1)))
      (= (tmp 25) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 26) (bit_or (constant ? 32) (tmp 24) (tmp 25)))
      (set-reg dst (tmp 26))
      (= (tmp 27) (sub (constant ? 32) (tmp 21) (constant ? 4)))
      (= (tmp 28) (icmp sgt (constant ? 32) (tmp 27) (constant ? 0)))
      (br (tmp 28) bb_81 bb_82)
      (label bb_81)
      (= (tmp 29) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 30) (shl (constant ? 32) (tmp 29) (constant ? 1)))
      (= (tmp 31) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 32) (bit_or (constant ? 32) (tmp 30) (tmp 31)))
      (set-reg dst (tmp 32))
      (= (tmp 33) (sub (constant ? 32) (tmp 27) (constant ? 5)))
      (= (tmp 34) (icmp sgt (constant ? 32) (tmp 33) (constant ? 0)))
      (br (tmp 34) bb_78 bb_79)
      (label bb_78)
      (= (tmp 35) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 36) (shl (constant ? 32) (tmp 35) (constant ? 1)))
      (= (tmp 37) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 38) (bit_or (constant ? 32) (tmp 36) (tmp 37)))
      (set-reg dst (tmp 38))
      (= (tmp 39) (sub (constant ? 32) (tmp 33) (constant ? 6)))
      (= (tmp 40) (icmp sgt (constant ? 32) (tmp 39) (constant ? 0)))
      (br (tmp 40) bb_75 bb_76)
      (label bb_75)
      (= (tmp 41) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 42) (shl (constant ? 32) (tmp 41) (constant ? 1)))
      (= (tmp 43) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 44) (bit_or (constant ? 32) (tmp 42) (tmp 43)))
      (set-reg dst (tmp 44))
      (= (tmp 45) (sub (constant ? 32) (tmp 39) (constant ? 7)))
      (= (tmp 46) (icmp sgt (constant ? 32) (tmp 45) (constant ? 0)))
      (br (tmp 46) bb_72 bb_73)
      (label bb_72)
      (= (tmp 47) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 48) (shl (constant ? 32) (tmp 47) (constant ? 1)))
      (= (tmp 49) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 50) (bit_or (constant ? 32) (tmp 48) (tmp 49)))
      (set-reg dst (tmp 50))
      (= (tmp 51) (sub (constant ? 32) (tmp 45) (constant ? 8)))
      (= (tmp 52) (icmp sgt (constant ? 32) (tmp 51) (constant ? 0)))
      (br (tmp 52) bb_69 bb_70)
      (label bb_69)
      (= (tmp 53) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 54) (shl (constant ? 32) (tmp 53) (constant ? 1)))
      (= (tmp 55) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 56) (bit_or (constant ? 32) (tmp 54) (tmp 55)))
      (set-reg dst (tmp 56))
      (= (tmp 57) (sub (constant ? 32) (tmp 51) (constant ? 9)))
      (= (tmp 58) (icmp sgt (constant ? 32) (tmp 57) (constant ? 0)))
      (br (tmp 58) bb_66 bb_67)
      (label bb_66)
      (= (tmp 59) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 60) (shl (constant ? 32) (tmp 59) (constant ? 1)))
      (= (tmp 61) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 62) (bit_or (constant ? 32) (tmp 60) (tmp 61)))
      (set-reg dst (tmp 62))
      (= (tmp 63) (sub (constant ? 32) (tmp 57) (constant ? 10)))
      (= (tmp 64) (icmp sgt (constant ? 32) (tmp 63) (constant ? 0)))
      (br (tmp 64) bb_63 bb_64)
      (label bb_63)
      (= (tmp 65) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 66) (shl (constant ? 32) (tmp 65) (constant ? 1)))
      (= (tmp 67) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 68) (bit_or (constant ? 32) (tmp 66) (tmp 67)))
      (set-reg dst (tmp 68))
      (= (tmp 69) (sub (constant ? 32) (tmp 63) (constant ? 11)))
      (= (tmp 70) (icmp sgt (constant ? 32) (tmp 69) (constant ? 0)))
      (br (tmp 70) bb_60 bb_61)
      (label bb_60)
      (= (tmp 71) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 72) (shl (constant ? 32) (tmp 71) (constant ? 1)))
      (= (tmp 73) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 74) (bit_or (constant ? 32) (tmp 72) (tmp 73)))
      (set-reg dst (tmp 74))
      (= (tmp 75) (sub (constant ? 32) (tmp 69) (constant ? 12)))
      (= (tmp 76) (icmp sgt (constant ? 32) (tmp 75) (constant ? 0)))
      (br (tmp 76) bb_57 bb_58)
      (label bb_57)
      (= (tmp 77) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 78) (shl (constant ? 32) (tmp 77) (constant ? 1)))
      (= (tmp 79) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 80) (bit_or (constant ? 32) (tmp 78) (tmp 79)))
      (set-reg dst (tmp 80))
      (= (tmp 81) (sub (constant ? 32) (tmp 75) (constant ? 13)))
      (= (tmp 82) (icmp sgt (constant ? 32) (tmp 81) (constant ? 0)))
      (br (tmp 82) bb_54 bb_55)
      (label bb_54)
      (= (tmp 83) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 84) (shl (constant ? 32) (tmp 83) (constant ? 1)))
      (= (tmp 85) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 86) (bit_or (constant ? 32) (tmp 84) (tmp 85)))
      (set-reg dst (tmp 86))
      (= (tmp 87) (sub (constant ? 32) (tmp 81) (constant ? 14)))
      (= (tmp 88) (icmp sgt (constant ? 32) (tmp 87) (constant ? 0)))
      (br (tmp 88) bb_51 bb_52)
      (label bb_51)
      (= (tmp 89) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 90) (shl (constant ? 32) (tmp 89) (constant ? 1)))
      (= (tmp 91) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 92) (bit_or (constant ? 32) (tmp 90) (tmp 91)))
      (set-reg dst (tmp 92))
      (= (tmp 93) (sub (constant ? 32) (tmp 87) (constant ? 15)))
      (= (tmp 94) (icmp sgt (constant ? 32) (tmp 93) (constant ? 0)))
      (br (tmp 94) bb_48 bb_49)
      (label bb_48)
      (= (tmp 95) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 96) (shl (constant ? 32) (tmp 95) (constant ? 1)))
      (= (tmp 97) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 98) (bit_or (constant ? 32) (tmp 96) (tmp 97)))
      (set-reg dst (tmp 98))
      (= (tmp 99) (sub (constant ? 32) (tmp 93) (constant ? 16)))
      (= (tmp 100) (icmp sgt (constant ? 32) (tmp 99) (constant ? 0)))
      (br (tmp 100) bb_45 bb_46)
      (label bb_45)
      (= (tmp 101) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 102) (shl (constant ? 32) (tmp 101) (constant ? 1)))
      (= (tmp 103) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 104) (bit_or (constant ? 32) (tmp 102) (tmp 103)))
      (set-reg dst (tmp 104))
      (= (tmp 105) (sub (constant ? 32) (tmp 99) (constant ? 17)))
      (= (tmp 106) (icmp sgt (constant ? 32) (tmp 105) (constant ? 0)))
      (br (tmp 106) bb_42 bb_43)
      (label bb_42)
      (= (tmp 107) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 108) (shl (constant ? 32) (tmp 107) (constant ? 1)))
      (= (tmp 109) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 110) (bit_or (constant ? 32) (tmp 108) (tmp 109)))
      (set-reg dst (tmp 110))
      (= (tmp 111) (sub (constant ? 32) (tmp 105) (constant ? 18)))
      (= (tmp 112) (icmp sgt (constant ? 32) (tmp 111) (constant ? 0)))
      (br (tmp 112) bb_39 bb_40)
      (label bb_39)
      (= (tmp 113) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 114) (shl (constant ? 32) (tmp 113) (constant ? 1)))
      (= (tmp 115) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 116) (bit_or (constant ? 32) (tmp 114) (tmp 115)))
      (set-reg dst (tmp 116))
      (= (tmp 117) (sub (constant ? 32) (tmp 111) (constant ? 19)))
      (= (tmp 118) (icmp sgt (constant ? 32) (tmp 117) (constant ? 0)))
      (br (tmp 118) bb_36 bb_37)
      (label bb_36)
      (= (tmp 119) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 120) (shl (constant ? 32) (tmp 119) (constant ? 1)))
      (= (tmp 121) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 122) (bit_or (constant ? 32) (tmp 120) (tmp 121)))
      (set-reg dst (tmp 122))
      (= (tmp 123) (sub (constant ? 32) (tmp 117) (constant ? 20)))
      (= (tmp 124) (icmp sgt (constant ? 32) (tmp 123) (constant ? 0)))
      (br (tmp 124) bb_33 bb_34)
      (label bb_33)
      (= (tmp 125) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 126) (shl (constant ? 32) (tmp 125) (constant ? 1)))
      (= (tmp 127) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 128) (bit_or (constant ? 32) (tmp 126) (tmp 127)))
      (set-reg dst (tmp 128))
      (= (tmp 129) (sub (constant ? 32) (tmp 123) (constant ? 21)))
      (= (tmp 130) (icmp sgt (constant ? 32) (tmp 129) (constant ? 0)))
      (br (tmp 130) bb_30 bb_31)
      (label bb_30)
      (= (tmp 131) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 132) (shl (constant ? 32) (tmp 131) (constant ? 1)))
      (= (tmp 133) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 134) (bit_or (constant ? 32) (tmp 132) (tmp 133)))
      (set-reg dst (tmp 134))
      (= (tmp 135) (sub (constant ? 32) (tmp 129) (constant ? 22)))
      (= (tmp 136) (icmp sgt (constant ? 32) (tmp 135) (constant ? 0)))
      (br (tmp 136) bb_27 bb_28)
      (label bb_27)
      (= (tmp 137) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 138) (shl (constant ? 32) (tmp 137) (constant ? 1)))
      (= (tmp 139) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 140) (bit_or (constant ? 32) (tmp 138) (tmp 139)))
      (set-reg dst (tmp 140))
      (= (tmp 141) (sub (constant ? 32) (tmp 135) (constant ? 23)))
      (= (tmp 142) (icmp sgt (constant ? 32) (tmp 141) (constant ? 0)))
      (br (tmp 142) bb_24 bb_25)
      (label bb_24)
      (= (tmp 143) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 144) (shl (constant ? 32) (tmp 143) (constant ? 1)))
      (= (tmp 145) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 146) (bit_or (constant ? 32) (tmp 144) (tmp 145)))
      (set-reg dst (tmp 146))
      (= (tmp 147) (sub (constant ? 32) (tmp 141) (constant ? 24)))
      (= (tmp 148) (icmp sgt (constant ? 32) (tmp 147) (constant ? 0)))
      (br (tmp 148) bb_21 bb_22)
      (label bb_21)
      (= (tmp 149) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 150) (shl (constant ? 32) (tmp 149) (constant ? 1)))
      (= (tmp 151) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 152) (bit_or (constant ? 32) (tmp 150) (tmp 151)))
      (set-reg dst (tmp 152))
      (= (tmp 153) (sub (constant ? 32) (tmp 147) (constant ? 25)))
      (= (tmp 154) (icmp sgt (constant ? 32) (tmp 153) (constant ? 0)))
      (br (tmp 154) bb_18 bb_19)
      (label bb_18)
      (= (tmp 155) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 156) (shl (constant ? 32) (tmp 155) (constant ? 1)))
      (= (tmp 157) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 158) (bit_or (constant ? 32) (tmp 156) (tmp 157)))
      (set-reg dst (tmp 158))
      (= (tmp 159) (sub (constant ? 32) (tmp 153) (constant ? 26)))
      (= (tmp 160) (icmp sgt (constant ? 32) (tmp 159) (constant ? 0)))
      (br (tmp 160) bb_15 bb_16)
      (label bb_15)
      (= (tmp 161) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 162) (shl (constant ? 32) (tmp 161) (constant ? 1)))
      (= (tmp 163) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 164) (bit_or (constant ? 32) (tmp 162) (tmp 163)))
      (set-reg dst (tmp 164))
      (= (tmp 165) (sub (constant ? 32) (tmp 159) (constant ? 27)))
      (= (tmp 166) (icmp sgt (constant ? 32) (tmp 165) (constant ? 0)))
      (br (tmp 166) bb_12 bb_13)
      (label bb_12)
      (= (tmp 167) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 168) (shl (constant ? 32) (tmp 167) (constant ? 1)))
      (= (tmp 169) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 170) (bit_or (constant ? 32) (tmp 168) (tmp 169)))
      (set-reg dst (tmp 170))
      (= (tmp 171) (sub (constant ? 32) (tmp 165) (constant ? 28)))
      (= (tmp 172) (icmp sgt (constant ? 32) (tmp 171) (constant ? 0)))
      (br (tmp 172) bb_9 bb_10)
      (label bb_9)
      (= (tmp 173) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 174) (shl (constant ? 32) (tmp 173) (constant ? 1)))
      (= (tmp 175) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 176) (bit_or (constant ? 32) (tmp 174) (tmp 175)))
      (set-reg dst (tmp 176))
      (= (tmp 177) (sub (constant ? 32) (tmp 171) (constant ? 29)))
      (= (tmp 178) (icmp sgt (constant ? 32) (tmp 177) (constant ? 0)))
      (br (tmp 178) bb_6 bb_7)
      (label bb_6)
      (= (tmp 179) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 180) (shl (constant ? 32) (tmp 179) (constant ? 1)))
      (= (tmp 181) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 182) (bit_or (constant ? 32) (tmp 180) (tmp 181)))
      (set-reg dst (tmp 182))
      (= (tmp 183) (sub (constant ? 32) (tmp 177) (constant ? 30)))
      (= (tmp 184) (icmp sgt (constant ? 32) (tmp 183) (constant ? 0)))
      (br (tmp 184) bb_3 bb_4)
      (label bb_3)
      (= (tmp 185) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 186) (shl (constant ? 32) (tmp 185) (constant ? 1)))
      (= (tmp 187) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 188) (bit_or (constant ? 32) (tmp 186) (tmp 187)))
      (set-reg dst (tmp 188))
      (= (tmp 189) (sub (constant ? 32) (tmp 183) (constant ? 31)))
      (= (tmp 190) (icmp sgt (constant ? 32) (tmp 189) (constant ? 0)))
      (br (tmp 190) bb_0 bb_1)
      (label bb_0)
      (= (tmp 191) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 192) (shl (constant ? 32) (tmp 191) (constant ? 1)))
      (= (tmp 193) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 194) (bit_or (constant ? 32) (tmp 192) (tmp 193)))
      (set-reg dst (tmp 194))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 195) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_4)
      (br bb_5)
      (label bb_5)
      (= (tmp 196) (phi (((tmp 195) . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_7)
      (br bb_8)
      (label bb_8)
      (= (tmp 197) (phi (((tmp 196) . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_10)
      (br bb_11)
      (label bb_11)
      (= (tmp 198) (phi (((tmp 197) . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_13)
      (br bb_14)
      (label bb_14)
      (= (tmp 199) (phi (((tmp 198) . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_16)
      (br bb_17)
      (label bb_17)
      (= (tmp 200) (phi (((tmp 199) . bb_15) (no-value . bb_16))))
      (br bb_20)
      (label bb_19)
      (br bb_20)
      (label bb_20)
      (= (tmp 201) (phi (((tmp 200) . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_22)
      (br bb_23)
      (label bb_23)
      (= (tmp 202) (phi (((tmp 201) . bb_21) (no-value . bb_22))))
      (br bb_26)
      (label bb_25)
      (br bb_26)
      (label bb_26)
      (= (tmp 203) (phi (((tmp 202) . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_28)
      (br bb_29)
      (label bb_29)
      (= (tmp 204) (phi (((tmp 203) . bb_27) (no-value . bb_28))))
      (br bb_32)
      (label bb_31)
      (br bb_32)
      (label bb_32)
      (= (tmp 205) (phi (((tmp 204) . bb_30) (no-value . bb_31))))
      (br bb_35)
      (label bb_34)
      (br bb_35)
      (label bb_35)
      (= (tmp 206) (phi (((tmp 205) . bb_33) (no-value . bb_34))))
      (br bb_38)
      (label bb_37)
      (br bb_38)
      (label bb_38)
      (= (tmp 207) (phi (((tmp 206) . bb_36) (no-value . bb_37))))
      (br bb_41)
      (label bb_40)
      (br bb_41)
      (label bb_41)
      (= (tmp 208) (phi (((tmp 207) . bb_39) (no-value . bb_40))))
      (br bb_44)
      (label bb_43)
      (br bb_44)
      (label bb_44)
      (= (tmp 209) (phi (((tmp 208) . bb_42) (no-value . bb_43))))
      (br bb_47)
      (label bb_46)
      (br bb_47)
      (label bb_47)
      (= (tmp 210) (phi (((tmp 209) . bb_45) (no-value . bb_46))))
      (br bb_50)
      (label bb_49)
      (br bb_50)
      (label bb_50)
      (= (tmp 211) (phi (((tmp 210) . bb_48) (no-value . bb_49))))
      (br bb_53)
      (label bb_52)
      (br bb_53)
      (label bb_53)
      (= (tmp 212) (phi (((tmp 211) . bb_51) (no-value . bb_52))))
      (br bb_56)
      (label bb_55)
      (br bb_56)
      (label bb_56)
      (= (tmp 213) (phi (((tmp 212) . bb_54) (no-value . bb_55))))
      (br bb_59)
      (label bb_58)
      (br bb_59)
      (label bb_59)
      (= (tmp 214) (phi (((tmp 213) . bb_57) (no-value . bb_58))))
      (br bb_62)
      (label bb_61)
      (br bb_62)
      (label bb_62)
      (= (tmp 215) (phi (((tmp 214) . bb_60) (no-value . bb_61))))
      (br bb_65)
      (label bb_64)
      (br bb_65)
      (label bb_65)
      (= (tmp 216) (phi (((tmp 215) . bb_63) (no-value . bb_64))))
      (br bb_68)
      (label bb_67)
      (br bb_68)
      (label bb_68)
      (= (tmp 217) (phi (((tmp 216) . bb_66) (no-value . bb_67))))
      (br bb_71)
      (label bb_70)
      (br bb_71)
      (label bb_71)
      (= (tmp 218) (phi (((tmp 217) . bb_69) (no-value . bb_70))))
      (br bb_74)
      (label bb_73)
      (br bb_74)
      (label bb_74)
      (= (tmp 219) (phi (((tmp 218) . bb_72) (no-value . bb_73))))
      (br bb_77)
      (label bb_76)
      (br bb_77)
      (label bb_77)
      (= (tmp 220) (phi (((tmp 219) . bb_75) (no-value . bb_76))))
      (br bb_80)
      (label bb_79)
      (br bb_80)
      (label bb_80)
      (= (tmp 221) (phi (((tmp 220) . bb_78) (no-value . bb_79))))
      (br bb_83)
      (label bb_82)
      (br bb_83)
      (label bb_83)
      (= (tmp 222) (phi (((tmp 221) . bb_81) (no-value . bb_82))))
      (br bb_86)
      (label bb_85)
      (br bb_86)
      (label bb_86)
      (= (tmp 223) (phi (((tmp 222) . bb_84) (no-value . bb_85))))
      (br bb_89)
      (label bb_88)
      (br bb_89)
      (label bb_89)
      (= (tmp 224) (phi (((tmp 223) . bb_87) (no-value . bb_88))))
      (br bb_92)
      (label bb_91)
      (br bb_92)
      (label bb_92)
      (= (tmp 225) (phi (((tmp 224) . bb_90) (no-value . bb_91))))
      (br bb_95)
      (label bb_94)
      (br bb_95)
      (label bb_95)
      (= (tmp 226) (phi (((tmp 225) . bb_93) (no-value . bb_94))))
      (set-reg (tmp 227) (constant ? 0))
      (= (tmp 229) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 228) (tmp 229))
      (= (tmp 231) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 230) (tmp 231))
      (= (tmp 233) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 232) (tmp 233))
      (= (tmp 235) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 234) (tmp 235))
      (= (tmp 237) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 237) bb_96 bb_97)
      (label bb_96)
      (br bb_98)
      (label bb_97)
      (br bb_98)
      (label bb_98)
      (= (tmp 238) (phi (((constant ? 1) . bb_96) ((constant ? 0) . bb_97))))
      (set-reg (tmp 236) (tmp 238)))))

(instruction
  mv_a16_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (reg-flag l dst ((1 . 1)))
      (aliases (src (tmp 4)))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 7) (zext (constant ? 16) (tmp 4) (constant ? 40)))
      (set-reg dst (tmp 7))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (reg-flag l dst ((1 . 1)))
      (aliases (src (tmp 4)))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 8) (sext (constant ? 16) (tmp 4) (constant ? 40)))
      (set-reg dst (tmp 8))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (aliases (src (tmp 4)))
      (reg-flag l dst ((0 . 0))))
    (code
      (set-reg dst (tmp 4))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (reg-flag h dst ((1 . 1)))
      (aliases (src (tmp 4)))
      (allocate-in (tmp 16) (reg-flag al dst))
      (reg-flag u dst ((1 . 1))))
    (code
      (set-reg (tmp 16) (constant ? 0))
      (= (tmp 21) (zext (constant ? 16) (tmp 4) (constant ? 32)))
      (set-reg dst (tmp 21))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (reg-flag h dst ((1 . 1)))
      (aliases (src (tmp 4)))
      (allocate-in (tmp 16) (reg-flag al dst))
      (reg-flag u dst ((0 . 0))))
    (code
      (set-reg (tmp 16) (constant ? 0))
      (= (tmp 22) (sext (constant ? 16) (tmp 4) (constant ? 32)))
      (set-reg dst (tmp 22))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (reg-flag h dst ((0 . 0)))
      (aliases (src (tmp 4)))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 30) (zext (constant ? 16) (tmp 4) (constant ? 32)))
      (set-reg dst (tmp 30))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (reg-flag h dst ((0 . 0)))
      (aliases (src (tmp 4)))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 31) (sext (constant ? 16) (tmp 4) (constant ? 32)))
      (set-reg dst (tmp 31))))
  (pattern
    (constraints
      (allocate-in dst (r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (aliases (src (tmp 41))))
    (code
      (set-reg dst (tmp 41)))))

(instruction
  astore_reg
  (pattern
    (constraints
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in aN (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range aN (constant ? 0) (constant ? 31)))
      (= (tmp 1) (icmp ult (constant ? 32) (tmp 0) (register cdl)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (add (constant ? 32) (tmp 0) (register cdo)))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi (((tmp 2) . bb_0) ((tmp 0) . bb_1))))
      (set-reg (register cmtype) (constant ? 10))
      (store (constant ? 16) cm (tmp 3) src))))

(instruction
  subabs_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag of dst))
      (allocate-in (tmp 39) (reg-flag c dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 34) (reg-flag of dst))
      (allocate-in (tmp 4) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 61) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag c dst))
      (allocate-in (tmp 67) (reg-flag mi dst))
      (allocate-in (tmp 31) (reg-flag of dst))
      (allocate-in (tmp 56) (reg-flag a dst))
      (allocate-in (tmp 62) (reg-flag ex dst))
      (allocate-in (tmp 65) (reg-flag ac dst))
      (allocate-in (tmp 59) (reg-flag a dst))
      (allocate-in (tmp 12) (reg-flag c dst))
      (allocate-in (tmp 7) (reg-flag of dst))
      (allocate-in (tmp 38) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 58) (reg-flag ex dst)))
    (code
      (= (tmp 0) (icmp gt (constant ? 40) src1 src2))
      (br (tmp 0) bb_36 bb_37)
      (label bb_36)
      (= (tmp 2) (sub (constant ? 32) src1 src2))
      (= (tmp 3) (icmp (constant ? 32) sgt (tmp 2) src1))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 4) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 5) (icmp (constant ? 32) sgt (tmp 2) src2))
      (br (tmp 5) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 6) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 7) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 8) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 9) (phi ((no-value . bb_3) ((tmp 8) . bb_4))))
      (= (tmp 10) (icmp (constant ? 33) slt (constant ? 0) (tmp 2)))
      (br (tmp 10) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 12) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 13) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 14) (satsub (constant ? 32) src1 src2))
      (set-reg dst (tmp 14))
      (set-reg dst no-value)
      (br bb_38)
      (label bb_37)
      (= (tmp 29) (sub (constant ? 32) src2 src1))
      (= (tmp 30) (icmp (constant ? 32) sgt (tmp 29) src2))
      (br (tmp 30) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 31) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 32) (icmp (constant ? 32) sgt (tmp 29) src1))
      (br (tmp 32) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 33) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 34) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 35) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 36) (phi ((no-value . bb_21) ((tmp 35) . bb_22))))
      (= (tmp 37) (icmp (constant ? 33) slt (constant ? 0) (tmp 29)))
      (br (tmp 37) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 38) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 39) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 40) (phi ((no-value . bb_24) (no-value . bb_25))))
      (= (tmp 41) (satsub (constant ? 32) src2 src1))
      (set-reg dst (tmp 41))
      (set-reg dst no-value)
      (br bb_38)
      (label bb_38)
      (= (tmp 55) (phi ((no-value . bb_36) (no-value . bb_37))))
      (= (tmp 57) (icmp (constant ? 40) eq (tmp 56) (constant ? 0)))
      (br (tmp 57) bb_42 bb_43)
      (label bb_42)
      (set-reg (tmp 58) (constant ? 1))
      (br bb_44)
      (label bb_43)
      (= (tmp 60) (icmp (constant ? 40) eq (tmp 59) (constant ? -1)))
      (br (tmp 60) bb_39 bb_40)
      (label bb_39)
      (set-reg (tmp 61) (constant ? 1))
      (br bb_41)
      (label bb_40)
      (set-reg (tmp 62) (constant ? 0))
      (br bb_41)
      (label bb_41)
      (= (tmp 63) (phi ((no-value . bb_39) (no-value . bb_40))))
      (br bb_44)
      (label bb_44)
      (= (tmp 64) (phi ((no-value . bb_42) ((tmp 63) . bb_43))))
      (= (tmp 66) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 65) (tmp 66))
      (= (tmp 68) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 67) (tmp 68))))
  (pattern
    (constraints
      (allocate-in (tmp 47) (reg-flag of dst))
      (allocate-in (tmp 59) (reg-flag a dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 19) (reg-flag of dst))
      (allocate-in (tmp 62) (reg-flag ex dst))
      (allocate-in (tmp 65) (reg-flag ac dst))
      (allocate-in (tmp 44) (reg-flag of dst))
      (allocate-in (tmp 25) (reg-flag c dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 46) (reg-flag of dst))
      (allocate-in (tmp 61) (reg-flag ex dst))
      (allocate-in (tmp 24) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 56) (reg-flag a dst))
      (allocate-in (tmp 67) (reg-flag mi dst))
      (allocate-in (tmp 52) (reg-flag c dst))
      (allocate-in (tmp 51) (reg-flag c dst))
      (allocate-in (tmp 20) (reg-flag of dst))
      (allocate-in (tmp 58) (reg-flag ex dst))
      (allocate-in (tmp 17) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (icmp gt (constant ? 40) src1 src2))
      (br (tmp 0) bb_36 bb_37)
      (label bb_36)
      (= (tmp 15) (sub (constant ? 40) src1 src2))
      (= (tmp 16) (icmp (constant ? 40) sgt (tmp 15) src1))
      (br (tmp 16) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 17) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 18) (icmp (constant ? 40) sgt (tmp 15) src2))
      (br (tmp 18) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 19) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 20) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 21) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 22) (phi ((no-value . bb_12) ((tmp 21) . bb_13))))
      (= (tmp 23) (icmp (constant ? 41) slt (constant ? 0) (tmp 15)))
      (br (tmp 23) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 25) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 26) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 27) (sub (constant ? 40) src1 src2))
      (set-reg dst (tmp 27))
      (set-reg dst no-value)
      (br bb_38)
      (label bb_37)
      (= (tmp 42) (sub (constant ? 40) src2 src1))
      (= (tmp 43) (icmp (constant ? 40) sgt (tmp 42) src2))
      (br (tmp 43) bb_30 bb_31)
      (label bb_30)
      (set-reg (tmp 44) (constant ? 1))
      (br bb_32)
      (label bb_31)
      (= (tmp 45) (icmp (constant ? 40) sgt (tmp 42) src1))
      (br (tmp 45) bb_27 bb_28)
      (label bb_27)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_29)
      (label bb_28)
      (set-reg (tmp 47) (constant ? 0))
      (br bb_29)
      (label bb_29)
      (= (tmp 48) (phi ((no-value . bb_27) (no-value . bb_28))))
      (br bb_32)
      (label bb_32)
      (= (tmp 49) (phi ((no-value . bb_30) ((tmp 48) . bb_31))))
      (= (tmp 50) (icmp (constant ? 41) slt (constant ? 0) (tmp 42)))
      (br (tmp 50) bb_33 bb_34)
      (label bb_33)
      (set-reg (tmp 51) (constant ? 1))
      (br bb_35)
      (label bb_34)
      (set-reg (tmp 52) (constant ? 0))
      (br bb_35)
      (label bb_35)
      (= (tmp 53) (phi ((no-value . bb_33) (no-value . bb_34))))
      (= (tmp 54) (sub (constant ? 40) src2 src1))
      (set-reg dst (tmp 54))
      (set-reg dst no-value)
      (br bb_38)
      (label bb_38)
      (= (tmp 55) (phi ((no-value . bb_36) (no-value . bb_37))))
      (= (tmp 57) (icmp (constant ? 40) eq (tmp 56) (constant ? 0)))
      (br (tmp 57) bb_42 bb_43)
      (label bb_42)
      (set-reg (tmp 58) (constant ? 1))
      (br bb_44)
      (label bb_43)
      (= (tmp 60) (icmp (constant ? 40) eq (tmp 59) (constant ? -1)))
      (br (tmp 60) bb_39 bb_40)
      (label bb_39)
      (set-reg (tmp 61) (constant ? 1))
      (br bb_41)
      (label bb_40)
      (set-reg (tmp 62) (constant ? 0))
      (br bb_41)
      (label bb_41)
      (= (tmp 63) (phi ((no-value . bb_39) (no-value . bb_40))))
      (br bb_44)
      (label bb_44)
      (= (tmp 64) (phi ((no-value . bb_42) ((tmp 63) . bb_43))))
      (= (tmp 66) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 65) (tmp 66))
      (= (tmp 68) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 67) (tmp 68)))))

(instruction
  mpysu_nimm1_a40_a40_a80
  (pattern
    (constraints
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 33) (reg-flag ac dst))
      (allocate-in (tmp 35) (reg-flag a dst))
      (allocate-in dst (a10 a32 a54 a76))
      (aliases ((tmp 31) (tmp 30)))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 32) (reg-flag even-guard dst))
      (allocate-in (tmp 40) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 37) (reg-flag ex dst))
      (allocate-in (tmp 38) (reg-flag a dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 28) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 29) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 30) (mul (constant ? 40) (tmp 28) (tmp 29)))
      (set-reg dst (tmp 31))
      (set-reg (tmp 32) (constant ? 0))
      (= (tmp 34) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 33) (tmp 34))
      (= (tmp 36) (icmp (constant ? 40) eq (tmp 35) (constant ? 0)))
      (br (tmp 36) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 37) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 39) (icmp (constant ? 40) eq (tmp 38) (constant ? -1)))
      (br (tmp 39) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 41) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 42) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 43) (phi ((no-value . bb_3) ((tmp 42) . bb_4))))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45))))
  (pattern
    (constraints
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 33) (reg-flag ac dst))
      (allocate-in (tmp 35) (reg-flag a dst))
      (allocate-in dst (a10 a32 a54 a76))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 27) (tmp 26) (tmp 31) (tmp 11)))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 32) (reg-flag even-guard dst))
      (allocate-in (tmp 40) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 37) (reg-flag ex dst))
      (allocate-in (tmp 38) (reg-flag a dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 8) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 9) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 10) (mul (constant ? 40) (tmp 8) (tmp 9)))
      (= (tmp 11) (shl (constant ? 40) (tmp 10) (constant ? 1)))
      (set-reg dst (tmp 31))
      (set-reg (tmp 32) (constant ? 0))
      (= (tmp 34) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 33) (tmp 34))
      (= (tmp 36) (icmp (constant ? 40) eq (tmp 35) (constant ? 0)))
      (br (tmp 36) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 37) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 39) (icmp (constant ? 40) eq (tmp 38) (constant ? -1)))
      (br (tmp 39) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 41) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 42) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 43) (phi ((no-value . bb_3) ((tmp 42) . bb_4))))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45))))
  (pattern
    (constraints
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 33) (reg-flag ac dst))
      (allocate-in (tmp 35) (reg-flag a dst))
      (allocate-in dst (a10 a32 a54 a76))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 27) (tmp 31) (tmp 5)))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 32) (reg-flag even-guard dst))
      (allocate-in (tmp 40) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 37) (reg-flag ex dst))
      (allocate-in (tmp 38) (reg-flag a dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 41) (reg-flag ex dst)))
    (code
      (= (tmp 3) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 4) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 5) (mul (constant ? 40) (tmp 3) (tmp 4)))
      (set-reg dst (tmp 31))
      (set-reg (tmp 32) (constant ? 0))
      (= (tmp 34) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 33) (tmp 34))
      (= (tmp 36) (icmp (constant ? 40) eq (tmp 35) (constant ? 0)))
      (br (tmp 36) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 37) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 39) (icmp (constant ? 40) eq (tmp 38) (constant ? -1)))
      (br (tmp 39) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 40) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 41) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 42) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 43) (phi ((no-value . bb_3) ((tmp 42) . bb_4))))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45)))))

(instruction
  sub_a40_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag c dst))
      (allocate-in (tmp 33) (reg-flag a dst))
      (allocate-in (tmp 39) (reg-flag ex dst))
      (allocate-in (tmp 29) (reg-flag c dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in (tmp 36) (reg-flag a dst))
      (allocate-in (tmp 23) (reg-flag of dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 24) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 42) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 20) (reg-flag of dst))
      (allocate-in (tmp 38) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 17) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 18) (sub (constant ? 40) src1 (tmp 17)))
      (= (tmp 19) (icmp (constant ? 40) sgt (tmp 18) src1))
      (br (tmp 19) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 20) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 21) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 22) (icmp (constant ? 40) sgt (tmp 18) (tmp 21)))
      (br (tmp 22) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 24) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 25) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 26) (phi ((no-value . bb_12) ((tmp 25) . bb_13))))
      (= (tmp 27) (icmp (constant ? 41) slt (constant ? 0) (tmp 18)))
      (br (tmp 27) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 30) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 31) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 32) (sub (constant ? 40) src1 (tmp 31)))
      (set-reg dst (tmp 32))
      (set-reg dst no-value)
      (= (tmp 34) (icmp (constant ? 40) eq (tmp 33) (constant ? 0)))
      (br (tmp 34) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 35) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 37) (icmp (constant ? 40) eq (tmp 36) (constant ? -1)))
      (br (tmp 37) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 38) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 39) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 40) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 41) (phi ((no-value . bb_21) ((tmp 40) . bb_22))))
      (= (tmp 43) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 42) (tmp 43))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45))))
  (pattern
    (constraints
      (allocate-in (tmp 33) (reg-flag a dst))
      (allocate-in (tmp 13) (reg-flag c dst))
      (allocate-in (tmp 35) (reg-flag ex dst))
      (allocate-in (tmp 36) (reg-flag a dst))
      (allocate-in (tmp 39) (reg-flag ex dst))
      (allocate-in (tmp 4) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag mi dst))
      (allocate-in (tmp 8) (reg-flag of dst))
      (allocate-in (tmp 42) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 12) (reg-flag c dst))
      (allocate-in (tmp 7) (reg-flag of dst))
      (allocate-in (tmp 38) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (sub (constant ? 32) src1 (tmp 1)))
      (= (tmp 3) (icmp (constant ? 32) sgt (tmp 2) src1))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 4) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 5) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 6) (icmp (constant ? 32) sgt (tmp 2) (tmp 5)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 7) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 8) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))
      (= (tmp 11) (icmp (constant ? 33) slt (constant ? 0) (tmp 2)))
      (br (tmp 11) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 13) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 15) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 16) (satsub (constant ? 32) src1 (tmp 15)))
      (set-reg dst (tmp 16))
      (set-reg dst no-value)
      (= (tmp 34) (icmp (constant ? 40) eq (tmp 33) (constant ? 0)))
      (br (tmp 34) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 35) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 37) (icmp (constant ? 40) eq (tmp 36) (constant ? -1)))
      (br (tmp 37) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 38) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 39) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 40) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 41) (phi ((no-value . bb_21) ((tmp 40) . bb_22))))
      (= (tmp 43) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 42) (tmp 43))
      (= (tmp 45) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 44) (tmp 45)))))

(instruction
  norm2min_a40_a40_a16l
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l))
      (allocate-in (tmp 12) (reg-flag ex dst))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag ex dst))
      (allocate-in (tmp 16) (reg-flag mi dst))
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (icmp slt (constant ? 40) (constant ? 1) (constant ? 1)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 1) (phi (((constant ? 1) . bb_0) ((constant ? 1) . bb_1))))
      (set-reg dst (tmp 1))
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (icmp (constant ? 40) eq (tmp 7) (constant ? 0)))
      (br (tmp 8) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 11) (icmp (constant ? 40) eq (tmp 10) (constant ? -1)))
      (br (tmp 11) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 13) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 14) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 15) (phi ((no-value . bb_6) ((tmp 14) . bb_7))))
      (= (tmp 17) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 16) (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h))
      (allocate-in (tmp 12) (reg-flag ex dst))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag ex dst))
      (allocate-in (tmp 2) (reg-flag a dst))
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 16) (reg-flag mi dst)))
    (code
      (= (tmp 0) (icmp slt (constant ? 40) (constant ? 1) (constant ? 1)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 1) (phi (((constant ? 1) . bb_0) ((constant ? 1) . bb_1))))
      (set-reg dst (tmp 1))
      (= (tmp 3) (reg-range (tmp 2) (constant ? 16) (constant ? 39)))
      (= (tmp 4) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (icmp (constant ? 40) eq (tmp 7) (constant ? 0)))
      (br (tmp 8) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 11) (icmp (constant ? 40) eq (tmp 10) (constant ? -1)))
      (br (tmp 11) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 13) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 14) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 15) (phi ((no-value . bb_6) ((tmp 14) . bb_7))))
      (= (tmp 17) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 16) (tmp 17)))))

(instruction
  mv_a16_r16--
  (pattern
    (constraints
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (allocate-in (tmp 7) (reg-flag z rN))
      (aliases (src (tmp 4)))
      (allocate-in rN (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (store (constant ? 16) ldm rN (tmp 4))
      (= (tmp 6) (sub (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 6))
      (= (tmp 8) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 7) (tmp 9)))))

(instruction
  bupacklz_a16_a40
  (pattern
    (constraints
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 18) (reg-flag mi dst))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag ac dst))
      (allocate-in (tmp 15) (reg-flag ex dst))
      (allocate-in (tmp 6) (reg-flag ag dst))
      (allocate-in (tmp 11) (reg-flag ex dst))
      (allocate-in (tmp 14) (reg-flag ex dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 4) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 24) (constant ? 31)))
      (set-reg (tmp 5) (constant ? 0))
      (set-reg (tmp 6) (constant ? 0))
      (= (tmp 8) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? 0)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 13) (icmp (constant ? 40) eq (tmp 12) (constant ? -1)))
      (br (tmp 13) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 16) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 17) (phi ((no-value . bb_3) ((tmp 16) . bb_4))))
      (= (tmp 19) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 18) (tmp 19)))))

(instruction
  flmax_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 10) (reg-flag ex dst))
      (allocate-in (tmp 13) (reg-flag mi dst))
      (allocate-in (tmp 9) (reg-flag ex dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in (tmp 6) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (fcmp ogt (constant ? 32) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 1) (phi ((src1 . bb_0) (src2 . bb_1))))
      (set-reg dst (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (icmp (constant ? 40) eq (tmp 4) (constant ? 0)))
      (br (tmp 5) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 6) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 8) (icmp (constant ? 40) eq (tmp 7) (constant ? -1)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 10) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 12) (phi ((no-value . bb_6) ((tmp 11) . bb_7))))
      (= (tmp 14) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 13) (tmp 14)))))

(instruction
  macsu_nimm1_a40_a40_a80
  (pattern
    (constraints
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 36) (reg-flag of dst))
      (allocate-in (tmp 50) (reg-flag ex dst))
      (allocate-in (tmp 34) (reg-flag of dst))
      (allocate-in dst (a10 a32 a54 a76))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 27) (tmp 31) (tmp 5)))
      (allocate-in (tmp 44) (reg-flag a dst))
      (allocate-in (tmp 53) (reg-flag mi dst))
      (allocate-in (tmp 42) (reg-flag ac dst))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 47) (reg-flag a dst))
      (allocate-in (tmp 49) (reg-flag ex dst))
      (allocate-in (tmp 37) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 41) (reg-flag even-guard dst)))
    (code
      (= (tmp 3) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 4) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 5) (mul (constant ? 40) (tmp 3) (tmp 4)))
      (= (tmp 32) (add (constant ? 40) dst (tmp 31)))
      (= (tmp 33) (icmp (constant ? 40) slt (tmp 32) dst))
      (br (tmp 33) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 34) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 35) (icmp (constant ? 40) slt (tmp 32) (tmp 31)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 36) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 37) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 39) (phi ((no-value . bb_3) ((tmp 38) . bb_4))))
      (= (tmp 40) (add (constant ? 40) dst (tmp 31)))
      (set-reg dst (tmp 40))
      (set-reg dst no-value)
      (set-reg (tmp 41) (constant ? 0))
      (= (tmp 43) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 42) (tmp 43))
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? 0)))
      (br (tmp 45) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 48) (icmp (constant ? 40) eq (tmp 47) (constant ? -1)))
      (br (tmp 48) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 49) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 50) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 51) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 52) (phi ((no-value . bb_9) ((tmp 51) . bb_10))))
      (= (tmp 54) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 53) (tmp 54))))
  (pattern
    (constraints
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 36) (reg-flag of dst))
      (allocate-in (tmp 50) (reg-flag ex dst))
      (allocate-in (tmp 34) (reg-flag of dst))
      (allocate-in dst (a10 a32 a54 a76))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 27) (tmp 26) (tmp 31) (tmp 11)))
      (allocate-in (tmp 44) (reg-flag a dst))
      (allocate-in (tmp 53) (reg-flag mi dst))
      (allocate-in (tmp 42) (reg-flag ac dst))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 47) (reg-flag a dst))
      (allocate-in (tmp 49) (reg-flag ex dst))
      (allocate-in (tmp 37) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 41) (reg-flag even-guard dst)))
    (code
      (= (tmp 8) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 9) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 10) (mul (constant ? 40) (tmp 8) (tmp 9)))
      (= (tmp 11) (shl (constant ? 40) (tmp 10) (constant ? 1)))
      (= (tmp 32) (add (constant ? 40) dst (tmp 31)))
      (= (tmp 33) (icmp (constant ? 40) slt (tmp 32) dst))
      (br (tmp 33) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 34) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 35) (icmp (constant ? 40) slt (tmp 32) (tmp 31)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 36) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 37) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 39) (phi ((no-value . bb_3) ((tmp 38) . bb_4))))
      (= (tmp 40) (add (constant ? 40) dst (tmp 31)))
      (set-reg dst (tmp 40))
      (set-reg dst no-value)
      (set-reg (tmp 41) (constant ? 0))
      (= (tmp 43) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 42) (tmp 43))
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? 0)))
      (br (tmp 45) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 48) (icmp (constant ? 40) eq (tmp 47) (constant ? -1)))
      (br (tmp 48) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 49) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 50) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 51) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 52) (phi ((no-value . bb_9) ((tmp 51) . bb_10))))
      (= (tmp 54) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 53) (tmp 54))))
  (pattern
    (constraints
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 36) (reg-flag of dst))
      (allocate-in (tmp 50) (reg-flag ex dst))
      (allocate-in (tmp 34) (reg-flag of dst))
      (allocate-in dst (a10 a32 a54 a76))
      (aliases ((tmp 31) (tmp 30)))
      (allocate-in (tmp 44) (reg-flag a dst))
      (allocate-in (tmp 53) (reg-flag mi dst))
      (allocate-in (tmp 42) (reg-flag ac dst))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 47) (reg-flag a dst))
      (allocate-in (tmp 49) (reg-flag ex dst))
      (allocate-in (tmp 37) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 41) (reg-flag even-guard dst)))
    (code
      (= (tmp 28) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 29) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 30) (mul (constant ? 40) (tmp 28) (tmp 29)))
      (= (tmp 32) (add (constant ? 40) dst (tmp 31)))
      (= (tmp 33) (icmp (constant ? 40) slt (tmp 32) dst))
      (br (tmp 33) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 34) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 35) (icmp (constant ? 40) slt (tmp 32) (tmp 31)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 36) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 37) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 39) (phi ((no-value . bb_3) ((tmp 38) . bb_4))))
      (= (tmp 40) (add (constant ? 40) dst (tmp 31)))
      (set-reg dst (tmp 40))
      (set-reg dst no-value)
      (set-reg (tmp 41) (constant ? 0))
      (= (tmp 43) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 42) (tmp 43))
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? 0)))
      (br (tmp 45) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 48) (icmp (constant ? 40) eq (tmp 47) (constant ? -1)))
      (br (tmp 48) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 49) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 50) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 51) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 52) (phi ((no-value . bb_9) ((tmp 51) . bb_10))))
      (= (tmp 54) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 53) (tmp 54)))))

(instruction
  rot_a16_nimm4_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (aliases ((tmp 1) (tmp 2)))
      (immediate SImm ((0 . 15)))
      (allocate-in (tmp 115) (reg-flag ag dst)))
    (code
      (= (tmp 1) (add (constant ? 5) SImm (constant ? 16)))
      (set-reg dst src)
      (= (tmp 3) (sub (constant ? 32) (tmp 2) (constant ? 0)))
      (= (tmp 4) (icmp sgt (constant ? 32) (tmp 3) (constant ? 0)))
      (br (tmp 4) bb_45 bb_46)
      (label bb_45)
      (= (tmp 5) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 6) (shl (constant ? 32) (tmp 5) (constant ? 1)))
      (= (tmp 7) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 8) (bit_or (constant ? 32) (tmp 6) (tmp 7)))
      (set-reg dst (tmp 8))
      (= (tmp 9) (sub (constant ? 32) (tmp 3) (constant ? 1)))
      (= (tmp 10) (icmp sgt (constant ? 32) (tmp 9) (constant ? 0)))
      (br (tmp 10) bb_42 bb_43)
      (label bb_42)
      (= (tmp 11) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 12) (shl (constant ? 32) (tmp 11) (constant ? 1)))
      (= (tmp 13) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 14) (bit_or (constant ? 32) (tmp 12) (tmp 13)))
      (set-reg dst (tmp 14))
      (= (tmp 15) (sub (constant ? 32) (tmp 9) (constant ? 2)))
      (= (tmp 16) (icmp sgt (constant ? 32) (tmp 15) (constant ? 0)))
      (br (tmp 16) bb_39 bb_40)
      (label bb_39)
      (= (tmp 17) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 18) (shl (constant ? 32) (tmp 17) (constant ? 1)))
      (= (tmp 19) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 20) (bit_or (constant ? 32) (tmp 18) (tmp 19)))
      (set-reg dst (tmp 20))
      (= (tmp 21) (sub (constant ? 32) (tmp 15) (constant ? 3)))
      (= (tmp 22) (icmp sgt (constant ? 32) (tmp 21) (constant ? 0)))
      (br (tmp 22) bb_36 bb_37)
      (label bb_36)
      (= (tmp 23) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 24) (shl (constant ? 32) (tmp 23) (constant ? 1)))
      (= (tmp 25) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 26) (bit_or (constant ? 32) (tmp 24) (tmp 25)))
      (set-reg dst (tmp 26))
      (= (tmp 27) (sub (constant ? 32) (tmp 21) (constant ? 4)))
      (= (tmp 28) (icmp sgt (constant ? 32) (tmp 27) (constant ? 0)))
      (br (tmp 28) bb_33 bb_34)
      (label bb_33)
      (= (tmp 29) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 30) (shl (constant ? 32) (tmp 29) (constant ? 1)))
      (= (tmp 31) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 32) (bit_or (constant ? 32) (tmp 30) (tmp 31)))
      (set-reg dst (tmp 32))
      (= (tmp 33) (sub (constant ? 32) (tmp 27) (constant ? 5)))
      (= (tmp 34) (icmp sgt (constant ? 32) (tmp 33) (constant ? 0)))
      (br (tmp 34) bb_30 bb_31)
      (label bb_30)
      (= (tmp 35) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 36) (shl (constant ? 32) (tmp 35) (constant ? 1)))
      (= (tmp 37) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 38) (bit_or (constant ? 32) (tmp 36) (tmp 37)))
      (set-reg dst (tmp 38))
      (= (tmp 39) (sub (constant ? 32) (tmp 33) (constant ? 6)))
      (= (tmp 40) (icmp sgt (constant ? 32) (tmp 39) (constant ? 0)))
      (br (tmp 40) bb_27 bb_28)
      (label bb_27)
      (= (tmp 41) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 42) (shl (constant ? 32) (tmp 41) (constant ? 1)))
      (= (tmp 43) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 44) (bit_or (constant ? 32) (tmp 42) (tmp 43)))
      (set-reg dst (tmp 44))
      (= (tmp 45) (sub (constant ? 32) (tmp 39) (constant ? 7)))
      (= (tmp 46) (icmp sgt (constant ? 32) (tmp 45) (constant ? 0)))
      (br (tmp 46) bb_24 bb_25)
      (label bb_24)
      (= (tmp 47) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 48) (shl (constant ? 32) (tmp 47) (constant ? 1)))
      (= (tmp 49) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 50) (bit_or (constant ? 32) (tmp 48) (tmp 49)))
      (set-reg dst (tmp 50))
      (= (tmp 51) (sub (constant ? 32) (tmp 45) (constant ? 8)))
      (= (tmp 52) (icmp sgt (constant ? 32) (tmp 51) (constant ? 0)))
      (br (tmp 52) bb_21 bb_22)
      (label bb_21)
      (= (tmp 53) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 54) (shl (constant ? 32) (tmp 53) (constant ? 1)))
      (= (tmp 55) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 56) (bit_or (constant ? 32) (tmp 54) (tmp 55)))
      (set-reg dst (tmp 56))
      (= (tmp 57) (sub (constant ? 32) (tmp 51) (constant ? 9)))
      (= (tmp 58) (icmp sgt (constant ? 32) (tmp 57) (constant ? 0)))
      (br (tmp 58) bb_18 bb_19)
      (label bb_18)
      (= (tmp 59) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 60) (shl (constant ? 32) (tmp 59) (constant ? 1)))
      (= (tmp 61) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 62) (bit_or (constant ? 32) (tmp 60) (tmp 61)))
      (set-reg dst (tmp 62))
      (= (tmp 63) (sub (constant ? 32) (tmp 57) (constant ? 10)))
      (= (tmp 64) (icmp sgt (constant ? 32) (tmp 63) (constant ? 0)))
      (br (tmp 64) bb_15 bb_16)
      (label bb_15)
      (= (tmp 65) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 66) (shl (constant ? 32) (tmp 65) (constant ? 1)))
      (= (tmp 67) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 68) (bit_or (constant ? 32) (tmp 66) (tmp 67)))
      (set-reg dst (tmp 68))
      (= (tmp 69) (sub (constant ? 32) (tmp 63) (constant ? 11)))
      (= (tmp 70) (icmp sgt (constant ? 32) (tmp 69) (constant ? 0)))
      (br (tmp 70) bb_12 bb_13)
      (label bb_12)
      (= (tmp 71) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 72) (shl (constant ? 32) (tmp 71) (constant ? 1)))
      (= (tmp 73) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 74) (bit_or (constant ? 32) (tmp 72) (tmp 73)))
      (set-reg dst (tmp 74))
      (= (tmp 75) (sub (constant ? 32) (tmp 69) (constant ? 12)))
      (= (tmp 76) (icmp sgt (constant ? 32) (tmp 75) (constant ? 0)))
      (br (tmp 76) bb_9 bb_10)
      (label bb_9)
      (= (tmp 77) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 78) (shl (constant ? 32) (tmp 77) (constant ? 1)))
      (= (tmp 79) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 80) (bit_or (constant ? 32) (tmp 78) (tmp 79)))
      (set-reg dst (tmp 80))
      (= (tmp 81) (sub (constant ? 32) (tmp 75) (constant ? 13)))
      (= (tmp 82) (icmp sgt (constant ? 32) (tmp 81) (constant ? 0)))
      (br (tmp 82) bb_6 bb_7)
      (label bb_6)
      (= (tmp 83) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 84) (shl (constant ? 32) (tmp 83) (constant ? 1)))
      (= (tmp 85) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 86) (bit_or (constant ? 32) (tmp 84) (tmp 85)))
      (set-reg dst (tmp 86))
      (= (tmp 87) (sub (constant ? 32) (tmp 81) (constant ? 14)))
      (= (tmp 88) (icmp sgt (constant ? 32) (tmp 87) (constant ? 0)))
      (br (tmp 88) bb_3 bb_4)
      (label bb_3)
      (= (tmp 89) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 90) (shl (constant ? 32) (tmp 89) (constant ? 1)))
      (= (tmp 91) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 92) (bit_or (constant ? 32) (tmp 90) (tmp 91)))
      (set-reg dst (tmp 92))
      (= (tmp 93) (sub (constant ? 32) (tmp 87) (constant ? 15)))
      (= (tmp 94) (icmp sgt (constant ? 32) (tmp 93) (constant ? 0)))
      (br (tmp 94) bb_0 bb_1)
      (label bb_0)
      (= (tmp 95) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 96) (shl (constant ? 32) (tmp 95) (constant ? 1)))
      (= (tmp 97) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 98) (bit_or (constant ? 32) (tmp 96) (tmp 97)))
      (set-reg dst (tmp 98))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 99) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_4)
      (br bb_5)
      (label bb_5)
      (= (tmp 100) (phi (((tmp 99) . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_7)
      (br bb_8)
      (label bb_8)
      (= (tmp 101) (phi (((tmp 100) . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_10)
      (br bb_11)
      (label bb_11)
      (= (tmp 102) (phi (((tmp 101) . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_13)
      (br bb_14)
      (label bb_14)
      (= (tmp 103) (phi (((tmp 102) . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_16)
      (br bb_17)
      (label bb_17)
      (= (tmp 104) (phi (((tmp 103) . bb_15) (no-value . bb_16))))
      (br bb_20)
      (label bb_19)
      (br bb_20)
      (label bb_20)
      (= (tmp 105) (phi (((tmp 104) . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_22)
      (br bb_23)
      (label bb_23)
      (= (tmp 106) (phi (((tmp 105) . bb_21) (no-value . bb_22))))
      (br bb_26)
      (label bb_25)
      (br bb_26)
      (label bb_26)
      (= (tmp 107) (phi (((tmp 106) . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_28)
      (br bb_29)
      (label bb_29)
      (= (tmp 108) (phi (((tmp 107) . bb_27) (no-value . bb_28))))
      (br bb_32)
      (label bb_31)
      (br bb_32)
      (label bb_32)
      (= (tmp 109) (phi (((tmp 108) . bb_30) (no-value . bb_31))))
      (br bb_35)
      (label bb_34)
      (br bb_35)
      (label bb_35)
      (= (tmp 110) (phi (((tmp 109) . bb_33) (no-value . bb_34))))
      (br bb_38)
      (label bb_37)
      (br bb_38)
      (label bb_38)
      (= (tmp 111) (phi (((tmp 110) . bb_36) (no-value . bb_37))))
      (br bb_41)
      (label bb_40)
      (br bb_41)
      (label bb_41)
      (= (tmp 112) (phi (((tmp 111) . bb_39) (no-value . bb_40))))
      (br bb_44)
      (label bb_43)
      (br bb_44)
      (label bb_44)
      (= (tmp 113) (phi (((tmp 112) . bb_42) (no-value . bb_43))))
      (br bb_47)
      (label bb_46)
      (br bb_47)
      (label bb_47)
      (= (tmp 114) (phi (((tmp 113) . bb_45) (no-value . bb_46))))
      (set-reg (tmp 115) (constant ? 0)))))

(instruction
  mv_a16_r16++
  (pattern
    (constraints
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (allocate-in (tmp 7) (reg-flag z rN))
      (aliases (src (tmp 4)))
      (allocate-in rN (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (store (constant ? 16) ldm rN (tmp 4))
      (= (tmp 6) (add (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 6))
      (= (tmp 8) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 7) (tmp 9)))))

(instruction
  flabs_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 10) (reg-flag ex dst))
      (allocate-in (tmp 14) (reg-flag mi dst))
      (allocate-in (tmp 5) (reg-flag a dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag ex dst))
      (allocate-in (tmp 11) (reg-flag ex dst)))
    (code
      (= (tmp 0) (fcmp olt (constant ? 32) src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (fsub (constant ? 40) (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (set-reg dst (tmp 2))
      (= (tmp 4) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (icmp (constant ? 40) eq (tmp 5) (constant ? 0)))
      (br (tmp 6) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 7) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 9) (icmp (constant ? 40) eq (tmp 8) (constant ? -1)))
      (br (tmp 9) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 10) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 11) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 13) (phi ((no-value . bb_6) ((tmp 12) . bb_7))))
      (= (tmp 15) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 14) (tmp 15)))))

(instruction
  subs_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 53) (reg-flag mi dst))
      (allocate-in (tmp 48) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag of dst))
      (allocate-in (tmp 14) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag ex dst))
      (allocate-in (tmp 42) (reg-flag a dst))
      (allocate-in (tmp 10) (reg-flag of dst))
      (allocate-in (tmp 47) (reg-flag ex dst))
      (allocate-in (tmp 15) (reg-flag c dst))
      (allocate-in (tmp 45) (reg-flag a dst))
      (allocate-in (tmp 6) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 51) (reg-flag ac dst)))
    (code
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 3) (sub (constant ? 32) (tmp 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 5) (icmp (constant ? 32) sgt (tmp 3) (tmp 4)))
      (br (tmp 5) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 6) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 7) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 8) (icmp (constant ? 32) sgt (tmp 3) (tmp 7)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 10) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 13) (icmp (constant ? 33) slt (constant ? 0) (tmp 3)))
      (br (tmp 13) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 17) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 18) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 19) (satsub (constant ? 32) (tmp 17) (tmp 18)))
      (set-reg dst (tmp 19))
      (set-reg dst no-value)
      (= (tmp 43) (icmp (constant ? 40) eq (tmp 42) (constant ? 0)))
      (br (tmp 43) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 44) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 46) (icmp (constant ? 40) eq (tmp 45) (constant ? -1)))
      (br (tmp 46) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 47) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 48) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 49) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 50) (phi ((no-value . bb_21) ((tmp 49) . bb_22))))
      (= (tmp 52) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 51) (tmp 52))
      (= (tmp 54) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 53) (tmp 54))))
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag of dst))
      (allocate-in (tmp 33) (reg-flag c dst))
      (allocate-in (tmp 48) (reg-flag ex dst))
      (allocate-in (tmp 29) (reg-flag of dst))
      (allocate-in (tmp 34) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 25) (reg-flag of dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 44) (reg-flag ex dst))
      (allocate-in (tmp 53) (reg-flag mi dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 42) (reg-flag a dst))
      (allocate-in (tmp 47) (reg-flag ex dst))
      (allocate-in (tmp 45) (reg-flag a dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 51) (reg-flag ac dst)))
    (code
      (= (tmp 20) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 21) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 22) (sub (constant ? 32) (tmp 20) (tmp 21)))
      (= (tmp 23) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 24) (icmp (constant ? 32) sgt (tmp 22) (tmp 23)))
      (br (tmp 24) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 25) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 26) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 27) (icmp (constant ? 32) sgt (tmp 22) (tmp 26)))
      (br (tmp 27) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 30) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 31) (phi ((no-value . bb_12) ((tmp 30) . bb_13))))
      (= (tmp 32) (icmp (constant ? 33) slt (constant ? 0) (tmp 22)))
      (br (tmp 32) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 33) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 34) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 35) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 36) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 37) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 38) (sub (constant ? 32) (tmp 36) (tmp 37)))
      (set-reg dst (tmp 38))
      (set-reg dst no-value)
      (= (tmp 43) (icmp (constant ? 40) eq (tmp 42) (constant ? 0)))
      (br (tmp 43) bb_21 bb_22)
      (label bb_21)
      (set-reg (tmp 44) (constant ? 1))
      (br bb_23)
      (label bb_22)
      (= (tmp 46) (icmp (constant ? 40) eq (tmp 45) (constant ? -1)))
      (br (tmp 46) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 47) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (set-reg (tmp 48) (constant ? 0))
      (br bb_20)
      (label bb_20)
      (= (tmp 49) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 50) (phi ((no-value . bb_21) ((tmp 49) . bb_22))))
      (= (tmp 52) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 51) (tmp 52))
      (= (tmp 54) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 53) (tmp 54)))))

(instruction
  scgx_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 70) (reg-flag mi dst))
      (allocate-in (tmp 76) (reg-flag op dst))
      (allocate-in (tmp 74) (reg-flag ls dst))
      (allocate-in (tmp 68) (reg-flag ac dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 72) (reg-flag ms dst))
      (allocate-in (tmp 0) (reg-flag ag dst)))
    (code
      (set-reg (tmp 0) (constant ? 0))
      (= (tmp 1) (reg-range dst (constant ? 17) (constant ? 31)))
      (= (tmp 2) (reg-range src (constant ? 1) (constant ? 15)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 16)))
      (= (tmp 4) (reg-range src (constant ? 31) (constant ? 31)))
      (= (tmp 5) (reg-range src (constant ? 28) (constant ? 28)))
      (= (tmp 6) (bit_xor (constant ? 1) (tmp 4) (tmp 5)))
      (set-reg (tmp 3) (tmp 6))
      (= (tmp 7) (reg-range dst (constant ? 15) (constant ? 15)))
      (= (tmp 8) (reg-range src (constant ? 30) (constant ? 30)))
      (= (tmp 9) (reg-range src (constant ? 27) (constant ? 27)))
      (= (tmp 10) (bit_xor (constant ? 1) (tmp 8) (tmp 9)))
      (set-reg (tmp 7) (tmp 10))
      (= (tmp 11) (reg-range dst (constant ? 14) (constant ? 14)))
      (= (tmp 12) (reg-range src (constant ? 29) (constant ? 29)))
      (= (tmp 13) (reg-range src (constant ? 26) (constant ? 26)))
      (= (tmp 14) (bit_xor (constant ? 1) (tmp 12) (tmp 13)))
      (set-reg (tmp 11) (tmp 14))
      (= (tmp 15) (reg-range dst (constant ? 13) (constant ? 13)))
      (= (tmp 16) (reg-range src (constant ? 28) (constant ? 28)))
      (= (tmp 17) (reg-range src (constant ? 25) (constant ? 25)))
      (= (tmp 18) (bit_xor (constant ? 1) (tmp 16) (tmp 17)))
      (set-reg (tmp 15) (tmp 18))
      (= (tmp 19) (reg-range dst (constant ? 12) (constant ? 12)))
      (= (tmp 20) (reg-range src (constant ? 27) (constant ? 27)))
      (= (tmp 21) (reg-range src (constant ? 24) (constant ? 24)))
      (= (tmp 22) (bit_xor (constant ? 1) (tmp 20) (tmp 21)))
      (set-reg (tmp 19) (tmp 22))
      (= (tmp 23) (reg-range dst (constant ? 11) (constant ? 11)))
      (= (tmp 24) (reg-range src (constant ? 26) (constant ? 26)))
      (= (tmp 25) (reg-range src (constant ? 23) (constant ? 23)))
      (= (tmp 26) (bit_xor (constant ? 1) (tmp 24) (tmp 25)))
      (set-reg (tmp 23) (tmp 26))
      (= (tmp 27) (reg-range dst (constant ? 10) (constant ? 10)))
      (= (tmp 28) (reg-range src (constant ? 25) (constant ? 25)))
      (= (tmp 29) (reg-range src (constant ? 22) (constant ? 22)))
      (= (tmp 30) (bit_xor (constant ? 1) (tmp 28) (tmp 29)))
      (set-reg (tmp 27) (tmp 30))
      (= (tmp 31) (reg-range dst (constant ? 9) (constant ? 9)))
      (= (tmp 32) (reg-range src (constant ? 24) (constant ? 24)))
      (= (tmp 33) (reg-range src (constant ? 21) (constant ? 21)))
      (= (tmp 34) (bit_xor (constant ? 1) (tmp 32) (tmp 33)))
      (set-reg (tmp 31) (tmp 34))
      (= (tmp 35) (reg-range dst (constant ? 8) (constant ? 8)))
      (= (tmp 36) (reg-range src (constant ? 23) (constant ? 23)))
      (= (tmp 37) (reg-range src (constant ? 20) (constant ? 20)))
      (= (tmp 38) (bit_xor (constant ? 1) (tmp 36) (tmp 37)))
      (set-reg (tmp 35) (tmp 38))
      (= (tmp 39) (reg-range dst (constant ? 7) (constant ? 7)))
      (= (tmp 40) (reg-range src (constant ? 22) (constant ? 22)))
      (= (tmp 41) (reg-range src (constant ? 19) (constant ? 19)))
      (= (tmp 42) (bit_xor (constant ? 1) (tmp 40) (tmp 41)))
      (set-reg (tmp 39) (tmp 42))
      (= (tmp 43) (reg-range dst (constant ? 6) (constant ? 6)))
      (= (tmp 44) (reg-range src (constant ? 21) (constant ? 21)))
      (= (tmp 45) (reg-range src (constant ? 18) (constant ? 18)))
      (= (tmp 46) (bit_xor (constant ? 1) (tmp 44) (tmp 45)))
      (set-reg (tmp 43) (tmp 46))
      (= (tmp 47) (reg-range dst (constant ? 5) (constant ? 5)))
      (= (tmp 48) (reg-range src (constant ? 20) (constant ? 20)))
      (= (tmp 49) (reg-range src (constant ? 17) (constant ? 17)))
      (= (tmp 50) (bit_xor (constant ? 1) (tmp 48) (tmp 49)))
      (set-reg (tmp 47) (tmp 50))
      (= (tmp 51) (reg-range dst (constant ? 4) (constant ? 4)))
      (= (tmp 52) (reg-range src (constant ? 19) (constant ? 19)))
      (= (tmp 53) (reg-range src (constant ? 16) (constant ? 16)))
      (= (tmp 54) (bit_xor (constant ? 1) (tmp 52) (tmp 53)))
      (set-reg (tmp 51) (tmp 54))
      (= (tmp 55) (reg-range dst (constant ? 3) (constant ? 3)))
      (= (tmp 56) (reg-range src (constant ? 18) (constant ? 18)))
      (= (tmp 57) (reg-range src (constant ? 15) (constant ? 15)))
      (= (tmp 58) (bit_xor (constant ? 1) (tmp 56) (tmp 57)))
      (set-reg (tmp 55) (tmp 58))
      (= (tmp 59) (reg-range dst (constant ? 2) (constant ? 2)))
      (= (tmp 60) (reg-range src (constant ? 17) (constant ? 17)))
      (= (tmp 61) (reg-range src (constant ? 14) (constant ? 14)))
      (= (tmp 62) (bit_xor (constant ? 1) (tmp 60) (tmp 61)))
      (set-reg (tmp 59) (tmp 62))
      (= (tmp 63) (reg-range dst (constant ? 1) (constant ? 1)))
      (= (tmp 64) (reg-range src (constant ? 16) (constant ? 16)))
      (= (tmp 65) (reg-range src (constant ? 13) (constant ? 13)))
      (= (tmp 66) (bit_xor (constant ? 1) (tmp 64) (tmp 65)))
      (set-reg (tmp 63) (tmp 66))
      (= (tmp 67) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 67) (constant ? 0))
      (= (tmp 69) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 68) (tmp 69))
      (= (tmp 71) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 70) (tmp 71))
      (= (tmp 73) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 72) (tmp 73))
      (= (tmp 75) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 74) (tmp 75))
      (= (tmp 77) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 77) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 78) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 76) (tmp 78)))))

(instruction
  acc_a40_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 1) (add (constant ? 40) src1 src2))
      (= (tmp 2) (satadd (constant ? 40) dst (tmp 1)))
      (set-reg dst (tmp 2))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 3) (add (constant ? 40) src1 src2))
      (= (tmp 4) (add (constant ? 40) dst (tmp 3)))
      (set-reg dst (tmp 4)))))

(instruction
  massu_nimm1_a40_a40_a80
  (pattern
    (constraints
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 36) (reg-flag of dst))
      (allocate-in (tmp 50) (reg-flag ex dst))
      (allocate-in (tmp 34) (reg-flag of dst))
      (allocate-in dst (a10 a32 a54 a76))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 27) (tmp 31) (tmp 5)))
      (allocate-in (tmp 44) (reg-flag a dst))
      (allocate-in (tmp 53) (reg-flag mi dst))
      (allocate-in (tmp 42) (reg-flag ac dst))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 47) (reg-flag a dst))
      (allocate-in (tmp 49) (reg-flag ex dst))
      (allocate-in (tmp 37) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 41) (reg-flag even-guard dst)))
    (code
      (= (tmp 3) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 4) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 5) (mul (constant ? 40) (tmp 3) (tmp 4)))
      (= (tmp 32) (sub (constant ? 40) dst (tmp 31)))
      (= (tmp 33) (icmp (constant ? 40) sgt (tmp 32) dst))
      (br (tmp 33) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 34) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 35) (icmp (constant ? 40) sgt (tmp 32) (tmp 31)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 36) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 37) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 39) (phi ((no-value . bb_3) ((tmp 38) . bb_4))))
      (= (tmp 40) (sub (constant ? 40) dst (tmp 31)))
      (set-reg dst (tmp 40))
      (set-reg dst no-value)
      (set-reg (tmp 41) (constant ? 0))
      (= (tmp 43) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 42) (tmp 43))
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? 0)))
      (br (tmp 45) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 48) (icmp (constant ? 40) eq (tmp 47) (constant ? -1)))
      (br (tmp 48) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 49) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 50) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 51) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 52) (phi ((no-value . bb_9) ((tmp 51) . bb_10))))
      (= (tmp 54) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 53) (tmp 54))))
  (pattern
    (constraints
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 36) (reg-flag of dst))
      (allocate-in (tmp 50) (reg-flag ex dst))
      (allocate-in (tmp 34) (reg-flag of dst))
      (allocate-in dst (a10 a32 a54 a76))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 27) (tmp 26) (tmp 31) (tmp 11)))
      (allocate-in (tmp 44) (reg-flag a dst))
      (allocate-in (tmp 53) (reg-flag mi dst))
      (allocate-in (tmp 42) (reg-flag ac dst))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 47) (reg-flag a dst))
      (allocate-in (tmp 49) (reg-flag ex dst))
      (allocate-in (tmp 37) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 41) (reg-flag even-guard dst)))
    (code
      (= (tmp 8) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 9) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 10) (mul (constant ? 40) (tmp 8) (tmp 9)))
      (= (tmp 11) (shl (constant ? 40) (tmp 10) (constant ? 1)))
      (= (tmp 32) (sub (constant ? 40) dst (tmp 31)))
      (= (tmp 33) (icmp (constant ? 40) sgt (tmp 32) dst))
      (br (tmp 33) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 34) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 35) (icmp (constant ? 40) sgt (tmp 32) (tmp 31)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 36) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 37) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 39) (phi ((no-value . bb_3) ((tmp 38) . bb_4))))
      (= (tmp 40) (sub (constant ? 40) dst (tmp 31)))
      (set-reg dst (tmp 40))
      (set-reg dst no-value)
      (set-reg (tmp 41) (constant ? 0))
      (= (tmp 43) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 42) (tmp 43))
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? 0)))
      (br (tmp 45) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 48) (icmp (constant ? 40) eq (tmp 47) (constant ? -1)))
      (br (tmp 48) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 49) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 50) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 51) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 52) (phi ((no-value . bb_9) ((tmp 51) . bb_10))))
      (= (tmp 54) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 53) (tmp 54))))
  (pattern
    (constraints
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 36) (reg-flag of dst))
      (allocate-in (tmp 50) (reg-flag ex dst))
      (allocate-in (tmp 34) (reg-flag of dst))
      (allocate-in dst (a10 a32 a54 a76))
      (aliases ((tmp 31) (tmp 30)))
      (allocate-in (tmp 44) (reg-flag a dst))
      (allocate-in (tmp 53) (reg-flag mi dst))
      (allocate-in (tmp 42) (reg-flag ac dst))
      (allocate-in (tmp 46) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 47) (reg-flag a dst))
      (allocate-in (tmp 49) (reg-flag ex dst))
      (allocate-in (tmp 37) (reg-flag of dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 41) (reg-flag even-guard dst)))
    (code
      (= (tmp 28) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 29) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 30) (mul (constant ? 40) (tmp 28) (tmp 29)))
      (= (tmp 32) (sub (constant ? 40) dst (tmp 31)))
      (= (tmp 33) (icmp (constant ? 40) sgt (tmp 32) dst))
      (br (tmp 33) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 34) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 35) (icmp (constant ? 40) sgt (tmp 32) (tmp 31)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 36) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 37) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 39) (phi ((no-value . bb_3) ((tmp 38) . bb_4))))
      (= (tmp 40) (sub (constant ? 40) dst (tmp 31)))
      (set-reg dst (tmp 40))
      (set-reg dst no-value)
      (set-reg (tmp 41) (constant ? 0))
      (= (tmp 43) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 42) (tmp 43))
      (= (tmp 45) (icmp (constant ? 40) eq (tmp 44) (constant ? 0)))
      (br (tmp 45) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 46) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 48) (icmp (constant ? 40) eq (tmp 47) (constant ? -1)))
      (br (tmp 48) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 49) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 50) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 51) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 52) (phi ((no-value . bb_9) ((tmp 51) . bb_10))))
      (= (tmp 54) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 53) (tmp 54)))))

(instruction
  bpackls_a40_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 16) (constant ? 23)))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  max_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ex dst))
      (allocate-in (tmp 12) (reg-flag ex dst))
      (allocate-in (tmp 11) (reg-flag ex dst))
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag ac dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag mi dst))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in (tmp 6) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (icmp sgt (constant ? 40) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (icmp (constant ? 40) eq (tmp 6) (constant ? 0)))
      (br (tmp 7) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 8) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? -1)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 12) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 13) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) ((tmp 13) . bb_7))))
      (= (tmp 16) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 15) (tmp 16)))))

(instruction
  amax4_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 18) (reg-flag nb (register cuf)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 17) (reg-flag nb (register cuf))))
    (code
      (= (tmp 0) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 1) (icmp gt (constant ? 16) (tmp 0) (register cb)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (set-reg (register cb) (tmp 0))
      (set-reg (register cd) (register ct))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 3) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 16) (register ct) (constant ? 1)))
      (= (tmp 5) (icmp gt (constant ? 16) (tmp 3) (register cb)))
      (br (tmp 5) bb_3 bb_4)
      (label bb_3)
      (set-reg (register cb) (tmp 3))
      (set-reg (register cd) (tmp 4))
      (br bb_5)
      (label bb_4)
      (br bb_5)
      (label bb_5)
      (= (tmp 6) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 7) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 8) (add (constant ? 16) (register ct) (constant ? 2)))
      (= (tmp 9) (icmp gt (constant ? 16) (tmp 7) (register cb)))
      (br (tmp 9) bb_6 bb_7)
      (label bb_6)
      (set-reg (register cb) (tmp 7))
      (set-reg (register cd) (tmp 8))
      (br bb_8)
      (label bb_7)
      (br bb_8)
      (label bb_8)
      (= (tmp 10) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 11) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 12) (add (constant ? 16) (register ct) (constant ? 3)))
      (= (tmp 13) (icmp gt (constant ? 16) (tmp 11) (register cb)))
      (br (tmp 13) bb_9 bb_10)
      (label bb_9)
      (set-reg (register cb) (tmp 11))
      (set-reg (register cd) (tmp 12))
      (br bb_11)
      (label bb_10)
      (br bb_11)
      (label bb_11)
      (= (tmp 14) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 15) (add (constant ? 16) (register ct) (constant ? 4)))
      (set-reg (register ct) (tmp 15))
      (= (tmp 16) (icmp sgt (constant ? 16) (register cb) (register cb)))
      (br (tmp 16) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 17) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 18) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 19) (phi ((no-value . bb_12) (no-value . bb_13)))))))

(instruction
  mv_a16_r16-no-modifier
  (pattern
    (constraints
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (allocate-in (tmp 6) (reg-flag z rN))
      (aliases (src (tmp 4)))
      (allocate-in rN (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (store (constant ? 16) ldm rN (tmp 4))
      (= (tmp 7) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 7) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 8) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 6) (tmp 8)))))

(instruction
  maxs_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag a dst))
      (allocate-in (tmp 10) (reg-flag ex dst))
      (allocate-in (tmp 11) (reg-flag a dst))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 17) (reg-flag mi dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 14) (reg-flag ex dst)))
    (code
      (= (tmp 0) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (icmp sgt (constant ? 32) (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (icmp (constant ? 40) eq (tmp 8) (constant ? 0)))
      (br (tmp 9) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 10) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 12) (icmp (constant ? 40) eq (tmp 11) (constant ? -1)))
      (br (tmp 12) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 14) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 15) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 16) (phi ((no-value . bb_6) ((tmp 15) . bb_7))))
      (= (tmp 18) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 17) (tmp 18)))))

(instruction
  and_a40_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 1) (reg-flag ac dst))
      (allocate-in (tmp 9) (reg-flag op dst))
      (allocate-in (tmp 5) (reg-flag ms dst))
      (allocate-in (tmp 3) (reg-flag mi dst))
      (allocate-in (tmp 7) (reg-flag ls dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (bit_and (constant ? 40) src1 src2))
      (set-reg dst (tmp 0))
      (= (tmp 2) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 10) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 9) (tmp 11)))))

(instruction
  impy_nimm2_a16_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag ex dst))
      (allocate-in (tmp 25) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases ((tmp 6) (tmp 8)) ((tmp 2) (tmp 4)) ((tmp 9) (tmp 19)))
      (allocate-in (tmp 24) (reg-flag ex dst))
      (allocate-in (tmp 31) (reg-flag mi dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 27) (reg-flag ex dst))
      (allocate-in (tmp 20) (reg-flag ac dst))
      (allocate-in (tmp 22) (reg-flag a dst))
      (immediate sat-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 2) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 6) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 9) (mul (constant ? 40) (tmp 4) (tmp 8)))
      (set-reg dst (tmp 19))
      (= (tmp 21) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 20) (tmp 21))
      (= (tmp 23) (icmp (constant ? 40) eq (tmp 22) (constant ? 0)))
      (br (tmp 23) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 26) (icmp (constant ? 40) eq (tmp 25) (constant ? -1)))
      (br (tmp 26) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 27) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 28) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 29) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 30) (phi ((no-value . bb_3) ((tmp 29) . bb_4))))
      (= (tmp 32) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 31) (tmp 32))))
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag ex dst))
      (allocate-in (tmp 25) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases ((tmp 7) (tmp 8)) ((tmp 3) (tmp 4)) ((tmp 9) (tmp 19)))
      (allocate-in (tmp 24) (reg-flag ex dst))
      (allocate-in (tmp 31) (reg-flag mi dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 27) (reg-flag ex dst))
      (allocate-in (tmp 20) (reg-flag ac dst))
      (allocate-in (tmp 22) (reg-flag a dst))
      (immediate sat-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 3) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 7) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 9) (mul (constant ? 40) (tmp 4) (tmp 8)))
      (set-reg dst (tmp 19))
      (= (tmp 21) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 20) (tmp 21))
      (= (tmp 23) (icmp (constant ? 40) eq (tmp 22) (constant ? 0)))
      (br (tmp 23) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 26) (icmp (constant ? 40) eq (tmp 25) (constant ? -1)))
      (br (tmp 26) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 27) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 28) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 29) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 30) (phi ((no-value . bb_3) ((tmp 29) . bb_4))))
      (= (tmp 32) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 31) (tmp 32))))
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag ex dst))
      (allocate-in (tmp 25) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases ((tmp 15) (tmp 17)) ((tmp 11) (tmp 13)) ((tmp 18) (tmp 19)))
      (allocate-in (tmp 24) (reg-flag ex dst))
      (allocate-in (tmp 31) (reg-flag mi dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 27) (reg-flag ex dst))
      (allocate-in (tmp 20) (reg-flag ac dst))
      (allocate-in (tmp 22) (reg-flag a dst))
      (immediate sat-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 11) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 15) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 18) (mul (constant ? 40) (tmp 13) (tmp 17)))
      (set-reg dst (tmp 19))
      (= (tmp 21) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 20) (tmp 21))
      (= (tmp 23) (icmp (constant ? 40) eq (tmp 22) (constant ? 0)))
      (br (tmp 23) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 26) (icmp (constant ? 40) eq (tmp 25) (constant ? -1)))
      (br (tmp 26) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 27) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 28) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 29) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 30) (phi ((no-value . bb_3) ((tmp 29) . bb_4))))
      (= (tmp 32) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 31) (tmp 32))))
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag ex dst))
      (allocate-in (tmp 25) (reg-flag a dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (aliases ((tmp 16) (tmp 17)) ((tmp 12) (tmp 13)) ((tmp 18) (tmp 19)))
      (allocate-in (tmp 24) (reg-flag ex dst))
      (allocate-in (tmp 31) (reg-flag mi dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 27) (reg-flag ex dst))
      (allocate-in (tmp 20) (reg-flag ac dst))
      (allocate-in (tmp 22) (reg-flag a dst))
      (immediate sat-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 12) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 16) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 18) (mul (constant ? 40) (tmp 13) (tmp 17)))
      (set-reg dst (tmp 19))
      (= (tmp 21) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 20) (tmp 21))
      (= (tmp 23) (icmp (constant ? 40) eq (tmp 22) (constant ? 0)))
      (br (tmp 23) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 24) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 26) (icmp (constant ? 40) eq (tmp 25) (constant ? -1)))
      (br (tmp 26) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 27) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 28) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 29) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 30) (phi ((no-value . bb_3) ((tmp 29) . bb_4))))
      (= (tmp 32) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 31) (tmp 32)))))

(instruction
  norm_a40_a16
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag a dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 10) (reg-flag ex dst))
      (allocate-in (tmp 14) (reg-flag mi dst))
      (allocate-in (tmp 5) (reg-flag a dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag ex dst))
      (allocate-in (tmp 11) (reg-flag ex dst)))
    (code
      (set-reg dst (constant ? 1))
      (= (tmp 4) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (icmp (constant ? 40) eq (tmp 5) (constant ? 0)))
      (br (tmp 6) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 7) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 9) (icmp (constant ? 40) eq (tmp 8) (constant ? -1)))
      (br (tmp 9) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 10) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 11) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 13) (phi ((no-value . bb_3) ((tmp 12) . bb_4))))
      (= (tmp 15) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 14) (tmp 15))))
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag a dst))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 10) (reg-flag ex dst))
      (allocate-in (tmp 14) (reg-flag mi dst))
      (allocate-in (tmp 5) (reg-flag a dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag ex dst))
      (allocate-in (tmp 0) (reg-flag a dst))
      (allocate-in (tmp 11) (reg-flag ex dst)))
    (code
      (set-reg dst (constant ? 1))
      (= (tmp 1) (reg-range (tmp 0) (constant ? 16) (constant ? 39)))
      (= (tmp 2) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (icmp (constant ? 40) eq (tmp 5) (constant ? 0)))
      (br (tmp 6) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 7) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 9) (icmp (constant ? 40) eq (tmp 8) (constant ? -1)))
      (br (tmp 9) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 10) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 11) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 13) (phi ((no-value . bb_3) ((tmp 12) . bb_4))))
      (= (tmp 15) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 14) (tmp 15)))))

(instruction
  cmph_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst)))
    (code
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 1) (shl (constant ? 40) (tmp 0) (constant ? 16)))
      (= (tmp 3) (icmp eq (constant ? 16) dst (tmp 1)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (icmp slt (constant ? 16) dst (tmp 1)))
      (set-reg (tmp 4) (tmp 5)))))

(instruction
  mv_r16_a16--
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 35) (reg-flag z dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 3) (zext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 3))
      (= (tmp 34) (sub (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag z dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 4) (sext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 4))
      (= (tmp 34) (sub (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag l dst ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag z dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 0))
      (= (tmp 34) (sub (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 12) (reg-flag al dst))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 35) (reg-flag z dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 17) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 17))
      (= (tmp 34) (sub (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 12) (reg-flag al dst))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag z dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 18) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 18))
      (= (tmp 34) (sub (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 35) (reg-flag z dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 26) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 26))
      (= (tmp 34) (sub (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag z dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 27) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 27))
      (= (tmp 34) (sub (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 35) (reg-flag z dst)))
    (code
      (= (tmp 33) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 33))
      (= (tmp 34) (sub (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37)))))

(instruction
  andnot_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 6) (reg-flag ms dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (bit_not (constant ? 40) src2))
      (= (tmp 1) (bit_and (constant ? 40) src1 (tmp 0)))
      (set-reg dst (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 1) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 1) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 1) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  imac_nimm2_a16_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 70) (reg-flag mi dst))
      (allocate-in (tmp 61) (reg-flag a dst))
      (allocate-in (tmp 25) (reg-flag of dst))
      (allocate-in (tmp 66) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 26) (reg-flag of dst))
      (allocate-in (tmp 23) (reg-flag of dst))
      (aliases ((tmp 8) (tmp 9)) ((tmp 4) (tmp 5)) ((tmp 10) (tmp 20)))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 59) (reg-flag ac dst))
      (allocate-in (tmp 64) (reg-flag a dst))
      (allocate-in (tmp 67) (reg-flag ex dst))
      (immediate sat-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 63) (reg-flag ex dst)))
    (code
      (= (tmp 4) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 8) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 10) (mul (constant ? 40) (tmp 5) (tmp 9)))
      (= (tmp 21) (add (constant ? 40) dst (tmp 20)))
      (= (tmp 22) (icmp (constant ? 40) slt (tmp 21) dst))
      (br (tmp 22) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 24) (icmp (constant ? 40) slt (tmp 21) (tmp 20)))
      (br (tmp 24) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 25) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 26) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 27) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 28) (phi ((no-value . bb_3) ((tmp 27) . bb_4))))
      (= (tmp 29) (add (constant ? 40) dst (tmp 20)))
      (set-reg dst (tmp 29))
      (set-reg dst no-value)
      (= (tmp 60) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 59) (tmp 60))
      (= (tmp 62) (icmp (constant ? 40) eq (tmp 61) (constant ? 0)))
      (br (tmp 62) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 63) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 65) (icmp (constant ? 40) eq (tmp 64) (constant ? -1)))
      (br (tmp 65) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 68) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 69) (phi ((no-value . bb_15) ((tmp 68) . bb_16))))
      (= (tmp 71) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 70) (tmp 71))))
  (pattern
    (constraints
      (allocate-in (tmp 70) (reg-flag mi dst))
      (allocate-in (tmp 61) (reg-flag a dst))
      (allocate-in (tmp 25) (reg-flag of dst))
      (allocate-in (tmp 66) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 26) (reg-flag of dst))
      (allocate-in (tmp 23) (reg-flag of dst))
      (aliases ((tmp 7) (tmp 9)) ((tmp 3) (tmp 5)) ((tmp 10) (tmp 20)))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 59) (reg-flag ac dst))
      (allocate-in (tmp 64) (reg-flag a dst))
      (allocate-in (tmp 67) (reg-flag ex dst))
      (immediate sat-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 63) (reg-flag ex dst)))
    (code
      (= (tmp 3) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 7) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 10) (mul (constant ? 40) (tmp 5) (tmp 9)))
      (= (tmp 21) (add (constant ? 40) dst (tmp 20)))
      (= (tmp 22) (icmp (constant ? 40) slt (tmp 21) dst))
      (br (tmp 22) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 24) (icmp (constant ? 40) slt (tmp 21) (tmp 20)))
      (br (tmp 24) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 25) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 26) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 27) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 28) (phi ((no-value . bb_3) ((tmp 27) . bb_4))))
      (= (tmp 29) (add (constant ? 40) dst (tmp 20)))
      (set-reg dst (tmp 29))
      (set-reg dst no-value)
      (= (tmp 60) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 59) (tmp 60))
      (= (tmp 62) (icmp (constant ? 40) eq (tmp 61) (constant ? 0)))
      (br (tmp 62) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 63) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 65) (icmp (constant ? 40) eq (tmp 64) (constant ? -1)))
      (br (tmp 65) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 68) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 69) (phi ((no-value . bb_15) ((tmp 68) . bb_16))))
      (= (tmp 71) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 70) (tmp 71))))
  (pattern
    (constraints
      (allocate-in (tmp 70) (reg-flag mi dst))
      (allocate-in (tmp 66) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 61) (reg-flag a dst))
      (aliases ((tmp 47) (tmp 46)) ((tmp 43) (tmp 42)) ((tmp 49) (tmp 48)))
      (allocate-in (tmp 55) (reg-flag of dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 52) (reg-flag of dst))
      (allocate-in (tmp 59) (reg-flag ac dst))
      (allocate-in (tmp 64) (reg-flag a dst))
      (allocate-in (tmp 67) (reg-flag ex dst))
      (allocate-in (tmp 54) (reg-flag of dst))
      (immediate sat-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 63) (reg-flag ex dst)))
    (code
      (= (tmp 42) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 46) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 48) (mul (constant ? 40) (tmp 43) (tmp 47)))
      (= (tmp 50) (add (constant ? 40) dst (tmp 49)))
      (= (tmp 51) (icmp (constant ? 40) slt (tmp 50) dst))
      (br (tmp 51) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 52) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 53) (icmp (constant ? 40) slt (tmp 50) (tmp 49)))
      (br (tmp 53) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 54) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 55) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 56) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 57) (phi ((no-value . bb_9) ((tmp 56) . bb_10))))
      (= (tmp 58) (add (constant ? 40) dst (tmp 49)))
      (set-reg dst (tmp 58))
      (set-reg dst no-value)
      (= (tmp 60) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 59) (tmp 60))
      (= (tmp 62) (icmp (constant ? 40) eq (tmp 61) (constant ? 0)))
      (br (tmp 62) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 63) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 65) (icmp (constant ? 40) eq (tmp 64) (constant ? -1)))
      (br (tmp 65) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 68) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 69) (phi ((no-value . bb_15) ((tmp 68) . bb_16))))
      (= (tmp 71) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 70) (tmp 71))))
  (pattern
    (constraints
      (allocate-in (tmp 70) (reg-flag mi dst))
      (allocate-in (tmp 66) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 61) (reg-flag a dst))
      (aliases ((tmp 45) (tmp 47)) ((tmp 41) (tmp 43)) ((tmp 49) (tmp 48)))
      (allocate-in (tmp 55) (reg-flag of dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 52) (reg-flag of dst))
      (allocate-in (tmp 59) (reg-flag ac dst))
      (allocate-in (tmp 64) (reg-flag a dst))
      (allocate-in (tmp 67) (reg-flag ex dst))
      (allocate-in (tmp 54) (reg-flag of dst))
      (immediate sat-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 63) (reg-flag ex dst)))
    (code
      (= (tmp 41) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 45) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 48) (mul (constant ? 40) (tmp 43) (tmp 47)))
      (= (tmp 50) (add (constant ? 40) dst (tmp 49)))
      (= (tmp 51) (icmp (constant ? 40) slt (tmp 50) dst))
      (br (tmp 51) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 52) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 53) (icmp (constant ? 40) slt (tmp 50) (tmp 49)))
      (br (tmp 53) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 54) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 55) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 56) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 57) (phi ((no-value . bb_9) ((tmp 56) . bb_10))))
      (= (tmp 58) (add (constant ? 40) dst (tmp 49)))
      (set-reg dst (tmp 58))
      (set-reg dst no-value)
      (= (tmp 60) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 59) (tmp 60))
      (= (tmp 62) (icmp (constant ? 40) eq (tmp 61) (constant ? 0)))
      (br (tmp 62) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 63) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 65) (icmp (constant ? 40) eq (tmp 64) (constant ? -1)))
      (br (tmp 65) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 68) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 69) (phi ((no-value . bb_15) ((tmp 68) . bb_16))))
      (= (tmp 71) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 70) (tmp 71)))))

(instruction
  flmin_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 10) (reg-flag ex dst))
      (allocate-in (tmp 13) (reg-flag mi dst))
      (allocate-in (tmp 9) (reg-flag ex dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in (tmp 6) (reg-flag ex dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (fcmp olt (constant ? 32) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 1) (phi ((src1 . bb_0) (src2 . bb_1))))
      (set-reg dst (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (icmp (constant ? 40) eq (tmp 4) (constant ? 0)))
      (br (tmp 5) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 6) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 8) (icmp (constant ? 40) eq (tmp 7) (constant ? -1)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 10) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 12) (phi ((no-value . bb_6) ((tmp 11) . bb_7))))
      (= (tmp 14) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 13) (tmp 14)))))

(instruction
  mv_r16_a16++
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 35) (reg-flag z dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 3) (zext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 3))
      (= (tmp 34) (add (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag z dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 4) (sext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 4))
      (= (tmp 34) (add (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag l dst ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag z dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 0))
      (= (tmp 34) (add (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 12) (reg-flag al dst))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 35) (reg-flag z dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 17) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 17))
      (= (tmp 34) (add (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 12) (reg-flag al dst))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag z dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 18) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 18))
      (= (tmp 34) (add (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 35) (reg-flag z dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 26) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 26))
      (= (tmp 34) (add (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 35) (reg-flag z dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 27) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 27))
      (= (tmp 34) (add (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37))))
  (pattern
    (constraints
      (allocate-in dst (r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 35) (reg-flag z dst)))
    (code
      (= (tmp 33) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 33))
      (= (tmp 34) (add (size rN) rN (constant ? 1)))
      (set-reg rN (tmp 34))
      (= (tmp 36) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 36) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 37) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 35) (tmp 37)))))

(instruction
  amax8_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 42) (reg-flag nb (register cuf)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 41) (reg-flag nb (register cuf))))
    (code
      (= (tmp 0) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 1) (shl (constant ? 16) (tmp 0) (constant ? 8)))
      (= (tmp 2) (icmp gt (constant ? 16) (tmp 1) (register cb)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg (register cb) (tmp 1))
      (set-reg (register cd) (register ct))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 4) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 5) (shl (constant ? 16) (tmp 4) (constant ? 8)))
      (= (tmp 6) (add (constant ? 16) (register ct) (constant ? 1)))
      (= (tmp 7) (icmp gt (constant ? 16) (tmp 5) (register cb)))
      (br (tmp 7) bb_3 bb_4)
      (label bb_3)
      (set-reg (register cb) (tmp 5))
      (set-reg (register cd) (tmp 6))
      (br bb_5)
      (label bb_4)
      (br bb_5)
      (label bb_5)
      (= (tmp 8) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 9) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 10) (shl (constant ? 16) (tmp 9) (constant ? 8)))
      (= (tmp 11) (add (constant ? 16) (register ct) (constant ? 2)))
      (= (tmp 12) (icmp gt (constant ? 16) (tmp 10) (register cb)))
      (br (tmp 12) bb_6 bb_7)
      (label bb_6)
      (set-reg (register cb) (tmp 10))
      (set-reg (register cd) (tmp 11))
      (br bb_8)
      (label bb_7)
      (br bb_8)
      (label bb_8)
      (= (tmp 13) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 14) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 15) (shl (constant ? 16) (tmp 14) (constant ? 8)))
      (= (tmp 16) (add (constant ? 16) (register ct) (constant ? 3)))
      (= (tmp 17) (icmp gt (constant ? 16) (tmp 15) (register cb)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (set-reg (register cb) (tmp 15))
      (set-reg (register cd) (tmp 16))
      (br bb_11)
      (label bb_10)
      (br bb_11)
      (label bb_11)
      (= (tmp 18) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 19) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 20) (shl (constant ? 16) (tmp 19) (constant ? 8)))
      (= (tmp 21) (add (constant ? 16) (register ct) (constant ? 4)))
      (= (tmp 22) (icmp gt (constant ? 16) (tmp 20) (register cb)))
      (br (tmp 22) bb_12 bb_13)
      (label bb_12)
      (set-reg (register cb) (tmp 20))
      (set-reg (register cd) (tmp 21))
      (br bb_14)
      (label bb_13)
      (br bb_14)
      (label bb_14)
      (= (tmp 23) (phi ((no-value . bb_12) (no-value . bb_13))))
      (= (tmp 24) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 25) (shl (constant ? 16) (tmp 24) (constant ? 8)))
      (= (tmp 26) (add (constant ? 16) (register ct) (constant ? 5)))
      (= (tmp 27) (icmp gt (constant ? 16) (tmp 25) (register cb)))
      (br (tmp 27) bb_15 bb_16)
      (label bb_15)
      (set-reg (register cb) (tmp 25))
      (set-reg (register cd) (tmp 26))
      (br bb_17)
      (label bb_16)
      (br bb_17)
      (label bb_17)
      (= (tmp 28) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 29) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 30) (shl (constant ? 16) (tmp 29) (constant ? 8)))
      (= (tmp 31) (add (constant ? 16) (register ct) (constant ? 6)))
      (= (tmp 32) (icmp gt (constant ? 16) (tmp 30) (register cb)))
      (br (tmp 32) bb_18 bb_19)
      (label bb_18)
      (set-reg (register cb) (tmp 30))
      (set-reg (register cd) (tmp 31))
      (br bb_20)
      (label bb_19)
      (br bb_20)
      (label bb_20)
      (= (tmp 33) (phi ((no-value . bb_18) (no-value . bb_19))))
      (= (tmp 34) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 35) (shl (constant ? 16) (tmp 34) (constant ? 8)))
      (= (tmp 36) (add (constant ? 16) (register ct) (constant ? 7)))
      (= (tmp 37) (icmp gt (constant ? 16) (tmp 35) (register cb)))
      (br (tmp 37) bb_21 bb_22)
      (label bb_21)
      (set-reg (register cb) (tmp 35))
      (set-reg (register cd) (tmp 36))
      (br bb_23)
      (label bb_22)
      (br bb_23)
      (label bb_23)
      (= (tmp 38) (phi ((no-value . bb_21) (no-value . bb_22))))
      (= (tmp 39) (add (constant ? 16) (register ct) (constant ? 8)))
      (set-reg (register ct) (tmp 39))
      (= (tmp 40) (icmp sgt (constant ? 16) (register cb) (register cb)))
      (br (tmp 40) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 41) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 42) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 43) (phi ((no-value . bb_24) (no-value . bb_25)))))))

(instruction
  and_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls (tmp 0)))
      (allocate-in (tmp 10) (reg-flag op (tmp 0)))
      (allocate-in (tmp 2) (reg-flag ac (tmp 0)))
      (allocate-in (tmp 4) (reg-flag mi (tmp 0)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 6) (reg-flag ms (tmp 0))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_and (constant ? 16) (tmp 0) src))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range (tmp 0) (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 1) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 1) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 1) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  subz_a16_a16_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 0) (icmp ugt (constant ? 16) src2 src1))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (sub (constant ? 16) src1 src2))
      (set-reg dst (tmp 2))
      (br bb_2)
      (label bb_1)
      (= (tmp 3) (sub (constant ? 16) src1 src2))
      (set-reg dst (tmp 3))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 0) (icmp ugt (constant ? 16) src2 src1))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= (tmp 3) (sub (constant ? 16) src1 src2))
      (set-reg dst (tmp 3))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1)))))))

(instruction
  rot_a16_a16_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (set-reg dst src1)
      (= (tmp 0) (reg-range src2 (constant ? 0) (constant ? 3)))
      (= (tmp 1) (sub (constant ? 32) (tmp 0) (constant ? 0)))
      (= (tmp 2) (icmp sgt (constant ? 32) (tmp 1) (constant ? 0)))
      (br (tmp 2) bb_45 bb_46)
      (label bb_45)
      (= (tmp 3) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 4) (shl (constant ? 32) (tmp 3) (constant ? 1)))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 6) (bit_or (constant ? 32) (tmp 4) (tmp 5)))
      (set-reg dst (tmp 6))
      (= (tmp 7) (reg-range src2 (constant ? 0) (constant ? 3)))
      (= (tmp 8) (sub (constant ? 32) (tmp 7) (constant ? 1)))
      (= (tmp 9) (icmp sgt (constant ? 32) (tmp 8) (constant ? 0)))
      (br (tmp 9) bb_42 bb_43)
      (label bb_42)
      (= (tmp 10) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 11) (shl (constant ? 32) (tmp 10) (constant ? 1)))
      (= (tmp 12) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 13) (bit_or (constant ? 32) (tmp 11) (tmp 12)))
      (set-reg dst (tmp 13))
      (= (tmp 14) (reg-range src2 (constant ? 0) (constant ? 3)))
      (= (tmp 15) (sub (constant ? 32) (tmp 14) (constant ? 2)))
      (= (tmp 16) (icmp sgt (constant ? 32) (tmp 15) (constant ? 0)))
      (br (tmp 16) bb_39 bb_40)
      (label bb_39)
      (= (tmp 17) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 18) (shl (constant ? 32) (tmp 17) (constant ? 1)))
      (= (tmp 19) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 20) (bit_or (constant ? 32) (tmp 18) (tmp 19)))
      (set-reg dst (tmp 20))
      (= (tmp 21) (reg-range src2 (constant ? 0) (constant ? 3)))
      (= (tmp 22) (sub (constant ? 32) (tmp 21) (constant ? 3)))
      (= (tmp 23) (icmp sgt (constant ? 32) (tmp 22) (constant ? 0)))
      (br (tmp 23) bb_36 bb_37)
      (label bb_36)
      (= (tmp 24) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 25) (shl (constant ? 32) (tmp 24) (constant ? 1)))
      (= (tmp 26) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 27) (bit_or (constant ? 32) (tmp 25) (tmp 26)))
      (set-reg dst (tmp 27))
      (= (tmp 28) (reg-range src2 (constant ? 0) (constant ? 3)))
      (= (tmp 29) (sub (constant ? 32) (tmp 28) (constant ? 4)))
      (= (tmp 30) (icmp sgt (constant ? 32) (tmp 29) (constant ? 0)))
      (br (tmp 30) bb_33 bb_34)
      (label bb_33)
      (= (tmp 31) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 32) (shl (constant ? 32) (tmp 31) (constant ? 1)))
      (= (tmp 33) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 34) (bit_or (constant ? 32) (tmp 32) (tmp 33)))
      (set-reg dst (tmp 34))
      (= (tmp 35) (reg-range src2 (constant ? 0) (constant ? 3)))
      (= (tmp 36) (sub (constant ? 32) (tmp 35) (constant ? 5)))
      (= (tmp 37) (icmp sgt (constant ? 32) (tmp 36) (constant ? 0)))
      (br (tmp 37) bb_30 bb_31)
      (label bb_30)
      (= (tmp 38) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 39) (shl (constant ? 32) (tmp 38) (constant ? 1)))
      (= (tmp 40) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 41) (bit_or (constant ? 32) (tmp 39) (tmp 40)))
      (set-reg dst (tmp 41))
      (= (tmp 42) (reg-range src2 (constant ? 0) (constant ? 3)))
      (= (tmp 43) (sub (constant ? 32) (tmp 42) (constant ? 6)))
      (= (tmp 44) (icmp sgt (constant ? 32) (tmp 43) (constant ? 0)))
      (br (tmp 44) bb_27 bb_28)
      (label bb_27)
      (= (tmp 45) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 46) (shl (constant ? 32) (tmp 45) (constant ? 1)))
      (= (tmp 47) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 48) (bit_or (constant ? 32) (tmp 46) (tmp 47)))
      (set-reg dst (tmp 48))
      (= (tmp 49) (reg-range src2 (constant ? 0) (constant ? 3)))
      (= (tmp 50) (sub (constant ? 32) (tmp 49) (constant ? 7)))
      (= (tmp 51) (icmp sgt (constant ? 32) (tmp 50) (constant ? 0)))
      (br (tmp 51) bb_24 bb_25)
      (label bb_24)
      (= (tmp 52) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 53) (shl (constant ? 32) (tmp 52) (constant ? 1)))
      (= (tmp 54) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 55) (bit_or (constant ? 32) (tmp 53) (tmp 54)))
      (set-reg dst (tmp 55))
      (= (tmp 56) (reg-range src2 (constant ? 0) (constant ? 3)))
      (= (tmp 57) (sub (constant ? 32) (tmp 56) (constant ? 8)))
      (= (tmp 58) (icmp sgt (constant ? 32) (tmp 57) (constant ? 0)))
      (br (tmp 58) bb_21 bb_22)
      (label bb_21)
      (= (tmp 59) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 60) (shl (constant ? 32) (tmp 59) (constant ? 1)))
      (= (tmp 61) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 62) (bit_or (constant ? 32) (tmp 60) (tmp 61)))
      (set-reg dst (tmp 62))
      (= (tmp 63) (reg-range src2 (constant ? 0) (constant ? 3)))
      (= (tmp 64) (sub (constant ? 32) (tmp 63) (constant ? 9)))
      (= (tmp 65) (icmp sgt (constant ? 32) (tmp 64) (constant ? 0)))
      (br (tmp 65) bb_18 bb_19)
      (label bb_18)
      (= (tmp 66) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 67) (shl (constant ? 32) (tmp 66) (constant ? 1)))
      (= (tmp 68) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 69) (bit_or (constant ? 32) (tmp 67) (tmp 68)))
      (set-reg dst (tmp 69))
      (= (tmp 70) (reg-range src2 (constant ? 0) (constant ? 3)))
      (= (tmp 71) (sub (constant ? 32) (tmp 70) (constant ? 10)))
      (= (tmp 72) (icmp sgt (constant ? 32) (tmp 71) (constant ? 0)))
      (br (tmp 72) bb_15 bb_16)
      (label bb_15)
      (= (tmp 73) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 74) (shl (constant ? 32) (tmp 73) (constant ? 1)))
      (= (tmp 75) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 76) (bit_or (constant ? 32) (tmp 74) (tmp 75)))
      (set-reg dst (tmp 76))
      (= (tmp 77) (reg-range src2 (constant ? 0) (constant ? 3)))
      (= (tmp 78) (sub (constant ? 32) (tmp 77) (constant ? 11)))
      (= (tmp 79) (icmp sgt (constant ? 32) (tmp 78) (constant ? 0)))
      (br (tmp 79) bb_12 bb_13)
      (label bb_12)
      (= (tmp 80) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 81) (shl (constant ? 32) (tmp 80) (constant ? 1)))
      (= (tmp 82) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 83) (bit_or (constant ? 32) (tmp 81) (tmp 82)))
      (set-reg dst (tmp 83))
      (= (tmp 84) (reg-range src2 (constant ? 0) (constant ? 3)))
      (= (tmp 85) (sub (constant ? 32) (tmp 84) (constant ? 12)))
      (= (tmp 86) (icmp sgt (constant ? 32) (tmp 85) (constant ? 0)))
      (br (tmp 86) bb_9 bb_10)
      (label bb_9)
      (= (tmp 87) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 88) (shl (constant ? 32) (tmp 87) (constant ? 1)))
      (= (tmp 89) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 90) (bit_or (constant ? 32) (tmp 88) (tmp 89)))
      (set-reg dst (tmp 90))
      (= (tmp 91) (reg-range src2 (constant ? 0) (constant ? 3)))
      (= (tmp 92) (sub (constant ? 32) (tmp 91) (constant ? 13)))
      (= (tmp 93) (icmp sgt (constant ? 32) (tmp 92) (constant ? 0)))
      (br (tmp 93) bb_6 bb_7)
      (label bb_6)
      (= (tmp 94) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 95) (shl (constant ? 32) (tmp 94) (constant ? 1)))
      (= (tmp 96) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 97) (bit_or (constant ? 32) (tmp 95) (tmp 96)))
      (set-reg dst (tmp 97))
      (= (tmp 98) (reg-range src2 (constant ? 0) (constant ? 3)))
      (= (tmp 99) (sub (constant ? 32) (tmp 98) (constant ? 14)))
      (= (tmp 100) (icmp sgt (constant ? 32) (tmp 99) (constant ? 0)))
      (br (tmp 100) bb_3 bb_4)
      (label bb_3)
      (= (tmp 101) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 102) (shl (constant ? 32) (tmp 101) (constant ? 1)))
      (= (tmp 103) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 104) (bit_or (constant ? 32) (tmp 102) (tmp 103)))
      (set-reg dst (tmp 104))
      (= (tmp 105) (reg-range src2 (constant ? 0) (constant ? 3)))
      (= (tmp 106) (sub (constant ? 32) (tmp 105) (constant ? 15)))
      (= (tmp 107) (icmp sgt (constant ? 32) (tmp 106) (constant ? 0)))
      (br (tmp 107) bb_0 bb_1)
      (label bb_0)
      (= (tmp 108) (add (constant ? 32) (constant ? 0) dst))
      (= (tmp 109) (shl (constant ? 32) (tmp 108) (constant ? 1)))
      (= (tmp 110) (reg-range dst (constant ? 0) (constant ? 0)))
      (= (tmp 111) (bit_or (constant ? 32) (tmp 109) (tmp 110)))
      (set-reg dst (tmp 111))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 112) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_4)
      (br bb_5)
      (label bb_5)
      (= (tmp 113) (phi (((tmp 112) . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_7)
      (br bb_8)
      (label bb_8)
      (= (tmp 114) (phi (((tmp 113) . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_10)
      (br bb_11)
      (label bb_11)
      (= (tmp 115) (phi (((tmp 114) . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_13)
      (br bb_14)
      (label bb_14)
      (= (tmp 116) (phi (((tmp 115) . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_16)
      (br bb_17)
      (label bb_17)
      (= (tmp 117) (phi (((tmp 116) . bb_15) (no-value . bb_16))))
      (br bb_20)
      (label bb_19)
      (br bb_20)
      (label bb_20)
      (= (tmp 118) (phi (((tmp 117) . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_22)
      (br bb_23)
      (label bb_23)
      (= (tmp 119) (phi (((tmp 118) . bb_21) (no-value . bb_22))))
      (br bb_26)
      (label bb_25)
      (br bb_26)
      (label bb_26)
      (= (tmp 120) (phi (((tmp 119) . bb_24) (no-value . bb_25))))
      (br bb_29)
      (label bb_28)
      (br bb_29)
      (label bb_29)
      (= (tmp 121) (phi (((tmp 120) . bb_27) (no-value . bb_28))))
      (br bb_32)
      (label bb_31)
      (br bb_32)
      (label bb_32)
      (= (tmp 122) (phi (((tmp 121) . bb_30) (no-value . bb_31))))
      (br bb_35)
      (label bb_34)
      (br bb_35)
      (label bb_35)
      (= (tmp 123) (phi (((tmp 122) . bb_33) (no-value . bb_34))))
      (br bb_38)
      (label bb_37)
      (br bb_38)
      (label bb_38)
      (= (tmp 124) (phi (((tmp 123) . bb_36) (no-value . bb_37))))
      (br bb_41)
      (label bb_40)
      (br bb_41)
      (label bb_41)
      (= (tmp 125) (phi (((tmp 124) . bb_39) (no-value . bb_40))))
      (br bb_44)
      (label bb_43)
      (br bb_44)
      (label bb_44)
      (= (tmp 126) (phi (((tmp 125) . bb_42) (no-value . bb_43))))
      (br bb_47)
      (label bb_46)
      (br bb_47)
      (label bb_47)
      (= (tmp 127) (phi (((tmp 126) . bb_45) (no-value . bb_46)))))))

(instruction
  mv_r16_a16++m
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 3) (zext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 3))
      (= (tmp 35) (add (size rN) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 4) (sext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 4))
      (= (tmp 35) (add (size rN) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 36) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag l dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 0))
      (= (tmp 35) (add (size rN) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 12) (reg-flag al dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 17) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 17))
      (= (tmp 35) (add (size rN) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 12) (reg-flag al dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 18) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 18))
      (= (tmp 35) (add (size rN) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 26) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 26))
      (= (tmp 35) (add (size rN) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 27) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 27))
      (= (tmp 35) (add (size rN) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (allocate-in (tmp 36) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN)))
    (code
      (= (tmp 33) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 33))
      (= (tmp 35) (add (size rN) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38)))))

(instruction
  mpy_nimm4_a40_a40_a40
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 14) (tmp 16)) ((tmp 10) (tmp 12)) ((tmp 260) (tmp 67) (tmp 57) (tmp 17) (tmp 130)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 10) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 14) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 17) (mul (constant ? 40) (tmp 12) (tmp 16)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 15) (tmp 16)) ((tmp 11) (tmp 12)) ((tmp 260) (tmp 67) (tmp 57) (tmp 17) (tmp 130)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 11) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 15) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 17) (mul (constant ? 40) (tmp 12) (tmp 16)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 27) (tmp 25)) ((tmp 21) (tmp 23)) ((tmp 260) (tmp 67) (tmp 29) (tmp 57) (tmp 56) (tmp 130)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 21) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 25) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 28) (mul (constant ? 40) (tmp 23) (tmp 27)))
      (= (tmp 29) (shl (constant ? 40) (tmp 28) (constant ? 1)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 27) (tmp 26)) ((tmp 22) (tmp 23)) ((tmp 260) (tmp 67) (tmp 29) (tmp 57) (tmp 56) (tmp 130)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 22) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 26) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 28) (mul (constant ? 40) (tmp 23) (tmp 27)))
      (= (tmp 29) (shl (constant ? 40) (tmp 28) (constant ? 1)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (aliases ((tmp 63) (tmp 65)) ((tmp 59) (tmp 61)) ((tmp 260) (tmp 67) (tmp 66) (tmp 130)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 59) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 63) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 66) (mul (constant ? 40) (tmp 61) (tmp 65)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (aliases ((tmp 65) (tmp 64)) ((tmp 61) (tmp 60)) ((tmp 260) (tmp 67) (tmp 66) (tmp 130)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 60) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 64) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 66) (mul (constant ? 40) (tmp 61) (tmp 65)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 76) (tmp 78)) ((tmp 72) (tmp 74)) ((tmp 260) (tmp 79) (tmp 130) (tmp 129) (tmp 119)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 72) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 76) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 79) (mul (constant ? 40) (tmp 74) (tmp 78)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 77) (tmp 78)) ((tmp 73) (tmp 74)) ((tmp 260) (tmp 79) (tmp 130) (tmp 129) (tmp 119)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 73) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 77) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 79) (mul (constant ? 40) (tmp 74) (tmp 78)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 87) (tmp 89)) ((tmp 85) (tmp 83)) ((tmp 260) (tmp 130) (tmp 129) (tmp 91) (tmp 119) (tmp 118)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 83) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 87) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 90) (mul (constant ? 40) (tmp 85) (tmp 89)))
      (= (tmp 91) (shl (constant ? 40) (tmp 90) (constant ? 1)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 88) (tmp 89)) ((tmp 85) (tmp 84)) ((tmp 260) (tmp 130) (tmp 129) (tmp 91) (tmp 119) (tmp 118)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 84) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 88) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 90) (mul (constant ? 40) (tmp 85) (tmp 89)))
      (= (tmp 91) (shl (constant ? 40) (tmp 90) (constant ? 1)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (aliases ((tmp 125) (tmp 127)) ((tmp 123) (tmp 121)) ((tmp 260) (tmp 128) (tmp 130) (tmp 129)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 121) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 125) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 128) (mul (constant ? 40) (tmp 123) (tmp 127)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (aliases ((tmp 127) (tmp 126)) ((tmp 123) (tmp 122)) ((tmp 260) (tmp 128) (tmp 130) (tmp 129)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 122) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 126) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 128) (mul (constant ? 40) (tmp 123) (tmp 127)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 143) (tmp 145)) ((tmp 139) (tmp 141)) ((tmp 260) (tmp 259) (tmp 196) (tmp 186) (tmp 146)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 139) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 143) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 146) (mul (constant ? 40) (tmp 141) (tmp 145)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 144) (tmp 145)) ((tmp 140) (tmp 141)) ((tmp 260) (tmp 259) (tmp 196) (tmp 186) (tmp 146)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 140) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 144) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 146) (mul (constant ? 40) (tmp 141) (tmp 145)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 156) (tmp 154)) ((tmp 152) (tmp 150)) ((tmp 260) (tmp 259) (tmp 185) (tmp 196) (tmp 158) (tmp 186)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 150) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 154) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 157) (mul (constant ? 40) (tmp 152) (tmp 156)))
      (= (tmp 158) (shl (constant ? 40) (tmp 157) (constant ? 1)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 156) (tmp 155)) ((tmp 152) (tmp 151)) ((tmp 260) (tmp 259) (tmp 185) (tmp 196) (tmp 158) (tmp 186)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 151) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 155) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 157) (mul (constant ? 40) (tmp 152) (tmp 156)))
      (= (tmp 158) (shl (constant ? 40) (tmp 157) (constant ? 1)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (aliases ((tmp 194) (tmp 192)) ((tmp 190) (tmp 188)) ((tmp 260) (tmp 259) (tmp 195) (tmp 196)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 188) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 192) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 195) (mul (constant ? 40) (tmp 190) (tmp 194)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (aliases ((tmp 193) (tmp 194)) ((tmp 190) (tmp 189)) ((tmp 260) (tmp 259) (tmp 195) (tmp 196)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 189) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 193) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 195) (mul (constant ? 40) (tmp 190) (tmp 194)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 205) (tmp 207)) ((tmp 201) (tmp 203)) ((tmp 260) (tmp 248) (tmp 258) (tmp 259) (tmp 208)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 201) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 205) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 208) (mul (constant ? 40) (tmp 203) (tmp 207)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 206) (tmp 207)) ((tmp 202) (tmp 203)) ((tmp 260) (tmp 248) (tmp 258) (tmp 259) (tmp 208)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 202) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 206) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 208) (mul (constant ? 40) (tmp 203) (tmp 207)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 216) (tmp 218)) ((tmp 214) (tmp 212)) ((tmp 260) (tmp 248) (tmp 258) (tmp 259) (tmp 220) (tmp 247)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 212) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 216) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 219) (mul (constant ? 40) (tmp 214) (tmp 218)))
      (= (tmp 220) (shl (constant ? 40) (tmp 219) (constant ? 1)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 217) (tmp 218)) ((tmp 214) (tmp 213)) ((tmp 260) (tmp 248) (tmp 258) (tmp 259) (tmp 220) (tmp 247)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 213) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 217) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 219) (mul (constant ? 40) (tmp 214) (tmp 218)))
      (= (tmp 220) (shl (constant ? 40) (tmp 219) (constant ? 1)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (aliases ((tmp 254) (tmp 256)) ((tmp 252) (tmp 250)) ((tmp 260) (tmp 258) (tmp 259) (tmp 257)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 250) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 254) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 257) (mul (constant ? 40) (tmp 252) (tmp 256)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (aliases ((tmp 255) (tmp 256)) ((tmp 252) (tmp 251)) ((tmp 260) (tmp 258) (tmp 259) (tmp 257)) ((tmp 261) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 251) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 255) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 257) (mul (constant ? 40) (tmp 252) (tmp 256)))
      (= (tmp 261) (trunc (constant ? 64) (tmp 260) (constant ? 40)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 277) (tmp 275)) ((tmp 271) (tmp 273)) ((tmp 318) (tmp 328) (tmp 278) (tmp 391) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 271) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 275) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 278) (mul (constant ? 40) (tmp 273) (tmp 277)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 276) (tmp 277)) ((tmp 272) (tmp 273)) ((tmp 318) (tmp 328) (tmp 278) (tmp 391) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 272) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 276) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 278) (mul (constant ? 40) (tmp 273) (tmp 277)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 286) (tmp 288)) ((tmp 282) (tmp 284)) ((tmp 318) (tmp 328) (tmp 290) (tmp 317) (tmp 391) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 282) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 286) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 289) (mul (constant ? 40) (tmp 284) (tmp 288)))
      (= (tmp 290) (shl (constant ? 40) (tmp 289) (constant ? 1)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 287) (tmp 288)) ((tmp 283) (tmp 284)) ((tmp 318) (tmp 328) (tmp 290) (tmp 317) (tmp 391) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 283) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 287) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 289) (mul (constant ? 40) (tmp 284) (tmp 288)))
      (= (tmp 290) (shl (constant ? 40) (tmp 289) (constant ? 1)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (aliases ((tmp 324) (tmp 326)) ((tmp 322) (tmp 320)) ((tmp 327) (tmp 328) (tmp 391) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 320) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 324) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 327) (mul (constant ? 40) (tmp 322) (tmp 326)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (aliases ((tmp 325) (tmp 326)) ((tmp 322) (tmp 321)) ((tmp 327) (tmp 328) (tmp 391) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 321) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 325) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 327) (mul (constant ? 40) (tmp 322) (tmp 326)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 339) (tmp 337)) ((tmp 333) (tmp 335)) ((tmp 340) (tmp 390) (tmp 391) (tmp 380) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 333) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 337) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 340) (mul (constant ? 40) (tmp 335) (tmp 339)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 338) (tmp 339)) ((tmp 334) (tmp 335)) ((tmp 340) (tmp 390) (tmp 391) (tmp 380) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 334) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 338) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 340) (mul (constant ? 40) (tmp 335) (tmp 339)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 348) (tmp 350)) ((tmp 346) (tmp 344)) ((tmp 390) (tmp 391) (tmp 379) (tmp 352) (tmp 380) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 344) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 348) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 351) (mul (constant ? 40) (tmp 346) (tmp 350)))
      (= (tmp 352) (shl (constant ? 40) (tmp 351) (constant ? 1)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 349) (tmp 350)) ((tmp 346) (tmp 345)) ((tmp 390) (tmp 391) (tmp 379) (tmp 352) (tmp 380) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 345) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 349) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 351) (mul (constant ? 40) (tmp 346) (tmp 350)))
      (= (tmp 352) (shl (constant ? 40) (tmp 351) (constant ? 1)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (aliases ((tmp 386) (tmp 388)) ((tmp 382) (tmp 384)) ((tmp 390) (tmp 391) (tmp 389) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 382) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 386) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 389) (mul (constant ? 40) (tmp 384) (tmp 388)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((1 . 1)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (aliases ((tmp 387) (tmp 388)) ((tmp 383) (tmp 384)) ((tmp 390) (tmp 391) (tmp 389) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 383) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 387) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 389) (mul (constant ? 40) (tmp 384) (tmp 388)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 406) (tmp 404)) ((tmp 400) (tmp 402)) ((tmp 457) (tmp 447) (tmp 407) (tmp 520) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 400) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 404) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 407) (mul (constant ? 40) (tmp 402) (tmp 406)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 406) (tmp 405)) ((tmp 401) (tmp 402)) ((tmp 457) (tmp 447) (tmp 407) (tmp 520) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 401) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 405) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 407) (mul (constant ? 40) (tmp 402) (tmp 406)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 417) (tmp 415)) ((tmp 411) (tmp 413)) ((tmp 457) (tmp 419) (tmp 447) (tmp 446) (tmp 520) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 411) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 415) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 418) (mul (constant ? 40) (tmp 413) (tmp 417)))
      (= (tmp 419) (shl (constant ? 40) (tmp 418) (constant ? 1)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 417) (tmp 416)) ((tmp 413) (tmp 412)) ((tmp 457) (tmp 419) (tmp 447) (tmp 446) (tmp 520) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 412) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 416) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 418) (mul (constant ? 40) (tmp 413) (tmp 417)))
      (= (tmp 419) (shl (constant ? 40) (tmp 418) (constant ? 1)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (aliases ((tmp 455) (tmp 453)) ((tmp 449) (tmp 451)) ((tmp 456) (tmp 457) (tmp 520) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 449) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 453) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 456) (mul (constant ? 40) (tmp 451) (tmp 455)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (aliases ((tmp 454) (tmp 455)) ((tmp 450) (tmp 451)) ((tmp 456) (tmp 457) (tmp 520) (tmp 521)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 450) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 454) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 456) (mul (constant ? 40) (tmp 451) (tmp 455)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 466) (tmp 468)) ((tmp 462) (tmp 464)) ((tmp 469) (tmp 509) (tmp 520) (tmp 521) (tmp 519)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 462) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 466) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 469) (mul (constant ? 40) (tmp 464) (tmp 468)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 467) (tmp 468)) ((tmp 463) (tmp 464)) ((tmp 469) (tmp 509) (tmp 520) (tmp 521) (tmp 519)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 463) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 467) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 469) (mul (constant ? 40) (tmp 464) (tmp 468)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 479) (tmp 477)) ((tmp 475) (tmp 473)) ((tmp 509) (tmp 508) (tmp 520) (tmp 521) (tmp 519) (tmp 481)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 473) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 477) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 480) (mul (constant ? 40) (tmp 475) (tmp 479)))
      (= (tmp 481) (shl (constant ? 40) (tmp 480) (constant ? 1)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((1 . 1)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 478) (tmp 479)) ((tmp 475) (tmp 474)) ((tmp 509) (tmp 508) (tmp 520) (tmp 521) (tmp 519) (tmp 481)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 474) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 478) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 480) (mul (constant ? 40) (tmp 475) (tmp 479)))
      (= (tmp 481) (shl (constant ? 40) (tmp 480) (constant ? 1)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (aliases ((tmp 515) (tmp 517)) ((tmp 513) (tmp 511)) ((tmp 520) (tmp 521) (tmp 518) (tmp 519)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1))))
    (code
      (= (tmp 511) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 515) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 518) (mul (constant ? 40) (tmp 513) (tmp 517)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536))))
  (pattern
    (constraints
      (immediate sat-mode ((0 . 0)))
      (immediate align_mode ((0 . 0)))
      (allocate-in (tmp 524) (reg-flag ac dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 528) (reg-flag ex dst))
      (reg-flag sa (register cuc) ((0 . 0)))
      (aliases ((tmp 516) (tmp 517)) ((tmp 512) (tmp 513)) ((tmp 520) (tmp 521) (tmp 518) (tmp 519)) ((tmp 522) (tmp 523)))
      (allocate-in (tmp 529) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 535) (reg-flag mi dst))
      (allocate-in (tmp 526) (reg-flag a dst))
      (allocate-in (tmp 532) (reg-flag ex dst))
      (allocate-in (tmp 531) (reg-flag ex dst))
      (immediate trunc-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0))))
    (code
      (= (tmp 512) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 516) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 518) (mul (constant ? 40) (tmp 513) (tmp 517)))
      (= (tmp 522) (trunc (constant ? 64) (tmp 521) (constant ? 32)))
      (set-reg dst (tmp 523))
      (= (tmp 525) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 524) (tmp 525))
      (= (tmp 527) (icmp (constant ? 40) eq (tmp 526) (constant ? 0)))
      (br (tmp 527) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 528) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 530) (icmp (constant ? 40) eq (tmp 529) (constant ? -1)))
      (br (tmp 530) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 531) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 532) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 533) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 534) (phi ((no-value . bb_3) ((tmp 533) . bb_4))))
      (= (tmp 536) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 535) (tmp 536)))))

(instruction
  max2_a40_a16
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 17) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag ac dst))
      (allocate-in (tmp 16) (reg-flag ex dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 11) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag a dst))
      (allocate-in (tmp 20) (reg-flag mi dst)))
    (code
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp sgt (constant ? 16) (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 10) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp (constant ? 40) eq (tmp 11) (constant ? 0)))
      (br (tmp 12) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 15) (icmp (constant ? 40) eq (tmp 14) (constant ? -1)))
      (br (tmp 15) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 17) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 18) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 19) (phi ((no-value . bb_6) ((tmp 18) . bb_7))))
      (= (tmp 21) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 20) (tmp 21))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag ac dst))
      (allocate-in (tmp 16) (reg-flag ex dst))
      (allocate-in (tmp 20) (reg-flag mi dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 11) (reg-flag a dst))
      (allocate-in (tmp 6) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag a dst))
      (allocate-in (tmp 17) (reg-flag ex dst)))
    (code
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp sgt (constant ? 16) (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (reg-range (tmp 6) (constant ? 16) (constant ? 39)))
      (= (tmp 8) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp (constant ? 40) eq (tmp 11) (constant ? 0)))
      (br (tmp 12) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 15) (icmp (constant ? 40) eq (tmp 14) (constant ? -1)))
      (br (tmp 15) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 17) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 18) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 19) (phi ((no-value . bb_6) ((tmp 18) . bb_7))))
      (= (tmp 21) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 20) (tmp 21)))))

(instruction
  imas_nimm2_a16_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 70) (reg-flag mi dst))
      (allocate-in (tmp 61) (reg-flag a dst))
      (allocate-in (tmp 25) (reg-flag of dst))
      (allocate-in (tmp 66) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 26) (reg-flag of dst))
      (allocate-in (tmp 23) (reg-flag of dst))
      (aliases ((tmp 8) (tmp 9)) ((tmp 4) (tmp 5)) ((tmp 10) (tmp 20)))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 59) (reg-flag ac dst))
      (allocate-in (tmp 64) (reg-flag a dst))
      (allocate-in (tmp 67) (reg-flag ex dst))
      (immediate sat-mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 63) (reg-flag ex dst)))
    (code
      (= (tmp 4) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 8) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 10) (mul (constant ? 40) (tmp 5) (tmp 9)))
      (= (tmp 21) (sub (constant ? 40) dst (tmp 20)))
      (= (tmp 22) (icmp (constant ? 40) sgt (tmp 21) dst))
      (br (tmp 22) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 24) (icmp (constant ? 40) sgt (tmp 21) (tmp 20)))
      (br (tmp 24) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 25) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 26) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 27) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 28) (phi ((no-value . bb_3) ((tmp 27) . bb_4))))
      (= (tmp 29) (sub (constant ? 40) dst (tmp 20)))
      (set-reg dst (tmp 29))
      (set-reg dst no-value)
      (= (tmp 60) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 59) (tmp 60))
      (= (tmp 62) (icmp (constant ? 40) eq (tmp 61) (constant ? 0)))
      (br (tmp 62) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 63) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 65) (icmp (constant ? 40) eq (tmp 64) (constant ? -1)))
      (br (tmp 65) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 68) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 69) (phi ((no-value . bb_15) ((tmp 68) . bb_16))))
      (= (tmp 71) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 70) (tmp 71))))
  (pattern
    (constraints
      (allocate-in (tmp 70) (reg-flag mi dst))
      (allocate-in (tmp 61) (reg-flag a dst))
      (allocate-in (tmp 25) (reg-flag of dst))
      (allocate-in (tmp 66) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 26) (reg-flag of dst))
      (allocate-in (tmp 23) (reg-flag of dst))
      (aliases ((tmp 7) (tmp 9)) ((tmp 3) (tmp 5)) ((tmp 10) (tmp 20)))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 59) (reg-flag ac dst))
      (allocate-in (tmp 64) (reg-flag a dst))
      (allocate-in (tmp 67) (reg-flag ex dst))
      (immediate sat-mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 63) (reg-flag ex dst)))
    (code
      (= (tmp 3) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 7) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 10) (mul (constant ? 40) (tmp 5) (tmp 9)))
      (= (tmp 21) (sub (constant ? 40) dst (tmp 20)))
      (= (tmp 22) (icmp (constant ? 40) sgt (tmp 21) dst))
      (br (tmp 22) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 23) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 24) (icmp (constant ? 40) sgt (tmp 21) (tmp 20)))
      (br (tmp 24) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 25) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 26) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 27) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 28) (phi ((no-value . bb_3) ((tmp 27) . bb_4))))
      (= (tmp 29) (sub (constant ? 40) dst (tmp 20)))
      (set-reg dst (tmp 29))
      (set-reg dst no-value)
      (= (tmp 60) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 59) (tmp 60))
      (= (tmp 62) (icmp (constant ? 40) eq (tmp 61) (constant ? 0)))
      (br (tmp 62) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 63) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 65) (icmp (constant ? 40) eq (tmp 64) (constant ? -1)))
      (br (tmp 65) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 68) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 69) (phi ((no-value . bb_15) ((tmp 68) . bb_16))))
      (= (tmp 71) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 70) (tmp 71))))
  (pattern
    (constraints
      (allocate-in (tmp 70) (reg-flag mi dst))
      (allocate-in (tmp 66) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 61) (reg-flag a dst))
      (aliases ((tmp 47) (tmp 46)) ((tmp 43) (tmp 42)) ((tmp 49) (tmp 48)))
      (allocate-in (tmp 55) (reg-flag of dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 52) (reg-flag of dst))
      (allocate-in (tmp 59) (reg-flag ac dst))
      (allocate-in (tmp 64) (reg-flag a dst))
      (allocate-in (tmp 67) (reg-flag ex dst))
      (allocate-in (tmp 54) (reg-flag of dst))
      (immediate sat-mode ((0 . 0)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 63) (reg-flag ex dst)))
    (code
      (= (tmp 42) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 46) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 48) (mul (constant ? 40) (tmp 43) (tmp 47)))
      (= (tmp 50) (sub (constant ? 40) dst (tmp 49)))
      (= (tmp 51) (icmp (constant ? 40) sgt (tmp 50) dst))
      (br (tmp 51) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 52) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 53) (icmp (constant ? 40) sgt (tmp 50) (tmp 49)))
      (br (tmp 53) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 54) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 55) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 56) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 57) (phi ((no-value . bb_9) ((tmp 56) . bb_10))))
      (= (tmp 58) (sub (constant ? 40) dst (tmp 49)))
      (set-reg dst (tmp 58))
      (set-reg dst no-value)
      (= (tmp 60) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 59) (tmp 60))
      (= (tmp 62) (icmp (constant ? 40) eq (tmp 61) (constant ? 0)))
      (br (tmp 62) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 63) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 65) (icmp (constant ? 40) eq (tmp 64) (constant ? -1)))
      (br (tmp 65) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 68) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 69) (phi ((no-value . bb_15) ((tmp 68) . bb_16))))
      (= (tmp 71) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 70) (tmp 71))))
  (pattern
    (constraints
      (allocate-in (tmp 70) (reg-flag mi dst))
      (allocate-in (tmp 66) (reg-flag ex dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 61) (reg-flag a dst))
      (aliases ((tmp 45) (tmp 47)) ((tmp 41) (tmp 43)) ((tmp 49) (tmp 48)))
      (allocate-in (tmp 55) (reg-flag of dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 52) (reg-flag of dst))
      (allocate-in (tmp 59) (reg-flag ac dst))
      (allocate-in (tmp 64) (reg-flag a dst))
      (allocate-in (tmp 67) (reg-flag ex dst))
      (allocate-in (tmp 54) (reg-flag of dst))
      (immediate sat-mode ((0 . 0)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 63) (reg-flag ex dst)))
    (code
      (= (tmp 41) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 45) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 48) (mul (constant ? 40) (tmp 43) (tmp 47)))
      (= (tmp 50) (sub (constant ? 40) dst (tmp 49)))
      (= (tmp 51) (icmp (constant ? 40) sgt (tmp 50) dst))
      (br (tmp 51) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 52) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 53) (icmp (constant ? 40) sgt (tmp 50) (tmp 49)))
      (br (tmp 53) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 54) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 55) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 56) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 57) (phi ((no-value . bb_9) ((tmp 56) . bb_10))))
      (= (tmp 58) (sub (constant ? 40) dst (tmp 49)))
      (set-reg dst (tmp 58))
      (set-reg dst no-value)
      (= (tmp 60) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 59) (tmp 60))
      (= (tmp 62) (icmp (constant ? 40) eq (tmp 61) (constant ? 0)))
      (br (tmp 62) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 63) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 65) (icmp (constant ? 40) eq (tmp 64) (constant ? -1)))
      (br (tmp 65) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 66) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 67) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 68) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 69) (phi ((no-value . bb_15) ((tmp 68) . bb_16))))
      (= (tmp 71) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 70) (tmp 71)))))

(instruction
  andh_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 6) (reg-flag ms dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_and (constant ? 16) (tmp 0) src))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 1) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 1) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 1) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  exp_a40_a16
  (pattern
    (constraints
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 9) (reg-flag ex dst))
      (allocate-in (tmp 16) (reg-flag mi dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 12) (reg-flag ex dst)))
    (code
      (= (tmp 0) (icmp eq (constant ? 40) src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (icmp (constant ? 40) eq (tmp 7) (constant ? 0)))
      (br (tmp 8) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 11) (icmp (constant ? 40) eq (tmp 10) (constant ? -1)))
      (br (tmp 11) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 13) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 14) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 15) (phi ((no-value . bb_6) ((tmp 14) . bb_7))))
      (= (tmp 17) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 16) (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 9) (reg-flag ex dst))
      (allocate-in (tmp 16) (reg-flag mi dst))
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 12) (reg-flag ex dst))
      (allocate-in (tmp 1) (reg-flag a dst)))
    (code
      (= (tmp 0) (icmp eq (constant ? 40) src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (constant ? 1))
      (= (tmp 2) (reg-range (tmp 1) (constant ? 16) (constant ? 39)))
      (= (tmp 3) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 2) (tmp 3))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (icmp (constant ? 40) eq (tmp 7) (constant ? 0)))
      (br (tmp 8) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 11) (icmp (constant ? 40) eq (tmp 10) (constant ? -1)))
      (br (tmp 11) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 13) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 14) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 15) (phi ((no-value . bb_6) ((tmp 14) . bb_7))))
      (= (tmp 17) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 16) (tmp 17)))))

(instruction
  norm2min_a40_a40_a16h
  (pattern
    (constraints
      (allocate-in dst (a4l a5l a6l a7l))
      (allocate-in (tmp 12) (reg-flag ex dst))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag ex dst))
      (allocate-in (tmp 16) (reg-flag mi dst))
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (icmp slt (constant ? 40) (constant ? 1) (constant ? 1)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 1) (phi (((constant ? 1) . bb_0) ((constant ? 1) . bb_1))))
      (set-reg dst (tmp 1))
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (icmp (constant ? 40) eq (tmp 7) (constant ? 0)))
      (br (tmp 8) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 11) (icmp (constant ? 40) eq (tmp 10) (constant ? -1)))
      (br (tmp 11) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 13) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 14) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 15) (phi ((no-value . bb_6) ((tmp 14) . bb_7))))
      (= (tmp 17) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 16) (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a4h a5h a6h a7h))
      (allocate-in (tmp 12) (reg-flag ex dst))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag ex dst))
      (allocate-in (tmp 2) (reg-flag a dst))
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 5) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 16) (reg-flag mi dst)))
    (code
      (= (tmp 0) (icmp slt (constant ? 40) (constant ? 1) (constant ? 1)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 1) (phi (((constant ? 1) . bb_0) ((constant ? 1) . bb_1))))
      (set-reg dst (tmp 1))
      (= (tmp 3) (reg-range (tmp 2) (constant ? 16) (constant ? 39)))
      (= (tmp 4) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (icmp (constant ? 40) eq (tmp 7) (constant ? 0)))
      (br (tmp 8) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 9) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 11) (icmp (constant ? 40) eq (tmp 10) (constant ? -1)))
      (br (tmp 11) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 13) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 14) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 15) (phi ((no-value . bb_6) ((tmp 14) . bb_7))))
      (= (tmp 17) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 16) (tmp 17)))))

(instruction
  maxz2_a40_a16
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 17) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag ac dst))
      (allocate-in (tmp 16) (reg-flag ex dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 11) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag a dst))
      (allocate-in (tmp 20) (reg-flag mi dst)))
    (code
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp ugt (constant ? 16) (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 10) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp (constant ? 40) eq (tmp 11) (constant ? 0)))
      (br (tmp 12) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 15) (icmp (constant ? 40) eq (tmp 14) (constant ? -1)))
      (br (tmp 15) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 17) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 18) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 19) (phi ((no-value . bb_6) ((tmp 18) . bb_7))))
      (= (tmp 21) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 20) (tmp 21))))
  (pattern
    (constraints
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 13) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag ac dst))
      (allocate-in (tmp 16) (reg-flag ex dst))
      (allocate-in (tmp 20) (reg-flag mi dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 11) (reg-flag a dst))
      (allocate-in (tmp 6) (reg-flag a dst))
      (allocate-in (tmp 14) (reg-flag a dst))
      (allocate-in (tmp 17) (reg-flag ex dst)))
    (code
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp ugt (constant ? 16) (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (reg-range (tmp 6) (constant ? 16) (constant ? 39)))
      (= (tmp 8) (zext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp (constant ? 40) eq (tmp 11) (constant ? 0)))
      (br (tmp 12) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 15) (icmp (constant ? 40) eq (tmp 14) (constant ? -1)))
      (br (tmp 15) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 17) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 18) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 19) (phi ((no-value . bb_6) ((tmp 18) . bb_7))))
      (= (tmp 21) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 20) (tmp 21)))))

(instruction
  mv_r16_a16-no-modifier
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 3) (zext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 3))
      (= (tmp 35) (add (size rN) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 4) (sext (constant ? 16) (tmp 0) (constant ? 40)))
      (set-reg dst (tmp 4))
      (= (tmp 35) (add (size rN) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 36) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag l dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 0))
      (= (tmp 35) (add (size rN) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 12) (reg-flag al dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 17) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 17))
      (= (tmp 35) (add (size rN) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 12) (reg-flag al dst)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (set-reg (tmp 12) (constant ? 0))
      (= (tmp 18) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 18))
      (= (tmp 35) (add (size rN) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((1 . 1))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 26) (zext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 26))
      (= (tmp 35) (add (size rN) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 36) (reg-flag z rN))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN))
      (reg-flag u dst ((0 . 0))))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm rN))
      (= (tmp 27) (sext (constant ? 16) (tmp 0) (constant ? 32)))
      (set-reg dst (tmp 27))
      (= (tmp 35) (add (size rN) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38))))
  (pattern
    (constraints
      (allocate-in dst (r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (allocate-in (tmp 36) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag m rN)))
    (code
      (= (tmp 33) (load-mem (constant ? 16) ldm rN))
      (set-reg dst (tmp 33))
      (= (tmp 35) (add (size rN) rN (tmp 34)))
      (set-reg rN (tmp 35))
      (= (tmp 37) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 37) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 38) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 36) (tmp 38)))))

(instruction
  and_a16_a16_low
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 1) (reg-flag ac dst))
      (allocate-in (tmp 9) (reg-flag op dst))
      (allocate-in (tmp 5) (reg-flag ms dst))
      (allocate-in (tmp 3) (reg-flag mi dst))
      (allocate-in (tmp 7) (reg-flag ls dst)))
    (code
      (= (tmp 0) (bit_and (constant ? 16) dst src))
      (set-reg dst (tmp 0))
      (= (tmp 2) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 10) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 9) (tmp 11)))))

(instruction
  exp2_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ac dst))
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 12) (reg-flag ex dst))
      (allocate-in (tmp 13) (reg-flag a dst))
      (allocate-in (tmp 16) (reg-flag ex dst))
      (allocate-in (tmp 19) (reg-flag mi dst))
      (allocate-in (tmp 5) (reg-flag al dst))
      (allocate-in (tmp 15) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (icmp eq (constant ? 40) src1 (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (reg-range dst (constant ? 16) (constant ? 39)))
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= (tmp 2) (reg-range dst (constant ? 16) (constant ? 39)))
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 4) (icmp eq (constant ? 40) src2 (constant ? 0)))
      (br (tmp 4) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (constant ? 0))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (reg-range dst (constant ? 0) (constant ? 15)))
      (set-reg (tmp 6) (constant ? 1))
      (br bb_5)
      (label bb_5)
      (= (tmp 7) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 9) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp (constant ? 40) eq (tmp 10) (constant ? 0)))
      (br (tmp 11) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 14) (icmp (constant ? 40) eq (tmp 13) (constant ? -1)))
      (br (tmp 14) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 15) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 16) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 18) (phi ((no-value . bb_9) ((tmp 17) . bb_10))))
      (= (tmp 20) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 19) (tmp 20)))))

(instruction
  mv_a16_r16++m
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag z rN))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (allocate-in (tmp 6) (reg-flag m rN))
      (aliases (src (tmp 4)))
      (allocate-in rN (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (store (constant ? 16) ldm rN (tmp 4))
      (= (tmp 7) (add (size rN) rN (tmp 6)))
      (set-reg rN (tmp 7))
      (= (tmp 9) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 9) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 10) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 8) (tmp 10)))))

(instruction
  max4_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 24) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 33) (reg-flag mi dst))
      (allocate-in (tmp 29) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag a dst))
      (allocate-in (tmp 20) (reg-flag a dst))
      (allocate-in (tmp 26) (reg-flag ex dst))
      (allocate-in (tmp 22) (reg-flag ac dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 30) (reg-flag ex dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 2) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) (tmp 1) (tmp 2)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 0) (tmp 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 0) (tmp 2))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 6) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 7) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 8) (icmp sgt (constant ? 8) (tmp 6) (tmp 7)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (tmp 6))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 5) (tmp 7))
      (br bb_5)
      (label bb_5)
      (= (tmp 9) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 10) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 11) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 12) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 13) (icmp sgt (constant ? 8) (tmp 11) (tmp 12)))
      (br (tmp 13) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 10) (tmp 11))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 10) (tmp 12))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 15) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 16) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 17) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 18) (icmp sgt (constant ? 8) (tmp 16) (tmp 17)))
      (br (tmp 18) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 15) (tmp 16))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 15) (tmp 17))
      (br bb_11)
      (label bb_11)
      (= (tmp 19) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 21) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 20) (tmp 21))
      (= (tmp 23) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 22) (tmp 23))
      (= (tmp 25) (icmp (constant ? 40) eq (tmp 24) (constant ? 0)))
      (br (tmp 25) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 26) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (= (tmp 28) (icmp (constant ? 40) eq (tmp 27) (constant ? -1)))
      (br (tmp 28) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 29) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 30) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 31) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 32) (phi ((no-value . bb_15) ((tmp 31) . bb_16))))
      (= (tmp 34) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 33) (tmp 34)))))

(instruction
  and_a16_a16_high
  (pattern
    (constraints
      (allocate-in dst (a1h a2h a3h a4h a5h a6h a7h a0h))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 1) (reg-flag ac dst))
      (allocate-in (tmp 9) (reg-flag op dst))
      (allocate-in (tmp 5) (reg-flag ms dst))
      (allocate-in (tmp 3) (reg-flag mi dst))
      (allocate-in (tmp 7) (reg-flag ls dst)))
    (code
      (= (tmp 0) (bit_and (constant ? 16) dst src))
      (set-reg dst (tmp 0))
      (= (tmp 2) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 10) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 9) (tmp 11)))))

(instruction
  subz_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag ag dst))
      (aliases (no-value (tmp 6)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 5) (sub (constant ? 32) src1 src2))
      (set-reg dst (tmp 5))
      (set-reg (tmp 7) (constant ? 0))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag ag dst))
      (aliases ((tmp 4) (tmp 6)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 1) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (icmp ugt (constant ? 40) (tmp 1) src1))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= (tmp 3) (sub (constant ? 32) src1 src2))
      (set-reg dst (tmp 3))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (set-reg (tmp 7) (constant ? 0)))))

(instruction
  mv_r16++Imm8
  (pattern
    (constraints
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (immediate Imm8 ((1 . 8)))
      (allocate-in (tmp 1) (reg-flag z rN)))
    (code
      (= (tmp 0) (add (constant ? 16) rN Imm8))
      (set-reg rN (tmp 0))
      (= (tmp 2) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 1) (tmp 3)))))

(instruction
  andz_a16_a16_a16
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 6) (reg-flag ms dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (bit_and (constant ? 16) src1 src2))
      (set-reg dst (tmp 0))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12))))
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 1) (reg-flag ag dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 6) (reg-flag ms dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (bit_and (constant ? 16) src1 src2))
      (set-reg dst (tmp 0))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  mv_r16--Imm8
  (pattern
    (constraints
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (immediate Imm8 ((1 . 8))))
    (code
      (= (tmp 0) (sub (constant ? 16) rN Imm8))
      (set-reg rN (tmp 0)))))

(instruction
  subz_a40_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 10) (reg-flag ag dst))
      (aliases (no-value (tmp 9)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 6) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 7) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 8) (sub (constant ? 32) (tmp 6) (tmp 7)))
      (set-reg dst (tmp 8))
      (set-reg (tmp 10) (constant ? 0))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 10) (reg-flag ag dst))
      (aliases ((tmp 5) (tmp 9)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 1) (icmp ugt (constant ? 32) src2 src1))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 4) (sub (constant ? 32) (tmp 2) (tmp 3)))
      (set-reg dst (tmp 4))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (set-reg (tmp 10) (constant ? 0)))))

(instruction
  scgy_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 138) (reg-flag ls dst))
      (allocate-in (tmp 140) (reg-flag op dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 132) (reg-flag ac dst))
      (allocate-in (tmp 136) (reg-flag ms dst))
      (allocate-in (tmp 134) (reg-flag mi dst))
      (allocate-in (tmp 0) (reg-flag ag dst)))
    (code
      (set-reg (tmp 0) (constant ? 0))
      (= (tmp 1) (reg-range dst (constant ? 17) (constant ? 31)))
      (= (tmp 2) (reg-range src (constant ? 1) (constant ? 15)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 16)))
      (= (tmp 4) (reg-range src (constant ? 31) (constant ? 31)))
      (= (tmp 5) (reg-range src (constant ? 30) (constant ? 30)))
      (= (tmp 6) (bit_xor (constant ? 1) (tmp 4) (tmp 5)))
      (= (tmp 7) (reg-range src (constant ? 29) (constant ? 29)))
      (= (tmp 8) (bit_xor (constant ? 1) (tmp 6) (tmp 7)))
      (= (tmp 9) (reg-range src (constant ? 28) (constant ? 28)))
      (= (tmp 10) (bit_xor (constant ? 1) (tmp 8) (tmp 9)))
      (set-reg (tmp 3) (tmp 10))
      (= (tmp 11) (reg-range dst (constant ? 15) (constant ? 15)))
      (= (tmp 12) (reg-range src (constant ? 30) (constant ? 30)))
      (= (tmp 13) (reg-range src (constant ? 29) (constant ? 29)))
      (= (tmp 14) (bit_xor (constant ? 1) (tmp 12) (tmp 13)))
      (= (tmp 15) (reg-range src (constant ? 28) (constant ? 28)))
      (= (tmp 16) (bit_xor (constant ? 1) (tmp 14) (tmp 15)))
      (= (tmp 17) (reg-range src (constant ? 27) (constant ? 27)))
      (= (tmp 18) (bit_xor (constant ? 1) (tmp 16) (tmp 17)))
      (set-reg (tmp 11) (tmp 18))
      (= (tmp 19) (reg-range dst (constant ? 14) (constant ? 14)))
      (= (tmp 20) (reg-range src (constant ? 29) (constant ? 29)))
      (= (tmp 21) (reg-range src (constant ? 28) (constant ? 28)))
      (= (tmp 22) (bit_xor (constant ? 1) (tmp 20) (tmp 21)))
      (= (tmp 23) (reg-range src (constant ? 27) (constant ? 27)))
      (= (tmp 24) (bit_xor (constant ? 1) (tmp 22) (tmp 23)))
      (= (tmp 25) (reg-range src (constant ? 26) (constant ? 26)))
      (= (tmp 26) (bit_xor (constant ? 1) (tmp 24) (tmp 25)))
      (set-reg (tmp 19) (tmp 26))
      (= (tmp 27) (reg-range dst (constant ? 13) (constant ? 13)))
      (= (tmp 28) (reg-range src (constant ? 28) (constant ? 28)))
      (= (tmp 29) (reg-range src (constant ? 27) (constant ? 27)))
      (= (tmp 30) (bit_xor (constant ? 1) (tmp 28) (tmp 29)))
      (= (tmp 31) (reg-range src (constant ? 26) (constant ? 26)))
      (= (tmp 32) (bit_xor (constant ? 1) (tmp 30) (tmp 31)))
      (= (tmp 33) (reg-range src (constant ? 25) (constant ? 25)))
      (= (tmp 34) (bit_xor (constant ? 1) (tmp 32) (tmp 33)))
      (set-reg (tmp 27) (tmp 34))
      (= (tmp 35) (reg-range dst (constant ? 12) (constant ? 12)))
      (= (tmp 36) (reg-range src (constant ? 27) (constant ? 27)))
      (= (tmp 37) (reg-range src (constant ? 26) (constant ? 26)))
      (= (tmp 38) (bit_xor (constant ? 1) (tmp 36) (tmp 37)))
      (= (tmp 39) (reg-range src (constant ? 25) (constant ? 25)))
      (= (tmp 40) (bit_xor (constant ? 1) (tmp 38) (tmp 39)))
      (= (tmp 41) (reg-range src (constant ? 24) (constant ? 24)))
      (= (tmp 42) (bit_xor (constant ? 1) (tmp 40) (tmp 41)))
      (set-reg (tmp 35) (tmp 42))
      (= (tmp 43) (reg-range dst (constant ? 11) (constant ? 11)))
      (= (tmp 44) (reg-range src (constant ? 26) (constant ? 26)))
      (= (tmp 45) (reg-range src (constant ? 25) (constant ? 25)))
      (= (tmp 46) (bit_xor (constant ? 1) (tmp 44) (tmp 45)))
      (= (tmp 47) (reg-range src (constant ? 24) (constant ? 24)))
      (= (tmp 48) (bit_xor (constant ? 1) (tmp 46) (tmp 47)))
      (= (tmp 49) (reg-range src (constant ? 23) (constant ? 23)))
      (= (tmp 50) (bit_xor (constant ? 1) (tmp 48) (tmp 49)))
      (set-reg (tmp 43) (tmp 50))
      (= (tmp 51) (reg-range dst (constant ? 10) (constant ? 10)))
      (= (tmp 52) (reg-range src (constant ? 25) (constant ? 25)))
      (= (tmp 53) (reg-range src (constant ? 24) (constant ? 24)))
      (= (tmp 54) (bit_xor (constant ? 1) (tmp 52) (tmp 53)))
      (= (tmp 55) (reg-range src (constant ? 23) (constant ? 23)))
      (= (tmp 56) (bit_xor (constant ? 1) (tmp 54) (tmp 55)))
      (= (tmp 57) (reg-range src (constant ? 22) (constant ? 22)))
      (= (tmp 58) (bit_xor (constant ? 1) (tmp 56) (tmp 57)))
      (set-reg (tmp 51) (tmp 58))
      (= (tmp 59) (reg-range dst (constant ? 9) (constant ? 9)))
      (= (tmp 60) (reg-range src (constant ? 24) (constant ? 24)))
      (= (tmp 61) (reg-range src (constant ? 23) (constant ? 23)))
      (= (tmp 62) (bit_xor (constant ? 1) (tmp 60) (tmp 61)))
      (= (tmp 63) (reg-range src (constant ? 22) (constant ? 22)))
      (= (tmp 64) (bit_xor (constant ? 1) (tmp 62) (tmp 63)))
      (= (tmp 65) (reg-range src (constant ? 21) (constant ? 21)))
      (= (tmp 66) (bit_xor (constant ? 1) (tmp 64) (tmp 65)))
      (set-reg (tmp 59) (tmp 66))
      (= (tmp 67) (reg-range dst (constant ? 8) (constant ? 8)))
      (= (tmp 68) (reg-range src (constant ? 23) (constant ? 23)))
      (= (tmp 69) (reg-range src (constant ? 22) (constant ? 22)))
      (= (tmp 70) (bit_xor (constant ? 1) (tmp 68) (tmp 69)))
      (= (tmp 71) (reg-range src (constant ? 21) (constant ? 21)))
      (= (tmp 72) (bit_xor (constant ? 1) (tmp 70) (tmp 71)))
      (= (tmp 73) (reg-range src (constant ? 20) (constant ? 20)))
      (= (tmp 74) (bit_xor (constant ? 1) (tmp 72) (tmp 73)))
      (set-reg (tmp 67) (tmp 74))
      (= (tmp 75) (reg-range dst (constant ? 7) (constant ? 7)))
      (= (tmp 76) (reg-range src (constant ? 22) (constant ? 22)))
      (= (tmp 77) (reg-range src (constant ? 21) (constant ? 21)))
      (= (tmp 78) (bit_xor (constant ? 1) (tmp 76) (tmp 77)))
      (= (tmp 79) (reg-range src (constant ? 20) (constant ? 20)))
      (= (tmp 80) (bit_xor (constant ? 1) (tmp 78) (tmp 79)))
      (= (tmp 81) (reg-range src (constant ? 19) (constant ? 19)))
      (= (tmp 82) (bit_xor (constant ? 1) (tmp 80) (tmp 81)))
      (set-reg (tmp 75) (tmp 82))
      (= (tmp 83) (reg-range dst (constant ? 6) (constant ? 6)))
      (= (tmp 84) (reg-range src (constant ? 21) (constant ? 21)))
      (= (tmp 85) (reg-range src (constant ? 20) (constant ? 20)))
      (= (tmp 86) (bit_xor (constant ? 1) (tmp 84) (tmp 85)))
      (= (tmp 87) (reg-range src (constant ? 19) (constant ? 19)))
      (= (tmp 88) (bit_xor (constant ? 1) (tmp 86) (tmp 87)))
      (= (tmp 89) (reg-range src (constant ? 18) (constant ? 18)))
      (= (tmp 90) (bit_xor (constant ? 1) (tmp 88) (tmp 89)))
      (set-reg (tmp 83) (tmp 90))
      (= (tmp 91) (reg-range dst (constant ? 5) (constant ? 5)))
      (= (tmp 92) (reg-range src (constant ? 20) (constant ? 20)))
      (= (tmp 93) (reg-range src (constant ? 19) (constant ? 19)))
      (= (tmp 94) (bit_xor (constant ? 1) (tmp 92) (tmp 93)))
      (= (tmp 95) (reg-range src (constant ? 18) (constant ? 18)))
      (= (tmp 96) (bit_xor (constant ? 1) (tmp 94) (tmp 95)))
      (= (tmp 97) (reg-range src (constant ? 17) (constant ? 17)))
      (= (tmp 98) (bit_xor (constant ? 1) (tmp 96) (tmp 97)))
      (set-reg (tmp 91) (tmp 98))
      (= (tmp 99) (reg-range dst (constant ? 4) (constant ? 4)))
      (= (tmp 100) (reg-range src (constant ? 19) (constant ? 19)))
      (= (tmp 101) (reg-range src (constant ? 18) (constant ? 18)))
      (= (tmp 102) (bit_xor (constant ? 1) (tmp 100) (tmp 101)))
      (= (tmp 103) (reg-range src (constant ? 17) (constant ? 17)))
      (= (tmp 104) (bit_xor (constant ? 1) (tmp 102) (tmp 103)))
      (= (tmp 105) (reg-range src (constant ? 16) (constant ? 16)))
      (= (tmp 106) (bit_xor (constant ? 1) (tmp 104) (tmp 105)))
      (set-reg (tmp 99) (tmp 106))
      (= (tmp 107) (reg-range dst (constant ? 3) (constant ? 3)))
      (= (tmp 108) (reg-range src (constant ? 18) (constant ? 18)))
      (= (tmp 109) (reg-range src (constant ? 17) (constant ? 17)))
      (= (tmp 110) (bit_xor (constant ? 1) (tmp 108) (tmp 109)))
      (= (tmp 111) (reg-range src (constant ? 16) (constant ? 16)))
      (= (tmp 112) (bit_xor (constant ? 1) (tmp 110) (tmp 111)))
      (= (tmp 113) (reg-range src (constant ? 15) (constant ? 15)))
      (= (tmp 114) (bit_xor (constant ? 1) (tmp 112) (tmp 113)))
      (set-reg (tmp 107) (tmp 114))
      (= (tmp 115) (reg-range dst (constant ? 2) (constant ? 2)))
      (= (tmp 116) (reg-range src (constant ? 17) (constant ? 17)))
      (= (tmp 117) (reg-range src (constant ? 16) (constant ? 16)))
      (= (tmp 118) (bit_xor (constant ? 1) (tmp 116) (tmp 117)))
      (= (tmp 119) (reg-range src (constant ? 15) (constant ? 15)))
      (= (tmp 120) (bit_xor (constant ? 1) (tmp 118) (tmp 119)))
      (= (tmp 121) (reg-range src (constant ? 14) (constant ? 14)))
      (= (tmp 122) (bit_xor (constant ? 1) (tmp 120) (tmp 121)))
      (set-reg (tmp 115) (tmp 122))
      (= (tmp 123) (reg-range dst (constant ? 1) (constant ? 1)))
      (= (tmp 124) (reg-range src (constant ? 16) (constant ? 16)))
      (= (tmp 125) (reg-range src (constant ? 15) (constant ? 15)))
      (= (tmp 126) (bit_xor (constant ? 1) (tmp 124) (tmp 125)))
      (= (tmp 127) (reg-range src (constant ? 14) (constant ? 14)))
      (= (tmp 128) (bit_xor (constant ? 1) (tmp 126) (tmp 127)))
      (= (tmp 129) (reg-range src (constant ? 13) (constant ? 13)))
      (= (tmp 130) (bit_xor (constant ? 1) (tmp 128) (tmp 129)))
      (set-reg (tmp 123) (tmp 130))
      (= (tmp 131) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 131) (constant ? 0))
      (= (tmp 133) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 132) (tmp 133))
      (= (tmp 135) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 134) (tmp 135))
      (= (tmp 137) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 136) (tmp 137))
      (= (tmp 139) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 138) (tmp 139))
      (= (tmp 141) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 141) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 142) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 140) (tmp 142)))))

(instruction
  andz_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls dst))
      (allocate-in (tmp 10) (reg-flag op dst))
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 6) (reg-flag ms dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (bit_and (constant ? 32) src1 src2))
      (set-reg dst (tmp 0))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  mv_r16++m
  (pattern
    (constraints
      (allocate-in (tmp 2) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 0) (reg-flag m rN)))
    (code
      (= (tmp 1) (add (constant ? 16) rN (tmp 0)))
      (set-reg rN (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 2) (tmp 4)))))

(instruction
  maxz_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 15) (reg-flag ex dst))
      (allocate-in (tmp 18) (reg-flag mi dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 14) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag ex dst))
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in (tmp 7) (reg-flag ac dst))
      (allocate-in (tmp 6) (reg-flag ag dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (icmp ugt (constant ? 32) (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (set-reg (tmp 6) (constant ? 0))
      (= (tmp 8) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? 0)))
      (br (tmp 10) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 13) (icmp (constant ? 40) eq (tmp 12) (constant ? -1)))
      (br (tmp 13) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 16) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi ((no-value . bb_6) ((tmp 16) . bb_7))))
      (= (tmp 19) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 18) (tmp 19)))))

(instruction
  maxs_a16_a16_a16
  (pattern
    (constraints
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in (tmp 11) (reg-flag ex dst))
      (allocate-in (tmp 18) (reg-flag mi dst))
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 7) (reg-flag ac dst))
      (allocate-in (tmp 15) (reg-flag ex dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 14) (reg-flag ex dst)))
    (code
      (= (tmp 0) (icmp sgt (constant ? 16) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 8) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? 0)))
      (br (tmp 10) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 13) (icmp (constant ? 40) eq (tmp 12) (constant ? -1)))
      (br (tmp 13) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 16) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi ((no-value . bb_6) ((tmp 16) . bb_7))))
      (= (tmp 19) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 18) (tmp 19))))
  (pattern
    (constraints
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in (tmp 18) (reg-flag mi dst))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 14) (reg-flag ex dst))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 11) (reg-flag ex dst))
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in (tmp 15) (reg-flag ex dst))
      (allocate-in (tmp 7) (reg-flag ac dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 1) (reg-flag c dst)))
    (code
      (= (tmp 0) (icmp sgt (constant ? 16) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 39)))
      (= (tmp 6) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? 0)))
      (br (tmp 10) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 13) (icmp (constant ? 40) eq (tmp 12) (constant ? -1)))
      (br (tmp 13) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 16) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi ((no-value . bb_6) ((tmp 16) . bb_7))))
      (= (tmp 19) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 18) (tmp 19)))))

(instruction
  and_nimm16_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls (tmp 0)))
      (allocate-in (tmp 10) (reg-flag op (tmp 0)))
      (allocate-in (tmp 4) (reg-flag mi (tmp 0)))
      (allocate-in (tmp 2) (reg-flag ac (tmp 0)))
      (immediate UImm ((0 . 65535)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 6) (reg-flag ms (tmp 0))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_and (constant ? 16) (tmp 0) UImm))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range (tmp 0) (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 1) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 1) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 1) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  max2_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 17) (reg-flag a dst))
      (allocate-in (tmp 19) (reg-flag ex dst))
      (allocate-in (tmp 16) (reg-flag ex dst))
      (allocate-in (tmp 14) (reg-flag a dst))
      (allocate-in (tmp 12) (reg-flag ac dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 23) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 20) (reg-flag ex dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 2) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (icmp sgt (constant ? 16) (tmp 1) (tmp 2)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 0) (tmp 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 0) (tmp 2))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 6) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 7) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 8) (icmp sgt (constant ? 16) (tmp 6) (tmp 7)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (tmp 6))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 5) (tmp 7))
      (br bb_5)
      (label bb_5)
      (= (tmp 9) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 11) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (icmp (constant ? 40) eq (tmp 14) (constant ? 0)))
      (br (tmp 15) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 18) (icmp (constant ? 40) eq (tmp 17) (constant ? -1)))
      (br (tmp 18) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 19) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 20) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 21) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 22) (phi ((no-value . bb_9) ((tmp 21) . bb_10))))
      (= (tmp 24) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 23) (tmp 24)))))

(instruction
  maxz_a16_a16_a16
  (pattern
    (constraints
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in (tmp 11) (reg-flag ex dst))
      (allocate-in (tmp 18) (reg-flag mi dst))
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 7) (reg-flag ac dst))
      (allocate-in (tmp 15) (reg-flag ex dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 14) (reg-flag ex dst)))
    (code
      (= (tmp 0) (icmp ugt (constant ? 16) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 8) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? 0)))
      (br (tmp 10) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 13) (icmp (constant ? 40) eq (tmp 12) (constant ? -1)))
      (br (tmp 13) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 16) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi ((no-value . bb_6) ((tmp 16) . bb_7))))
      (= (tmp 19) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 18) (tmp 19))))
  (pattern
    (constraints
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in (tmp 18) (reg-flag mi dst))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 14) (reg-flag ex dst))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 11) (reg-flag ex dst))
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in (tmp 15) (reg-flag ex dst))
      (allocate-in (tmp 7) (reg-flag ac dst))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 1) (reg-flag c dst)))
    (code
      (= (tmp 0) (icmp ugt (constant ? 16) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 39)))
      (= (tmp 6) (zext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? 0)))
      (br (tmp 10) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 13) (icmp (constant ? 40) eq (tmp 12) (constant ? -1)))
      (br (tmp 13) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 16) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi ((no-value . bb_6) ((tmp 16) . bb_7))))
      (= (tmp 19) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 18) (tmp 19)))))

(instruction
  mv_r16>>1
  (pattern
    (constraints
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 1) (reg-flag z rN)))
    (code
      (= (tmp 0) (lshr (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 0))
      (= (tmp 2) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 1) (tmp 3)))))

(instruction
  andh_nimm16_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ls (tmp 0)))
      (allocate-in (tmp 10) (reg-flag op (tmp 0)))
      (allocate-in (tmp 4) (reg-flag mi (tmp 0)))
      (allocate-in (tmp 2) (reg-flag ac (tmp 0)))
      (immediate UImm ((0 . 65535)))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 6) (reg-flag ms (tmp 0))))
    (code
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_and (constant ? 16) (tmp 0) UImm))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (reg-range (tmp 0) (constant ? 39) (constant ? 39)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (reg-range (tmp 1) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (reg-range (tmp 1) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp eq (constant ? 1) (tmp 1) (constant ? 0)))
      (br (tmp 11) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 12) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 10) (tmp 12)))))

(instruction
  subhz_a40_a16_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag ag dst))
      (aliases (no-value (tmp 10)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 7) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 8) (shl (constant ? 32) src2 (constant ? 16)))
      (= (tmp 9) (sub (constant ? 32) (tmp 7) (tmp 8)))
      (set-reg dst (tmp 9))
      (set-reg (tmp 11) (constant ? 0))))
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag ag dst))
      (aliases ((tmp 6) (tmp 10)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag sa (register cuc) ((1 . 1))))
    (code
      (= (tmp 1) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (icmp ugt (constant ? 40) (tmp 1) src1))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= (tmp 3) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 4) (shl (constant ? 32) src2 (constant ? 16)))
      (= (tmp 5) (sub (constant ? 32) (tmp 3) (tmp 4)))
      (set-reg dst (tmp 5))
      (br bb_2)
      (label bb_2)
      (= (tmp 6) (phi ((no-value . bb_0) (no-value . bb_1))))
      (set-reg (tmp 11) (constant ? 0)))))

(instruction
  amin8_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 42) (reg-flag nb (register cuf)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 41) (reg-flag nb (register cuf))))
    (code
      (= (tmp 0) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 1) (shl (constant ? 16) (tmp 0) (constant ? 8)))
      (= (tmp 2) (icmp (constant ? 16) lt (tmp 1) (register cb)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg (register cb) (tmp 1))
      (set-reg (register cd) (register ct))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 4) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 5) (shl (constant ? 16) (tmp 4) (constant ? 8)))
      (= (tmp 6) (add (constant ? 16) (register ct) (constant ? 1)))
      (= (tmp 7) (icmp (constant ? 16) lt (tmp 5) (register cb)))
      (br (tmp 7) bb_3 bb_4)
      (label bb_3)
      (set-reg (register cb) (tmp 5))
      (set-reg (register cd) (tmp 6))
      (br bb_5)
      (label bb_4)
      (br bb_5)
      (label bb_5)
      (= (tmp 8) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 9) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 10) (shl (constant ? 16) (tmp 9) (constant ? 8)))
      (= (tmp 11) (add (constant ? 16) (register ct) (constant ? 2)))
      (= (tmp 12) (icmp (constant ? 16) lt (tmp 10) (register cb)))
      (br (tmp 12) bb_6 bb_7)
      (label bb_6)
      (set-reg (register cb) (tmp 10))
      (set-reg (register cd) (tmp 11))
      (br bb_8)
      (label bb_7)
      (br bb_8)
      (label bb_8)
      (= (tmp 13) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 14) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 15) (shl (constant ? 16) (tmp 14) (constant ? 8)))
      (= (tmp 16) (add (constant ? 16) (register ct) (constant ? 3)))
      (= (tmp 17) (icmp (constant ? 16) lt (tmp 15) (register cb)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (set-reg (register cb) (tmp 15))
      (set-reg (register cd) (tmp 16))
      (br bb_11)
      (label bb_10)
      (br bb_11)
      (label bb_11)
      (= (tmp 18) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 19) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 20) (shl (constant ? 16) (tmp 19) (constant ? 8)))
      (= (tmp 21) (add (constant ? 16) (register ct) (constant ? 4)))
      (= (tmp 22) (icmp (constant ? 16) lt (tmp 20) (register cb)))
      (br (tmp 22) bb_12 bb_13)
      (label bb_12)
      (set-reg (register cb) (tmp 20))
      (set-reg (register cd) (tmp 21))
      (br bb_14)
      (label bb_13)
      (br bb_14)
      (label bb_14)
      (= (tmp 23) (phi ((no-value . bb_12) (no-value . bb_13))))
      (= (tmp 24) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 25) (shl (constant ? 16) (tmp 24) (constant ? 8)))
      (= (tmp 26) (add (constant ? 16) (register ct) (constant ? 5)))
      (= (tmp 27) (icmp (constant ? 16) lt (tmp 25) (register cb)))
      (br (tmp 27) bb_15 bb_16)
      (label bb_15)
      (set-reg (register cb) (tmp 25))
      (set-reg (register cd) (tmp 26))
      (br bb_17)
      (label bb_16)
      (br bb_17)
      (label bb_17)
      (= (tmp 28) (phi ((no-value . bb_15) (no-value . bb_16))))
      (= (tmp 29) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 30) (shl (constant ? 16) (tmp 29) (constant ? 8)))
      (= (tmp 31) (add (constant ? 16) (register ct) (constant ? 6)))
      (= (tmp 32) (icmp (constant ? 16) lt (tmp 30) (register cb)))
      (br (tmp 32) bb_18 bb_19)
      (label bb_18)
      (set-reg (register cb) (tmp 30))
      (set-reg (register cd) (tmp 31))
      (br bb_20)
      (label bb_19)
      (br bb_20)
      (label bb_20)
      (= (tmp 33) (phi ((no-value . bb_18) (no-value . bb_19))))
      (= (tmp 34) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 35) (shl (constant ? 16) (tmp 34) (constant ? 8)))
      (= (tmp 36) (add (constant ? 16) (register ct) (constant ? 7)))
      (= (tmp 37) (icmp (constant ? 16) lt (tmp 35) (register cb)))
      (br (tmp 37) bb_21 bb_22)
      (label bb_21)
      (set-reg (register cb) (tmp 35))
      (set-reg (register cd) (tmp 36))
      (br bb_23)
      (label bb_22)
      (br bb_23)
      (label bb_23)
      (= (tmp 38) (phi ((no-value . bb_21) (no-value . bb_22))))
      (= (tmp 39) (add (constant ? 16) (register ct) (constant ? 8)))
      (set-reg (register ct) (tmp 39))
      (= (tmp 40) (icmp slt (constant ? 16) (register cb) (register cb)))
      (br (tmp 40) bb_24 bb_25)
      (label bb_24)
      (set-reg (tmp 41) (constant ? 1))
      (br bb_26)
      (label bb_25)
      (set-reg (tmp 42) (constant ? 0))
      (br bb_26)
      (label bb_26)
      (= (tmp 43) (phi ((no-value . bb_24) (no-value . bb_25)))))))

(instruction
  min_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ex dst))
      (allocate-in (tmp 12) (reg-flag ex dst))
      (allocate-in (tmp 11) (reg-flag ex dst))
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag ac dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag mi dst))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in (tmp 6) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (icmp slt (constant ? 40) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (icmp (constant ? 40) eq (tmp 6) (constant ? 0)))
      (br (tmp 7) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 8) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? -1)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 12) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 13) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) ((tmp 13) . bb_7))))
      (= (tmp 16) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 15) (tmp 16)))))

(instruction
  mv_r16<<1
  (pattern
    (constraints
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 1) (reg-flag z rN)))
    (code
      (= (tmp 0) (shl (constant ? 16) rN (constant ? 1)))
      (set-reg rN (tmp 0))
      (= (tmp 2) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 1) (tmp 3)))))

(instruction
  and_nimm16_a16_low
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 1) (reg-flag ac dst))
      (allocate-in (tmp 3) (reg-flag mi dst))
      (immediate UImm ((0 . 65535)))
      (allocate-in (tmp 5) (reg-flag ms dst))
      (allocate-in (tmp 7) (reg-flag ls dst))
      (allocate-in (tmp 9) (reg-flag op dst)))
    (code
      (= (tmp 0) (bit_and (constant ? 16) dst UImm))
      (set-reg dst (tmp 0))
      (= (tmp 2) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 10) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 9) (tmp 11)))))

(instruction
  mv_r16-no-modifier
  (pattern
    (constraints
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 0) (reg-flag z rN)))
    (code
      (= (tmp 1) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 0) (tmp 2)))))

(instruction
  abs_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag ex dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 29) (reg-flag ex dst))
      (allocate-in (tmp 4) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 26) (reg-flag a dst))
      (allocate-in (tmp 23) (reg-flag a dst))
      (allocate-in (tmp 21) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 25) (reg-flag ex dst))
      (allocate-in (tmp 7) (reg-flag of dst))
      (allocate-in (tmp 32) (reg-flag mi dst))
      (allocate-in (tmp 6) (reg-flag of dst)))
    (code
      (= (tmp 0) (icmp (constant ? 40) slt src (constant ? 0)))
      (br (tmp 0) bb_12 bb_13)
      (label bb_12)
      (= (tmp 2) (sub (constant ? 40) (constant ? 0) src))
      (= (tmp 3) (icmp (constant ? 40) sgt (tmp 2) (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 4) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 5) (icmp (constant ? 40) sgt (tmp 2) src))
      (br (tmp 5) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 6) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 7) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 8) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 9) (phi ((no-value . bb_3) ((tmp 8) . bb_4))))
      (= (tmp 10) (satsub (constant ? 40) (constant ? 0) src))
      (set-reg dst (tmp 10))
      (br bb_14)
      (label bb_13)
      (set-reg dst src)
      (br bb_14)
      (label bb_14)
      (= (tmp 20) (phi ((no-value . bb_12) (no-value . bb_13))))
      (= (tmp 22) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 21) (tmp 22))
      (= (tmp 24) (icmp (constant ? 40) eq (tmp 23) (constant ? 0)))
      (br (tmp 24) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 25) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (= (tmp 27) (icmp (constant ? 40) eq (tmp 26) (constant ? -1)))
      (br (tmp 27) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 30) (phi ((no-value . bb_15) (no-value . bb_16))))
      (br bb_20)
      (label bb_20)
      (= (tmp 31) (phi ((no-value . bb_18) ((tmp 30) . bb_19))))
      (= (tmp 33) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 32) (tmp 33))))
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag ex dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 13) (reg-flag of dst))
      (allocate-in (tmp 29) (reg-flag ex dst))
      (allocate-in (tmp 16) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 26) (reg-flag a dst))
      (allocate-in (tmp 23) (reg-flag a dst))
      (allocate-in (tmp 21) (reg-flag ac dst))
      (allocate-in (tmp 25) (reg-flag ex dst))
      (allocate-in (tmp 15) (reg-flag of dst))
      (allocate-in (tmp 32) (reg-flag mi dst))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 0) (icmp (constant ? 40) slt src (constant ? 0)))
      (br (tmp 0) bb_12 bb_13)
      (label bb_12)
      (= (tmp 11) (sub (constant ? 40) (constant ? 0) src))
      (= (tmp 12) (icmp (constant ? 40) sgt (tmp 11) (constant ? 0)))
      (br (tmp 12) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 14) (icmp (constant ? 40) sgt (tmp 11) src))
      (br (tmp 14) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 15) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 16) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 18) (phi ((no-value . bb_9) ((tmp 17) . bb_10))))
      (= (tmp 19) (sub (constant ? 40) (constant ? 0) src))
      (set-reg dst (tmp 19))
      (br bb_14)
      (label bb_13)
      (set-reg dst src)
      (br bb_14)
      (label bb_14)
      (= (tmp 20) (phi ((no-value . bb_12) (no-value . bb_13))))
      (= (tmp 22) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 21) (tmp 22))
      (= (tmp 24) (icmp (constant ? 40) eq (tmp 23) (constant ? 0)))
      (br (tmp 24) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 25) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (= (tmp 27) (icmp (constant ? 40) eq (tmp 26) (constant ? -1)))
      (br (tmp 27) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 30) (phi ((no-value . bb_15) (no-value . bb_16))))
      (br bb_20)
      (label bb_20)
      (= (tmp 31) (phi ((no-value . bb_18) ((tmp 30) . bb_19))))
      (= (tmp 33) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 32) (tmp 33)))))

(instruction
  mv_a16_dp16_nimm5
  (pattern
    (constraints
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dpop (dp))
      (aliases (src (tmp 5)))
      (immediate SImm ((-16 . 15))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (store (constant ? 16) ldm (tmp 0) (tmp 5)))))

(instruction
  mins_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 15) (reg-flag ex dst))
      (allocate-in (tmp 13) (reg-flag a dst))
      (allocate-in (tmp 16) (reg-flag ex dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 8) (reg-flag ac dst))
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 19) (reg-flag mi dst))
      (allocate-in (tmp 12) (reg-flag ex dst))
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag a dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (icmp slt (constant ? 32) (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 6) (tmp 7))
      (= (tmp 9) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 8) (tmp 9))
      (= (tmp 11) (icmp (constant ? 40) eq (tmp 10) (constant ? 0)))
      (br (tmp 11) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 12) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 14) (icmp (constant ? 40) eq (tmp 13) (constant ? -1)))
      (br (tmp 14) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 15) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 16) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 17) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 18) (phi ((no-value . bb_6) ((tmp 17) . bb_7))))
      (= (tmp 20) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 19) (tmp 20)))))

(instruction
  and_nimm16_a16_high
  (pattern
    (constraints
      (allocate-in dst (a1h a2h a3h a4h a5h a6h a7h a0h))
      (allocate-in (tmp 1) (reg-flag ac dst))
      (allocate-in (tmp 3) (reg-flag mi dst))
      (immediate UImm ((0 . 65535)))
      (allocate-in (tmp 5) (reg-flag ms dst))
      (allocate-in (tmp 7) (reg-flag ls dst))
      (allocate-in (tmp 9) (reg-flag op dst)))
    (code
      (= (tmp 0) (bit_and (constant ? 16) dst UImm))
      (set-reg dst (tmp 0))
      (= (tmp 2) (icmp eq (constant ? 80) (tmp 0) (constant ? 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range (tmp 0) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range (tmp 0) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp eq (constant ? 1) (tmp 0) (constant ? 0)))
      (br (tmp 10) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 9) (tmp 11)))))

(instruction
  andnotz_a16_a16_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in (tmp 11) (reg-flag op dst))
      (allocate-in (tmp 9) (reg-flag ls dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 7) (reg-flag ms dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (bit_not (constant ? 16) src2))
      (= (tmp 1) (bit_and (constant ? 16) src1 (tmp 0)))
      (set-reg dst (tmp 1))
      (= (tmp 4) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range (tmp 1) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range (tmp 1) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) (tmp 1) (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 11) (reg-flag op dst))
      (allocate-in (tmp 9) (reg-flag ls dst))
      (allocate-in (tmp 2) (reg-flag ag dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag ms dst))
      (allocate-in src1 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in src2 (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h)))
    (code
      (= (tmp 0) (bit_not (constant ? 16) src2))
      (= (tmp 1) (bit_and (constant ? 16) src1 (tmp 0)))
      (set-reg dst (tmp 1))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 4) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range (tmp 1) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range (tmp 1) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) (tmp 1) (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  mv_dp16_nimm5_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in dpop (dp))
      (reg-flag u dst ((1 . 1)))
      (reg-flag l dst ((1 . 1)))
      (immediate SImm ((-16 . 15))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 4) (zext (constant ? 16) (tmp 1) (constant ? 40)))
      (set-reg dst (tmp 4))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in dpop (dp))
      (reg-flag u dst ((0 . 0)))
      (reg-flag l dst ((1 . 1)))
      (immediate SImm ((-16 . 15))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 5) (sext (constant ? 16) (tmp 1) (constant ? 40)))
      (set-reg dst (tmp 5))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in dpop (dp))
      (reg-flag l dst ((0 . 0)))
      (immediate SImm ((-16 . 15))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg dst (tmp 1))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dpop (dp))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 13) (reg-flag al dst))
      (reg-flag h dst ((1 . 1)))
      (immediate SImm ((-16 . 15))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 13) (constant ? 0))
      (= (tmp 18) (zext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 18))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dpop (dp))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 13) (reg-flag al dst))
      (reg-flag h dst ((1 . 1)))
      (immediate SImm ((-16 . 15))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg (tmp 13) (constant ? 0))
      (= (tmp 19) (sext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 19))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dpop (dp))
      (reg-flag u dst ((1 . 1)))
      (reg-flag h dst ((0 . 0)))
      (immediate SImm ((-16 . 15))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 27) (zext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 27))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in dpop (dp))
      (reg-flag u dst ((0 . 0)))
      (reg-flag h dst ((0 . 0)))
      (immediate SImm ((-16 . 15))))
    (code
      (= (tmp 0) (add (constant ? 16) dpop SImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (= (tmp 28) (sext (constant ? 16) (tmp 1) (constant ? 32)))
      (set-reg dst (tmp 28)))))

(instruction
  minz_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 15) (reg-flag ex dst))
      (allocate-in (tmp 18) (reg-flag mi dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 14) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag ex dst))
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 12) (reg-flag a dst))
      (allocate-in (tmp 7) (reg-flag ac dst))
      (allocate-in (tmp 6) (reg-flag ag dst))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (icmp ult (constant ? 32) (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (set-reg (tmp 6) (constant ? 0))
      (= (tmp 8) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? 0)))
      (br (tmp 10) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 13) (icmp (constant ? 40) eq (tmp 12) (constant ? -1)))
      (br (tmp 13) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 14) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 15) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 16) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi ((no-value . bb_6) ((tmp 16) . bb_7))))
      (= (tmp 19) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 18) (tmp 19)))))

(instruction
  mv_nimm6_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag u dst ((1 . 1)))
      (reg-flag l dst ((1 . 1)))
      (immediate SImm ((-16 . -1) (1 . 16))))
    (code
      (= (tmp 2) (zext (constant ? 16) SImm (constant ? 40)))
      (set-reg dst (tmp 2))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag u dst ((0 . 0)))
      (reg-flag l dst ((1 . 1)))
      (immediate SImm ((-16 . -1) (1 . 16))))
    (code
      (= (tmp 3) (sext (constant ? 16) SImm (constant ? 40)))
      (set-reg dst (tmp 3))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((0 . 0)))
      (immediate SImm ((-16 . -1) (1 . 16))))
    (code
      (set-reg dst SImm)))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (reg-flag u dst ((1 . 1)))
      (allocate-in (tmp 11) (reg-flag al dst))
      (immediate SImm ((-16 . -1) (1 . 16))))
    (code
      (set-reg (tmp 11) (constant ? 0))
      (= (tmp 16) (zext (constant ? 16) SImm (constant ? 32)))
      (set-reg dst (tmp 16))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((1 . 1)))
      (reg-flag u dst ((0 . 0)))
      (allocate-in (tmp 11) (reg-flag al dst))
      (immediate SImm ((-16 . -1) (1 . 16))))
    (code
      (set-reg (tmp 11) (constant ? 0))
      (= (tmp 17) (sext (constant ? 16) SImm (constant ? 32)))
      (set-reg dst (tmp 17))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag u dst ((1 . 1)))
      (reg-flag h dst ((0 . 0)))
      (immediate SImm ((-16 . -1) (1 . 16))))
    (code
      (= (tmp 25) (zext (constant ? 16) SImm (constant ? 32)))
      (set-reg dst (tmp 25))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag u dst ((0 . 0)))
      (reg-flag h dst ((0 . 0)))
      (immediate SImm ((-16 . -1) (1 . 16))))
    (code
      (= (tmp 26) (sext (constant ? 16) SImm (constant ? 32)))
      (set-reg dst (tmp 26))))
  (pattern
    (constraints
      (allocate-in dst (r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (immediate SImm ((-16 . -1) (1 . 16))))
    (code
      (set-reg dst SImm))))

(instruction
  abss_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag ex dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 29) (reg-flag ex dst))
      (allocate-in (tmp 4) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 26) (reg-flag a dst))
      (allocate-in (tmp 23) (reg-flag a dst))
      (allocate-in (tmp 21) (reg-flag ac dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 25) (reg-flag ex dst))
      (allocate-in (tmp 7) (reg-flag of dst))
      (allocate-in (tmp 32) (reg-flag mi dst))
      (allocate-in (tmp 6) (reg-flag of dst)))
    (code
      (= (tmp 0) (icmp (constant ? 32) slt src (constant ? 0)))
      (br (tmp 0) bb_12 bb_13)
      (label bb_12)
      (= (tmp 2) (sub (constant ? 32) (constant ? 0) src))
      (= (tmp 3) (icmp (constant ? 32) sgt (tmp 2) (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 4) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 5) (icmp (constant ? 32) sgt (tmp 2) src))
      (br (tmp 5) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 6) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 7) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 8) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 9) (phi ((no-value . bb_3) ((tmp 8) . bb_4))))
      (= (tmp 10) (satsub (constant ? 32) (constant ? 0) src))
      (set-reg dst (tmp 10))
      (br bb_14)
      (label bb_13)
      (set-reg dst src)
      (br bb_14)
      (label bb_14)
      (= (tmp 20) (phi ((no-value . bb_12) (no-value . bb_13))))
      (= (tmp 22) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 21) (tmp 22))
      (= (tmp 24) (icmp (constant ? 40) eq (tmp 23) (constant ? 0)))
      (br (tmp 24) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 25) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (= (tmp 27) (icmp (constant ? 40) eq (tmp 26) (constant ? -1)))
      (br (tmp 27) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 30) (phi ((no-value . bb_15) (no-value . bb_16))))
      (br bb_20)
      (label bb_20)
      (= (tmp 31) (phi ((no-value . bb_18) ((tmp 30) . bb_19))))
      (= (tmp 33) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 32) (tmp 33))))
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag ex dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 13) (reg-flag of dst))
      (allocate-in (tmp 29) (reg-flag ex dst))
      (allocate-in (tmp 16) (reg-flag of dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 26) (reg-flag a dst))
      (allocate-in (tmp 23) (reg-flag a dst))
      (allocate-in (tmp 21) (reg-flag ac dst))
      (allocate-in (tmp 25) (reg-flag ex dst))
      (allocate-in (tmp 15) (reg-flag of dst))
      (allocate-in (tmp 32) (reg-flag mi dst))
      (reg-flag sa (register cuc) ((0 . 0))))
    (code
      (= (tmp 0) (icmp (constant ? 32) slt src (constant ? 0)))
      (br (tmp 0) bb_12 bb_13)
      (label bb_12)
      (= (tmp 11) (sub (constant ? 32) (constant ? 0) src))
      (= (tmp 12) (icmp (constant ? 32) sgt (tmp 11) (constant ? 0)))
      (br (tmp 12) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 13) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 14) (icmp (constant ? 32) sgt (tmp 11) src))
      (br (tmp 14) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 15) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 16) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 17) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 18) (phi ((no-value . bb_9) ((tmp 17) . bb_10))))
      (= (tmp 19) (sub (constant ? 32) (constant ? 0) src))
      (set-reg dst (tmp 19))
      (br bb_14)
      (label bb_13)
      (set-reg dst src)
      (br bb_14)
      (label bb_14)
      (= (tmp 20) (phi ((no-value . bb_12) (no-value . bb_13))))
      (= (tmp 22) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 21) (tmp 22))
      (= (tmp 24) (icmp (constant ? 40) eq (tmp 23) (constant ? 0)))
      (br (tmp 24) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 25) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (= (tmp 27) (icmp (constant ? 40) eq (tmp 26) (constant ? -1)))
      (br (tmp 27) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 28) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 29) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 30) (phi ((no-value . bb_15) (no-value . bb_16))))
      (br bb_20)
      (label bb_20)
      (= (tmp 31) (phi ((no-value . bb_18) ((tmp 30) . bb_19))))
      (= (tmp 33) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 32) (tmp 33)))))

(instruction
  andnotz_a40_a40_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 11) (reg-flag op dst))
      (allocate-in (tmp 9) (reg-flag ls dst))
      (allocate-in (tmp 2) (reg-flag ag dst))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (allocate-in (tmp 7) (reg-flag ms dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7)))
    (code
      (= (tmp 0) (bit_not (constant ? 32) src2))
      (= (tmp 1) (bit_and (constant ? 32) src1 (tmp 0)))
      (set-reg dst (tmp 1))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 4) (icmp eq (constant ? 80) (tmp 1) (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range (tmp 1) (constant ? 31) (constant ? 31)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range (tmp 1) (constant ? 0) (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) (tmp 1) (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  min2_a40_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 10) (reg-flag a dst))
      (allocate-in (tmp 17) (reg-flag a dst))
      (allocate-in (tmp 19) (reg-flag ex dst))
      (allocate-in (tmp 16) (reg-flag ex dst))
      (allocate-in (tmp 14) (reg-flag a dst))
      (allocate-in (tmp 12) (reg-flag ac dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 23) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 20) (reg-flag ex dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 2) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (icmp slt (constant ? 16) (tmp 1) (tmp 2)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 0) (tmp 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 0) (tmp 2))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 6) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 7) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 8) (icmp slt (constant ? 16) (tmp 6) (tmp 7)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (tmp 6))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 5) (tmp 7))
      (br bb_5)
      (label bb_5)
      (= (tmp 9) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 11) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 10) (tmp 11))
      (= (tmp 13) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 12) (tmp 13))
      (= (tmp 15) (icmp (constant ? 40) eq (tmp 14) (constant ? 0)))
      (br (tmp 15) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 16) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 18) (icmp (constant ? 40) eq (tmp 17) (constant ? -1)))
      (br (tmp 18) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 19) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 20) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 21) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 22) (phi ((no-value . bb_9) ((tmp 21) . bb_10))))
      (= (tmp 24) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 23) (tmp 24)))))

(instruction
  mv_a16_r16ll_nimm4
  (pattern
    (constraints
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 7) (reg-flag z rN))
      (aliases (src (tmp 5)))
      (allocate-in rN (r3 r0 r1 r2))
      (immediate UImm ((1 . 16))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (store (constant ? 16) ldm (tmp 0) (tmp 5))
      (= (tmp 8) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 8) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 7) (tmp 9)))))

(instruction
  amin4_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 18) (reg-flag nb (register cuf)))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 17) (reg-flag nb (register cuf))))
    (code
      (= (tmp 0) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 1) (icmp (constant ? 16) lt (tmp 0) (register cb)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (set-reg (register cb) (tmp 0))
      (set-reg (register cd) (register ct))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 3) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 4) (add (constant ? 16) (register ct) (constant ? 1)))
      (= (tmp 5) (icmp (constant ? 16) lt (tmp 3) (register cb)))
      (br (tmp 5) bb_3 bb_4)
      (label bb_3)
      (set-reg (register cb) (tmp 3))
      (set-reg (register cd) (tmp 4))
      (br bb_5)
      (label bb_4)
      (br bb_5)
      (label bb_5)
      (= (tmp 6) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 7) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 8) (add (constant ? 16) (register ct) (constant ? 2)))
      (= (tmp 9) (icmp (constant ? 16) lt (tmp 7) (register cb)))
      (br (tmp 9) bb_6 bb_7)
      (label bb_6)
      (set-reg (register cb) (tmp 7))
      (set-reg (register cd) (tmp 8))
      (br bb_8)
      (label bb_7)
      (br bb_8)
      (label bb_8)
      (= (tmp 10) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 11) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 12) (add (constant ? 16) (register ct) (constant ? 3)))
      (= (tmp 13) (icmp (constant ? 16) lt (tmp 11) (register cb)))
      (br (tmp 13) bb_9 bb_10)
      (label bb_9)
      (set-reg (register cb) (tmp 11))
      (set-reg (register cd) (tmp 12))
      (br bb_11)
      (label bb_10)
      (br bb_11)
      (label bb_11)
      (= (tmp 14) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 15) (add (constant ? 16) (register ct) (constant ? 4)))
      (set-reg (register ct) (tmp 15))
      (= (tmp 16) (icmp slt (constant ? 16) (register cb) (register cb)))
      (br (tmp 16) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 17) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (set-reg (tmp 18) (constant ? 0))
      (br bb_14)
      (label bb_14)
      (= (tmp 19) (phi ((no-value . bb_12) (no-value . bb_13)))))))

(instruction
  cbit_nimm5_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 9) (reg-flag ls dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (immediate UImm ((0 . 31)))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 7) (reg-flag ms dst))
      (allocate-in (tmp 0) (reg-flag c dst))
      (allocate-in (tmp 11) (reg-flag op dst)))
    (code
      (= (tmp 1) (reg-range dst UImm UImm))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst UImm UImm))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 4) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  mv_r16ll_nimm4_a16
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (reg-flag u dst ((0 . 0)))
      (immediate UImm ((1 . 16))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg dst (tmp 1))
      (= (tmp 28) (sext (constant ? 16) dst (constant ? 32)))
      (set-reg dst (tmp 28))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (reg-flag h dst ((0 . 0)))
      (allocate-in rN (r3 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (reg-flag u dst ((1 . 1)))
      (immediate UImm ((1 . 16))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg dst (tmp 1))
      (= (tmp 27) (zext (constant ? 16) dst (constant ? 32)))
      (set-reg dst (tmp 27))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (reg-flag u dst ((0 . 0)))
      (immediate UImm ((1 . 16)))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 13) (reg-flag al dst)))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg dst (tmp 1))
      (set-reg (tmp 13) (constant ? 0))
      (= (tmp 19) (sext (constant ? 16) dst (constant ? 32)))
      (set-reg dst (tmp 19))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (reg-flag h dst ((1 . 1)))
      (allocate-in rN (r3 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (reg-flag u dst ((1 . 1)))
      (immediate UImm ((1 . 16)))
      (allocate-in dst (a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 13) (reg-flag al dst)))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg dst (tmp 1))
      (set-reg (tmp 13) (constant ? 0))
      (= (tmp 18) (zext (constant ? 16) dst (constant ? 32)))
      (set-reg dst (tmp 18))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (allocate-in rN (r3 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (reg-flag l dst ((0 . 0)))
      (immediate UImm ((1 . 16))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg dst (tmp 1))
      (set-reg dst dst)
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (reg-flag u dst ((0 . 0)))
      (immediate UImm ((1 . 16))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg dst (tmp 1))
      (= (tmp 5) (sext (constant ? 16) dst (constant ? 40)))
      (set-reg dst (tmp 5))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36))))
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l))
      (reg-flag l dst ((1 . 1)))
      (allocate-in rN (r3 r0 r1 r2))
      (allocate-in (tmp 34) (reg-flag z rN))
      (reg-flag u dst ((1 . 1)))
      (immediate UImm ((1 . 16))))
    (code
      (= (tmp 0) (add (constant ? 16) rN UImm))
      (= (tmp 1) (load-mem (constant ? 16) ldm (tmp 0)))
      (set-reg dst (tmp 1))
      (= (tmp 4) (zext (constant ? 16) dst (constant ? 40)))
      (set-reg dst (tmp 4))
      (= (tmp 35) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 35) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 36) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 34) (tmp 36)))))

(instruction
  abs_a16_a16
  (pattern
    (constraints
      (allocate-in dst (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 11) (reg-flag ac dst))
      (allocate-in (tmp 18) (reg-flag ex dst))
      (allocate-in (tmp 15) (reg-flag ex dst))
      (allocate-in (tmp 16) (reg-flag a dst))
      (allocate-in (tmp 19) (reg-flag ex dst))
      (allocate-in (tmp 5) (reg-flag of dst))
      (allocate-in (tmp 3) (reg-flag of dst))
      (allocate-in (tmp 22) (reg-flag mi dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 13) (reg-flag a dst))
      (allocate-in (tmp 6) (reg-flag of dst)))
    (code
      (= (tmp 0) (icmp (constant ? 16) slt src (constant ? 0)))
      (br (tmp 0) bb_6 bb_7)
      (label bb_6)
      (= (tmp 1) (sub (constant ? 16) (constant ? 0) src))
      (= (tmp 2) (icmp (constant ? 16) sgt (tmp 1) (constant ? 0)))
      (br (tmp 2) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 3) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 4) (icmp (constant ? 16) sgt (tmp 1) src))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 5) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 6) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 8) (phi ((no-value . bb_3) ((tmp 7) . bb_4))))
      (= (tmp 9) (sub (constant ? 16) (constant ? 0) src))
      (set-reg dst (tmp 9))
      (br bb_8)
      (label bb_7)
      (set-reg dst src)
      (br bb_8)
      (label bb_8)
      (= (tmp 10) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 12) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 11) (tmp 12))
      (= (tmp 14) (icmp (constant ? 40) eq (tmp 13) (constant ? 0)))
      (br (tmp 14) bb_12 bb_13)
      (label bb_12)
      (set-reg (tmp 15) (constant ? 1))
      (br bb_14)
      (label bb_13)
      (= (tmp 17) (icmp (constant ? 40) eq (tmp 16) (constant ? -1)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 18) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 19) (constant ? 0))
      (br bb_11)
      (label bb_11)
      (= (tmp 20) (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 21) (phi ((no-value . bb_12) ((tmp 20) . bb_13))))
      (= (tmp 23) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 22) (tmp 23)))))

(instruction
  mv_r16--m
  (pattern
    (constraints
      (allocate-in (tmp 2) (reg-flag z rN))
      (allocate-in rN (r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r0 r1 r2))
      (allocate-in (tmp 0) (reg-flag m rN)))
    (code
      (= (tmp 1) (sub (constant ? 16) rN (tmp 0)))
      (set-reg rN (tmp 1))
      (= (tmp 3) (icmp eq (constant ? 1) rN (constant ? 0)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 2) (tmp 4)))))

(instruction
  swap_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ex dst))
      (allocate-in (tmp 11) (reg-flag ex dst))
      (allocate-in (tmp 17) (reg-flag mi dst))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 15) (reg-flag ac dst))
      (allocate-in (tmp 12) (reg-flag ex dst))
      (allocate-in (tmp 6) (reg-flag a dst)))
    (code
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src (constant ? 16) (constant ? 31)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 15)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (icmp (constant ? 40) eq (tmp 6) (constant ? 0)))
      (br (tmp 7) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 8) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? -1)))
      (br (tmp 10) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 12) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 14) (phi ((no-value . bb_3) ((tmp 13) . bb_4))))
      (= (tmp 16) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 15) (tmp 16))
      (= (tmp 18) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 17) (tmp 18)))))

(instruction
  push_any16
  (pattern
    (constraints
      (allocate-in src (ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll tnr cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 tval tref tconfig2 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3)))
    (code
      (= (tmp 0) (sub (constant ? 16) (register sp) (constant ? 1)))
      (set-reg (register sp) (tmp 0))
      (store (constant ? 16) ldm (register sp) src))))

(instruction
  abs_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ex dst))
      (allocate-in (tmp 11) (reg-flag ex dst))
      (allocate-in (tmp 9) (reg-flag a dst))
      (allocate-in (tmp 4) (reg-flag ac dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 15) (reg-flag mi dst))
      (allocate-in (tmp 12) (reg-flag ex dst))
      (allocate-in (tmp 6) (reg-flag a dst)))
    (code
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 1) (icmp (constant ? 40) slt (tmp 0) (constant ? 0)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (sub (constant ? 40) (constant ? 0) (tmp 0)))
      (set-reg dst (tmp 2))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 7) (icmp (constant ? 40) eq (tmp 6) (constant ? 0)))
      (br (tmp 7) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 8) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (= (tmp 10) (icmp (constant ? 40) eq (tmp 9) (constant ? -1)))
      (br (tmp 10) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 11) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 12) (constant ? 0))
      (br bb_5)
      (label bb_5)
      (= (tmp 13) (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) ((tmp 13) . bb_7))))
      (= (tmp 16) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 15) (tmp 16)))))

(instruction
  pop_any16
  (pattern
    (constraints
      (allocate-in dst (ba0 ba1 ba2 ba3 len0 len1 len2 len3 dc0 dc1 df dp sp splh spll tnr cuc csc cuf cb cd ct pcl pch brc1 brc2 bradf0 repc nw lpal lpah cpal cpah iitx nid retpcl retpch pref0l pref0h pref1l pref1h imr ifr icl isw iptr isb ifc cntl cnth pidl pidh pira piwa prc pr0l pr0h pr1l pr1h tcount0 tperiod0 tscale0 tconfig0 tcount1 tperiod1 tscale1 tconfig1 tcount2 tperiod2 tscale2 a0g a1g a2g a3g a4g a5g a6g a7g a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h ac0 ac1 af10 af32 af54 af76 tval tref tconfig2 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 m0 m1 m2 m3)))
    (code
      (= (tmp 0) (load-mem (constant ? 16) ldm (register sp)))
      (set-reg dst (tmp 0))
      (= (tmp 1) (add (constant ? 16) (register sp) (constant ? 1)))
      (set-reg (register sp) (tmp 1)))))

(instruction
  mpy_nimm2_a40_a40_a80
  (pattern
    (constraints
      (allocate-in (tmp 66) (reg-flag ac dst))
      (allocate-in (tmp 70) (reg-flag ex dst))
      (allocate-in (tmp 74) (reg-flag ex dst))
      (allocate-in (tmp 62) (reg-flag even-guard dst))
      (allocate-in (tmp 64) (reg-flag odd dst))
      (allocate-in dst (a10 a32 a54 a76))
      (allocate-in (tmp 73) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 8) (tmp 10)) ((tmp 4) (tmp 6)) ((tmp 61) (tmp 51) (tmp 11)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 71) (reg-flag a dst))
      (allocate-in (tmp 77) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 68) (reg-flag a dst))
      (immediate align_mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 63) (reg-flag odd dst)))
    (code
      (= (tmp 4) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 8) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 11) (mul (constant ? 40) (tmp 6) (tmp 10)))
      (set-reg dst (tmp 61))
      (set-reg (tmp 62) (constant ? 0))
      (= (tmp 65) (sext (constant ? 32) (tmp 64) (constant ? 40)))
      (set-reg (tmp 63) (tmp 65))
      (= (tmp 67) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 66) (tmp 67))
      (= (tmp 69) (icmp (constant ? 40) eq (tmp 68) (constant ? 0)))
      (br (tmp 69) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 70) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 72) (icmp (constant ? 40) eq (tmp 71) (constant ? -1)))
      (br (tmp 72) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 73) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 74) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 75) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 76) (phi ((no-value . bb_3) ((tmp 75) . bb_4))))
      (= (tmp 78) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 77) (tmp 78))))
  (pattern
    (constraints
      (allocate-in (tmp 66) (reg-flag ac dst))
      (allocate-in (tmp 70) (reg-flag ex dst))
      (allocate-in (tmp 74) (reg-flag ex dst))
      (allocate-in (tmp 62) (reg-flag even-guard dst))
      (allocate-in (tmp 64) (reg-flag odd dst))
      (allocate-in dst (a10 a32 a54 a76))
      (allocate-in (tmp 73) (reg-flag ex dst))
      (reg-flag ap cuc ((1 . 3)))
      (aliases ((tmp 9) (tmp 10)) ((tmp 5) (tmp 6)) ((tmp 61) (tmp 51) (tmp 11)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 71) (reg-flag a dst))
      (allocate-in (tmp 77) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 68) (reg-flag a dst))
      (immediate align_mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 63) (reg-flag odd dst)))
    (code
      (= (tmp 5) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 9) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 11) (mul (constant ? 40) (tmp 6) (tmp 10)))
      (set-reg dst (tmp 61))
      (set-reg (tmp 62) (constant ? 0))
      (= (tmp 65) (sext (constant ? 32) (tmp 64) (constant ? 40)))
      (set-reg (tmp 63) (tmp 65))
      (= (tmp 67) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 66) (tmp 67))
      (= (tmp 69) (icmp (constant ? 40) eq (tmp 68) (constant ? 0)))
      (br (tmp 69) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 70) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 72) (icmp (constant ? 40) eq (tmp 71) (constant ? -1)))
      (br (tmp 72) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 73) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 74) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 75) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 76) (phi ((no-value . bb_3) ((tmp 75) . bb_4))))
      (= (tmp 78) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 77) (tmp 78))))
  (pattern
    (constraints
      (allocate-in (tmp 66) (reg-flag ac dst))
      (allocate-in (tmp 70) (reg-flag ex dst))
      (allocate-in (tmp 74) (reg-flag ex dst))
      (allocate-in (tmp 62) (reg-flag even-guard dst))
      (allocate-in (tmp 64) (reg-flag odd dst))
      (allocate-in dst (a10 a32 a54 a76))
      (allocate-in (tmp 73) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 19) (tmp 21)) ((tmp 15) (tmp 17)) ((tmp 61) (tmp 51) (tmp 50) (tmp 23)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 71) (reg-flag a dst))
      (allocate-in (tmp 77) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 68) (reg-flag a dst))
      (immediate align_mode ((1 . 1)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 63) (reg-flag odd dst)))
    (code
      (= (tmp 15) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 19) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 22) (mul (constant ? 40) (tmp 17) (tmp 21)))
      (= (tmp 23) (shl (constant ? 40) (tmp 22) (constant ? 1)))
      (set-reg dst (tmp 61))
      (set-reg (tmp 62) (constant ? 0))
      (= (tmp 65) (sext (constant ? 32) (tmp 64) (constant ? 40)))
      (set-reg (tmp 63) (tmp 65))
      (= (tmp 67) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 66) (tmp 67))
      (= (tmp 69) (icmp (constant ? 40) eq (tmp 68) (constant ? 0)))
      (br (tmp 69) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 70) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 72) (icmp (constant ? 40) eq (tmp 71) (constant ? -1)))
      (br (tmp 72) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 73) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 74) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 75) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 76) (phi ((no-value . bb_3) ((tmp 75) . bb_4))))
      (= (tmp 78) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 77) (tmp 78))))
  (pattern
    (constraints
      (allocate-in (tmp 66) (reg-flag ac dst))
      (allocate-in (tmp 70) (reg-flag ex dst))
      (allocate-in (tmp 74) (reg-flag ex dst))
      (allocate-in (tmp 62) (reg-flag even-guard dst))
      (allocate-in (tmp 64) (reg-flag odd dst))
      (allocate-in dst (a10 a32 a54 a76))
      (allocate-in (tmp 73) (reg-flag ex dst))
      (reg-flag ap cuc ((0 . 0)))
      (aliases ((tmp 20) (tmp 21)) ((tmp 16) (tmp 17)) ((tmp 61) (tmp 51) (tmp 50) (tmp 23)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 71) (reg-flag a dst))
      (allocate-in (tmp 77) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 68) (reg-flag a dst))
      (immediate align_mode ((1 . 1)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 63) (reg-flag odd dst)))
    (code
      (= (tmp 16) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 20) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 22) (mul (constant ? 40) (tmp 17) (tmp 21)))
      (= (tmp 23) (shl (constant ? 40) (tmp 22) (constant ? 1)))
      (set-reg dst (tmp 61))
      (set-reg (tmp 62) (constant ? 0))
      (= (tmp 65) (sext (constant ? 32) (tmp 64) (constant ? 40)))
      (set-reg (tmp 63) (tmp 65))
      (= (tmp 67) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 66) (tmp 67))
      (= (tmp 69) (icmp (constant ? 40) eq (tmp 68) (constant ? 0)))
      (br (tmp 69) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 70) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 72) (icmp (constant ? 40) eq (tmp 71) (constant ? -1)))
      (br (tmp 72) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 73) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 74) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 75) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 76) (phi ((no-value . bb_3) ((tmp 75) . bb_4))))
      (= (tmp 78) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 77) (tmp 78))))
  (pattern
    (constraints
      (allocate-in (tmp 66) (reg-flag ac dst))
      (allocate-in (tmp 70) (reg-flag ex dst))
      (allocate-in (tmp 74) (reg-flag ex dst))
      (allocate-in (tmp 62) (reg-flag even-guard dst))
      (allocate-in (tmp 64) (reg-flag odd dst))
      (allocate-in dst (a10 a32 a54 a76))
      (allocate-in (tmp 73) (reg-flag ex dst))
      (aliases ((tmp 59) (tmp 57)) ((tmp 53) (tmp 55)) ((tmp 61) (tmp 60)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 71) (reg-flag a dst))
      (allocate-in (tmp 77) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 68) (reg-flag a dst))
      (immediate align_mode ((0 . 0)))
      (immediate sign-mode ((1 . 1)))
      (allocate-in (tmp 63) (reg-flag odd dst)))
    (code
      (= (tmp 53) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 57) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 60) (mul (constant ? 40) (tmp 55) (tmp 59)))
      (set-reg dst (tmp 61))
      (set-reg (tmp 62) (constant ? 0))
      (= (tmp 65) (sext (constant ? 32) (tmp 64) (constant ? 40)))
      (set-reg (tmp 63) (tmp 65))
      (= (tmp 67) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 66) (tmp 67))
      (= (tmp 69) (icmp (constant ? 40) eq (tmp 68) (constant ? 0)))
      (br (tmp 69) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 70) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 72) (icmp (constant ? 40) eq (tmp 71) (constant ? -1)))
      (br (tmp 72) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 73) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 74) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 75) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 76) (phi ((no-value . bb_3) ((tmp 75) . bb_4))))
      (= (tmp 78) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 77) (tmp 78))))
  (pattern
    (constraints
      (allocate-in (tmp 66) (reg-flag ac dst))
      (allocate-in (tmp 70) (reg-flag ex dst))
      (allocate-in (tmp 74) (reg-flag ex dst))
      (allocate-in (tmp 62) (reg-flag even-guard dst))
      (allocate-in (tmp 64) (reg-flag odd dst))
      (allocate-in dst (a10 a32 a54 a76))
      (allocate-in (tmp 73) (reg-flag ex dst))
      (aliases ((tmp 59) (tmp 58)) ((tmp 55) (tmp 54)) ((tmp 61) (tmp 60)))
      (allocate-in src2 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 71) (reg-flag a dst))
      (allocate-in (tmp 77) (reg-flag mi dst))
      (allocate-in src1 (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 68) (reg-flag a dst))
      (immediate align_mode ((0 . 0)))
      (immediate sign-mode ((0 . 0)))
      (allocate-in (tmp 63) (reg-flag odd dst)))
    (code
      (= (tmp 54) (zext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 58) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 60) (mul (constant ? 40) (tmp 55) (tmp 59)))
      (set-reg dst (tmp 61))
      (set-reg (tmp 62) (constant ? 0))
      (= (tmp 65) (sext (constant ? 32) (tmp 64) (constant ? 40)))
      (set-reg (tmp 63) (tmp 65))
      (= (tmp 67) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 66) (tmp 67))
      (= (tmp 69) (icmp (constant ? 40) eq (tmp 68) (constant ? 0)))
      (br (tmp 69) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 70) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 72) (icmp (constant ? 40) eq (tmp 71) (constant ? -1)))
      (br (tmp 72) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 73) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 74) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 75) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 76) (phi ((no-value . bb_3) ((tmp 75) . bb_4))))
      (= (tmp 78) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 77) (tmp 78)))))

(instruction
  sbit_nimm5_a40
  (pattern
    (constraints
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 9) (reg-flag ls dst))
      (allocate-in (tmp 3) (reg-flag ac dst))
      (immediate UImm ((0 . 31)))
      (allocate-in (tmp 5) (reg-flag mi dst))
      (allocate-in (tmp 7) (reg-flag ms dst))
      (allocate-in (tmp 0) (reg-flag c dst))
      (allocate-in (tmp 11) (reg-flag op dst)))
    (code
      (= (tmp 1) (reg-range dst UImm UImm))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst UImm UImm))
      (set-reg (tmp 2) (constant ? 1))
      (= (tmp 4) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 6) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 5) (tmp 6))
      (= (tmp 8) (reg-range dst (constant ? 31) (constant ? 31)))
      (set-reg (tmp 7) (tmp 8))
      (= (tmp 10) (reg-range dst (constant ? 0) (constant ? 0)))
      (set-reg (tmp 9) (tmp 10))
      (= (tmp 12) (icmp eq (constant ? 1) dst (constant ? 0)))
      (br (tmp 12) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 13) (phi (((constant ? 1) . bb_0) ((constant ? 0) . bb_1))))
      (set-reg (tmp 11) (tmp 13)))))

(instruction
  addsp_nimm7
  (pattern
    (constraints
      (immediate UImm ((0 . 127))))
    (code
      (= (tmp 0) (add (constant ? 16) (register sp) UImm))
      (set-reg (register sp) (tmp 0)))))

(instruction
  copy_a40_a40
  (pattern
    (constraints
      (allocate-in (tmp 8) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 2) (reg-flag a dst))
      (allocate-in (tmp 4) (reg-flag ex dst))
      (allocate-in (tmp 5) (reg-flag a dst))
      (allocate-in src (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 7) (reg-flag ex dst))
      (allocate-in (tmp 0) (reg-flag ac dst))
      (allocate-in (tmp 11) (reg-flag mi dst)))
    (code
      (set-reg dst src)
      (= (tmp 1) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp (constant ? 40) eq (tmp 2) (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 4) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp (constant ? 40) eq (tmp 5) (constant ? -1)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 7) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 8) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))
      (= (tmp 12) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 11) (tmp 12)))))

(instruction
  absh_a16_a40
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag a dst))
      (reg-flag sa (register cuc) ((1 . 1)))
      (allocate-in (tmp 25) (reg-flag a dst))
      (allocate-in (tmp 34) (reg-flag mi dst))
      (allocate-in (tmp 30) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (allocate-in (tmp 9) (reg-flag of dst))
      (allocate-in (tmp 23) (reg-flag ac dst))
      (allocate-in (tmp 8) (reg-flag of dst))
      (allocate-in (tmp 31) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag ex dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 6) (reg-flag of dst)))
    (code
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 1) (shl (constant ? 40) (tmp 0) (constant ? 16)))
      (= (tmp 2) (icmp (constant ? 40) slt (tmp 1) (constant ? 0)))
      (br (tmp 2) bb_12 bb_13)
      (label bb_12)
      (= (tmp 4) (sub (constant ? 40) (constant ? 0) (tmp 1)))
      (= (tmp 5) (icmp (constant ? 40) sgt (tmp 4) (constant ? 0)))
      (br (tmp 5) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 6) (constant ? 1))
      (br bb_5)
      (label bb_4)
      (= (tmp 7) (icmp (constant ? 40) sgt (tmp 4) (tmp 1)))
      (br (tmp 7) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 8) (constant ? 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 9) (constant ? 0))
      (br bb_2)
      (label bb_2)
      (= (tmp 10) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) ((tmp 10) . bb_4))))
      (= (tmp 12) (satsub (constant ? 40) (constant ? 0) (tmp 1)))
      (set-reg dst (tmp 12))
      (br bb_14)
      (label bb_13)
      (set-reg dst (tmp 1))
      (br bb_14)
      (label bb_14)
      (= (tmp 22) (phi ((no-value . bb_12) (no-value . bb_13))))
      (= (tmp 24) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 23) (tmp 24))
      (= (tmp 26) (icmp (constant ? 40) eq (tmp 25) (constant ? 0)))
      (br (tmp 26) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 27) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (= (tmp 29) (icmp (constant ? 40) eq (tmp 28) (constant ? -1)))
      (br (tmp 29) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 30) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 31) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 32) (phi ((no-value . bb_15) (no-value . bb_16))))
      (br bb_20)
      (label bb_20)
      (= (tmp 33) (phi ((no-value . bb_18) ((tmp 32) . bb_19))))
      (= (tmp 35) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 34) (tmp 35))))
  (pattern
    (constraints
      (allocate-in (tmp 28) (reg-flag a dst))
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h))
      (allocate-in (tmp 18) (reg-flag of dst))
      (allocate-in (tmp 25) (reg-flag a dst))
      (allocate-in (tmp 34) (reg-flag mi dst))
      (allocate-in (tmp 30) (reg-flag ex dst))
      (allocate-in dst (a0 a1 a2 a3 a4 a5 a6 a7))
      (reg-flag sa (register cuc) ((0 . 0)))
      (allocate-in (tmp 23) (reg-flag ac dst))
      (allocate-in (tmp 31) (reg-flag ex dst))
      (allocate-in (tmp 27) (reg-flag ex dst))
      (allocate-in (tmp 15) (reg-flag of dst))
      (allocate-in (tmp 17) (reg-flag of dst)))
    (code
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 1) (shl (constant ? 40) (tmp 0) (constant ? 16)))
      (= (tmp 2) (icmp (constant ? 40) slt (tmp 1) (constant ? 0)))
      (br (tmp 2) bb_12 bb_13)
      (label bb_12)
      (= (tmp 13) (sub (constant ? 40) (constant ? 0) (tmp 1)))
      (= (tmp 14) (icmp (constant ? 40) sgt (tmp 13) (constant ? 0)))
      (br (tmp 14) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 15) (constant ? 1))
      (br bb_11)
      (label bb_10)
      (= (tmp 16) (icmp (constant ? 40) sgt (tmp 13) (tmp 1)))
      (br (tmp 16) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 17) (constant ? 1))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 18) (constant ? 0))
      (br bb_8)
      (label bb_8)
      (= (tmp 19) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 20) (phi ((no-value . bb_9) ((tmp 19) . bb_10))))
      (= (tmp 21) (sub (constant ? 40) (constant ? 0) (tmp 1)))
      (set-reg dst (tmp 21))
      (br bb_14)
      (label bb_13)
      (set-reg dst (tmp 1))
      (br bb_14)
      (label bb_14)
      (= (tmp 22) (phi ((no-value . bb_12) (no-value . bb_13))))
      (= (tmp 24) (icmp eq (constant ? 80) dst (constant ? 0)))
      (set-reg (tmp 23) (tmp 24))
      (= (tmp 26) (icmp (constant ? 40) eq (tmp 25) (constant ? 0)))
      (br (tmp 26) bb_18 bb_19)
      (label bb_18)
      (set-reg (tmp 27) (constant ? 1))
      (br bb_20)
      (label bb_19)
      (= (tmp 29) (icmp (constant ? 40) eq (tmp 28) (constant ? -1)))
      (br (tmp 29) bb_15 bb_16)
      (label bb_15)
      (set-reg (tmp 30) (constant ? 1))
      (br bb_17)
      (label bb_16)
      (set-reg (tmp 31) (constant ? 0))
      (br bb_17)
      (label bb_17)
      (= (tmp 32) (phi ((no-value . bb_15) (no-value . bb_16))))
      (br bb_20)
      (label bb_20)
      (= (tmp 33) (phi ((no-value . bb_18) ((tmp 32) . bb_19))))
      (= (tmp 35) (reg-range dst (constant ? 39) (constant ? 39)))
      (set-reg (tmp 34) (tmp 35)))))

(instruction
  mv_a16_m16
  (pattern
    (constraints
      (allocate-in src (a0l a1l a2l a3l a4l a5l a6l a7l a0h a1h a2h a3h a4h a5h a6h a7h r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15))
      (aliases (src (tmp 5)))
      (allocate-in mN (m2 m3 m0 m1))
      (allocate-in (tmp 0) (reg-flag m src)))
    (code
      (set-reg (tmp 0) (tmp 5)))))
