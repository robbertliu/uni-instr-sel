
(instruction
  or_nimm16_a40
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_or (constant ? 16) (tmp 0) UImm))
      (set-reg (tmp 0) (tmp 1)))))

(instruction
  mv_a16_m16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in mN m16)
      (allocate-in (tmp 0) (reg-flag m src))
      (alias (tmp 5) src)
      (assert (not (reg-flag s src))))
    (code 
      (set-reg (tmp 0) (tmp 5))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in mN m16)
      (allocate-in (tmp 0) (reg-flag m src))
      (alias (tmp 5) (tmp 4))
      (allocate-in (tmp 3) (reg-flag (register-class a40) src))
      (assert (reg-flag s src)))
    (code 
      (= (tmp 4) (satadd ? (constant ? 0) (tmp 3)))
      (set-reg (tmp 0) (tmp 5)))))

(instruction
  subh_nimm5_a40
  (pattern 
    (constraints 
      (imm 1 32 UImm)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (satsub (constant ? 32) dst (tmp 2)))
      (set-reg dst (tmp 3))))
  (pattern 
    (constraints 
      (imm 1 32 UImm)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 4) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 5) (shl (constant ? 40) (tmp 4) (constant ? 16)))
      (= (tmp 6) (sub (constant ? 40) dst (tmp 5)))
      (set-reg dst (tmp 6)))))

(instruction
  add2_a40_a40_a40h
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40h)
      (allocate-in (tmp 0) (reg-flag ah dst))
      (allocate-in (tmp 1) (reg-flag ah src1))
      (allocate-in (tmp 2) (reg-flag ah src2))
      (allocate-in (tmp 4) (reg-flag al dst))
      (allocate-in (tmp 5) (reg-flag al src1))
      (allocate-in (tmp 6) (reg-flag al src2))
      (allocate-in (tmp 8) (reg-flag a dst)))
    (code 
      (= (tmp 3) (satadd (constant ? 16) (tmp 1) (tmp 2)))
      (set-reg (tmp 0) (tmp 3))
      (= (tmp 7) (satadd (constant ? 16) (tmp 5) (tmp 6)))
      (set-reg (tmp 4) (tmp 7))
      (= (tmp 9) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 8) (tmp 9)))))

(instruction
  orh_nimm16_a40
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_or (constant ? 16) (tmp 0) UImm))
      (set-reg (tmp 0) (tmp 1)))))

(instruction
  mv_a16_brc16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in brcN brc16)
      (alias (tmp 4) src)
      (assert (not (reg-flag s src))))
    (code 
      (set-reg brcN (tmp 4))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in brcN brc16)
      (alias (tmp 4) (tmp 3))
      (allocate-in (tmp 2) (reg-flag (register-class a40) src))
      (assert (reg-flag s src)))
    (code 
      (= (tmp 3) (satadd ? (constant ? 0) (tmp 2)))
      (set-reg brcN (tmp 4)))))

(instruction
  sub2_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 12) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 15) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 4) (satsub (tmp 1) (tmp 2) (tmp 3)))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 15)))
      (set-reg (tmp 5) (tmp 4))
      (= (tmp 6) (- (constant ? 31) (constant ? 16)))
      (= (tmp 7) (+ (constant ? 1) (tmp 6)))
      (= (tmp 8) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 9) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 10) (satsub (tmp 7) (tmp 8) (tmp 9)))
      (= (tmp 11) (reg-range dst (constant ? 16) (constant ? 31)))
      (set-reg (tmp 11) (tmp 10))
      (= (tmp 13) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 12) (tmp 13)))))

(instruction
  sub_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (satsub (constant ? 32) src1 (tmp 1)))
      (set-reg dst (tmp 2))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 3) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 4) (sub (constant ? 40) src1 (tmp 3)))
      (set-reg dst (tmp 4)))))

(instruction
  mv_nimm5_brc16
  (pattern 
    (constraints 
      (imm 0 31 UImm)
      (allocate-in brcN brc16))
    (code 
      (set-reg brcN UImm))))

(instruction
  mv_nimm6_cuc
  (pattern 
    (constraints 
      (imm 0 63 UImm)
      (allocate-in cuc cuc))
    (code 
      (set-reg cuc UImm))))

(instruction
  mv_nimm0_ag8g8
  (pattern 
    (constraints 
      (allocate-in aNg a8g))
    (code 
      (set-reg aNg (constant ? 0)))))

(instruction
  xorh_nimm16_a40
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_xor (constant ? 16) (tmp 0) UImm))
      (set-reg (tmp 0) (tmp 1)))))

(instruction
  or_nimm16_a16_high
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a0h_a7h))
    (code 
      (= (tmp 0) (bit_or (constant ? 16) dst UImm))
      (set-reg dst (tmp 0)))))

(instruction
  add2_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 0) (reg-flag ah dst))
      (allocate-in (tmp 1) (reg-flag ah src1))
      (allocate-in (tmp 2) (reg-flag ah src2))
      (allocate-in (tmp 4) (reg-flag al dst))
      (allocate-in (tmp 5) (reg-flag al src1))
      (allocate-in (tmp 6) (reg-flag al src2))
      (allocate-in (tmp 8) (reg-flag a dst)))
    (code 
      (= (tmp 3) (satadd (constant ? 16) (tmp 1) (tmp 2)))
      (set-reg (tmp 0) (tmp 3))
      (= (tmp 7) (satadd (constant ? 16) (tmp 5) (tmp 6)))
      (set-reg (tmp 4) (tmp 7))
      (= (tmp 9) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 8) (tmp 9)))))

(instruction
  xor_nimm16_a16_low
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a0l_a7l))
    (code 
      (= (tmp 0) (bit_xor (constant ? 16) dst UImm))
      (set-reg dst (tmp 0)))))

(instruction
  minz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (icmp (constant ? 16) ult src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 39)))
      (= (tmp 6) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 5) (tmp 6))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (icmp (constant ? 16) ult src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1)))))))

(instruction
  xor_nimm16_a16_high
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a0h_a7h))
    (code 
      (= (tmp 0) (bit_xor (constant ? 16) dst UImm))
      (set-reg dst (tmp 0)))))

(instruction
  minz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (icmp (constant ? 32) ult (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (set-reg (tmp 6) (constant ? 0)))))

(instruction
  xnorz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 2) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (bit_xor (constant ? 16) src1 src2))
      (= (tmp 1) (bit_not (constant ? 16) (tmp 0)))
      (set-reg dst (tmp 1))
      (set-reg (tmp 2) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (bit_xor (constant ? 16) src1 src2))
      (= (tmp 1) (bit_not (constant ? 16) (tmp 0)))
      (set-reg dst (tmp 1)))))

(instruction
  neg_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (satsub (constant ? 32) (constant ? 0) src))
      (set-reg dst (tmp 1))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 2) (sub (constant ? 40) (constant ? 0) src))
      (set-reg dst (tmp 2)))))

(instruction
  sub4_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 24) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 7) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 4) (satsub (tmp 1) (tmp 2) (tmp 3)))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 7)))
      (set-reg (tmp 5) (tmp 4))
      (= (tmp 6) (- (constant ? 15) (constant ? 8)))
      (= (tmp 7) (+ (constant ? 1) (tmp 6)))
      (= (tmp 8) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 9) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 10) (satsub (tmp 7) (tmp 8) (tmp 9)))
      (= (tmp 11) (reg-range dst (constant ? 8) (constant ? 15)))
      (set-reg (tmp 11) (tmp 10))
      (= (tmp 12) (- (constant ? 23) (constant ? 16)))
      (= (tmp 13) (+ (constant ? 1) (tmp 12)))
      (= (tmp 14) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 15) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 16) (satsub (tmp 13) (tmp 14) (tmp 15)))
      (= (tmp 17) (reg-range dst (constant ? 16) (constant ? 23)))
      (set-reg (tmp 17) (tmp 16))
      (= (tmp 18) (- (constant ? 31) (constant ? 24)))
      (= (tmp 19) (+ (constant ? 1) (tmp 18)))
      (= (tmp 20) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 21) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 22) (satsub (tmp 19) (tmp 20) (tmp 21)))
      (= (tmp 23) (reg-range dst (constant ? 24) (constant ? 31)))
      (set-reg (tmp 23) (tmp 22))
      (= (tmp 25) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 24) (tmp 25)))))

(instruction
  orh_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_or (constant ? 16) (tmp 0) src))
      (set-reg (tmp 0) (tmp 1)))))

(instruction
  addscale2_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 18) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 31) (constant ? 16)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 31) (constant ? 16)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 5) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 6) (add (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (sdiv (tmp 6) (constant ? 2)))
      (= (tmp 8) (reg-range dst (constant ? 16) (constant ? 31)))
      (set-reg (tmp 8) (tmp 7))
      (= (tmp 9) (- (constant ? 31) (constant ? 16)))
      (= (tmp 10) (+ (constant ? 1) (tmp 9)))
      (= (tmp 11) (- (constant ? 31) (constant ? 16)))
      (= (tmp 12) (+ (constant ? 1) (tmp 11)))
      (= (tmp 13) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 14) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 15) (add (tmp 12) (tmp 13) (tmp 14)))
      (= (tmp 16) (sdiv (tmp 15) (constant ? 2)))
      (= (tmp 17) (reg-range dst (constant ? 16) (constant ? 31)))
      (set-reg (tmp 17) (tmp 16))
      (= (tmp 19) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 18) (tmp 19)))))

(instruction
  xnorz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 2) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (bit_xor (constant ? 32) src1 src2))
      (= (tmp 1) (bit_not (constant ? 32) (tmp 0)))
      (set-reg dst (tmp 1))
      (set-reg (tmp 2) (constant ? 0)))))

(instruction
  sub2_a40_a40_a40h
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40h)
      (allocate-in (tmp 12) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 15) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 4) (satsub (tmp 1) (tmp 2) (tmp 3)))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 15)))
      (set-reg (tmp 5) (tmp 4))
      (= (tmp 6) (- (constant ? 31) (constant ? 16)))
      (= (tmp 7) (+ (constant ? 1) (tmp 6)))
      (= (tmp 8) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 9) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 10) (satsub (tmp 7) (tmp 8) (tmp 9)))
      (= (tmp 11) (reg-range dst (constant ? 16) (constant ? 31)))
      (set-reg (tmp 11) (tmp 10))
      (= (tmp 13) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 12) (tmp 13)))))

(instruction
  negs_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (satsub (constant ? 32) (constant ? 0) src))
      (set-reg dst (tmp 1))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 2) (sub (constant ? 32) (constant ? 0) src))
      (set-reg dst (tmp 2)))))

(instruction
  xorh_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_xor (constant ? 16) (tmp 0) src))
      (set-reg (tmp 0) (tmp 1)))))

(instruction
  addscale2r_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 20) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 31) (constant ? 16)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 31) (constant ? 16)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 5) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 6) (add (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (add (tmp 1) (tmp 6) (constant ? 1)))
      (= (tmp 8) (sdiv (tmp 7) (constant ? 2)))
      (= (tmp 9) (reg-range dst (constant ? 16) (constant ? 31)))
      (set-reg (tmp 9) (tmp 8))
      (= (tmp 10) (- (constant ? 31) (constant ? 16)))
      (= (tmp 11) (+ (constant ? 1) (tmp 10)))
      (= (tmp 12) (- (constant ? 31) (constant ? 16)))
      (= (tmp 13) (+ (constant ? 1) (tmp 12)))
      (= (tmp 14) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 16) (add (tmp 13) (tmp 14) (tmp 15)))
      (= (tmp 17) (add (tmp 11) (tmp 16) (constant ? 1)))
      (= (tmp 18) (sdiv (tmp 17) (constant ? 2)))
      (= (tmp 19) (reg-range dst (constant ? 16) (constant ? 31)))
      (set-reg (tmp 19) (tmp 18))
      (= (tmp 21) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 20) (tmp 21)))))

(instruction
  subscale4_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 36) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 7) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 7) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 6) (sub (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (sdiv (tmp 6) (constant ? 2)))
      (= (tmp 8) (reg-range dst (constant ? 0) (constant ? 7)))
      (set-reg (tmp 8) (tmp 7))
      (= (tmp 9) (- (constant ? 15) (constant ? 8)))
      (= (tmp 10) (+ (constant ? 1) (tmp 9)))
      (= (tmp 11) (- (constant ? 15) (constant ? 8)))
      (= (tmp 12) (+ (constant ? 1) (tmp 11)))
      (= (tmp 13) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 14) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 15) (sub (tmp 12) (tmp 13) (tmp 14)))
      (= (tmp 16) (sdiv (tmp 15) (constant ? 2)))
      (= (tmp 17) (reg-range dst (constant ? 8) (constant ? 15)))
      (set-reg (tmp 17) (tmp 16))
      (= (tmp 18) (- (constant ? 23) (constant ? 16)))
      (= (tmp 19) (+ (constant ? 1) (tmp 18)))
      (= (tmp 20) (- (constant ? 23) (constant ? 16)))
      (= (tmp 21) (+ (constant ? 1) (tmp 20)))
      (= (tmp 22) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 23) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 24) (sub (tmp 21) (tmp 22) (tmp 23)))
      (= (tmp 25) (sdiv (tmp 24) (constant ? 2)))
      (= (tmp 26) (reg-range dst (constant ? 16) (constant ? 23)))
      (set-reg (tmp 26) (tmp 25))
      (= (tmp 27) (- (constant ? 31) (constant ? 24)))
      (= (tmp 28) (+ (constant ? 1) (tmp 27)))
      (= (tmp 29) (- (constant ? 31) (constant ? 24)))
      (= (tmp 30) (+ (constant ? 1) (tmp 29)))
      (= (tmp 31) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 32) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 33) (sub (tmp 30) (tmp 31) (tmp 32)))
      (= (tmp 34) (sdiv (tmp 33) (constant ? 2)))
      (= (tmp 35) (reg-range dst (constant ? 24) (constant ? 31)))
      (set-reg (tmp 35) (tmp 34))
      (= (tmp 37) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 36) (tmp 37)))))

(instruction
  min2_a40_a16
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp (constant ? 16) slt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (reg-range (tmp 6) (constant ? 16) (constant ? 39)))
      (= (tmp 8) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 7) (tmp 8))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp (constant ? 16) slt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1)))))))

(instruction
  xor_a16_a16_low
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a0l_a7l))
    (code 
      (= (tmp 0) (bit_xor (constant ? 16) dst src))
      (set-reg dst (tmp 0)))))

(instruction
  add4_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 32) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 7) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 7) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 6) (satadd (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (reg-range dst (constant ? 0) (constant ? 7)))
      (set-reg (tmp 7) (tmp 6))
      (= (tmp 8) (- (constant ? 15) (constant ? 8)))
      (= (tmp 9) (+ (constant ? 1) (tmp 8)))
      (= (tmp 10) (- (constant ? 15) (constant ? 8)))
      (= (tmp 11) (+ (constant ? 1) (tmp 10)))
      (= (tmp 12) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 13) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 14) (satadd (tmp 11) (tmp 12) (tmp 13)))
      (= (tmp 15) (reg-range dst (constant ? 8) (constant ? 15)))
      (set-reg (tmp 15) (tmp 14))
      (= (tmp 16) (- (constant ? 23) (constant ? 16)))
      (= (tmp 17) (+ (constant ? 1) (tmp 16)))
      (= (tmp 18) (- (constant ? 23) (constant ? 16)))
      (= (tmp 19) (+ (constant ? 1) (tmp 18)))
      (= (tmp 20) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 21) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 22) (satadd (tmp 19) (tmp 20) (tmp 21)))
      (= (tmp 23) (reg-range dst (constant ? 16) (constant ? 23)))
      (set-reg (tmp 23) (tmp 22))
      (= (tmp 24) (- (constant ? 31) (constant ? 24)))
      (= (tmp 25) (+ (constant ? 1) (tmp 24)))
      (= (tmp 26) (- (constant ? 31) (constant ? 24)))
      (= (tmp 27) (+ (constant ? 1) (tmp 26)))
      (= (tmp 28) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 29) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 30) (satadd (tmp 27) (tmp 28) (tmp 29)))
      (= (tmp 31) (reg-range dst (constant ? 24) (constant ? 31)))
      (set-reg (tmp 31) (tmp 30))
      (= (tmp 33) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 32) (tmp 33)))))

(instruction
  addh_nimm16_a40
  (pattern 
    (constraints 
      (imm 1 65535 UImm)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (satadd (constant ? 32) (tmp 2) dst))
      (set-reg dst (tmp 3))))
  (pattern 
    (constraints 
      (imm 1 65535 UImm)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 4) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 5) (shl (constant ? 40) (tmp 4) (constant ? 16)))
      (= (tmp 6) (add (constant ? 40) (tmp 5) dst))
      (set-reg dst (tmp 6)))))

(instruction
  div16
  (pattern 
    (constraints 
      (allocate-in (tmp 0) (reg-flag al (register a4h)))
      (allocate-in (tmp 1) (reg-flag ag (register a4h))))
    (code 
      (set-reg (tmp 0) (constant ? 0))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 2) (udiv (register a4h) (register a5h)))
      (set-reg (register a4h) (tmp 2)))))

(instruction
  fldiv
  (pattern 
    (constraints )
    (code 
      (= (tmp 0) (fdiv (register a4) (register a5)))
      (set-reg (register a4) (tmp 0)))))

(instruction
  subs_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 3) (reg-flag a dst)))
    (code 
      (= (tmp 2) (sub (constant ? 32) src1 src2))
      (set-reg dst (tmp 2))
      (= (tmp 4) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 3) (tmp 4))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 3) (reg-flag a dst)))
    (code 
      (= (tmp 1) (satsub (constant ? 32) src1 src2))
      (set-reg dst (tmp 1))
      (= (tmp 4) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 3) (tmp 4)))))

(instruction
  negh_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (satsub (constant ? 32) (constant ? 0) (tmp 2)))
      (set-reg dst (tmp 3))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 4) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 5) (shl (constant ? 40) (tmp 4) (constant ? 16)))
      (= (tmp 6) (sub (constant ? 32) (constant ? 0) (tmp 5)))
      (set-reg dst (tmp 6)))))

(instruction
  xorz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 1) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (bit_xor (constant ? 32) src1 src2))
      (set-reg dst (tmp 0))
      (set-reg (tmp 1) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (bit_xor (constant ? 32) src1 src2))
      (set-reg dst (tmp 0)))))

(instruction
  subs_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 3) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 2) (sub (constant ? 16) src1 src2))
      (set-reg dst (tmp 2))
      (= (tmp 4) (reg-range (tmp 3) (constant ? 16) (constant ? 39)))
      (= (tmp 5) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 4) (tmp 5))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (reg-flag sa (register cuc))))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 2) (sub (constant ? 16) src1 src2))
      (set-reg dst (tmp 2))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 3) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 1) (satsub (constant ? 16) src1 src2))
      (set-reg dst (tmp 1))
      (= (tmp 4) (reg-range (tmp 3) (constant ? 16) (constant ? 39)))
      (= (tmp 5) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 4) (tmp 5))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (reg-flag sa (register cuc)))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 1) (satsub (constant ? 16) src1 src2))
      (set-reg dst (tmp 1)))))

(instruction
  mv_nimm6_m16
  (pattern 
    (constraints 
      (zimm -16 16 SImm)
      (allocate-in mN m16))
    (code 
      (set-reg mN SImm))))

(instruction
  div32
  (pattern 
    (constraints 
      (allocate-in (tmp 2) (reg-flag ag (tmp 1))))
    (code 
      (= (tmp 0) (reg-range (register a5) (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range (register a4) (constant ? 0) (constant ? 31)))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 3) (udiv (tmp 1) (tmp 0)))
      (set-reg (tmp 1) (tmp 3)))))

(instruction
  roli8_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (allocate-in (tmp 4) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 8) (constant ? 31)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 23)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 3) (reg-range src2 (constant ? 8) (constant ? 15)))
      (set-reg (tmp 2) (tmp 3))
      (set-reg (tmp 4) (constant ? 0)))))

(instruction
  addscale4r_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 40) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 7) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 7) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 6) (add (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (add (tmp 1) (tmp 6) (constant ? 1)))
      (= (tmp 8) (sdiv (tmp 7) (constant ? 2)))
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 7)))
      (set-reg (tmp 9) (tmp 8))
      (= (tmp 10) (- (constant ? 15) (constant ? 8)))
      (= (tmp 11) (+ (constant ? 1) (tmp 10)))
      (= (tmp 12) (- (constant ? 15) (constant ? 8)))
      (= (tmp 13) (+ (constant ? 1) (tmp 12)))
      (= (tmp 14) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 16) (add (tmp 13) (tmp 14) (tmp 15)))
      (= (tmp 17) (add (tmp 11) (tmp 16) (constant ? 1)))
      (= (tmp 18) (sdiv (tmp 17) (constant ? 2)))
      (= (tmp 19) (reg-range dst (constant ? 8) (constant ? 15)))
      (set-reg (tmp 19) (tmp 18))
      (= (tmp 20) (- (constant ? 23) (constant ? 16)))
      (= (tmp 21) (+ (constant ? 1) (tmp 20)))
      (= (tmp 22) (- (constant ? 23) (constant ? 16)))
      (= (tmp 23) (+ (constant ? 1) (tmp 22)))
      (= (tmp 24) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 25) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 26) (add (tmp 23) (tmp 24) (tmp 25)))
      (= (tmp 27) (add (tmp 21) (tmp 26) (constant ? 1)))
      (= (tmp 28) (sdiv (tmp 27) (constant ? 2)))
      (= (tmp 29) (reg-range dst (constant ? 16) (constant ? 23)))
      (set-reg (tmp 29) (tmp 28))
      (= (tmp 30) (- (constant ? 31) (constant ? 24)))
      (= (tmp 31) (+ (constant ? 1) (tmp 30)))
      (= (tmp 32) (- (constant ? 31) (constant ? 24)))
      (= (tmp 33) (+ (constant ? 1) (tmp 32)))
      (= (tmp 34) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 35) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 36) (add (tmp 33) (tmp 34) (tmp 35)))
      (= (tmp 37) (add (tmp 31) (tmp 36) (constant ? 1)))
      (= (tmp 38) (sdiv (tmp 37) (constant ? 2)))
      (= (tmp 39) (reg-range dst (constant ? 24) (constant ? 31)))
      (set-reg (tmp 39) (tmp 38))
      (= (tmp 41) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 40) (tmp 41)))))

(instruction
  subz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 0) (icmp ugt (constant ? 16) src2 src1))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (sub (constant ? 16) src1 src2))
      (set-reg dst (tmp 2))
      (br bb_2)
      (label bb_1)
      (= (tmp 3) (sub (constant ? 16) src1 src2))
      (set-reg dst (tmp 3))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 0) (icmp ugt (constant ? 16) src2 src1))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= (tmp 3) (sub (constant ? 16) src1 src2))
      (set-reg dst (tmp 3))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1)))))))

(instruction
  copy_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40))
    (code 
      (set-reg dst src))))

(instruction
  rori8_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (allocate-in (tmp 4) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 23)))
      (= (tmp 1) (reg-range src1 (constant ? 8) (constant ? 31)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 7)))
      (set-reg (tmp 2) (tmp 3))
      (set-reg (tmp 4) (constant ? 0)))))

(instruction
  addsh_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (ashr (constant ? 40) src (constant ? 16)))
      (= (tmp 2) (satadd (constant ? 32) (tmp 1) dst))
      (set-reg dst (tmp 2))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 3) (ashr (constant ? 40) src (constant ? 16)))
      (= (tmp 4) (add (constant ? 40) (tmp 3) dst))
      (set-reg dst (tmp 4)))))

(instruction
  subscale2r_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 20) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 15) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 15) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 6) (sub (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (add (tmp 1) (tmp 6) (constant ? 1)))
      (= (tmp 8) (sdiv (tmp 7) (constant ? 2)))
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 15)))
      (set-reg (tmp 9) (tmp 8))
      (= (tmp 10) (- (constant ? 31) (constant ? 16)))
      (= (tmp 11) (+ (constant ? 1) (tmp 10)))
      (= (tmp 12) (- (constant ? 31) (constant ? 16)))
      (= (tmp 13) (+ (constant ? 1) (tmp 12)))
      (= (tmp 14) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 16) (sub (tmp 13) (tmp 14) (tmp 15)))
      (= (tmp 17) (add (tmp 11) (tmp 16) (constant ? 1)))
      (= (tmp 18) (sdiv (tmp 17) (constant ? 2)))
      (= (tmp 19) (reg-range dst (constant ? 16) (constant ? 31)))
      (set-reg (tmp 19) (tmp 18))
      (= (tmp 21) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 20) (tmp 21)))))

(instruction
  divm16
  (pattern 
    (constraints 
      (allocate-in (tmp 2) (reg-flag al (register a4h)))
      (allocate-in (tmp 3) (reg-flag ah (register a4h))))
    (code 
      (= (tmp 0) (udiv (register a4h) (register a5h)))
      (= (tmp 1) (urem (register a4h) (register a5h)))
      (set-reg (tmp 2) (constant ? 0))
      (set-reg (tmp 3) (constant ? 0))
      (set-reg (register a4h) (tmp 0))
      (set-reg (register a5h) (tmp 1)))))

(instruction
  or_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_or (constant ? 16) (tmp 0) src))
      (set-reg (tmp 0) (tmp 1)))))

(instruction
  roli16_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (allocate-in (tmp 4) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 15)))
      (set-reg (tmp 2) (tmp 3))
      (set-reg (tmp 4) (constant ? 0)))))

(instruction
  addz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 3) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 2) (add (constant ? 16) src1 src2))
      (set-reg dst (tmp 2))
      (set-reg (tmp 3) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (reg-flag sa (register cuc))))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 2) (add (constant ? 16) src1 src2))
      (set-reg dst (tmp 2))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 3) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 1) (satadd (constant ? 16) src1 src2))
      (set-reg dst (tmp 1))
      (set-reg (tmp 3) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (reg-flag sa (register cuc)))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 1) (satadd (constant ? 16) src1 src2))
      (set-reg dst (tmp 1)))))

(instruction
  divm24
  (pattern 
    (constraints 
      (allocate-in (tmp 4) (reg-flag al (tmp 1))))
    (code 
      (= (tmp 0) (reg-range (register a5) (constant ? 16) (constant ? 39)))
      (= (tmp 1) (reg-range (register a4) (constant ? 16) (constant ? 39)))
      (= (tmp 2) (udiv (tmp 1) (tmp 0)))
      (= (tmp 3) (urem (tmp 1) (tmp 0)))
      (set-reg (tmp 4) (constant ? 0))
      (set-reg (tmp 1) (tmp 2))
      (set-reg (tmp 0) (tmp 3)))))

(instruction
  rori16_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (allocate-in (tmp 4) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 16) (constant ? 31)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 15)))
      (set-reg (tmp 2) (tmp 3))
      (set-reg (tmp 4) (constant ? 0)))))

(instruction
  ctp16_a40_a16
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16))
    (code )))

(instruction
  adds_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 5) (reg-flag a dst)))
    (code 
      (= (tmp 3) (sext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 4) (add (constant ? 32) src1 (tmp 3)))
      (set-reg dst (tmp 4))
      (= (tmp 6) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 5) (tmp 6))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 5) (reg-flag a dst)))
    (code 
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 2) (satadd (constant ? 32) src1 (tmp 1)))
      (set-reg dst (tmp 2))
      (= (tmp 6) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 5) (tmp 6)))))

(instruction
  sext_a40
  (pattern 
    (constraints 
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 0)))))

(instruction
  mv_ext16_ext16
  (pattern 
    (constraints 
      (allocate-in src ext16)
      (allocate-in dst ext16)
      (alias (tmp 4) src)
      (assert (not (reg-flag s src))))
    (code 
      (set-reg dst (tmp 4))))
  (pattern 
    (constraints 
      (allocate-in src ext16)
      (allocate-in dst ext16)
      (alias (tmp 4) (tmp 3))
      (allocate-in (tmp 2) (reg-flag (register-class a40) src))
      (assert (reg-flag s src)))
    (code 
      (= (tmp 3) (satadd ? (constant ? 0) (tmp 2)))
      (set-reg dst (tmp 4)))))

(instruction
  divm32
  (pattern 
    (constraints 
      (allocate-in (tmp 4) (reg-flag ag (tmp 1))))
    (code 
      (= (tmp 0) (reg-range (register a5) (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range (register a4) (constant ? 0) (constant ? 31)))
      (= (tmp 2) (udiv (tmp 1) (tmp 0)))
      (= (tmp 3) (urem (tmp 1) (tmp 0)))
      (set-reg (tmp 4) (constant ? 0))
      (set-reg (tmp 1) (tmp 2))
      (set-reg (tmp 0) (tmp 3)))))

(instruction
  addsp_nimm7
  (pattern 
    (constraints 
      (imm 0 127 UImm))
    (code 
      (= (tmp 0) (add (constant ? 16) (register sp) UImm))
      (set-reg (register sp) (tmp 0)))))

(instruction
  neg_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 1) (sub (constant ? 40) (constant ? 0) (tmp 0)))
      (set-reg dst (tmp 1)))))

(instruction
  addz_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 5) (reg-flag ag dst)))
    (code 
      (= (tmp 3) (zext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 4) (add (constant ? 32) src1 (tmp 3)))
      (set-reg dst (tmp 4))
      (set-reg (tmp 5) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 5) (reg-flag ag dst)))
    (code 
      (= (tmp 1) (zext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 2) (satadd (constant ? 32) src1 (tmp 1)))
      (set-reg dst (tmp 2))
      (set-reg (tmp 5) (constant ? 0)))))

(instruction
  and_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (bit_and (constant ? 40) src1 src2))
      (set-reg dst (tmp 0)))))

(instruction
  div24
  (pattern 
    (constraints 
      (allocate-in (tmp 2) (reg-flag al (tmp 1)))
      (allocate-in (tmp 3) (reg-flag ag (tmp 1))))
    (code 
      (= (tmp 0) (reg-range (register a5) (constant ? 16) (constant ? 39)))
      (= (tmp 1) (reg-range (register a4) (constant ? 16) (constant ? 39)))
      (set-reg (tmp 2) (constant ? 0))
      (set-reg (tmp 3) (constant ? 0))
      (= (tmp 4) (udiv (tmp 1) (tmp 0)))
      (set-reg (tmp 1) (tmp 4)))))

(instruction
  subs_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 5) (reg-flag a dst)))
    (code 
      (= (tmp 3) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 4) (sub (constant ? 32) src1 (tmp 3)))
      (set-reg dst (tmp 4))
      (= (tmp 6) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 5) (tmp 6))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 5) (reg-flag a dst)))
    (code 
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (satsub (constant ? 32) src1 (tmp 1)))
      (set-reg dst (tmp 2))
      (= (tmp 6) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 5) (tmp 6)))))

(instruction
  andnot_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (bit_not (constant ? 40) src2))
      (= (tmp 1) (bit_and (constant ? 40) src1 (tmp 0)))
      (set-reg dst (tmp 1)))))

(instruction
  addhs_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 7) (reg-flag a dst)))
    (code 
      (= (tmp 4) (sext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 5) (shl (constant ? 32) (tmp 4) (constant ? 16)))
      (= (tmp 6) (add (constant ? 32) src1 (tmp 5)))
      (set-reg dst (tmp 6))
      (= (tmp 8) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 7) (tmp 8))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 7) (reg-flag a dst)))
    (code 
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 2) (shl (constant ? 32) (tmp 1) (constant ? 16)))
      (= (tmp 3) (satadd (constant ? 32) src1 (tmp 2)))
      (set-reg dst (tmp 3))
      (= (tmp 8) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 7) (tmp 8)))))

(instruction
  and_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_and (constant ? 16) (tmp 0) src))
      (set-reg (tmp 0) (tmp 1)))))

(instruction
  fdiv16
  (pattern 
    (constraints 
      (allocate-in (tmp 0) (reg-flag al (register a4h)))
      (allocate-in (tmp 1) (reg-flag ag (register a4h))))
    (code 
      (set-reg (tmp 0) (constant ? 0))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 2) (fixpointdiv (register a4h) (register a5h)))
      (set-reg (register a4h) (tmp 2)))))

(instruction
  shfta2_a40_nimm6_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -16 16 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 28) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 3) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 16) (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 16) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 16) (tmp 1) SImm))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 9) (ashr (constant ? 16) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 16) (tmp 9) (constant ? 16)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 28) (tmp 29))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -16 16 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 28) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 3) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 16) (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 16) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 16) (tmp 1) SImm))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 9) (ashr (constant ? 16) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 16) (tmp 9) (constant ? 16)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 17) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 16) (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 16) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 16) (tmp 15) SImm))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 23) (ashr (constant ? 16) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 16) (tmp 23) (constant ? 16)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 28) (tmp 29))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -16 16 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 28) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 28) (tmp 29))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -16 16 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 28) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 17) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 16) (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 16) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 16) (tmp 15) SImm))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 23) (ashr (constant ? 16) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 16) (tmp 23) (constant ? 16)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 28) (tmp 29)))))

(instruction
  or_nimm16_a16_low
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a0l_a7l))
    (code 
      (= (tmp 0) (bit_or (constant ? 16) dst UImm))
      (set-reg dst (tmp 0)))))

(instruction
  neg4_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 20) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (sub (constant ? 8) (constant ? 0) (constant ? 7)))
      (= (tmp 2) (add (constant ? 8) (constant ? 1) (tmp 1)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 4) (satsub (tmp 2) (constant ? 0) (tmp 3)))
      (set-reg (tmp 0) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 6) (sub (constant ? 8) (constant ? 8) (constant ? 15)))
      (= (tmp 7) (add (constant ? 8) (constant ? 1) (tmp 6)))
      (= (tmp 8) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 9) (satsub (tmp 7) (constant ? 0) (tmp 8)))
      (set-reg (tmp 5) (tmp 9))
      (= (tmp 10) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 11) (sub (constant ? 8) (constant ? 16) (constant ? 23)))
      (= (tmp 12) (add (constant ? 8) (constant ? 1) (tmp 11)))
      (= (tmp 13) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 14) (satsub (tmp 12) (constant ? 0) (tmp 13)))
      (set-reg (tmp 10) (tmp 14))
      (= (tmp 15) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 16) (sub (constant ? 8) (constant ? 24) (constant ? 31)))
      (= (tmp 17) (add (constant ? 8) (constant ? 1) (tmp 16)))
      (= (tmp 18) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 19) (satsub (tmp 17) (constant ? 0) (tmp 18)))
      (set-reg (tmp 15) (tmp 19))
      (= (tmp 21) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 20) (tmp 21)))))

(instruction
  andh_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_and (constant ? 16) (tmp 0) src))
      (set-reg (tmp 0) (tmp 1)))))

(instruction
  addhz_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 7) (reg-flag ag dst)))
    (code 
      (= (tmp 4) (zext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 5) (shl (constant ? 32) (tmp 4) (constant ? 16)))
      (= (tmp 6) (add (constant ? 32) src1 (tmp 5)))
      (set-reg dst (tmp 6))
      (set-reg (tmp 7) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 7) (reg-flag ag dst)))
    (code 
      (= (tmp 1) (zext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 2) (shl (constant ? 32) (tmp 1) (constant ? 16)))
      (= (tmp 3) (satadd (constant ? 32) src1 (tmp 2)))
      (set-reg dst (tmp 3))
      (set-reg (tmp 7) (constant ? 0)))))

(instruction
  div40
  (pattern 
    (constraints )
    (code 
      (= (tmp 0) (udiv (register a4) (register a5)))
      (set-reg (register a4) (tmp 0)))))

(instruction
  or_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (bit_or (constant ? 40) src1 src2))
      (set-reg dst (tmp 0)))))

(instruction
  and_a16_a16_low
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a0l_a7l))
    (code 
      (= (tmp 0) (bit_and (constant ? 16) dst src))
      (set-reg dst (tmp 0)))))

(instruction
  and_a16_a16_high
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a0h_a7h))
    (code 
      (= (tmp 0) (bit_and (constant ? 16) dst src))
      (set-reg dst (tmp 0)))))

(instruction
  fdiv32
  (pattern 
    (constraints 
      (allocate-in (tmp 2) (reg-flag ag (tmp 1))))
    (code 
      (= (tmp 0) (reg-range (register a5) (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range (register a4) (constant ? 0) (constant ? 31)))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 3) (fixpointdiv (tmp 1) (tmp 0)))
      (set-reg (tmp 1) (tmp 3)))))

(instruction
  adds_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 3) (reg-flag a dst)))
    (code 
      (= (tmp 2) (add (constant ? 32) src1 src2))
      (set-reg dst (tmp 2))
      (= (tmp 4) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 3) (tmp 4))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 3) (reg-flag a dst)))
    (code 
      (= (tmp 1) (satadd (constant ? 32) src1 src2))
      (set-reg dst (tmp 1))
      (= (tmp 4) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 3) (tmp 4)))))

(instruction
  lcalla_addr
  (pattern 
    (constraints 
      (abs-address 0 1048575 addr))
    (code )))

(instruction
  atan_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code )))

(instruction
  fcalla_addr
  (pattern 
    (constraints 
      (abs-address 0 2147483647 addr))
    (code )))

(instruction
  fcalla_addr_alias
  (pattern 
    (constraints 
      (abs-address 0 2147483647 addr))
    (code )))

(instruction
  andz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 1) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (bit_and (constant ? 32) src1 src2))
      (set-reg dst (tmp 0))
      (set-reg (tmp 1) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (bit_and (constant ? 32) src1 src2))
      (set-reg dst (tmp 0)))))

(instruction
  fdiv40
  (pattern 
    (constraints 
      (allocate-in (tmp 0) (reg-flag ag (register a4))))
    (code 
      (set-reg (tmp 0) (constant ? 0))
      (= (tmp 1) (fixpointdiv (register a4) (register a5)))
      (set-reg (register a4) (tmp 1)))))

(instruction
  addz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 3) (reg-flag ag dst)))
    (code 
      (= (tmp 2) (add (constant ? 32) src1 src2))
      (set-reg dst (tmp 2))
      (set-reg (tmp 3) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 3) (reg-flag ag dst)))
    (code 
      (= (tmp 1) (satadd (constant ? 32) src1 src2))
      (set-reg dst (tmp 1))
      (set-reg (tmp 3) (constant ? 0)))))

(instruction
  and_nimm16_a40
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_and (constant ? 16) (tmp 0) UImm))
      (set-reg (tmp 0) (tmp 1)))))

(instruction
  swap_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 4) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src (constant ? 16) (constant ? 31)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 15)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 4) (tmp 5)))))

(instruction
  fsqr16
  (pattern 
    (constraints 
      (allocate-in (tmp 0) (reg-flag al (register a4h)))
      (allocate-in (tmp 1) (reg-flag ag (register a4h))))
    (code 
      (set-reg (tmp 0) (constant ? 0))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 2) (fixpointsqrt (register a4h)))
      (set-reg (register a4h) (tmp 2)))))

(instruction
  orz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (bit_or (constant ? 16) src1 src2))
      (set-reg dst (tmp 0))
      (set-reg (tmp 1) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (bit_or (constant ? 16) src1 src2))
      (set-reg dst (tmp 0)))))

(instruction
  andh_nimm16_a40
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_and (constant ? 16) (tmp 0) UImm))
      (set-reg (tmp 0) (tmp 1)))))

(instruction
  lbrr_offset_alias
  (pattern 
    (constraints 
      (rel-address -524288 524287 addr))
    (code 
      (= (tmp 0) (add (size pc) (register pc) addr))
      (= (tmp 1) (urem (tmp 0) (size pc)))
      (set-reg (register pc) (tmp 1)))))

(instruction
  fsqr24
  (pattern 
    (constraints 
      (allocate-in (tmp 1) (reg-flag al (tmp 0))))
    (code 
      (= (tmp 0) (reg-range (register a4) (constant ? 16) (constant ? 39)))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 2) (fixpointsqrt (tmp 0)))
      (set-reg (tmp 0) (tmp 2)))))

(instruction
  subscale4r_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 40) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 7) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 7) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 6) (sub (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (add (tmp 1) (tmp 6) (constant ? 1)))
      (= (tmp 8) (sdiv (tmp 7) (constant ? 2)))
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 7)))
      (set-reg (tmp 9) (tmp 8))
      (= (tmp 10) (- (constant ? 15) (constant ? 8)))
      (= (tmp 11) (+ (constant ? 1) (tmp 10)))
      (= (tmp 12) (- (constant ? 15) (constant ? 8)))
      (= (tmp 13) (+ (constant ? 1) (tmp 12)))
      (= (tmp 14) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 16) (sub (tmp 13) (tmp 14) (tmp 15)))
      (= (tmp 17) (add (tmp 11) (tmp 16) (constant ? 1)))
      (= (tmp 18) (sdiv (tmp 17) (constant ? 2)))
      (= (tmp 19) (reg-range dst (constant ? 8) (constant ? 15)))
      (set-reg (tmp 19) (tmp 18))
      (= (tmp 20) (- (constant ? 23) (constant ? 16)))
      (= (tmp 21) (+ (constant ? 1) (tmp 20)))
      (= (tmp 22) (- (constant ? 23) (constant ? 16)))
      (= (tmp 23) (+ (constant ? 1) (tmp 22)))
      (= (tmp 24) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 25) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 26) (sub (tmp 23) (tmp 24) (tmp 25)))
      (= (tmp 27) (add (tmp 21) (tmp 26) (constant ? 1)))
      (= (tmp 28) (sdiv (tmp 27) (constant ? 2)))
      (= (tmp 29) (reg-range dst (constant ? 16) (constant ? 23)))
      (set-reg (tmp 29) (tmp 28))
      (= (tmp 30) (- (constant ? 31) (constant ? 24)))
      (= (tmp 31) (+ (constant ? 1) (tmp 30)))
      (= (tmp 32) (- (constant ? 31) (constant ? 24)))
      (= (tmp 33) (+ (constant ? 1) (tmp 32)))
      (= (tmp 34) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 35) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 36) (sub (tmp 33) (tmp 34) (tmp 35)))
      (= (tmp 37) (add (tmp 31) (tmp 36) (constant ? 1)))
      (= (tmp 38) (sdiv (tmp 37) (constant ? 2)))
      (= (tmp 39) (reg-range dst (constant ? 24) (constant ? 31)))
      (set-reg (tmp 39) (tmp 38))
      (= (tmp 41) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 40) (tmp 41)))))

(instruction
  and_nimm16_a16_low
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a0l_a7l))
    (code 
      (= (tmp 0) (bit_and (constant ? 16) dst UImm))
      (set-reg dst (tmp 0)))))

(instruction
  fbrr_offset
  (pattern 
    (constraints 
      (rel-address -1073741824 1073741823 addr))
    (code 
      (= (tmp 0) (add (size pc) (register pc) addr))
      (= (tmp 1) (urem (tmp 0) (size pc)))
      (set-reg (register pc) (tmp 1)))))

(instruction
  bpackh_a40_a16l
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16l))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 24) (constant ? 31)))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  fsqr32
  (pattern 
    (constraints 
      (allocate-in (tmp 1) (reg-flag ag (tmp 0))))
    (code 
      (= (tmp 0) (reg-range (register a4) (constant ? 0) (constant ? 31)))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 2) (fixpointsqrt (tmp 0)))
      (set-reg (tmp 0) (tmp 2)))))

(instruction
  and_nimm16_a16_high
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a0h_a7h))
    (code 
      (= (tmp 0) (bit_and (constant ? 16) dst UImm))
      (set-reg dst (tmp 0)))))

(instruction
  divm40
  (pattern 
    (constraints )
    (code 
      (= (tmp 0) (udiv (register a4) (register a5)))
      (= (tmp 1) (urem (register a4) (register a5)))
      (set-reg (register a4) (tmp 0))
      (set-reg (register a5) (tmp 1)))))

(instruction
  andnotz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 2) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (bit_not (constant ? 16) src2))
      (= (tmp 1) (bit_and (constant ? 16) src1 (tmp 0)))
      (set-reg dst (tmp 1))
      (set-reg (tmp 2) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (bit_not (constant ? 16) src2))
      (= (tmp 1) (bit_and (constant ? 16) src1 (tmp 0)))
      (set-reg dst (tmp 1)))))

(instruction
  shft_nimm6_a40
  (pattern 
    (constraints 
      (zimm -16 16 SImm)
      (allocate-in dst a40)
      (alias (tmp 4) (tmp 3))
      (assert (not (icmp slt (constant ? 5) SImm (constant ? 0)))))
    (code 
      (= (tmp 3) (shl (constant ? 40) dst SImm))
      (set-reg dst (tmp 4))))
  (pattern 
    (constraints 
      (zimm -16 16 SImm)
      (allocate-in dst a40)
      (alias (tmp 4) (tmp 2))
      (assert (icmp slt (constant ? 5) SImm (constant ? 0))))
    (code 
      (= (tmp 1) (sub (constant ? 5) (constant ? 0) SImm))
      (= (tmp 2) (lshr (constant ? 40) dst (tmp 1)))
      (set-reg dst (tmp 4)))))

(instruction
  fsqr40
  (pattern 
    (constraints )
    (code 
      (= (tmp 0) (fixpointsqrt (register a4)))
      (set-reg (register a4) (tmp 0)))))

(instruction
  xor_nimm16_a40
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_xor (constant ? 16) (tmp 0) UImm))
      (set-reg (tmp 0) (tmp 1)))))

(instruction
  andnotz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 2) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (bit_not (constant ? 32) src2))
      (= (tmp 1) (bit_and (constant ? 32) src1 (tmp 0)))
      (set-reg dst (tmp 1))
      (set-reg (tmp 2) (constant ? 0)))))

(instruction
  neg2_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 10) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (sub (constant ? 8) (constant ? 0) (constant ? 15)))
      (= (tmp 2) (add (constant ? 8) (constant ? 1) (tmp 1)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 4) (satsub (tmp 2) (constant ? 0) (tmp 3)))
      (set-reg (tmp 0) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 6) (sub (constant ? 8) (constant ? 16) (constant ? 31)))
      (= (tmp 7) (add (constant ? 8) (constant ? 1) (tmp 6)))
      (= (tmp 8) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 9) (satsub (tmp 7) (constant ? 0) (tmp 8)))
      (set-reg (tmp 5) (tmp 9))
      (= (tmp 11) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 10) (tmp 11)))))

(instruction
  mod16
  (pattern 
    (constraints 
      (allocate-in (tmp 0) (reg-flag ag (register a4h)))
      (allocate-in (tmp 1) (reg-flag al (register a4h))))
    (code 
      (set-reg (tmp 0) (constant ? 0))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 2) (urem (register a4h) (register a5h)))
      (set-reg (register a4h) (tmp 2)))))

(instruction
  shft_a40_nimm7_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -32 32 SImm)
      (allocate-in dst a40)
      (alias (tmp 4) (tmp 3))
      (assert (not (icmp slt (constant ? 6) SImm (constant ? 0)))))
    (code 
      (= (tmp 3) (shl (constant ? 40) src SImm))
      (set-reg dst (tmp 4))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -32 32 SImm)
      (allocate-in dst a40)
      (alias (tmp 4) (tmp 2))
      (assert (icmp slt (constant ? 6) SImm (constant ? 0))))
    (code 
      (= (tmp 1) (sub (constant ? 6) (constant ? 0) SImm))
      (= (tmp 2) (lshr (constant ? 40) src (tmp 1)))
      (set-reg dst (tmp 4)))))

(instruction
  nop_instr
  (pattern 
    (constraints )
    (code )))

(instruction
  cbit_nimm5_a40
  (pattern 
    (constraints 
      (imm 0 31 UImm)
      (allocate-in dst a40)
      (allocate-in (tmp 0) (reg-flag c dst)))
    (code 
      (= (tmp 1) (reg-range dst UImm UImm))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst UImm UImm))
      (set-reg (tmp 2) (constant ? 0)))))

(instruction
  fdiv24
  (pattern 
    (constraints 
      (allocate-in (tmp 2) (reg-flag al (tmp 1))))
    (code 
      (= (tmp 0) (reg-range (register a5) (constant ? 16) (constant ? 39)))
      (= (tmp 1) (reg-range (register a4) (constant ? 16) (constant ? 39)))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 3) (fixpointdiv (tmp 1) (tmp 0)))
      (set-reg (tmp 1) (tmp 3)))))

(instruction
  mins_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (icmp (constant ? 32) slt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 6) (tmp 7)))))

(instruction
  lbra_offset
  (pattern 
    (constraints 
      (abs-address 0 1048575 addr))
    (code 
      (set-reg (register pc) addr))))

(instruction
  lbra_offset_alias
  (pattern 
    (constraints 
      (abs-address 0 1048575 addr))
    (code 
      (set-reg (register pc) addr))))

(instruction
  fbra_offset
  (pattern 
    (constraints 
      (abs-address 0 2147483647 addr))
    (code 
      (set-reg (register pc) addr))))

(instruction
  fbra_offset_alias
  (pattern 
    (constraints 
      (abs-address 0 2147483647 addr))
    (code 
      (set-reg (register pc) addr))))

(instruction
  bra_accumulator
  (pattern 
    (constraints 
      (allocate-in aN a40))
    (code 
      (= (tmp 0) (urem aN (size pc)))
      (set-reg (register pc) (tmp 0)))))

(instruction
  sat_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (satadd (constant ? 32) (constant ? 0) src))
      (set-reg dst (tmp 0)))))

(instruction
  mod32
  (pattern 
    (constraints 
      (allocate-in (tmp 2) (reg-flag ag (tmp 1))))
    (code 
      (= (tmp 0) (reg-range (register a5) (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range (register a4) (constant ? 0) (constant ? 31)))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 3) (urem (tmp 1) (tmp 0)))
      (set-reg (tmp 1) (tmp 3)))))

(instruction
  andz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (bit_and (constant ? 16) src1 src2))
      (set-reg dst (tmp 0))
      (set-reg (tmp 1) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (bit_and (constant ? 16) src1 src2))
      (set-reg dst (tmp 0)))))

(instruction
  cos_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code )))

(instruction
  lcalla_addr_alias
  (pattern 
    (constraints 
      (abs-address 0 1048575 addr))
    (code )))

(instruction
  subh_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (satsub (constant ? 32) src1 (tmp 2)))
      (set-reg dst (tmp 3))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 4) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 5) (shl (constant ? 40) (tmp 4) (constant ? 16)))
      (= (tmp 6) (sub (constant ? 40) src1 (tmp 5)))
      (set-reg dst (tmp 6)))))

(instruction
  bswap_a16h_a16h
  (pattern 
    (constraints 
      (allocate-in src a16h)
      (allocate-in dst a16h))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  e_int
  (pattern 
    (constraints )
    (code 
      (set-reg (register isb) (constant ? 1)))))

(instruction
  d_int
  (pattern 
    (constraints )
    (code 
      (set-reg (register isb) (constant ? 0)))))

(instruction
  mod40
  (pattern 
    (constraints )
    (code 
      (= (tmp 0) (urem (register a4) (register a5)))
      (set-reg (register a4) (tmp 0)))))

(instruction
  bupackl_a16h_a40
  (pattern 
    (constraints 
      (allocate-in src a16h)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (sext (constant ? 8) dst (constant ? 16)))
      (set-reg dst (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 4) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 5) (sext (constant ? 24) dst (constant ? 40)))
      (set-reg dst (tmp 5)))))

(instruction
  bupackl_a16l_a40
  (pattern 
    (constraints 
      (allocate-in src a16l)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (sext (constant ? 8) dst (constant ? 16)))
      (set-reg dst (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 4) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 5) (sext (constant ? 24) dst (constant ? 40)))
      (set-reg dst (tmp 5)))))

(instruction
  lbrr_offset
  (pattern 
    (constraints 
      (rel-address -524288 524287 addr))
    (code 
      (= (tmp 0) (add (size pc) (register pc) addr))
      (= (tmp 1) (urem (tmp 0) (size pc)))
      (set-reg (register pc) (tmp 1)))))

(instruction
  sqr16
  (pattern 
    (constraints 
      (allocate-in (tmp 0) (reg-flag al (register a4h)))
      (allocate-in (tmp 1) (reg-flag ag (register a4h))))
    (code 
      (set-reg (tmp 0) (constant ? 0))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 2) (usqrt (register a4h)))
      (set-reg (register a4h) (tmp 2)))))

(instruction
  neg_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (satsub (constant ? 16) (constant ? 0) src))
      (set-reg dst (tmp 0))
      (= (tmp 2) (reg-range (tmp 1) (constant ? 16) (constant ? 39)))
      (= (tmp 3) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 2) (tmp 3))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (satsub (constant ? 16) (constant ? 0) src))
      (set-reg dst (tmp 0)))))

(instruction
  tbit_nimm5_a40
  (pattern 
    (constraints 
      (imm 0 31 UImm)
      (allocate-in dst a40)
      (allocate-in (tmp 0) (reg-flag c dst)))
    (code 
      (= (tmp 1) (reg-range dst UImm UImm))
      (set-reg (tmp 0) (tmp 1)))))

(instruction
  bpackh_a40_a16h
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16h))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 24) (constant ? 31)))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  sqr24
  (pattern 
    (constraints 
      (allocate-in (tmp 1) (reg-flag al (tmp 0))))
    (code 
      (= (tmp 0) (reg-range (register a4) (constant ? 16) (constant ? 39)))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 2) (usqrt (tmp 0)))
      (set-reg (tmp 0) (tmp 2)))))

(instruction
  addsp_nimm13
  (pattern 
    (constraints 
      (imm 0 8191 UImm))
    (code 
      (= (tmp 0) (add (constant ? 16) (register sp) UImm))
      (set-reg (register sp) (tmp 0)))))

(instruction
  cmp_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 0) (reg-flag ac dst))
      (allocate-in (tmp 2) (reg-flag mi dst)))
    (code 
      (= (tmp 1) (icmp eq (constant ? 40) dst src))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp slt (constant ? 40) dst src))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  subsp_nimm13
  (pattern 
    (constraints 
      (imm 0 8191 UImm))
    (code 
      (= (tmp 0) (sub (constant ? 16) (register sp) UImm))
      (set-reg (register sp) (tmp 0)))))

(instruction
  cmps_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst)))
    (code 
      (= (tmp 0) (reg-range (constant ? 0) (constant ? 31) dst))
      (= (tmp 1) (reg-range (constant ? 0) (constant ? 31) src))
      (= (tmp 3) (icmp eq (constant ? 32) (tmp 0) (tmp 1)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (icmp slt (constant ? 32) (tmp 0) (tmp 1)))
      (set-reg (tmp 4) (tmp 5)))))

(instruction
  addscale4_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 36) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 7) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 7) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 6) (add (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (sdiv (tmp 6) (constant ? 2)))
      (= (tmp 8) (reg-range dst (constant ? 0) (constant ? 7)))
      (set-reg (tmp 8) (tmp 7))
      (= (tmp 9) (- (constant ? 15) (constant ? 8)))
      (= (tmp 10) (+ (constant ? 1) (tmp 9)))
      (= (tmp 11) (- (constant ? 15) (constant ? 8)))
      (= (tmp 12) (+ (constant ? 1) (tmp 11)))
      (= (tmp 13) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 14) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 15) (add (tmp 12) (tmp 13) (tmp 14)))
      (= (tmp 16) (sdiv (tmp 15) (constant ? 2)))
      (= (tmp 17) (reg-range dst (constant ? 8) (constant ? 15)))
      (set-reg (tmp 17) (tmp 16))
      (= (tmp 18) (- (constant ? 23) (constant ? 16)))
      (= (tmp 19) (+ (constant ? 1) (tmp 18)))
      (= (tmp 20) (- (constant ? 23) (constant ? 16)))
      (= (tmp 21) (+ (constant ? 1) (tmp 20)))
      (= (tmp 22) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 23) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 24) (add (tmp 21) (tmp 22) (tmp 23)))
      (= (tmp 25) (sdiv (tmp 24) (constant ? 2)))
      (= (tmp 26) (reg-range dst (constant ? 16) (constant ? 23)))
      (set-reg (tmp 26) (tmp 25))
      (= (tmp 27) (- (constant ? 31) (constant ? 24)))
      (= (tmp 28) (+ (constant ? 1) (tmp 27)))
      (= (tmp 29) (- (constant ? 31) (constant ? 24)))
      (= (tmp 30) (+ (constant ? 1) (tmp 29)))
      (= (tmp 31) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 32) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 33) (add (tmp 30) (tmp 31) (tmp 32)))
      (= (tmp 34) (sdiv (tmp 33) (constant ? 2)))
      (= (tmp 35) (reg-range dst (constant ? 24) (constant ? 31)))
      (set-reg (tmp 35) (tmp 34))
      (= (tmp 37) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 36) (tmp 37)))))

(instruction
  addsp_m16
  (pattern 
    (constraints 
      (allocate-in mN m16))
    (code 
      (= (tmp 0) (add (constant ? 16) (register sp) mN))
      (set-reg (register sp) (tmp 0)))))

(instruction
  fbrr_offset_alias
  (pattern 
    (constraints 
      (rel-address -1073741824 1073741823 addr))
    (code 
      (= (tmp 0) (add (size pc) (register pc) addr))
      (= (tmp 1) (urem (tmp 0) (size pc)))
      (set-reg (register pc) (tmp 1)))))

(instruction
  sqr40
  (pattern 
    (constraints )
    (code 
      (= (tmp 0) (usqrt (register a4)))
      (set-reg (register a4) (tmp 0)))))

(instruction
  bpackl_a40_a16h
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16h))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 16) (constant ? 23)))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  cmp_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (allocate-in (tmp 1) (reg-flag ac dst))
      (allocate-in (tmp 3) (reg-flag mi dst)))
    (code 
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (icmp eq (constant ? 40) dst (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (icmp slt (constant ? 40) dst (tmp 0)))
      (set-reg (tmp 3) (tmp 4)))))

(instruction
  brr_offset_acc
  (pattern 
    (constraints 
      (allocate-in aN a40))
    (code 
      (= (tmp 0) (add (size pc) (register pc) aN))
      (= (tmp 1) (urem (tmp 0) (size pc)))
      (set-reg (register pc) (tmp 1)))))

(instruction
  cmph_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst)))
    (code 
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 1) (shl (constant ? 40) (tmp 0) (constant ? 16)))
      (= (tmp 3) (icmp eq (constant ? 16) dst (tmp 1)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (icmp slt (constant ? 16) dst (tmp 1)))
      (set-reg (tmp 4) (tmp 5)))))

(instruction
  acc_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (add (constant ? 40) src1 src2))
      (= (tmp 2) (satadd (constant ? 40) dst (tmp 1)))
      (set-reg dst (tmp 2))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 3) (add (constant ? 40) src1 src2))
      (= (tmp 4) (add (constant ? 40) dst (tmp 3)))
      (set-reg dst (tmp 4)))))

(instruction
  mod24
  (pattern 
    (constraints 
      (allocate-in (tmp 2) (reg-flag al (tmp 1))))
    (code 
      (= (tmp 0) (reg-range (register a5) (constant ? 16) (constant ? 39)))
      (= (tmp 1) (reg-range (constant ? 16) (register a4) (constant ? 39)))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 3) (urem (tmp 1) (tmp 0)))
      (set-reg (tmp 1) (tmp 3)))))

(instruction
  mv_any16
  (pattern 
    (constraints 
      (imm -65535 32767 imm16b)
      (allocate-in dst any16))
    (code 
      (set-reg dst imm16b))))

(instruction
  bpackls_a40_a16
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 16) (constant ? 23)))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  cmph_nimm16_a40
  (pattern 
    (constraints 
      (imm -32768 32767 SImm)
      (allocate-in dst a40)
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst)))
    (code 
      (= (tmp 0) (sext (constant ? 16) SImm (constant ? 40)))
      (= (tmp 1) (shl (constant ? 40) (tmp 0) (constant ? 16)))
      (= (tmp 3) (icmp eq (constant ? 40) dst (tmp 1)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (icmp slt (constant ? 40) dst (tmp 1)))
      (set-reg (tmp 4) (tmp 5)))))

(instruction
  shfta_a16_nimm6_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (zimm -16 16 SImm)
      (allocate-in dst a16)
      (alias (tmp 11) (tmp 10))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 1) bb_3 bb_4)
      (label bb_3)
      (= (tmp 2) (shl (constant ? 16) (constant ? 1) SImm))
      (= (tmp 3) (satmul (constant ? 16) src (tmp 2)))
      (set-reg dst (tmp 3))
      (br bb_5)
      (label bb_4)
      (= (tmp 4) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (= (tmp 5) (shl (constant ? 16) src SImm))
      (set-reg dst (tmp 5))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 7) (ashr (constant ? 16) src (tmp 6)))
      (= (tmp 8) (sext (constant ? 16) (tmp 7) (constant ? 16)))
      (set-reg dst (tmp 8))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (zimm -16 16 SImm)
      (allocate-in dst a16)
      (alias (tmp 11) no-value)
      (assert (not (reg-flag sa (register cuc)))))
    (code )))

(instruction
  sin_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code )))

(instruction
  sbit_nimm5_a40
  (pattern 
    (constraints 
      (imm 0 31 UImm)
      (allocate-in dst a40)
      (allocate-in (tmp 0) (reg-flag c dst)))
    (code 
      (= (tmp 1) (reg-range dst UImm UImm))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst UImm UImm))
      (set-reg (tmp 2) (constant ? 1)))))

(instruction
  shfts_a40_nimm7_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -32 32 SImm)
      (allocate-in dst a40)
      (alias (tmp 12) (tmp 11))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 0) (sext (constant ? 32) src (constant ? 40)))
      (= (tmp 2) (icmp sgt (constant ? 40) SImm (constant ? 0)))
      (br (tmp 2) bb_3 bb_4)
      (label bb_3)
      (= (tmp 3) (shl (constant ? 32) (constant ? 1) SImm))
      (= (tmp 4) (satmul (constant ? 32) (tmp 0) (tmp 3)))
      (set-reg dst (tmp 4))
      (br bb_5)
      (label bb_4)
      (= (tmp 5) (icmp sgt (constant ? 32) SImm (constant ? 0)))
      (br (tmp 5) bb_0 bb_1)
      (label bb_0)
      (= (tmp 6) (shl (constant ? 32) (tmp 0) SImm))
      (set-reg dst (tmp 6))
      (br bb_2)
      (label bb_1)
      (= (tmp 7) (sub (constant ? 32) (constant ? 0) SImm))
      (= (tmp 8) (ashr (constant ? 32) (tmp 0) (tmp 7)))
      (= (tmp 9) (sext (constant ? 32) (tmp 8) (constant ? 40)))
      (set-reg dst (tmp 9))
      (br bb_2)
      (label bb_2)
      (= (tmp 10) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) ((tmp 10) . bb_4))))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -32 32 SImm)
      (allocate-in dst a40)
      (alias (tmp 12) no-value)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 0) (sext (constant ? 32) src (constant ? 40))))))

(instruction
  bupackh_a16h_a40
  (pattern 
    (constraints 
      (allocate-in src a16h)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (constant ? 0))
      (= (tmp 1) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 2) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 23)))
      (set-reg (tmp 3) (constant ? 0))
      (= (tmp 4) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 5) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 6) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 6)))))

(instruction
  bupackh_a16l_a40
  (pattern 
    (constraints 
      (allocate-in src a16l)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (constant ? 0))
      (= (tmp 1) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 2) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 23)))
      (set-reg (tmp 3) (constant ? 0))
      (= (tmp 4) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 5) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 4) (tmp 5))
      (= (tmp 6) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg dst (tmp 6)))))

(instruction
  bupacklz_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (allocate-in (tmp 6) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (set-reg (tmp 2) (constant ? 0))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 4) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 3) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 24) (constant ? 31)))
      (set-reg (tmp 5) (constant ? 0))
      (set-reg (tmp 6) (constant ? 0)))))

(instruction
  cmpz_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (allocate-in (tmp 0) (reg-flag ac dst))
      (allocate-in (tmp 2) (reg-flag mi dst)))
    (code 
      (= (tmp 1) (icmp eq (constant ? 16) dst src))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp ult (constant ? 16) dst src))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  scale4_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 12) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 2) (ashr (constant ? 8) (tmp 1) (constant ? 1)))
      (set-reg (tmp 0) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 4) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 5) (ashr (constant ? 8) (tmp 4) (constant ? 1)))
      (set-reg (tmp 3) (tmp 5))
      (= (tmp 6) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 7) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 8) (ashr (constant ? 8) (tmp 7) (constant ? 1)))
      (set-reg (tmp 6) (tmp 8))
      (= (tmp 9) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 10) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 11) (ashr (constant ? 8) (tmp 10) (constant ? 1)))
      (set-reg (tmp 9) (tmp 11))
      (= (tmp 13) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 12) (tmp 13)))))

(instruction
  copys_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 0) (reg-flag a dst)))
    (code 
      (set-reg dst src)
      (= (tmp 1) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 0) (tmp 1)))))

(instruction
  copyz_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 0) (reg-flag a dst)))
    (code 
      (set-reg dst src)
      (= (tmp 1) (zext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 0) (tmp 1)))))

(instruction
  zext_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 2) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 31)))
      (set-reg (tmp 0) (tmp 1))
      (set-reg (tmp 2) (constant ? 0)))))

(instruction
  sqr32
  (pattern 
    (constraints 
      (allocate-in (tmp 1) (reg-flag ag (tmp 0))))
    (code 
      (= (tmp 0) (reg-range (register a4) (constant ? 0) (constant ? 31)))
      (set-reg (tmp 1) (constant ? 0))
      (= (tmp 2) (usqrt (tmp 0)))
      (set-reg (tmp 0) (tmp 2)))))

(instruction
  shftz_a40_nimm7_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -32 32 SImm)
      (allocate-in dst a40)
      (alias (tmp 12) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 13) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (zext (constant ? 32) src (constant ? 40)))
      (set-reg (tmp 13) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -32 32 SImm)
      (allocate-in dst a40)
      (alias (tmp 12) (tmp 11))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 13) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (zext (constant ? 32) src (constant ? 40)))
      (= (tmp 2) (icmp sgt (constant ? 40) SImm (constant ? 0)))
      (br (tmp 2) bb_3 bb_4)
      (label bb_3)
      (= (tmp 3) (shl (constant ? 32) (constant ? 1) SImm))
      (= (tmp 4) (satmul (constant ? 32) (tmp 0) (tmp 3)))
      (set-reg dst (tmp 4))
      (br bb_5)
      (label bb_4)
      (= (tmp 5) (icmp sgt (constant ? 32) SImm (constant ? 0)))
      (br (tmp 5) bb_0 bb_1)
      (label bb_0)
      (= (tmp 6) (shl (constant ? 32) (tmp 0) SImm))
      (set-reg dst (tmp 6))
      (br bb_2)
      (label bb_1)
      (= (tmp 7) (sub (constant ? 32) (constant ? 0) SImm))
      (= (tmp 8) (ashr (constant ? 32) (tmp 0) (tmp 7)))
      (= (tmp 9) (sext (constant ? 32) (tmp 8) (constant ? 40)))
      (set-reg dst (tmp 9))
      (br bb_2)
      (label bb_2)
      (= (tmp 10) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) ((tmp 10) . bb_4))))
      (set-reg (tmp 13) (constant ? 0)))))

(instruction
  shfta_nimm6_a40
  (pattern 
    (constraints 
      (zimm -16 16 SImm)
      (allocate-in dst a40)
      (alias (tmp 11) (tmp 10))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (icmp sgt (constant ? 40) SImm (constant ? 0)))
      (br (tmp 1) bb_3 bb_4)
      (label bb_3)
      (= (tmp 2) (shl (constant ? 32) (constant ? 1) SImm))
      (= (tmp 3) (satmul (constant ? 32) dst (tmp 2)))
      (set-reg dst (tmp 3))
      (br bb_5)
      (label bb_4)
      (= (tmp 4) (icmp sgt (constant ? 32) SImm (constant ? 0)))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (= (tmp 5) (shl (constant ? 32) dst SImm))
      (set-reg dst (tmp 5))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (sub (constant ? 32) (constant ? 0) SImm))
      (= (tmp 7) (ashr (constant ? 32) dst (tmp 6)))
      (= (tmp 8) (sext (constant ? 32) (tmp 7) (constant ? 40)))
      (set-reg dst (tmp 8))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))))
  (pattern 
    (constraints 
      (zimm -16 16 SImm)
      (allocate-in dst a40)
      (alias (tmp 11) no-value)
      (assert (not (reg-flag sa (register cuc)))))
    (code )))

(instruction
  subhs_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 7) (reg-flag a dst)))
    (code 
      (= (tmp 4) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 5) (shl (constant ? 40) (tmp 4) (constant ? 16)))
      (= (tmp 6) (sub (constant ? 32) src1 (tmp 5)))
      (set-reg dst (tmp 6))
      (= (tmp 8) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 7) (tmp 8))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 7) (reg-flag a dst)))
    (code 
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (satsub (constant ? 32) src1 (tmp 2)))
      (set-reg dst (tmp 3))
      (= (tmp 8) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 7) (tmp 8)))))

(instruction
  cmpz_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst)))
    (code 
      (= (tmp 0) (reg-range (constant ? 0) (constant ? 31) dst))
      (= (tmp 1) (reg-range (constant ? 0) (constant ? 31) src))
      (= (tmp 3) (icmp eq (constant ? 32) (tmp 0) (tmp 1)))
      (set-reg (tmp 2) (tmp 3))
      (= (tmp 5) (icmp ult (constant ? 32) (tmp 0) (tmp 1)))
      (set-reg (tmp 4) (tmp 5)))))

(instruction
  subsp_m16
  (pattern 
    (constraints 
      (allocate-in mN m16))
    (code 
      (= (tmp 0) (sub (constant ? 16) (register sp) mN))
      (set-reg (register sp) (tmp 0)))))

(instruction
  maxz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (icmp (constant ? 16) ugt src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 39)))
      (= (tmp 6) (zext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 5) (tmp 6))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (icmp (constant ? 16) ugt src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1)))))))

(instruction
  ldc_nimm9_a16
  (pattern 
    (constraints 
      (zimm -128 128 simm8b)
      (allocate-in dst a16)
      (allocate-in (tmp 0) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (set-reg dst simm8b)
      (= (tmp 1) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 0) (tmp 1))))
  (pattern 
    (constraints 
      (zimm -128 128 simm8b)
      (allocate-in dst a16)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (set-reg dst simm8b))))

(instruction
  shfta_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (alias (tmp 15) (tmp 14))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 0) (icmp slt (constant ? 16) src (constant ? -16)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src (constant ? 16)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 16) . bb_0) (src . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -16) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 5) (icmp sgt (constant ? 16) (tmp 3) (constant ? 0)))
      (br (tmp 5) bb_9 bb_10)
      (label bb_9)
      (= (tmp 6) (shl (constant ? 16) (constant ? 1) (tmp 3)))
      (= (tmp 7) (satmul (constant ? 16) dst (tmp 6)))
      (set-reg dst (tmp 7))
      (br bb_11)
      (label bb_10)
      (= (tmp 8) (icmp sgt (constant ? 16) (tmp 3) (constant ? 0)))
      (br (tmp 8) bb_6 bb_7)
      (label bb_6)
      (= (tmp 9) (shl (constant ? 16) dst (tmp 3)))
      (set-reg dst (tmp 9))
      (br bb_8)
      (label bb_7)
      (= (tmp 10) (sub (constant ? 16) (constant ? 0) (tmp 3)))
      (= (tmp 11) (ashr (constant ? 16) dst (tmp 10)))
      (= (tmp 12) (sext (constant ? 16) (tmp 11) (constant ? 16)))
      (set-reg dst (tmp 12))
      (br bb_8)
      (label bb_8)
      (= (tmp 13) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 14) (phi ((no-value . bb_9) ((tmp 13) . bb_10))))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (alias (tmp 15) no-value)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 0) (icmp slt (constant ? 16) src (constant ? -16)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src (constant ? 16)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 16) . bb_0) (src . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -16) . bb_3) ((tmp 2) . bb_4)))))))

(instruction
  bpackl_a40_a16l
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16l))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 16) (constant ? 23)))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  shft_a16_nimm6_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (zimm -16 16 SImm)
      (allocate-in dst a16)
      (alias (tmp 4) (tmp 3))
      (assert (not (icmp slt (constant ? 5) SImm (constant ? 0)))))
    (code 
      (= (tmp 3) (shl (constant ? 16) src SImm))
      (set-reg dst (tmp 4))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (zimm -16 16 SImm)
      (allocate-in dst a16)
      (alias (tmp 4) (tmp 2))
      (assert (icmp slt (constant ? 5) SImm (constant ? 0))))
    (code 
      (= (tmp 1) (sub (constant ? 5) (constant ? 0) SImm))
      (= (tmp 2) (lshr (constant ? 16) src (tmp 1)))
      (set-reg dst (tmp 4)))))

(instruction
  cmp_nimm16_a40
  (pattern 
    (constraints 
      (imm -32768 32767 SImm)
      (allocate-in dst a40)
      (allocate-in (tmp 1) (reg-flag ac dst))
      (allocate-in (tmp 3) (reg-flag mi dst)))
    (code 
      (= (tmp 0) (sext (constant ? 16) SImm (constant ? 40)))
      (= (tmp 2) (icmp eq (constant ? 40) dst (tmp 0)))
      (set-reg (tmp 1) (tmp 2))
      (= (tmp 4) (icmp slt (constant ? 40) dst (tmp 0)))
      (set-reg (tmp 3) (tmp 4)))))

(instruction
  shfta2_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 28) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 16) (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 16) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 16) (tmp 1) src2))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 9) (ashr (constant ? 16) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 16) (tmp 9) (constant ? 16)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 28) (tmp 29))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 28) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 16) (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 16) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 16) (tmp 1) src2))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 9) (ashr (constant ? 16) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 16) (tmp 9) (constant ? 16)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 17) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 16) (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 16) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 16) (tmp 15) src2))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 23) (ashr (constant ? 16) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 16) (tmp 23) (constant ? 16)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 28) (tmp 29))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 28) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 28) (tmp 29))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 28) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 17) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 16) (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 16) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 16) (tmp 15) src2))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 23) (ashr (constant ? 16) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 16) (tmp 23) (constant ? 16)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 28) (tmp 29)))))

(instruction
  shft2_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (icmp slt (constant ? 16) src2 (constant ? 0))))
      (allocate-in (tmp 15) (reg-flag ag dst)))
    (code 
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 10) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 11) (shl (constant ? 16) (tmp 10) src2))
      (set-reg (tmp 9) (tmp 11))
      (= (tmp 12) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 13) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 14) (shl (constant ? 16) (tmp 13) src2))
      (set-reg (tmp 12) (tmp 14))
      (set-reg (tmp 15) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (icmp slt (constant ? 16) src2 (constant ? 0)))
      (allocate-in (tmp 15) (reg-flag ag dst)))
    (code 
      (= (tmp 1) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 4) (lshr (constant ? 16) (tmp 2) (tmp 3)))
      (set-reg (tmp 1) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 6) (reg-range src1 (constant ? 15) (constant ? 31)))
      (= (tmp 7) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 8) (lshr (constant ? 16) (tmp 6) (tmp 7)))
      (set-reg (tmp 5) (tmp 8))
      (set-reg (tmp 15) (constant ? 0)))))

(instruction
  cmp_nimm16_a16
  (pattern 
    (constraints 
      (imm -32768 32767 SImm)
      (allocate-in dst a16)
      (allocate-in (tmp 0) (reg-flag ac dst))
      (allocate-in (tmp 2) (reg-flag mi dst)))
    (code 
      (= (tmp 1) (icmp eq (constant ? 16) dst SImm))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp slt (constant ? 16) dst SImm))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  cmp_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (allocate-in (tmp 0) (reg-flag ac dst))
      (allocate-in (tmp 2) (reg-flag mi dst)))
    (code 
      (= (tmp 1) (icmp eq (constant ? 16) dst src))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 3) (icmp slt (constant ? 16) dst src))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  shfts_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 16) (tmp 15))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 0) (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 40) . bb_0) (src2 . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -40) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (sext (constant ? 32) src1 (constant ? 40)))
      (= (tmp 6) (icmp sgt (constant ? 40) (tmp 3) (constant ? 0)))
      (br (tmp 6) bb_9 bb_10)
      (label bb_9)
      (= (tmp 7) (shl (constant ? 32) (constant ? 1) (tmp 3)))
      (= (tmp 8) (satmul (constant ? 32) (tmp 4) (tmp 7)))
      (set-reg dst (tmp 8))
      (br bb_11)
      (label bb_10)
      (= (tmp 9) (icmp sgt (constant ? 32) (tmp 3) (constant ? 0)))
      (br (tmp 9) bb_6 bb_7)
      (label bb_6)
      (= (tmp 10) (shl (constant ? 32) (tmp 4) (tmp 3)))
      (set-reg dst (tmp 10))
      (br bb_8)
      (label bb_7)
      (= (tmp 11) (sub (constant ? 32) (constant ? 0) (tmp 3)))
      (= (tmp 12) (ashr (constant ? 32) (tmp 4) (tmp 11)))
      (= (tmp 13) (sext (constant ? 32) (tmp 12) (constant ? 40)))
      (set-reg dst (tmp 13))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 15) (phi ((no-value . bb_9) ((tmp 14) . bb_10))))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 16) no-value)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 0) (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 40) . bb_0) (src2 . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -40) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (sext (constant ? 32) src1 (constant ? 40))))))

(instruction
  shfta4_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) src2))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) src2))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) src2))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) src2))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) src2))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) src2))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) src2))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) src2))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) src2))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) src2))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) src2))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) src2))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) src2))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) src2))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) src2))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) src2))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) src2))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) src2))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) src2))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) src2))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) src2))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) src2))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) src2))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) src2))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) src2))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) src2))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) src2))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) src2))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) src2))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) src2))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) src2))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) src2))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) src2))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57)))))

(instruction
  abs_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (alias (tmp 5) (tmp 2))
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 0) (icmp (constant ? 32) slt src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (sub (constant ? 32) (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (set-reg dst (tmp 5))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (alias (tmp 5) (tmp 4))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 0) (icmp (constant ? 32) slt src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (sub (constant ? 32) (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (= (tmp 4) (satadd (constant ? 32) (tmp 2) (constant ? 0)))
      (set-reg dst (tmp 5)))))

(instruction
  shft2_a40_nimm6_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -16 16 SImm)
      (allocate-in dst a40)
      (assert (not (icmp slt (constant ? 5) SImm (constant ? 0))))
      (allocate-in (tmp 15) (reg-flag ag dst)))
    (code 
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 10) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 11) (shl (constant ? 16) (tmp 10) SImm))
      (set-reg (tmp 9) (tmp 11))
      (= (tmp 12) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 13) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 14) (shl (constant ? 16) (tmp 13) SImm))
      (set-reg (tmp 12) (tmp 14))
      (set-reg (tmp 15) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -16 16 SImm)
      (allocate-in dst a40)
      (assert (icmp slt (constant ? 5) SImm (constant ? 0)))
      (allocate-in (tmp 15) (reg-flag ag dst)))
    (code 
      (= (tmp 1) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 2) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 3) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 4) (lshr (constant ? 16) (tmp 2) (tmp 3)))
      (set-reg (tmp 1) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 6) (reg-range src (constant ? 15) (constant ? 31)))
      (= (tmp 7) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 8) (lshr (constant ? 16) (tmp 6) (tmp 7)))
      (set-reg (tmp 5) (tmp 8))
      (set-reg (tmp 15) (constant ? 0)))))

(instruction
  abss_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (alias (tmp 5) (tmp 2))
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 0) (icmp (constant ? 32) slt src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (sub (constant ? 32) (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (set-reg dst (tmp 5))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (alias (tmp 5) (tmp 4))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 0) (icmp (constant ? 32) slt src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (sub (constant ? 32) (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (= (tmp 4) (satadd (constant ? 32) (tmp 2) (constant ? 0)))
      (set-reg dst (tmp 5)))))

(instruction
  abs_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (alias (tmp 5) (tmp 4))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 6) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (icmp (constant ? 16) slt src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (sub (constant ? 16) (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (= (tmp 4) (satadd (constant ? 16) (tmp 2) (constant ? 0)))
      (set-reg dst (tmp 5))
      (set-reg (tmp 6) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (alias (tmp 5) (tmp 4))
      (assert (reg-flag sa (register cuc)))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (icmp (constant ? 16) slt src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (sub (constant ? 16) (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (= (tmp 4) (satadd (constant ? 16) (tmp 2) (constant ? 0)))
      (set-reg dst (tmp 5))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (alias (tmp 5) (tmp 2))
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 6) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (icmp (constant ? 16) slt src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (sub (constant ? 16) (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (set-reg dst (tmp 5))
      (set-reg (tmp 6) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (alias (tmp 5) (tmp 2))
      (assert (not (reg-flag sa (register cuc))))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (icmp (constant ? 16) slt src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (sub (constant ? 16) (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (set-reg dst (tmp 5)))))

(instruction
  mv_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (alias (tmp 4) src)
      (assert (not (reg-flag s src))))
    (code 
      (set-reg dst (tmp 4))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (alias (tmp 4) (tmp 3))
      (allocate-in (tmp 2) (reg-flag (register-class a40) src))
      (assert (reg-flag s src)))
    (code 
      (= (tmp 3) (satadd ? (constant ? 0) (tmp 2)))
      (set-reg dst (tmp 4)))))

(instruction
  shfta4_a40_nimm5_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) SImm))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) SImm))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) SImm))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) SImm))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) SImm))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) SImm))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) SImm))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) SImm))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) SImm))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) SImm))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) SImm))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) SImm))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) SImm))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) SImm))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) SImm))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) SImm))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) SImm))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (set-reg (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (constant ? 8) (tmp 1) SImm))
      (set-reg (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 9) (ashr (constant ? 8) (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (set-reg (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) SImm))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) SImm))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) SImm))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) SImm))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) SImm))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) SImm))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) SImm))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) SImm))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) SImm))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (set-reg (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (constant ? 8) (tmp 29) SImm))
      (set-reg (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 37) (ashr (constant ? 8) (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (set-reg (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) SImm))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) SImm))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa (register cuc)))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (set-reg (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (constant ? 8) (tmp 15) SImm))
      (set-reg (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 23) (ashr (constant ? 8) (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (set-reg (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 8) (constant ? 1) SImm))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (set-reg (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (constant ? 8) (tmp 43) SImm))
      (set-reg (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 51) (ashr (constant ? 8) (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (set-reg (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 56) (tmp 57)))))

(instruction
  abs_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (alias (tmp 6) (tmp 3))
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 1) (icmp (constant ? 16) slt (tmp 0) (constant ? 0)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (sub (constant ? 16) (constant ? 0) (tmp 0)))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi (((tmp 2) . bb_0) ((tmp 0) . bb_1))))
      (set-reg dst (tmp 6))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (alias (tmp 6) (tmp 5))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 1) (icmp (constant ? 16) slt (tmp 0) (constant ? 0)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (sub (constant ? 16) (constant ? 0) (tmp 0)))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi (((tmp 2) . bb_0) ((tmp 0) . bb_1))))
      (= (tmp 5) (satadd (constant ? 16) (tmp 3) (constant ? 0)))
      (set-reg dst (tmp 6)))))

(instruction
  shfta_a40_nimm7_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -32 32 SImm)
      (allocate-in dst a40)
      (alias (tmp 11) (tmp 10))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (icmp sgt (constant ? 40) SImm (constant ? 0)))
      (br (tmp 1) bb_3 bb_4)
      (label bb_3)
      (= (tmp 2) (shl (constant ? 32) (constant ? 1) SImm))
      (= (tmp 3) (satmul (constant ? 32) src (tmp 2)))
      (set-reg dst (tmp 3))
      (br bb_5)
      (label bb_4)
      (= (tmp 4) (icmp sgt (constant ? 32) SImm (constant ? 0)))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (= (tmp 5) (shl (constant ? 32) src SImm))
      (set-reg dst (tmp 5))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (sub (constant ? 32) (constant ? 0) SImm))
      (= (tmp 7) (ashr (constant ? 32) src (tmp 6)))
      (= (tmp 8) (sext (constant ? 32) (tmp 7) (constant ? 40)))
      (set-reg dst (tmp 8))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -32 32 SImm)
      (allocate-in dst a40)
      (alias (tmp 11) no-value)
      (assert (not (reg-flag sa (register cuc)))))
    (code )))

(instruction
  absh_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (alias (tmp 7) (tmp 4))
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 1) (shl (constant ? 40) (tmp 0) (constant ? 16)))
      (= (tmp 2) (icmp (constant ? 16) slt (tmp 1) (constant ? 0)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= (tmp 3) (sub (constant ? 16) (constant ? 0) (tmp 1)))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi (((tmp 3) . bb_0) ((tmp 1) . bb_1))))
      (set-reg dst (tmp 7))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (alias (tmp 7) (tmp 6))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 1) (shl (constant ? 40) (tmp 0) (constant ? 16)))
      (= (tmp 2) (icmp (constant ? 16) slt (tmp 1) (constant ? 0)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= (tmp 3) (sub (constant ? 16) (constant ? 0) (tmp 1)))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi (((tmp 3) . bb_0) ((tmp 1) . bb_1))))
      (= (tmp 6) (satadd (constant ? 16) (tmp 4) (constant ? 0)))
      (set-reg dst (tmp 7)))))

(instruction
  subscale2_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 18) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 15) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 15) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 6) (sub (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (sdiv (tmp 6) (constant ? 2)))
      (= (tmp 8) (reg-range dst (constant ? 0) (constant ? 15)))
      (set-reg (tmp 8) (tmp 7))
      (= (tmp 9) (- (constant ? 31) (constant ? 16)))
      (= (tmp 10) (+ (constant ? 1) (tmp 9)))
      (= (tmp 11) (- (constant ? 31) (constant ? 16)))
      (= (tmp 12) (+ (constant ? 1) (tmp 11)))
      (= (tmp 13) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 14) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 15) (sub (tmp 12) (tmp 13) (tmp 14)))
      (= (tmp 16) (sdiv (tmp 15) (constant ? 2)))
      (= (tmp 17) (reg-range dst (constant ? 16) (constant ? 31)))
      (set-reg (tmp 17) (tmp 16))
      (= (tmp 19) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 18) (tmp 19)))))

(instruction
  mins_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (icmp (constant ? 16) slt src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 39)))
      (= (tmp 6) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 5) (tmp 6))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (icmp (constant ? 16) slt src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1)))))))

(instruction
  max_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst)))
    (code 
      (= (tmp 0) (icmp (constant ? 40) sgt src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1)))))))

(instruction
  sub_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (satsub (constant ? 32) src1 src2))
      (set-reg dst (tmp 1))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 2) (sub (constant ? 40) src1 src2))
      (set-reg dst (tmp 2)))))

(instruction
  maxs_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst)))
    (code 
      (= (tmp 0) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (icmp (constant ? 32) sgt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1)))))))

(instruction
  subz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (alias (tmp 9) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 10) (reg-flag ag dst)))
    (code 
      (= (tmp 6) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 7) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 8) (sub (constant ? 32) (tmp 6) (tmp 7)))
      (set-reg dst (tmp 8))
      (set-reg (tmp 10) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (alias (tmp 9) (tmp 5))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 10) (reg-flag ag dst)))
    (code 
      (= (tmp 1) (icmp ugt (constant ? 32) src2 src1))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 4) (sub (constant ? 32) (tmp 2) (tmp 3)))
      (set-reg dst (tmp 4))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (set-reg (tmp 10) (constant ? 0)))))

(instruction
  suba_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (satsub (constant ? 40) src1 src2))
      (set-reg dst (tmp 1))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 2) (sub (constant ? 40) src1 src2))
      (set-reg dst (tmp 2)))))

(instruction
  scale2_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 6) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (ashr (constant ? 40) (tmp 1) (constant ? 1)))
      (set-reg (tmp 0) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 4) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 5) (ashr (constant ? 40) (tmp 4) (constant ? 1)))
      (set-reg (tmp 3) (tmp 5))
      (= (tmp 7) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 6) (tmp 7)))))

(instruction
  maxz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (icmp (constant ? 32) ugt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (set-reg (tmp 6) (constant ? 0)))))

(instruction
  bswap_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 8) (constant ? 15)))
      (set-reg (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 7)))
      (set-reg (tmp 2) (tmp 3)))))

(instruction
  subz_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 6) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 7) (reg-flag ag dst)))
    (code 
      (= (tmp 5) (sub (constant ? 32) src1 src2))
      (set-reg dst (tmp 5))
      (set-reg (tmp 7) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 6) (tmp 4))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 7) (reg-flag ag dst)))
    (code 
      (= (tmp 1) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (icmp ugt (constant ? 40) (tmp 1) src1))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= (tmp 3) (sub (constant ? 32) src1 src2))
      (set-reg dst (tmp 3))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (set-reg (tmp 7) (constant ? 0)))))

(instruction
  add_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (satadd (constant ? 32) src1 src2))
      (set-reg dst (tmp 1))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 2) (add (constant ? 40) src1 src2))
      (set-reg dst (tmp 2)))))

(instruction
  max2_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 10) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 2) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (icmp (constant ? 16) sgt (tmp 1) (tmp 2)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 0) (tmp 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 0) (tmp 2))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 6) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 7) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 8) (icmp (constant ? 16) sgt (tmp 6) (tmp 7)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (tmp 6))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 5) (tmp 7))
      (br bb_5)
      (label bb_5)
      (= (tmp 9) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 11) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 10) (tmp 11)))))

(instruction
  sub_nimm5_a40
  (pattern 
    (constraints 
      (imm 1 32 UImm)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 2) (satsub (constant ? 32) dst (tmp 1)))
      (set-reg dst (tmp 2))))
  (pattern 
    (constraints 
      (imm 1 32 UImm)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 3) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 4) (sub (constant ? 40) dst (tmp 3)))
      (set-reg dst (tmp 4)))))

(instruction
  adda_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (add (constant ? 40) src1 src2))
      (set-reg dst (tmp 1))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 2) (satadd (constant ? 40) src1 src2))
      (set-reg dst (tmp 2)))))

(instruction
  max2_a40_a16
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp (constant ? 16) sgt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (reg-range (tmp 6) (constant ? 16) (constant ? 39)))
      (= (tmp 8) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 7) (tmp 8))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp (constant ? 16) sgt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1)))))))

(instruction
  add_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (satadd (constant ? 32) (tmp 1) dst))
      (set-reg dst (tmp 2))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 3) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 4) (add (constant ? 40) (tmp 3) dst))
      (set-reg dst (tmp 4)))))

(instruction
  maxz2_a40_a16
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp (constant ? 16) ugt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (reg-range (tmp 6) (constant ? 16) (constant ? 39)))
      (= (tmp 8) (zext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 7) (tmp 8))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp (constant ? 16) ugt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1)))))))

(instruction
  shft4_a40_nimm5_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (assert (not (icmp slt (constant ? 4) SImm (constant ? 0))))
      (allocate-in (tmp 29) (reg-flag ag dst)))
    (code 
      (= (tmp 17) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 18) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 19) (shl (constant ? 8) (tmp 18) SImm))
      (set-reg (tmp 17) (tmp 19))
      (= (tmp 20) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 21) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 22) (shl (constant ? 8) (tmp 21) SImm))
      (set-reg (tmp 20) (tmp 22))
      (= (tmp 23) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 24) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 25) (shl (constant ? 8) (tmp 24) SImm))
      (set-reg (tmp 23) (tmp 25))
      (= (tmp 26) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 27) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 28) (shl (constant ? 8) (tmp 27) SImm))
      (set-reg (tmp 26) (tmp 28))
      (set-reg (tmp 29) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (zimm -8 8 SImm)
      (allocate-in dst a40)
      (assert (icmp slt (constant ? 4) SImm (constant ? 0)))
      (allocate-in (tmp 29) (reg-flag ag dst)))
    (code 
      (= (tmp 1) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 2) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 4) (lshr (constant ? 8) (tmp 2) (tmp 3)))
      (set-reg (tmp 1) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 6) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 7) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 8) (lshr (constant ? 8) (tmp 6) (tmp 7)))
      (set-reg (tmp 5) (tmp 8))
      (= (tmp 9) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 10) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 11) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 12) (lshr (constant ? 8) (tmp 10) (tmp 11)))
      (set-reg (tmp 9) (tmp 12))
      (= (tmp 13) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 14) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 15) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 16) (lshr (constant ? 8) (tmp 14) (tmp 15)))
      (set-reg (tmp 13) (tmp 16))
      (set-reg (tmp 29) (constant ? 0)))))

(instruction
  max4_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 20) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 2) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp (constant ? 8) sgt (tmp 1) (tmp 2)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 0) (tmp 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 0) (tmp 2))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 6) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 7) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 8) (icmp (constant ? 8) sgt (tmp 6) (tmp 7)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (tmp 6))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 5) (tmp 7))
      (br bb_5)
      (label bb_5)
      (= (tmp 9) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 10) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 11) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 12) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 13) (icmp (constant ? 8) sgt (tmp 11) (tmp 12)))
      (br (tmp 13) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 10) (tmp 11))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 10) (tmp 12))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 15) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 16) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 17) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 18) (icmp (constant ? 8) sgt (tmp 16) (tmp 17)))
      (br (tmp 18) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 15) (tmp 16))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 15) (tmp 17))
      (br bb_11)
      (label bb_11)
      (= (tmp 19) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 21) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 20) (tmp 21)))))

(instruction
  subhz_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 10) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 11) (reg-flag ag dst)))
    (code 
      (= (tmp 7) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 8) (shl (constant ? 32) src2 (constant ? 16)))
      (= (tmp 9) (sub (constant ? 32) (tmp 7) (tmp 8)))
      (set-reg dst (tmp 9))
      (set-reg (tmp 11) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 10) (tmp 6))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 11) (reg-flag ag dst)))
    (code 
      (= (tmp 1) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (icmp ugt (constant ? 40) (tmp 1) src1))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= (tmp 3) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 4) (shl (constant ? 32) src2 (constant ? 16)))
      (= (tmp 5) (sub (constant ? 32) (tmp 3) (tmp 4)))
      (set-reg dst (tmp 5))
      (br bb_2)
      (label bb_2)
      (= (tmp 6) (phi ((no-value . bb_0) (no-value . bb_1))))
      (set-reg (tmp 11) (constant ? 0)))))

(instruction
  add_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (satadd (constant ? 32) (tmp 1) src1))
      (set-reg dst (tmp 2))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 3) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 4) (add (constant ? 40) (tmp 3) src1))
      (set-reg dst (tmp 4)))))

(instruction
  mv_r16++Imm8
  (pattern 
    (constraints 
      (zimm 1 8 Imm8)
      (allocate-in rN r16))
    (code 
      (= (tmp 0) (add (constant ? 16) rN Imm8))
      (set-reg rN (tmp 0)))))

(instruction
  shftz_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 16) no-value)
      (assert (not (reg-flag sa (register cuc))))
      (allocate-in (tmp 17) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 40) . bb_0) (src2 . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -40) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (zext (constant ? 32) src1 (constant ? 40)))
      (set-reg (tmp 17) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 16) (tmp 15))
      (assert (reg-flag sa (register cuc)))
      (allocate-in (tmp 17) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 40) . bb_0) (src2 . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -40) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (zext (constant ? 32) src1 (constant ? 40)))
      (= (tmp 6) (icmp sgt (constant ? 40) (tmp 3) (constant ? 0)))
      (br (tmp 6) bb_9 bb_10)
      (label bb_9)
      (= (tmp 7) (shl (constant ? 32) (constant ? 1) (tmp 3)))
      (= (tmp 8) (satmul (constant ? 32) (tmp 4) (tmp 7)))
      (set-reg dst (tmp 8))
      (br bb_11)
      (label bb_10)
      (= (tmp 9) (icmp sgt (constant ? 32) (tmp 3) (constant ? 0)))
      (br (tmp 9) bb_6 bb_7)
      (label bb_6)
      (= (tmp 10) (shl (constant ? 32) (tmp 4) (tmp 3)))
      (set-reg dst (tmp 10))
      (br bb_8)
      (label bb_7)
      (= (tmp 11) (sub (constant ? 32) (constant ? 0) (tmp 3)))
      (= (tmp 12) (ashr (constant ? 32) (tmp 4) (tmp 11)))
      (= (tmp 13) (sext (constant ? 32) (tmp 12) (constant ? 40)))
      (set-reg dst (tmp 13))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 15) (phi ((no-value . bb_9) ((tmp 14) . bb_10))))
      (set-reg (tmp 17) (constant ? 0)))))

(instruction
  mv_r16--Imm8
  (pattern 
    (constraints 
      (zimm -8 -1 Imm8)
      (allocate-in rN r16))
    (code 
      (= (tmp 0) (add (constant ? 16) rN Imm8))
      (set-reg rN (tmp 0)))))

(instruction
  subh_nimm16_a40
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (satsub (constant ? 32) dst (tmp 2)))
      (set-reg dst (tmp 3))))
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 4) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 5) (shl (constant ? 40) (tmp 4) (constant ? 16)))
      (= (tmp 6) (sub (constant ? 40) dst (tmp 5)))
      (set-reg dst (tmp 6)))))

(instruction
  mv_r16++m
  (pattern 
    (constraints 
      (allocate-in rN r16)
      (allocate-in (tmp 0) (reg-flag m rN)))
    (code 
      (= (tmp 1) (add (constant ? 16) rN (tmp 0)))
      (set-reg rN (tmp 1)))))

(instruction
  addh_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (satadd (constant ? 32) (tmp 2) dst))
      (set-reg dst (tmp 3))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 4) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 5) (shl (constant ? 40) (tmp 4) (constant ? 16)))
      (= (tmp 6) (add (constant ? 40) (tmp 5) dst))
      (set-reg dst (tmp 6)))))

(instruction
  shft4_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (icmp slt (constant ? 16) src2 (constant ? 0))))
      (allocate-in (tmp 29) (reg-flag ag dst)))
    (code 
      (= (tmp 17) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 18) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 19) (shl (constant ? 8) (tmp 18) src2))
      (set-reg (tmp 17) (tmp 19))
      (= (tmp 20) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 21) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 22) (shl (constant ? 8) (tmp 21) src2))
      (set-reg (tmp 20) (tmp 22))
      (= (tmp 23) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 24) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 25) (shl (constant ? 8) (tmp 24) src2))
      (set-reg (tmp 23) (tmp 25))
      (= (tmp 26) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 27) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 28) (shl (constant ? 8) (tmp 27) src2))
      (set-reg (tmp 26) (tmp 28))
      (set-reg (tmp 29) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (icmp slt (constant ? 16) src2 (constant ? 0)))
      (allocate-in (tmp 29) (reg-flag ag dst)))
    (code 
      (= (tmp 1) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 4) (lshr (constant ? 8) (tmp 2) (tmp 3)))
      (set-reg (tmp 1) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 6) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 7) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 8) (lshr (constant ? 8) (tmp 6) (tmp 7)))
      (set-reg (tmp 5) (tmp 8))
      (= (tmp 9) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 10) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 11) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 12) (lshr (constant ? 8) (tmp 10) (tmp 11)))
      (set-reg (tmp 9) (tmp 12))
      (= (tmp 13) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 14) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 15) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 16) (lshr (constant ? 8) (tmp 14) (tmp 15)))
      (set-reg (tmp 13) (tmp 16))
      (set-reg (tmp 29) (constant ? 0)))))

(instruction
  mv_r16--m
  (pattern 
    (constraints 
      (allocate-in rN r16)
      (allocate-in (tmp 0) (reg-flag m rN)))
    (code 
      (= (tmp 1) (sub (constant ? 16) rN (tmp 0)))
      (set-reg rN (tmp 1)))))

(instruction
  not_a40
  (pattern 
    (constraints 
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (bit_not (constant ? 40) dst))
      (set-reg dst (tmp 0)))))

(instruction
  maxs_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (icmp (constant ? 16) sgt src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 39)))
      (= (tmp 6) (sext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 5) (tmp 6))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (icmp (constant ? 16) sgt src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1)))))))

(instruction
  not_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (bit_not (constant ? 40) src))
      (set-reg dst (tmp 0)))))

(instruction
  addh_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (satadd (constant ? 32) (tmp 2) src1))
      (set-reg dst (tmp 3))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 4) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 5) (shl (constant ? 40) (tmp 4) (constant ? 16)))
      (= (tmp 6) (add (constant ? 40) (tmp 5) src1))
      (set-reg dst (tmp 6)))))

(instruction
  notz_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 1) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (bit_not (constant ? 32) src))
      (set-reg dst (tmp 0))
      (set-reg (tmp 1) (constant ? 0)))))

(instruction
  mv_r16-no-modifier
  (pattern 
    (constraints 
      (allocate-in rN r16))
    (code )))

(instruction
  min_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst)))
    (code 
      (= (tmp 0) (icmp (constant ? 40) slt src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (set-reg dst src1)
      (set-reg (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst src2)
      (set-reg (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1)))))))

(instruction
  not_a16
  (pattern 
    (constraints 
      (allocate-in dst a16))
    (code 
      (= (tmp 0) (bit_not (constant ? 16) dst))
      (set-reg dst (tmp 0)))))

(instruction
  add_nimm5_a40
  (pattern 
    (constraints 
      (imm 1 32 UImm)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (satadd (constant ? 32) (tmp 2) dst))
      (set-reg dst (tmp 3))))
  (pattern 
    (constraints 
      (imm 1 32 UImm)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 4) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 5) (shl (constant ? 40) (tmp 4) (constant ? 16)))
      (= (tmp 6) (add (constant ? 40) (tmp 5) dst))
      (set-reg dst (tmp 6)))))

(instruction
  not_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16))
    (code 
      (= (tmp 0) (bit_not (constant ? 16) src))
      (set-reg dst (tmp 0)))))

(instruction
  subh_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (satsub (constant ? 32) dst (tmp 2)))
      (set-reg dst (tmp 3))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 4) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 5) (shl (constant ? 40) (tmp 4) (constant ? 16)))
      (= (tmp 6) (sub (constant ? 40) dst (tmp 5)))
      (set-reg dst (tmp 6)))))

(instruction
  xor_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (bit_xor (constant ? 40) src1 src2))
      (set-reg dst (tmp 0)))))

(instruction
  mv_nimm6_a16
  (pattern 
    (constraints 
      (zimm -16 16 SImm)
      (allocate-in dst a16))
    (code 
      (set-reg dst SImm))))

(instruction
  xnor_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (bit_xor (constant ? 40) src1 src2))
      (= (tmp 1) (bit_not (constant ? 40) (tmp 0)))
      (set-reg dst (tmp 1)))))

(instruction
  addh_nimm5_a40
  (pattern 
    (constraints 
      (imm 1 32 UImm)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (satadd (constant ? 32) (tmp 2) dst))
      (set-reg dst (tmp 3))))
  (pattern 
    (constraints 
      (imm 1 32 UImm)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 4) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 5) (shl (constant ? 40) (tmp 4) (constant ? 16)))
      (= (tmp 6) (add (constant ? 40) (tmp 5) dst))
      (set-reg dst (tmp 6)))))

(instruction
  xor_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_xor (constant ? 16) (tmp 0) src))
      (set-reg (tmp 0) (tmp 1)))))

(instruction
  min2_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 10) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 2) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (icmp (constant ? 16) slt (tmp 1) (tmp 2)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 0) (tmp 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 0) (tmp 2))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 6) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 7) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 8) (icmp (constant ? 16) slt (tmp 6) (tmp 7)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (tmp 6))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 5) (tmp 7))
      (br bb_5)
      (label bb_5)
      (= (tmp 9) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 11) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 10) (tmp 11)))))

(instruction
  sub_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (satsub (constant ? 32) dst (tmp 1)))
      (set-reg dst (tmp 2))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 3) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 4) (sub (constant ? 40) dst (tmp 3)))
      (set-reg dst (tmp 4)))))

(instruction
  sub_nimm16_a40
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 2) (satsub (constant ? 32) dst (tmp 1)))
      (set-reg dst (tmp 2))))
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 3) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 4) (sub (constant ? 40) dst (tmp 3)))
      (set-reg dst (tmp 4)))))

(instruction
  or_a16_a16_low
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a0l_a7l))
    (code 
      (= (tmp 0) (bit_or (constant ? 16) dst src))
      (set-reg dst (tmp 0)))))

(instruction
  add_nimm16_a40
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 1) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 2) (shl (constant ? 40) (tmp 1) (constant ? 16)))
      (= (tmp 3) (satadd (constant ? 32) (tmp 2) dst))
      (set-reg dst (tmp 3))))
  (pattern 
    (constraints 
      (imm 0 65535 UImm)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 4) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 5) (shl (constant ? 40) (tmp 4) (constant ? 16)))
      (= (tmp 6) (add (constant ? 40) (tmp 5) dst))
      (set-reg dst (tmp 6)))))

(instruction
  or_a16_a16_high
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a0h_a7h))
    (code 
      (= (tmp 0) (bit_or (constant ? 16) dst src))
      (set-reg dst (tmp 0)))))

(instruction
  subabs_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc))))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 0) (icmp gt (constant ? 40) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 3) (sub (constant ? 40) src1 src2))
      (set-reg dst (tmp 3))
      (br bb_2)
      (label bb_1)
      (= (tmp 5) (satsub (constant ? 32) src2 src1))
      (set-reg dst (tmp 5))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa (register cuc))))
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 0) (icmp gt (constant ? 40) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 3) (sub (constant ? 40) src1 src2))
      (set-reg dst (tmp 3))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (sub (constant ? 40) src2 src1))
      (set-reg dst (tmp 6))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc)))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 0) (icmp gt (constant ? 40) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (satsub (constant ? 32) src1 src2))
      (set-reg dst (tmp 2))
      (br bb_2)
      (label bb_1)
      (= (tmp 5) (satsub (constant ? 32) src2 src1))
      (set-reg dst (tmp 5))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa (register cuc)))
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 0) (icmp gt (constant ? 40) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (satsub (constant ? 32) src1 src2))
      (set-reg dst (tmp 2))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (sub (constant ? 40) src2 src1))
      (set-reg dst (tmp 6))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1)))))))

(instruction
  mv_ext32_ext32
  (pattern 
    (constraints 
      (allocate-in src ext32)
      (allocate-in dst ext32)
      (alias (tmp 4) src)
      (assert (not (reg-flag s src))))
    (code 
      (set-reg dst (tmp 4))))
  (pattern 
    (constraints 
      (allocate-in src ext32)
      (allocate-in dst ext32)
      (alias (tmp 4) (tmp 3))
      (allocate-in (tmp 2) (reg-flag (register-class a40) src))
      (assert (reg-flag s src)))
    (code 
      (= (tmp 3) (satadd ? (constant ? 0) (tmp 2)))
      (set-reg dst (tmp 4)))))

(instruction
  minz2_a40_a16
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp (constant ? 16) ult (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (reg-range (tmp 6) (constant ? 16) (constant ? 39)))
      (= (tmp 8) (zext (constant ? 16) dst (constant ? 24)))
      (set-reg (tmp 7) (tmp 8))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp (constant ? 16) ult (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (set-reg dst (tmp 0))
      (set-reg (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (set-reg dst (tmp 1))
      (set-reg (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1)))))))

(instruction
  xor_a16_a16_high
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a0h_a7h))
    (code 
      (= (tmp 0) (bit_xor (constant ? 16) dst src))
      (set-reg dst (tmp 0)))))

(instruction
  orz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 1) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (bit_or (constant ? 32) src1 src2))
      (set-reg dst (tmp 0))
      (set-reg (tmp 1) (constant ? 0)))))

(instruction
  mac_nimm1_a16_a16_a40
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 342))
      (alias (tmp 341) (tmp 301))
      (alias (tmp 301) (tmp 270))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0)))
      (assert (reg-flag sa (register cuc)))
      (assert (not imm1b))
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 267) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 269) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 270) (mul (constant ? 40) (tmp 267) (tmp 269)))
      (= (tmp 342) (add (constant ? 40) dst (tmp 341)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 342))
      (alias (tmp 341) (tmp 301))
      (alias (tmp 301) (tmp 300))
      (alias (tmp 300) (tmp 279))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (reg-flag sa (register cuc)))
      (assert (not imm1b))
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 275) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 277) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 278) (mul (constant ? 40) (tmp 275) (tmp 277)))
      (= (tmp 279) (shl (constant ? 40) (tmp 278) (constant ? 1)))
      (= (tmp 342) (add (constant ? 40) dst (tmp 341)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 342))
      (alias (tmp 341) (tmp 301))
      (alias (tmp 301) (tmp 300))
      (alias (tmp 300) (tmp 299))
      (alias (tmp 299) (tmp 288))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (reg-flag sa (register cuc)))
      (assert (not imm1b))
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 284) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 286) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 287) (mul (constant ? 40) (tmp 284) (tmp 286)))
      (= (tmp 288) (ashr (constant ? 40) (tmp 287) (constant ? 4)))
      (= (tmp 342) (add (constant ? 40) dst (tmp 341)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 342))
      (alias (tmp 341) (tmp 301))
      (alias (tmp 301) (tmp 300))
      (alias (tmp 300) (tmp 299))
      (alias (tmp 299) (tmp 298))
      (alias (tmp 298) (tmp 297))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 3)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (reg-flag sa (register cuc)))
      (assert (not imm1b))
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 293) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 295) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 296) (mul (constant ? 40) (tmp 293) (tmp 295)))
      (= (tmp 297) (ashr (constant ? 40) (tmp 296) (constant ? 2)))
      (= (tmp 342) (add (constant ? 40) dst (tmp 341)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 342))
      (alias (tmp 341) (tmp 301))
      (alias (tmp 301) (tmp 300))
      (alias (tmp 300) (tmp 299))
      (alias (tmp 299) (tmp 298))
      (alias (tmp 298) no-value)
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 3))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (reg-flag sa (register cuc)))
      (assert (not imm1b))
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 342) (add (constant ? 40) dst (tmp 341)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 342))
      (alias (tmp 341) (tmp 340))
      (alias (tmp 340) (tmp 309))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0)))
      (assert (not (reg-flag sa (register cuc))))
      (assert (not imm1b))
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 306) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 308) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 309) (mul (constant ? 40) (tmp 306) (tmp 308)))
      (= (tmp 342) (add (constant ? 40) dst (tmp 341)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 342))
      (alias (tmp 341) (tmp 340))
      (alias (tmp 340) (tmp 339))
      (alias (tmp 339) (tmp 318))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (not (reg-flag sa (register cuc))))
      (assert (not imm1b))
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 314) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 316) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 317) (mul (constant ? 40) (tmp 314) (tmp 316)))
      (= (tmp 318) (shl (constant ? 40) (tmp 317) (constant ? 1)))
      (= (tmp 342) (add (constant ? 40) dst (tmp 341)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 342))
      (alias (tmp 341) (tmp 340))
      (alias (tmp 340) (tmp 339))
      (alias (tmp 339) (tmp 338))
      (alias (tmp 338) (tmp 327))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (not (reg-flag sa (register cuc))))
      (assert (not imm1b))
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 323) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 325) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 326) (mul (constant ? 40) (tmp 323) (tmp 325)))
      (= (tmp 327) (ashr (constant ? 40) (tmp 326) (constant ? 4)))
      (= (tmp 342) (add (constant ? 40) dst (tmp 341)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 342))
      (alias (tmp 341) (tmp 340))
      (alias (tmp 340) (tmp 339))
      (alias (tmp 339) (tmp 338))
      (alias (tmp 338) (tmp 337))
      (alias (tmp 337) (tmp 336))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 3)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (not (reg-flag sa (register cuc))))
      (assert (not imm1b))
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 332) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 334) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 335) (mul (constant ? 40) (tmp 332) (tmp 334)))
      (= (tmp 336) (ashr (constant ? 40) (tmp 335) (constant ? 2)))
      (= (tmp 342) (add (constant ? 40) dst (tmp 341)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 342))
      (alias (tmp 341) (tmp 340))
      (alias (tmp 340) (tmp 339))
      (alias (tmp 339) (tmp 338))
      (alias (tmp 338) (tmp 337))
      (alias (tmp 337) no-value)
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 3))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (not (reg-flag sa (register cuc))))
      (assert (not imm1b))
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 342) (add (constant ? 40) dst (tmp 341)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 258))
      (alias (tmp 256) (tmp 216))
      (alias (tmp 216) (tmp 185))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0)))
      (assert (reg-flag sa (register cuc)))
      (assert imm1b)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 182) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 184) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 185) (mul (constant ? 40) (tmp 182) (tmp 184)))
      (= (tmp 257) (add (constant ? 40) dst (tmp 256)))
      (= (tmp 258) (add (constant ? 40) (tmp 257) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 258))
      (alias (tmp 256) (tmp 216))
      (alias (tmp 216) (tmp 215))
      (alias (tmp 215) (tmp 194))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (reg-flag sa (register cuc)))
      (assert imm1b)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 190) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 192) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 193) (mul (constant ? 40) (tmp 190) (tmp 192)))
      (= (tmp 194) (shl (constant ? 40) (tmp 193) (constant ? 1)))
      (= (tmp 257) (add (constant ? 40) dst (tmp 256)))
      (= (tmp 258) (add (constant ? 40) (tmp 257) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 258))
      (alias (tmp 256) (tmp 216))
      (alias (tmp 216) (tmp 215))
      (alias (tmp 215) (tmp 214))
      (alias (tmp 214) (tmp 203))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (reg-flag sa (register cuc)))
      (assert imm1b)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 199) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 201) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 202) (mul (constant ? 40) (tmp 199) (tmp 201)))
      (= (tmp 203) (ashr (constant ? 40) (tmp 202) (constant ? 4)))
      (= (tmp 257) (add (constant ? 40) dst (tmp 256)))
      (= (tmp 258) (add (constant ? 40) (tmp 257) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 258))
      (alias (tmp 256) (tmp 216))
      (alias (tmp 216) (tmp 215))
      (alias (tmp 215) (tmp 214))
      (alias (tmp 214) (tmp 213))
      (alias (tmp 213) (tmp 212))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 3)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (reg-flag sa (register cuc)))
      (assert imm1b)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 208) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 210) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 211) (mul (constant ? 40) (tmp 208) (tmp 210)))
      (= (tmp 212) (ashr (constant ? 40) (tmp 211) (constant ? 2)))
      (= (tmp 257) (add (constant ? 40) dst (tmp 256)))
      (= (tmp 258) (add (constant ? 40) (tmp 257) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 258))
      (alias (tmp 256) (tmp 216))
      (alias (tmp 216) (tmp 215))
      (alias (tmp 215) (tmp 214))
      (alias (tmp 214) (tmp 213))
      (alias (tmp 213) no-value)
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 3))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (reg-flag sa (register cuc)))
      (assert imm1b)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 257) (add (constant ? 40) dst (tmp 256)))
      (= (tmp 258) (add (constant ? 40) (tmp 257) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 258))
      (alias (tmp 256) (tmp 255))
      (alias (tmp 255) (tmp 224))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0)))
      (assert (not (reg-flag sa (register cuc))))
      (assert imm1b)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 221) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 223) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 224) (mul (constant ? 40) (tmp 221) (tmp 223)))
      (= (tmp 257) (add (constant ? 40) dst (tmp 256)))
      (= (tmp 258) (add (constant ? 40) (tmp 257) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 258))
      (alias (tmp 256) (tmp 255))
      (alias (tmp 255) (tmp 254))
      (alias (tmp 254) (tmp 233))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (not (reg-flag sa (register cuc))))
      (assert imm1b)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 229) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 231) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 232) (mul (constant ? 40) (tmp 229) (tmp 231)))
      (= (tmp 233) (shl (constant ? 40) (tmp 232) (constant ? 1)))
      (= (tmp 257) (add (constant ? 40) dst (tmp 256)))
      (= (tmp 258) (add (constant ? 40) (tmp 257) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 258))
      (alias (tmp 256) (tmp 255))
      (alias (tmp 255) (tmp 254))
      (alias (tmp 254) (tmp 253))
      (alias (tmp 253) (tmp 242))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (not (reg-flag sa (register cuc))))
      (assert imm1b)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 238) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 240) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 241) (mul (constant ? 40) (tmp 238) (tmp 240)))
      (= (tmp 242) (ashr (constant ? 40) (tmp 241) (constant ? 4)))
      (= (tmp 257) (add (constant ? 40) dst (tmp 256)))
      (= (tmp 258) (add (constant ? 40) (tmp 257) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 258))
      (alias (tmp 256) (tmp 255))
      (alias (tmp 255) (tmp 254))
      (alias (tmp 254) (tmp 253))
      (alias (tmp 253) (tmp 252))
      (alias (tmp 252) (tmp 251))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 3)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (not (reg-flag sa (register cuc))))
      (assert imm1b)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 247) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 249) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 250) (mul (constant ? 40) (tmp 247) (tmp 249)))
      (= (tmp 251) (ashr (constant ? 40) (tmp 250) (constant ? 2)))
      (= (tmp 257) (add (constant ? 40) dst (tmp 256)))
      (= (tmp 258) (add (constant ? 40) (tmp 257) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 343))
      (alias (tmp 343) (tmp 258))
      (alias (tmp 256) (tmp 255))
      (alias (tmp 255) (tmp 254))
      (alias (tmp 254) (tmp 253))
      (alias (tmp 253) (tmp 252))
      (alias (tmp 252) no-value)
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 3))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (not (reg-flag sa (register cuc))))
      (assert imm1b)
      (assert (not (reg-flag sa (register cuc)))))
    (code 
      (= (tmp 257) (add (constant ? 40) dst (tmp 256)))
      (= (tmp 258) (add (constant ? 40) (tmp 257) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 171))
      (alias (tmp 170) (tmp 130))
      (alias (tmp 130) (tmp 99))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0)))
      (assert (reg-flag sa (register cuc)))
      (assert (not imm1b))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 96) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 98) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 99) (mul (constant ? 40) (tmp 96) (tmp 98)))
      (= (tmp 171) (add (constant ? 40) dst (tmp 170)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 171))
      (alias (tmp 170) (tmp 130))
      (alias (tmp 130) (tmp 129))
      (alias (tmp 129) (tmp 108))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (reg-flag sa (register cuc)))
      (assert (not imm1b))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 104) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 106) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 107) (mul (constant ? 40) (tmp 104) (tmp 106)))
      (= (tmp 108) (shl (constant ? 40) (tmp 107) (constant ? 1)))
      (= (tmp 171) (add (constant ? 40) dst (tmp 170)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 171))
      (alias (tmp 170) (tmp 130))
      (alias (tmp 130) (tmp 129))
      (alias (tmp 129) (tmp 128))
      (alias (tmp 128) (tmp 117))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (reg-flag sa (register cuc)))
      (assert (not imm1b))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 113) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 115) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 116) (mul (constant ? 40) (tmp 113) (tmp 115)))
      (= (tmp 117) (ashr (constant ? 40) (tmp 116) (constant ? 4)))
      (= (tmp 171) (add (constant ? 40) dst (tmp 170)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 171))
      (alias (tmp 170) (tmp 130))
      (alias (tmp 130) (tmp 129))
      (alias (tmp 129) (tmp 128))
      (alias (tmp 128) (tmp 127))
      (alias (tmp 127) (tmp 126))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 3)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (reg-flag sa (register cuc)))
      (assert (not imm1b))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 122) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 124) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 125) (mul (constant ? 40) (tmp 122) (tmp 124)))
      (= (tmp 126) (ashr (constant ? 40) (tmp 125) (constant ? 2)))
      (= (tmp 171) (add (constant ? 40) dst (tmp 170)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 171))
      (alias (tmp 170) (tmp 130))
      (alias (tmp 130) (tmp 129))
      (alias (tmp 129) (tmp 128))
      (alias (tmp 128) (tmp 127))
      (alias (tmp 127) no-value)
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 3))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (reg-flag sa (register cuc)))
      (assert (not imm1b))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 171) (add (constant ? 40) dst (tmp 170)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 171))
      (alias (tmp 170) (tmp 169))
      (alias (tmp 169) (tmp 138))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0)))
      (assert (not (reg-flag sa (register cuc))))
      (assert (not imm1b))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 135) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 137) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 138) (mul (constant ? 40) (tmp 135) (tmp 137)))
      (= (tmp 171) (add (constant ? 40) dst (tmp 170)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 171))
      (alias (tmp 170) (tmp 169))
      (alias (tmp 169) (tmp 168))
      (alias (tmp 168) (tmp 147))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (not (reg-flag sa (register cuc))))
      (assert (not imm1b))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 143) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 145) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 146) (mul (constant ? 40) (tmp 143) (tmp 145)))
      (= (tmp 147) (shl (constant ? 40) (tmp 146) (constant ? 1)))
      (= (tmp 171) (add (constant ? 40) dst (tmp 170)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 171))
      (alias (tmp 170) (tmp 169))
      (alias (tmp 169) (tmp 168))
      (alias (tmp 168) (tmp 167))
      (alias (tmp 167) (tmp 156))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (not (reg-flag sa (register cuc))))
      (assert (not imm1b))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 152) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 154) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 155) (mul (constant ? 40) (tmp 152) (tmp 154)))
      (= (tmp 156) (ashr (constant ? 40) (tmp 155) (constant ? 4)))
      (= (tmp 171) (add (constant ? 40) dst (tmp 170)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 171))
      (alias (tmp 170) (tmp 169))
      (alias (tmp 169) (tmp 168))
      (alias (tmp 168) (tmp 167))
      (alias (tmp 167) (tmp 166))
      (alias (tmp 166) (tmp 165))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 3)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (not (reg-flag sa (register cuc))))
      (assert (not imm1b))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 161) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 163) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 164) (mul (constant ? 40) (tmp 161) (tmp 163)))
      (= (tmp 165) (ashr (constant ? 40) (tmp 164) (constant ? 2)))
      (= (tmp 171) (add (constant ? 40) dst (tmp 170)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 171))
      (alias (tmp 170) (tmp 169))
      (alias (tmp 169) (tmp 168))
      (alias (tmp 168) (tmp 167))
      (alias (tmp 167) (tmp 166))
      (alias (tmp 166) no-value)
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 3))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (not (reg-flag sa (register cuc))))
      (assert (not imm1b))
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 171) (add (constant ? 40) dst (tmp 170)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 87))
      (alias (tmp 85) (tmp 45))
      (alias (tmp 45) (tmp 14))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0)))
      (assert (reg-flag sa (register cuc)))
      (assert imm1b)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 11) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 13) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 14) (mul (constant ? 40) (tmp 11) (tmp 13)))
      (= (tmp 86) (add (constant ? 40) dst (tmp 85)))
      (= (tmp 87) (add (constant ? 40) (tmp 86) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 87))
      (alias (tmp 85) (tmp 45))
      (alias (tmp 45) (tmp 44))
      (alias (tmp 44) (tmp 23))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (reg-flag sa (register cuc)))
      (assert imm1b)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 19) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 21) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 22) (mul (constant ? 40) (tmp 19) (tmp 21)))
      (= (tmp 23) (shl (constant ? 40) (tmp 22) (constant ? 1)))
      (= (tmp 86) (add (constant ? 40) dst (tmp 85)))
      (= (tmp 87) (add (constant ? 40) (tmp 86) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 87))
      (alias (tmp 85) (tmp 45))
      (alias (tmp 45) (tmp 44))
      (alias (tmp 44) (tmp 43))
      (alias (tmp 43) (tmp 32))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (reg-flag sa (register cuc)))
      (assert imm1b)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 28) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 30) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 31) (mul (constant ? 40) (tmp 28) (tmp 30)))
      (= (tmp 32) (ashr (constant ? 40) (tmp 31) (constant ? 4)))
      (= (tmp 86) (add (constant ? 40) dst (tmp 85)))
      (= (tmp 87) (add (constant ? 40) (tmp 86) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 87))
      (alias (tmp 85) (tmp 45))
      (alias (tmp 45) (tmp 44))
      (alias (tmp 44) (tmp 43))
      (alias (tmp 43) (tmp 42))
      (alias (tmp 42) (tmp 41))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 3)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (reg-flag sa (register cuc)))
      (assert imm1b)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 37) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 39) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 40) (mul (constant ? 40) (tmp 37) (tmp 39)))
      (= (tmp 41) (ashr (constant ? 40) (tmp 40) (constant ? 2)))
      (= (tmp 86) (add (constant ? 40) dst (tmp 85)))
      (= (tmp 87) (add (constant ? 40) (tmp 86) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 87))
      (alias (tmp 85) (tmp 45))
      (alias (tmp 45) (tmp 44))
      (alias (tmp 44) (tmp 43))
      (alias (tmp 43) (tmp 42))
      (alias (tmp 42) no-value)
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 3))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (reg-flag sa (register cuc)))
      (assert imm1b)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 86) (add (constant ? 40) dst (tmp 85)))
      (= (tmp 87) (add (constant ? 40) (tmp 86) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 87))
      (alias (tmp 85) (tmp 84))
      (alias (tmp 84) (tmp 53))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0)))
      (assert (not (reg-flag sa (register cuc))))
      (assert imm1b)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 50) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 52) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 53) (mul (constant ? 40) (tmp 50) (tmp 52)))
      (= (tmp 86) (add (constant ? 40) dst (tmp 85)))
      (= (tmp 87) (add (constant ? 40) (tmp 86) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 87))
      (alias (tmp 85) (tmp 84))
      (alias (tmp 84) (tmp 83))
      (alias (tmp 83) (tmp 62))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (not (reg-flag sa (register cuc))))
      (assert imm1b)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 58) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 60) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 61) (mul (constant ? 40) (tmp 58) (tmp 60)))
      (= (tmp 62) (shl (constant ? 40) (tmp 61) (constant ? 1)))
      (= (tmp 86) (add (constant ? 40) dst (tmp 85)))
      (= (tmp 87) (add (constant ? 40) (tmp 86) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 87))
      (alias (tmp 85) (tmp 84))
      (alias (tmp 84) (tmp 83))
      (alias (tmp 83) (tmp 82))
      (alias (tmp 82) (tmp 71))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (not (reg-flag sa (register cuc))))
      (assert imm1b)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 67) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 69) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 70) (mul (constant ? 40) (tmp 67) (tmp 69)))
      (= (tmp 71) (ashr (constant ? 40) (tmp 70) (constant ? 4)))
      (= (tmp 86) (add (constant ? 40) dst (tmp 85)))
      (= (tmp 87) (add (constant ? 40) (tmp 86) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 87))
      (alias (tmp 85) (tmp 84))
      (alias (tmp 84) (tmp 83))
      (alias (tmp 83) (tmp 82))
      (alias (tmp 82) (tmp 81))
      (alias (tmp 81) (tmp 80))
      (assert (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 3)))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (not (reg-flag sa (register cuc))))
      (assert imm1b)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 76) (sext (constant ? 16) src1 (constant ? 40)))
      (= (tmp 78) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 79) (mul (constant ? 40) (tmp 76) (tmp 78)))
      (= (tmp 80) (ashr (constant ? 40) (tmp 79) (constant ? 2)))
      (= (tmp 86) (add (constant ? 40) dst (tmp 85)))
      (= (tmp 87) (add (constant ? 40) (tmp 86) (constant ? 32768)))
      (set-reg dst (tmp 344))))
  (pattern 
    (constraints 
      (imm 0 1 imm1b)
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 344) (tmp 172))
      (alias (tmp 172) (tmp 87))
      (alias (tmp 85) (tmp 84))
      (alias (tmp 84) (tmp 83))
      (alias (tmp 83) (tmp 82))
      (alias (tmp 82) (tmp 81))
      (alias (tmp 81) no-value)
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 3))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 2))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 1))))
      (assert (not (icmp eq (constant ? 2) (reg-flag ap (register cuc)) (constant ? 0))))
      (assert (not (reg-flag sa (register cuc))))
      (assert imm1b)
      (assert (reg-flag sa (register cuc))))
    (code 
      (= (tmp 86) (add (constant ? 40) dst (tmp 85)))
      (= (tmp 87) (add (constant ? 40) (tmp 86) (constant ? 32768)))
      (set-reg dst (tmp 344)))))

(instruction
  xorz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (bit_xor (constant ? 16) src1 src2))
      (set-reg dst (tmp 0))
      (set-reg (tmp 1) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (bit_xor (constant ? 16) src1 src2))
      (set-reg dst (tmp 0)))))

(instruction
  subsp_nimm7
  (pattern 
    (constraints 
      (imm 0 127 UImm))
    (code 
      (= (tmp 0) (sub (constant ? 16) (register sp) UImm))
      (set-reg (register sp) (tmp 0)))))

(instruction
  min4_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 20) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 2) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp (constant ? 8) slt (tmp 1) (tmp 2)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (set-reg (tmp 0) (tmp 1))
      (br bb_2)
      (label bb_1)
      (set-reg (tmp 0) (tmp 2))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 6) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 7) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 8) (icmp (constant ? 8) slt (tmp 6) (tmp 7)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (set-reg (tmp 5) (tmp 6))
      (br bb_5)
      (label bb_4)
      (set-reg (tmp 5) (tmp 7))
      (br bb_5)
      (label bb_5)
      (= (tmp 9) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 10) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 11) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 12) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 13) (icmp (constant ? 8) slt (tmp 11) (tmp 12)))
      (br (tmp 13) bb_6 bb_7)
      (label bb_6)
      (set-reg (tmp 10) (tmp 11))
      (br bb_8)
      (label bb_7)
      (set-reg (tmp 10) (tmp 12))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 15) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 16) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 17) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 18) (icmp (constant ? 8) slt (tmp 16) (tmp 17)))
      (br (tmp 18) bb_9 bb_10)
      (label bb_9)
      (set-reg (tmp 15) (tmp 16))
      (br bb_11)
      (label bb_10)
      (set-reg (tmp 15) (tmp 17))
      (br bb_11)
      (label bb_11)
      (= (tmp 19) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 21) (sext (constant ? 32) dst (constant ? 40)))
      (set-reg (tmp 20) (tmp 21)))))
