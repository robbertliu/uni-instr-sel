
(instruction
  tbit_nimm5_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 0 31 UImm)
      (allocate-in (tmp 0) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag a dst)))
    (code 
      (= (tmp 1) (reg-range dst UImm UImm))
      (= (tmp 0) (tmp 1))
      (op-flags! (tmp 2) (ac mi ms ls)))))

(instruction
  tbit_nimm4_a16
  (pattern 
    (constraints 
      (allocate-in dst a16)
      (imm 0 15 UImm)
      (allocate-in (tmp 0) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag a dst)))
    (code 
      (= (tmp 1) (reg-range dst UImm UImm))
      (= (tmp 0) (tmp 1))
      (op-flags! (tmp 2) (ac mi ms ls op)))))

(instruction
  not_a40
  (pattern 
    (constraints 
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (bit_not dst))
      (= dst (tmp 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  not_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (bit_not src))
      (= dst (tmp 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  notz_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 1) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (bit_not src))
      (= dst (tmp 0))
      (= (tmp 1) (constant ? 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  not_a16
  (pattern 
    (constraints 
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag a dst)))
    (code 
      (= (tmp 0) (bit_not dst))
      (= dst (tmp 0))
      (op-flags! (tmp 1) (ac mi ms ls op)))))

(instruction
  not_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16))
    (code 
      (= (tmp 0) (bit_not src))
      (= dst (tmp 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  or_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (bit_or src1 src2))
      (= dst (tmp 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  or_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_or (tmp 0) src))
      (= (tmp 0) (tmp 1))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  orh_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_or (tmp 0) src))
      (= (tmp 0) (tmp 1))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  or_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16))
    (code 
      (= (tmp 0) (bit_or dst src))
      (= dst (tmp 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  orz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (bit_or src1 src2))
      (= dst (tmp 0))
      (op-flags! dst (ac mi ms ls op))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (bit_or src1 src2))
      (= dst (tmp 0))
      (= (tmp 1) (constant ? 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  orz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 1) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (bit_or src1 src2))
      (= dst (tmp 0))
      (= (tmp 1) (constant ? 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  or_nimm16_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 0 65535 UImm))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_or (tmp 0) UImm))
      (= (tmp 0) (tmp 1))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  orh_nimm16_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 0 65535 UImm))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_or (tmp 0) UImm))
      (= (tmp 0) (tmp 1))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  or_nimm16_a16
  (pattern 
    (constraints 
      (allocate-in dst a16)
      (imm 0 65535 UImm))
    (code 
      (= (tmp 0) (bit_or dst UImm))
      (= dst (tmp 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  roli8_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (allocate-in (tmp 4) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 8) (constant ? 31)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 23)))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 3) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 2) (tmp 3))
      (= (tmp 4) (constant ? 0)))))

(instruction
  rori8_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (allocate-in (tmp 4) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 23)))
      (= (tmp 1) (reg-range src1 (constant ? 8) (constant ? 31)))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 2) (tmp 3))
      (= (tmp 4) (constant ? 0)))))

(instruction
  roli16_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (allocate-in (tmp 4) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 2) (tmp 3))
      (= (tmp 4) (constant ? 0)))))

(instruction
  rori16_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (allocate-in (tmp 4) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 2) (tmp 3))
      (= (tmp 4) (constant ? 0)))))

(instruction
  shft_nimm6_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (zimm -16 16 SImm)
      (alias (tmp 3) (tmp 1))
      (assert (< SImm (constant ? 0))))
    (code 
      (= (tmp 0) (- (constant ? 0) SImm))
      (= (tmp 1) (lshr dst (tmp 0)))
      (= dst (tmp 3))
      (op-flags! dst (ac mi ms ls op c))))
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (zimm -16 16 SImm)
      (alias (tmp 3) (tmp 2))
      (assert (>= SImm (constant ? 0))))
    (code 
      (= (tmp 2) (shl dst SImm))
      (= dst (tmp 3))
      (op-flags! dst (ac mi ms ls op c)))))

(instruction
  shft_a40_nimm7_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -32 32 SImm)
      (alias (tmp 3) (tmp 1))
      (assert (< SImm (constant ? 0))))
    (code 
      (= (tmp 0) (- (constant ? 0) SImm))
      (= (tmp 1) (lshr src (tmp 0)))
      (= dst (tmp 3))
      (op-flags! dst (ac mi ms ls op c))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -32 32 SImm)
      (alias (tmp 3) (tmp 2))
      (assert (>= SImm (constant ? 0))))
    (code 
      (= (tmp 2) (shl src SImm))
      (= dst (tmp 3))
      (op-flags! dst (ac mi ms ls op c)))))

(instruction
  shft_a40_a16h_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16h)
      (allocate-in dst a40)
      (allocate-in (tmp 10) (reg-flag c dst)))
    (code 
      (= (tmp 0) (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? -40) . bb_0) (src2 . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? 40) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (icmp eq (constant ? 16) (tmp 3) (constant ? 0)))
      (br (tmp 4) bb_12 bb_13)
      (label bb_12)
      (= dst src1)
      (op-flags! dst (ac mi ms ls op c))
      (br bb_14)
      (label bb_13)
      (= (tmp 6) (icmp sgt (constant ? 16) (tmp 3) (constant ? 0)))
      (br (tmp 6) bb_9 bb_10)
      (label bb_9)
      (= (tmp 7) (shl src1 (tmp 3)))
      (= dst (tmp 7))
      (op-flags! dst (ac mi ms ls op c))
      (= (tmp 9) (icmp sgt (constant ? 16) (tmp 3) (constant ? 40)))
      (br (tmp 9) bb_6 bb_7)
      (label bb_6)
      (= (tmp 10) (constant ? 0))
      (br bb_8)
      (label bb_7)
      (op-flags! dst (c))
      (br bb_8)
      (label bb_8)
      (= (tmp 12) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_10)
      (= (tmp 13) (sub (constant ? 16) (constant ? 0) (tmp 3)))
      (= (tmp 14) (lshr src1 (tmp 13)))
      (= dst (tmp 14))
      (op-flags! dst (ac mi ms ls op c))
      (br bb_11)
      (label bb_11)
      (= (tmp 16) (phi (((tmp 12) . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 17) (phi ((no-value . bb_12) ((tmp 16) . bb_13)))))))

(instruction
  shft_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (allocate-in (tmp 10) (reg-flag c dst)))
    (code 
      (= (tmp 0) (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? -40) . bb_0) (src2 . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? 40) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (icmp eq (constant ? 16) (tmp 3) (constant ? 0)))
      (br (tmp 4) bb_12 bb_13)
      (label bb_12)
      (= dst src1)
      (op-flags! dst (ac mi ms ls op c))
      (br bb_14)
      (label bb_13)
      (= (tmp 6) (icmp sgt (constant ? 16) (tmp 3) (constant ? 0)))
      (br (tmp 6) bb_9 bb_10)
      (label bb_9)
      (= (tmp 7) (shl src1 (tmp 3)))
      (= dst (tmp 7))
      (op-flags! dst (ac mi ms ls op c))
      (= (tmp 9) (icmp sgt (constant ? 16) (tmp 3) (constant ? 40)))
      (br (tmp 9) bb_6 bb_7)
      (label bb_6)
      (= (tmp 10) (constant ? 0))
      (br bb_8)
      (label bb_7)
      (op-flags! dst (c))
      (br bb_8)
      (label bb_8)
      (= (tmp 12) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_10)
      (= (tmp 13) (sub (constant ? 16) (constant ? 0) (tmp 3)))
      (= (tmp 14) (lshr src1 (tmp 13)))
      (= dst (tmp 14))
      (op-flags! dst (ac mi ms ls op c))
      (br bb_11)
      (label bb_11)
      (= (tmp 16) (phi (((tmp 12) . bb_9) (no-value . bb_10))))
      (br bb_14)
      (label bb_14)
      (= (tmp 17) (phi ((no-value . bb_12) ((tmp 16) . bb_13)))))))

(instruction
  shft_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16))
    (code 
      (= (tmp 0) (icmp sgt (constant ? 16) src (constant ? 16)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp slt (constant ? 8) src (constant ? -16)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? -16) . bb_0) (src . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? 16) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (icmp eq (constant ? 16) (tmp 3) (constant ? 0)))
      (br (tmp 4) bb_9 bb_10)
      (label bb_9)
      (= dst src)
      (op-flags! dst (ac mi ms ls op c))
      (br bb_11)
      (label bb_10)
      (= (tmp 6) (icmp sgt (constant ? 16) (tmp 3) (constant ? 0)))
      (br (tmp 6) bb_6 bb_7)
      (label bb_6)
      (= (tmp 7) (shl dst (tmp 3)))
      (= dst (tmp 7))
      (op-flags! dst (ac mi ms ls op c))
      (br bb_8)
      (label bb_7)
      (= (tmp 9) (sub (constant ? 16) (constant ? 0) (tmp 3)))
      (= (tmp 10) (lshr dst (tmp 9)))
      (= dst (tmp 10))
      (op-flags! dst (ac mi ms ls op c))
      (br bb_8)
      (label bb_8)
      (= (tmp 12) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 13) (phi ((no-value . bb_9) ((tmp 12) . bb_10)))))))

(instruction
  shft_a16_nimm6_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (zimm -16 16 SImm)
      (alias (tmp 3) (tmp 2))
      (assert (>= SImm (constant ? 0))))
    (code 
      (= (tmp 2) (shl src SImm))
      (= dst (tmp 3))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (zimm -16 16 SImm)
      (alias (tmp 3) (tmp 1))
      (assert (< SImm (constant ? 0))))
    (code 
      (= (tmp 0) (- (constant ? 0) SImm))
      (= (tmp 1) (lshr src (tmp 0)))
      (= dst (tmp 3)))))

(instruction
  shft2_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (allocate-in (tmp 0) (reg-flag ah dst))
      (allocate-in (tmp 2) (reg-flag ah src1))
      (allocate-in (tmp 5) (reg-flag ah src1))
      (allocate-in (tmp 8) (reg-flag al dst))
      (allocate-in (tmp 10) (reg-flag al src1))
      (allocate-in (tmp 13) (reg-flag al src1))
      (allocate-in (tmp 16) (reg-flag ag dst)))
    (code 
      (= (tmp 1) (icmp slt ? src2 (constant ? 0)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 3) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 4) (lshr (tmp 2) (tmp 3)))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (shl (tmp 5) src2))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi (((tmp 4) . bb_0) ((tmp 6) . bb_1))))
      (= (tmp 0) (tmp 7))
      (= (tmp 9) (icmp slt ? src2 (constant ? 0)))
      (br (tmp 9) bb_3 bb_4)
      (label bb_3)
      (= (tmp 11) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 12) (lshr (tmp 10) (tmp 11)))
      (br bb_5)
      (label bb_4)
      (= (tmp 14) (shl (tmp 13) src2))
      (br bb_5)
      (label bb_5)
      (= (tmp 15) (phi (((tmp 12) . bb_3) ((tmp 14) . bb_4))))
      (= (tmp 8) (tmp 15))
      (= (tmp 16) (constant ? 0)))))

(instruction
  shft2_a40_nimm6_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -16 16 SImm)
      (allocate-in (tmp 0) (reg-flag ah dst))
      (alias (tmp 6) (tmp 5))
      (allocate-in (tmp 4) (reg-flag ah src))
      (assert (>= SImm (constant ? 0)))
      (allocate-in (tmp 7) (reg-flag al dst))
      (alias (tmp 13) (tmp 10))
      (allocate-in (tmp 8) (reg-flag al src))
      (assert (< SImm (constant ? 0)))
      (allocate-in (tmp 14) (reg-flag ag dst)))
    (code 
      (= (tmp 5) (shl (tmp 4) SImm))
      (= (tmp 0) (tmp 6))
      (= (tmp 9) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 10) (lshr (tmp 8) (tmp 9)))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -16 16 SImm)
      (allocate-in (tmp 0) (reg-flag ah dst))
      (alias (tmp 6) (tmp 5))
      (allocate-in (tmp 4) (reg-flag ah src))
      (assert (>= SImm (constant ? 0)))
      (allocate-in (tmp 7) (reg-flag al dst))
      (alias (tmp 13) (tmp 12))
      (allocate-in (tmp 11) (reg-flag al src))
      (assert (>= SImm (constant ? 0)))
      (allocate-in (tmp 14) (reg-flag ag dst)))
    (code 
      (= (tmp 5) (shl (tmp 4) SImm))
      (= (tmp 0) (tmp 6))
      (= (tmp 12) (shl (tmp 11) SImm))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -16 16 SImm)
      (allocate-in (tmp 0) (reg-flag ah dst))
      (alias (tmp 6) (tmp 3))
      (allocate-in (tmp 1) (reg-flag ah src))
      (assert (< SImm (constant ? 0)))
      (allocate-in (tmp 7) (reg-flag al dst))
      (alias (tmp 13) (tmp 10))
      (allocate-in (tmp 8) (reg-flag al src))
      (assert (< SImm (constant ? 0)))
      (allocate-in (tmp 14) (reg-flag ag dst)))
    (code 
      (= (tmp 2) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 3) (lshr (tmp 1) (tmp 2)))
      (= (tmp 0) (tmp 6))
      (= (tmp 9) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 10) (lshr (tmp 8) (tmp 9)))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -16 16 SImm)
      (allocate-in (tmp 0) (reg-flag ah dst))
      (alias (tmp 6) (tmp 3))
      (allocate-in (tmp 1) (reg-flag ah src))
      (assert (< SImm (constant ? 0)))
      (allocate-in (tmp 7) (reg-flag al dst))
      (alias (tmp 13) (tmp 12))
      (allocate-in (tmp 11) (reg-flag al src))
      (assert (>= SImm (constant ? 0)))
      (allocate-in (tmp 14) (reg-flag ag dst)))
    (code 
      (= (tmp 2) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 3) (lshr (tmp 1) (tmp 2)))
      (= (tmp 0) (tmp 6))
      (= (tmp 12) (shl (tmp 11) SImm))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (constant ? 0)))))

(instruction
  shft4_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (allocate-in (tmp 32) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (icmp slt ? src2 (constant ? 0)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 4) (lshr (tmp 2) (tmp 3)))
      (br bb_2)
      (label bb_1)
      (= (tmp 5) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 6) (shl (tmp 5) src2))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi (((tmp 4) . bb_0) ((tmp 6) . bb_1))))
      (= (tmp 0) (tmp 7))
      (= (tmp 8) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 9) (icmp slt ? src2 (constant ? 0)))
      (br (tmp 9) bb_3 bb_4)
      (label bb_3)
      (= (tmp 10) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 11) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 12) (lshr (tmp 10) (tmp 11)))
      (br bb_5)
      (label bb_4)
      (= (tmp 13) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 14) (shl (tmp 13) src2))
      (br bb_5)
      (label bb_5)
      (= (tmp 15) (phi (((tmp 12) . bb_3) ((tmp 14) . bb_4))))
      (= (tmp 8) (tmp 15))
      (= (tmp 16) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 17) (icmp slt ? src2 (constant ? 0)))
      (br (tmp 17) bb_6 bb_7)
      (label bb_6)
      (= (tmp 18) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 19) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 20) (lshr (tmp 18) (tmp 19)))
      (br bb_8)
      (label bb_7)
      (= (tmp 21) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 22) (shl (tmp 21) src2))
      (br bb_8)
      (label bb_8)
      (= (tmp 23) (phi (((tmp 20) . bb_6) ((tmp 22) . bb_7))))
      (= (tmp 16) (tmp 23))
      (= (tmp 24) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 25) (icmp slt ? src2 (constant ? 0)))
      (br (tmp 25) bb_9 bb_10)
      (label bb_9)
      (= (tmp 26) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 27) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 28) (lshr (tmp 26) (tmp 27)))
      (br bb_11)
      (label bb_10)
      (= (tmp 29) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 30) (shl (tmp 29) src2))
      (br bb_11)
      (label bb_11)
      (= (tmp 31) (phi (((tmp 28) . bb_9) ((tmp 30) . bb_10))))
      (= (tmp 24) (tmp 31))
      (= (tmp 32) (constant ? 0)))))

(instruction
  shft4_a40_nimm5_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 6) (tmp 5))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 13) (tmp 10))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 20) (tmp 19))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 27) (tmp 24))
      (assert (< SImm (constant ? 0)))
      (allocate-in (tmp 28) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 4) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 5) (shl (tmp 4) SImm))
      (= (tmp 0) (tmp 6))
      (= (tmp 7) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 8) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 9) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 10) (lshr (tmp 8) (tmp 9)))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 18) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 19) (shl (tmp 18) SImm))
      (= (tmp 14) (tmp 20))
      (= (tmp 21) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 22) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 23) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 24) (lshr (tmp 22) (tmp 23)))
      (= (tmp 21) (tmp 27))
      (= (tmp 28) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 6) (tmp 5))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 13) (tmp 10))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 20) (tmp 19))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 27) (tmp 26))
      (assert (>= SImm (constant ? 0)))
      (allocate-in (tmp 28) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 4) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 5) (shl (tmp 4) SImm))
      (= (tmp 0) (tmp 6))
      (= (tmp 7) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 8) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 9) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 10) (lshr (tmp 8) (tmp 9)))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 18) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 19) (shl (tmp 18) SImm))
      (= (tmp 14) (tmp 20))
      (= (tmp 21) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 25) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 26) (shl (tmp 25) SImm))
      (= (tmp 21) (tmp 27))
      (= (tmp 28) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 6) (tmp 5))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 13) (tmp 10))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 20) (tmp 17))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 27) (tmp 24))
      (assert (< SImm (constant ? 0)))
      (allocate-in (tmp 28) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 4) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 5) (shl (tmp 4) SImm))
      (= (tmp 0) (tmp 6))
      (= (tmp 7) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 8) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 9) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 10) (lshr (tmp 8) (tmp 9)))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 16) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 17) (lshr (tmp 15) (tmp 16)))
      (= (tmp 14) (tmp 20))
      (= (tmp 21) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 22) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 23) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 24) (lshr (tmp 22) (tmp 23)))
      (= (tmp 21) (tmp 27))
      (= (tmp 28) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 6) (tmp 5))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 13) (tmp 10))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 20) (tmp 17))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 27) (tmp 26))
      (assert (>= SImm (constant ? 0)))
      (allocate-in (tmp 28) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 4) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 5) (shl (tmp 4) SImm))
      (= (tmp 0) (tmp 6))
      (= (tmp 7) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 8) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 9) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 10) (lshr (tmp 8) (tmp 9)))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 16) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 17) (lshr (tmp 15) (tmp 16)))
      (= (tmp 14) (tmp 20))
      (= (tmp 21) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 25) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 26) (shl (tmp 25) SImm))
      (= (tmp 21) (tmp 27))
      (= (tmp 28) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 6) (tmp 5))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 13) (tmp 12))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 20) (tmp 19))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 27) (tmp 24))
      (assert (< SImm (constant ? 0)))
      (allocate-in (tmp 28) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 4) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 5) (shl (tmp 4) SImm))
      (= (tmp 0) (tmp 6))
      (= (tmp 7) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 11) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 12) (shl (tmp 11) SImm))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 18) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 19) (shl (tmp 18) SImm))
      (= (tmp 14) (tmp 20))
      (= (tmp 21) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 22) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 23) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 24) (lshr (tmp 22) (tmp 23)))
      (= (tmp 21) (tmp 27))
      (= (tmp 28) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 6) (tmp 5))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 13) (tmp 12))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 20) (tmp 19))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 27) (tmp 26))
      (assert (>= SImm (constant ? 0)))
      (allocate-in (tmp 28) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 4) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 5) (shl (tmp 4) SImm))
      (= (tmp 0) (tmp 6))
      (= (tmp 7) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 11) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 12) (shl (tmp 11) SImm))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 18) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 19) (shl (tmp 18) SImm))
      (= (tmp 14) (tmp 20))
      (= (tmp 21) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 25) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 26) (shl (tmp 25) SImm))
      (= (tmp 21) (tmp 27))
      (= (tmp 28) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 6) (tmp 5))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 13) (tmp 12))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 20) (tmp 17))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 27) (tmp 24))
      (assert (< SImm (constant ? 0)))
      (allocate-in (tmp 28) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 4) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 5) (shl (tmp 4) SImm))
      (= (tmp 0) (tmp 6))
      (= (tmp 7) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 11) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 12) (shl (tmp 11) SImm))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 16) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 17) (lshr (tmp 15) (tmp 16)))
      (= (tmp 14) (tmp 20))
      (= (tmp 21) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 22) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 23) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 24) (lshr (tmp 22) (tmp 23)))
      (= (tmp 21) (tmp 27))
      (= (tmp 28) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 6) (tmp 5))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 13) (tmp 12))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 20) (tmp 17))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 27) (tmp 26))
      (assert (>= SImm (constant ? 0)))
      (allocate-in (tmp 28) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 4) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 5) (shl (tmp 4) SImm))
      (= (tmp 0) (tmp 6))
      (= (tmp 7) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 11) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 12) (shl (tmp 11) SImm))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 16) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 17) (lshr (tmp 15) (tmp 16)))
      (= (tmp 14) (tmp 20))
      (= (tmp 21) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 25) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 26) (shl (tmp 25) SImm))
      (= (tmp 21) (tmp 27))
      (= (tmp 28) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 6) (tmp 3))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 13) (tmp 10))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 20) (tmp 19))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 27) (tmp 24))
      (assert (< SImm (constant ? 0)))
      (allocate-in (tmp 28) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 2) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 3) (lshr (tmp 1) (tmp 2)))
      (= (tmp 0) (tmp 6))
      (= (tmp 7) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 8) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 9) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 10) (lshr (tmp 8) (tmp 9)))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 18) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 19) (shl (tmp 18) SImm))
      (= (tmp 14) (tmp 20))
      (= (tmp 21) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 22) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 23) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 24) (lshr (tmp 22) (tmp 23)))
      (= (tmp 21) (tmp 27))
      (= (tmp 28) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 6) (tmp 3))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 13) (tmp 10))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 20) (tmp 19))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 27) (tmp 26))
      (assert (>= SImm (constant ? 0)))
      (allocate-in (tmp 28) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 2) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 3) (lshr (tmp 1) (tmp 2)))
      (= (tmp 0) (tmp 6))
      (= (tmp 7) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 8) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 9) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 10) (lshr (tmp 8) (tmp 9)))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 18) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 19) (shl (tmp 18) SImm))
      (= (tmp 14) (tmp 20))
      (= (tmp 21) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 25) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 26) (shl (tmp 25) SImm))
      (= (tmp 21) (tmp 27))
      (= (tmp 28) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 6) (tmp 3))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 13) (tmp 10))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 20) (tmp 17))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 27) (tmp 24))
      (assert (< SImm (constant ? 0)))
      (allocate-in (tmp 28) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 2) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 3) (lshr (tmp 1) (tmp 2)))
      (= (tmp 0) (tmp 6))
      (= (tmp 7) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 8) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 9) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 10) (lshr (tmp 8) (tmp 9)))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 16) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 17) (lshr (tmp 15) (tmp 16)))
      (= (tmp 14) (tmp 20))
      (= (tmp 21) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 22) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 23) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 24) (lshr (tmp 22) (tmp 23)))
      (= (tmp 21) (tmp 27))
      (= (tmp 28) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 6) (tmp 3))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 13) (tmp 10))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 20) (tmp 17))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 27) (tmp 26))
      (assert (>= SImm (constant ? 0)))
      (allocate-in (tmp 28) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 2) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 3) (lshr (tmp 1) (tmp 2)))
      (= (tmp 0) (tmp 6))
      (= (tmp 7) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 8) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 9) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 10) (lshr (tmp 8) (tmp 9)))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 16) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 17) (lshr (tmp 15) (tmp 16)))
      (= (tmp 14) (tmp 20))
      (= (tmp 21) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 25) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 26) (shl (tmp 25) SImm))
      (= (tmp 21) (tmp 27))
      (= (tmp 28) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 6) (tmp 3))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 13) (tmp 12))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 20) (tmp 19))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 27) (tmp 24))
      (assert (< SImm (constant ? 0)))
      (allocate-in (tmp 28) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 2) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 3) (lshr (tmp 1) (tmp 2)))
      (= (tmp 0) (tmp 6))
      (= (tmp 7) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 11) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 12) (shl (tmp 11) SImm))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 18) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 19) (shl (tmp 18) SImm))
      (= (tmp 14) (tmp 20))
      (= (tmp 21) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 22) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 23) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 24) (lshr (tmp 22) (tmp 23)))
      (= (tmp 21) (tmp 27))
      (= (tmp 28) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 6) (tmp 3))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 13) (tmp 12))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 20) (tmp 19))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 27) (tmp 26))
      (assert (>= SImm (constant ? 0)))
      (allocate-in (tmp 28) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 2) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 3) (lshr (tmp 1) (tmp 2)))
      (= (tmp 0) (tmp 6))
      (= (tmp 7) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 11) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 12) (shl (tmp 11) SImm))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 18) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 19) (shl (tmp 18) SImm))
      (= (tmp 14) (tmp 20))
      (= (tmp 21) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 25) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 26) (shl (tmp 25) SImm))
      (= (tmp 21) (tmp 27))
      (= (tmp 28) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 6) (tmp 3))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 13) (tmp 12))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 20) (tmp 17))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 27) (tmp 24))
      (assert (< SImm (constant ? 0)))
      (allocate-in (tmp 28) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 2) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 3) (lshr (tmp 1) (tmp 2)))
      (= (tmp 0) (tmp 6))
      (= (tmp 7) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 11) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 12) (shl (tmp 11) SImm))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 16) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 17) (lshr (tmp 15) (tmp 16)))
      (= (tmp 14) (tmp 20))
      (= (tmp 21) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 22) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 23) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 24) (lshr (tmp 22) (tmp 23)))
      (= (tmp 21) (tmp 27))
      (= (tmp 28) (constant ? 0))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 6) (tmp 3))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 13) (tmp 12))
      (assert (>= SImm (constant ? 0)))
      (alias (tmp 20) (tmp 17))
      (assert (< SImm (constant ? 0)))
      (alias (tmp 27) (tmp 26))
      (assert (>= SImm (constant ? 0)))
      (allocate-in (tmp 28) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 2) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 3) (lshr (tmp 1) (tmp 2)))
      (= (tmp 0) (tmp 6))
      (= (tmp 7) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 11) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 12) (shl (tmp 11) SImm))
      (= (tmp 7) (tmp 13))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 16) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 17) (lshr (tmp 15) (tmp 16)))
      (= (tmp 14) (tmp 20))
      (= (tmp 21) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 25) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 26) (shl (tmp 25) SImm))
      (= (tmp 21) (tmp 27))
      (= (tmp 28) (constant ? 0)))))

(instruction
  xor_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (bit_xor src1 src2))
      (= dst (tmp 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  xnor_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (bit_xor src1 src2))
      (= (tmp 1) (bit_not (tmp 0)))
      (= dst (tmp 1))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  xor_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_xor (tmp 0) src))
      (= (tmp 0) (tmp 1))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  xorh_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_xor (tmp 0) src))
      (= (tmp 0) (tmp 1))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  xor_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16))
    (code 
      (= (tmp 0) (bit_xor dst src))
      (= dst (tmp 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  xorz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (bit_xor src1 src2))
      (= dst (tmp 0))
      (op-flags! dst (ac mi ms ls op))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (bit_xor src1 src2))
      (= dst (tmp 0))
      (= (tmp 1) (constant ? 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  xorz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (bit_xor src1 src2))
      (= dst (tmp 0))
      (op-flags! dst (ac mi ms ls op))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 1) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (bit_xor src1 src2))
      (= dst (tmp 0))
      (= (tmp 1) (constant ? 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  xor_nimm16_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 0 65535 UImm))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_xor (tmp 0) UImm))
      (= (tmp 0) (tmp 1))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  xorh_nimm16_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 0 65535 UImm))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_xor (tmp 0) UImm))
      (= (tmp 0) (tmp 1))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  xor_nimm16_a16
  (pattern 
    (constraints 
      (allocate-in dst a16)
      (imm 0 65535 UImm))
    (code 
      (= (tmp 0) (bit_xor dst UImm))
      (= dst (tmp 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  xnorz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (bit_xor src1 src2))
      (= (tmp 1) (bit_not (tmp 0)))
      (= dst (tmp 1))
      (op-flags! dst (ac mi ms ls op))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 2) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (bit_xor src1 src2))
      (= (tmp 1) (bit_not (tmp 0)))
      (= dst (tmp 1))
      (= (tmp 2) (constant ? 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  xnorz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 2) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (bit_xor src1 src2))
      (= (tmp 1) (bit_not (tmp 0)))
      (= dst (tmp 1))
      (= (tmp 2) (constant ? 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  acc_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 3) (add (constant ? 40) src1 src2))
      (= (tmp 4) (add (constant ? 40) dst (tmp 3)))
      (= dst (tmp 4))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (add (constant ? 40) src1 src2))
      (= (tmp 2) (satadd (constant ? 40) dst (tmp 1)))
      (= dst (tmp 2))
      (op-flags! dst (ac ex mi of)))))

(instruction
  ctp16_a40_a16
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16))
    (code )))

(instruction
  sum4_a40_a16
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 2) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 3) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 4) (add (constant ? 16) (tmp 2) (tmp 3)))
      (= (tmp 5) (add (constant ? 16) (tmp 1) (tmp 4)))
      (= (tmp 6) (add (constant ? 16) (tmp 0) (tmp 5)))
      (= dst (tmp 6))
      (op-flags! dst (ac mi))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (allocate-in (tmp 7) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 2) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 3) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 4) (add (constant ? 16) (tmp 2) (tmp 3)))
      (= (tmp 5) (add (constant ? 16) (tmp 1) (tmp 4)))
      (= (tmp 6) (add (constant ? 16) (tmp 0) (tmp 5)))
      (= dst (tmp 6))
      (= (tmp 8) (reg-range (tmp 7) (constant ? 16) (constant ? 39)))
      (= (tmp 9) (sext (constant ? 16) dst (constant ? 24)))
      (= (tmp 8) (tmp 9))
      (op-flags! dst (ac mi)))))

(instruction
  sin_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code )))

(instruction
  cos_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code )))

(instruction
  atan_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code )))

(instruction
  abs_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (alias (tmp 5) (tmp 4))
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 0) (icmp (constant ? 32) slt src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (sub (constant ? 32) (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (= (tmp 4) (satadd (constant ? 32) (tmp 2) (constant ? 0)))
      (= dst (tmp 5))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (alias (tmp 5) (tmp 2))
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 0) (icmp (constant ? 32) slt src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (sub (constant ? 32) (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (= dst (tmp 5))
      (op-flags! dst (ac ex mi of)))))

(instruction
  abss_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (alias (tmp 5) (tmp 4))
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 0) (icmp (constant ? 32) slt src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (sub (constant ? 32) (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (= (tmp 4) (satadd (constant ? 32) (tmp 2) (constant ? 0)))
      (= dst (tmp 5))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (alias (tmp 5) (tmp 2))
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 0) (icmp (constant ? 32) slt src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (sub (constant ? 32) (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (= dst (tmp 5))
      (op-flags! dst (ac ex mi of)))))

(instruction
  abs_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (alias (tmp 5) (tmp 2))
      (assert (not (reg-flag sa cuc)))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (icmp (constant ? 16) slt src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (sub (constant ? 16) (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (= dst (tmp 5))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (alias (tmp 5) (tmp 2))
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 6) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (icmp (constant ? 16) slt src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (sub (constant ? 16) (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (= dst (tmp 5))
      (= (tmp 6) (constant ? 0))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (alias (tmp 5) (tmp 4))
      (assert (reg-flag sa cuc))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (icmp (constant ? 16) slt src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (sub (constant ? 16) (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (= (tmp 4) (satadd (constant ? 16) (tmp 2) (constant ? 0)))
      (= dst (tmp 5))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (alias (tmp 5) (tmp 4))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 6) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (icmp (constant ? 16) slt src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (sub (constant ? 16) (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (= (tmp 4) (satadd (constant ? 16) (tmp 2) (constant ? 0)))
      (= dst (tmp 5))
      (= (tmp 6) (constant ? 0))
      (op-flags! dst (ac ex mi of)))))

(instruction
  abs_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (alias (tmp 6) (tmp 5))
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 1) (icmp (constant ? 16) slt (tmp 0) (constant ? 0)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (sub (constant ? 16) (constant ? 0) (tmp 0)))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi (((tmp 2) . bb_0) ((tmp 0) . bb_1))))
      (= (tmp 5) (satadd (constant ? 16) (tmp 3) (constant ? 0)))
      (= dst (tmp 6))
      (op-flags! dst (ac ex mi))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (alias (tmp 6) (tmp 3))
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 1) (icmp (constant ? 16) slt (tmp 0) (constant ? 0)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (sub (constant ? 16) (constant ? 0) (tmp 0)))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi (((tmp 2) . bb_0) ((tmp 0) . bb_1))))
      (= dst (tmp 6))
      (op-flags! dst (ac ex mi)))))

(instruction
  absh_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (alias (tmp 7) (tmp 6))
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 1) (shl (tmp 0) (constant ? 16)))
      (= (tmp 2) (icmp (constant ? 16) slt (tmp 1) (constant ? 0)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= (tmp 3) (sub (constant ? 16) (constant ? 0) (tmp 1)))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi (((tmp 3) . bb_0) ((tmp 1) . bb_1))))
      (= (tmp 6) (satadd (constant ? 16) (tmp 4) (constant ? 0)))
      (= dst (tmp 7))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (alias (tmp 7) (tmp 4))
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 1) (shl (tmp 0) (constant ? 16)))
      (= (tmp 2) (icmp (constant ? 16) slt (tmp 1) (constant ? 0)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= (tmp 3) (sub (constant ? 16) (constant ? 0) (tmp 1)))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi (((tmp 3) . bb_0) ((tmp 1) . bb_1))))
      (= dst (tmp 7))
      (op-flags! dst (ac ex mi of)))))

(instruction
  add_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 2) (add (constant ? 40) src1 src2))
      (= dst (tmp 2))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (satadd (constant ? 32) src1 src2))
      (= dst (tmp 1))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  adda_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 2) (satadd (constant ? 40) src1 src2))
      (= dst (tmp 2))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (add (constant ? 40) src1 src2))
      (= dst (tmp 1))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  add_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 3) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 4) (add (constant ? 40) (tmp 3) dst))
      (= dst (tmp 4))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (satadd (constant ? 32) (tmp 1) dst))
      (= dst (tmp 2))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  add_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 3) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 4) (add (constant ? 40) (tmp 3) src1))
      (= dst (tmp 4))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (satadd (constant ? 32) (tmp 1) src1))
      (= dst (tmp 2))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  addh_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 4) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 5) (shl (tmp 4) (constant ? 16)))
      (= (tmp 6) (add (constant ? 40) (tmp 5) dst))
      (= dst (tmp 6))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (shl (tmp 1) (constant ? 16)))
      (= (tmp 3) (satadd (constant ? 32) (tmp 2) dst))
      (= dst (tmp 3))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  addh_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 4) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 5) (shl (tmp 4) (constant ? 16)))
      (= (tmp 6) (add (constant ? 40) (tmp 5) src1))
      (= dst (tmp 6))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (shl (tmp 1) (constant ? 16)))
      (= (tmp 3) (satadd (constant ? 32) (tmp 2) src1))
      (= dst (tmp 3))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  add_nimm5_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 1 32 UImm)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 4) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 5) (shl (tmp 4) (constant ? 16)))
      (= (tmp 6) (add (constant ? 40) (tmp 5) dst))
      (= dst (tmp 6))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 1 32 UImm)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 2) (shl (tmp 1) (constant ? 16)))
      (= (tmp 3) (satadd (constant ? 32) (tmp 2) dst))
      (= dst (tmp 3))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  addh_nimm5_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 1 32 UImm)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 4) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 5) (shl (tmp 4) (constant ? 16)))
      (= (tmp 6) (add (constant ? 40) (tmp 5) dst))
      (= dst (tmp 6))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 1 32 UImm)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 2) (shl (tmp 1) (constant ? 16)))
      (= (tmp 3) (satadd (constant ? 32) (tmp 2) dst))
      (= dst (tmp 3))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  add_nimm16_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 0 65535 UImm)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 4) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 5) (shl (tmp 4) (constant ? 16)))
      (= (tmp 6) (add (constant ? 40) (tmp 5) dst))
      (= dst (tmp 6))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 0 65535 UImm)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 2) (shl (tmp 1) (constant ? 16)))
      (= (tmp 3) (satadd (constant ? 32) (tmp 2) dst))
      (= dst (tmp 3))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  addh_nimm16_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 1 65535 UImm)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 4) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 5) (shl (tmp 4) (constant ? 16)))
      (= (tmp 6) (add (constant ? 40) (tmp 5) dst))
      (= dst (tmp 6))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 1 65535 UImm)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 2) (shl (tmp 1) (constant ? 16)))
      (= (tmp 3) (satadd (constant ? 32) (tmp 2) dst))
      (= dst (tmp 3))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  add2_a40_a40_a40h
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40h)
      (allocate-in (tmp 0) (reg-flag ah dst))
      (allocate-in (tmp 1) (reg-flag ah src1))
      (allocate-in (tmp 2) (reg-flag ah src2))
      (allocate-in (tmp 4) (reg-flag al dst))
      (allocate-in (tmp 5) (reg-flag al src1))
      (allocate-in (tmp 6) (reg-flag al src2))
      (allocate-in (tmp 8) (reg-flag a dst)))
    (code 
      (= (tmp 3) (satadd (constant ? 16) (tmp 1) (tmp 2)))
      (= (tmp 0) (tmp 3))
      (= (tmp 7) (satadd (constant ? 16) (tmp 5) (tmp 6)))
      (= (tmp 4) (tmp 7))
      (= (tmp 9) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 8) (tmp 9))
      (op-flags! dst (ac ex mi)))))

(instruction
  add2_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 0) (reg-flag ah dst))
      (allocate-in (tmp 1) (reg-flag ah src1))
      (allocate-in (tmp 2) (reg-flag ah src2))
      (allocate-in (tmp 4) (reg-flag al dst))
      (allocate-in (tmp 5) (reg-flag al src1))
      (allocate-in (tmp 6) (reg-flag al src2))
      (allocate-in (tmp 8) (reg-flag a dst)))
    (code 
      (= (tmp 3) (satadd (constant ? 16) (tmp 1) (tmp 2)))
      (= (tmp 0) (tmp 3))
      (= (tmp 7) (satadd (constant ? 16) (tmp 5) (tmp 6)))
      (= (tmp 4) (tmp 7))
      (= (tmp 9) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 8) (tmp 9))
      (op-flags! dst (ac ex mi)))))

(instruction
  addscale2_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 18) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 31) (constant ? 16)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 31) (constant ? 16)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 5) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 6) (add (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (sdiv (tmp 6) (constant ? 2)))
      (= (tmp 8) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 8) (tmp 7))
      (= (tmp 9) (- (constant ? 31) (constant ? 16)))
      (= (tmp 10) (+ (constant ? 1) (tmp 9)))
      (= (tmp 11) (- (constant ? 31) (constant ? 16)))
      (= (tmp 12) (+ (constant ? 1) (tmp 11)))
      (= (tmp 13) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 14) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 15) (add (tmp 12) (tmp 13) (tmp 14)))
      (= (tmp 16) (sdiv (tmp 15) (constant ? 2)))
      (= (tmp 17) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 17) (tmp 16))
      (= (tmp 19) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 18) (tmp 19))
      (op-flags! dst (ac ex mi)))))

(instruction
  addscale2r_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 20) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 31) (constant ? 16)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 31) (constant ? 16)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 5) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 6) (add (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (add (tmp 1) (tmp 6) (constant ? 1)))
      (= (tmp 8) (sdiv (tmp 7) (constant ? 2)))
      (= (tmp 9) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 9) (tmp 8))
      (= (tmp 10) (- (constant ? 31) (constant ? 16)))
      (= (tmp 11) (+ (constant ? 1) (tmp 10)))
      (= (tmp 12) (- (constant ? 31) (constant ? 16)))
      (= (tmp 13) (+ (constant ? 1) (tmp 12)))
      (= (tmp 14) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 16) (add (tmp 13) (tmp 14) (tmp 15)))
      (= (tmp 17) (add (tmp 11) (tmp 16) (constant ? 1)))
      (= (tmp 18) (sdiv (tmp 17) (constant ? 2)))
      (= (tmp 19) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 19) (tmp 18))
      (= (tmp 21) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 20) (tmp 21))
      (op-flags! dst (ac ex mi)))))

(instruction
  add4_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 32) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 7) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 7) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 6) (satadd (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 7) (tmp 6))
      (= (tmp 8) (- (constant ? 15) (constant ? 8)))
      (= (tmp 9) (+ (constant ? 1) (tmp 8)))
      (= (tmp 10) (- (constant ? 15) (constant ? 8)))
      (= (tmp 11) (+ (constant ? 1) (tmp 10)))
      (= (tmp 12) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 13) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 14) (satadd (tmp 11) (tmp 12) (tmp 13)))
      (= (tmp 15) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (tmp 14))
      (= (tmp 16) (- (constant ? 23) (constant ? 16)))
      (= (tmp 17) (+ (constant ? 1) (tmp 16)))
      (= (tmp 18) (- (constant ? 23) (constant ? 16)))
      (= (tmp 19) (+ (constant ? 1) (tmp 18)))
      (= (tmp 20) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 21) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 22) (satadd (tmp 19) (tmp 20) (tmp 21)))
      (= (tmp 23) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 23) (tmp 22))
      (= (tmp 24) (- (constant ? 31) (constant ? 24)))
      (= (tmp 25) (+ (constant ? 1) (tmp 24)))
      (= (tmp 26) (- (constant ? 31) (constant ? 24)))
      (= (tmp 27) (+ (constant ? 1) (tmp 26)))
      (= (tmp 28) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 29) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 30) (satadd (tmp 27) (tmp 28) (tmp 29)))
      (= (tmp 31) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 31) (tmp 30))
      (= (tmp 33) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 32) (tmp 33))
      (op-flags! dst (ac ex mi)))))

(instruction
  addscale4_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 36) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 7) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 7) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 6) (add (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (sdiv (tmp 6) (constant ? 2)))
      (= (tmp 8) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 8) (tmp 7))
      (= (tmp 9) (- (constant ? 15) (constant ? 8)))
      (= (tmp 10) (+ (constant ? 1) (tmp 9)))
      (= (tmp 11) (- (constant ? 15) (constant ? 8)))
      (= (tmp 12) (+ (constant ? 1) (tmp 11)))
      (= (tmp 13) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 14) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 15) (add (tmp 12) (tmp 13) (tmp 14)))
      (= (tmp 16) (sdiv (tmp 15) (constant ? 2)))
      (= (tmp 17) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 17) (tmp 16))
      (= (tmp 18) (- (constant ? 23) (constant ? 16)))
      (= (tmp 19) (+ (constant ? 1) (tmp 18)))
      (= (tmp 20) (- (constant ? 23) (constant ? 16)))
      (= (tmp 21) (+ (constant ? 1) (tmp 20)))
      (= (tmp 22) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 23) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 24) (add (tmp 21) (tmp 22) (tmp 23)))
      (= (tmp 25) (sdiv (tmp 24) (constant ? 2)))
      (= (tmp 26) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 26) (tmp 25))
      (= (tmp 27) (- (constant ? 31) (constant ? 24)))
      (= (tmp 28) (+ (constant ? 1) (tmp 27)))
      (= (tmp 29) (- (constant ? 31) (constant ? 24)))
      (= (tmp 30) (+ (constant ? 1) (tmp 29)))
      (= (tmp 31) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 32) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 33) (add (tmp 30) (tmp 31) (tmp 32)))
      (= (tmp 34) (sdiv (tmp 33) (constant ? 2)))
      (= (tmp 35) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 35) (tmp 34))
      (= (tmp 37) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 36) (tmp 37))
      (op-flags! dst (ac ex mi)))))

(instruction
  addscale4r_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 40) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 7) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 7) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 6) (add (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (add (tmp 1) (tmp 6) (constant ? 1)))
      (= (tmp 8) (sdiv (tmp 7) (constant ? 2)))
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 9) (tmp 8))
      (= (tmp 10) (- (constant ? 15) (constant ? 8)))
      (= (tmp 11) (+ (constant ? 1) (tmp 10)))
      (= (tmp 12) (- (constant ? 15) (constant ? 8)))
      (= (tmp 13) (+ (constant ? 1) (tmp 12)))
      (= (tmp 14) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 16) (add (tmp 13) (tmp 14) (tmp 15)))
      (= (tmp 17) (add (tmp 11) (tmp 16) (constant ? 1)))
      (= (tmp 18) (sdiv (tmp 17) (constant ? 2)))
      (= (tmp 19) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 19) (tmp 18))
      (= (tmp 20) (- (constant ? 23) (constant ? 16)))
      (= (tmp 21) (+ (constant ? 1) (tmp 20)))
      (= (tmp 22) (- (constant ? 23) (constant ? 16)))
      (= (tmp 23) (+ (constant ? 1) (tmp 22)))
      (= (tmp 24) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 25) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 26) (add (tmp 23) (tmp 24) (tmp 25)))
      (= (tmp 27) (add (tmp 21) (tmp 26) (constant ? 1)))
      (= (tmp 28) (sdiv (tmp 27) (constant ? 2)))
      (= (tmp 29) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (tmp 28))
      (= (tmp 30) (- (constant ? 31) (constant ? 24)))
      (= (tmp 31) (+ (constant ? 1) (tmp 30)))
      (= (tmp 32) (- (constant ? 31) (constant ? 24)))
      (= (tmp 33) (+ (constant ? 1) (tmp 32)))
      (= (tmp 34) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 35) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 36) (add (tmp 33) (tmp 34) (tmp 35)))
      (= (tmp 37) (add (tmp 31) (tmp 36) (constant ? 1)))
      (= (tmp 38) (sdiv (tmp 37) (constant ? 2)))
      (= (tmp 39) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 39) (tmp 38))
      (= (tmp 41) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 40) (tmp 41))
      (op-flags! dst (ac ex mi)))))

(instruction
  addsh_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 3) (ashr src (constant ? 16)))
      (= (tmp 4) (add (constant ? 40) (tmp 3) dst))
      (= dst (tmp 4))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (ashr src (constant ? 16)))
      (= (tmp 2) (satadd (constant ? 32) (tmp 1) dst))
      (= dst (tmp 2))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  addz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (reg-flag sa cuc))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 1) (satadd (constant ? 16) src1 src2))
      (= dst (tmp 1))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 3) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 1) (satadd (constant ? 16) src1 src2))
      (= dst (tmp 1))
      (= (tmp 3) (constant ? 0))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (reg-flag sa cuc)))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 2) (add (constant ? 16) src1 src2))
      (= dst (tmp 2))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 3) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 2) (add (constant ? 16) src1 src2))
      (= dst (tmp 2))
      (= (tmp 3) (constant ? 0))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  adds_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 5) (reg-flag a dst)))
    (code 
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 2) (satadd (constant ? 32) src1 (tmp 1)))
      (= dst (tmp 2))
      (= (tmp 6) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 5) (tmp 6))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 5) (reg-flag a dst)))
    (code 
      (= (tmp 3) (sext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 4) (add (constant ? 32) src1 (tmp 3)))
      (= dst (tmp 4))
      (= (tmp 6) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 5) (tmp 6))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  addz_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 5) (reg-flag ag dst)))
    (code 
      (= (tmp 1) (zext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 2) (satadd (constant ? 32) src1 (tmp 1)))
      (= dst (tmp 2))
      (= (tmp 5) (constant ? 0))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 5) (reg-flag ag dst)))
    (code 
      (= (tmp 3) (zext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 4) (add (constant ? 32) src1 (tmp 3)))
      (= dst (tmp 4))
      (= (tmp 5) (constant ? 0))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  addhs_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 7) (reg-flag a dst)))
    (code 
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 2) (shl (tmp 1) (constant ? 16)))
      (= (tmp 3) (satadd (constant ? 32) src1 (tmp 2)))
      (= dst (tmp 3))
      (= (tmp 8) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 7) (tmp 8))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 7) (reg-flag a dst)))
    (code 
      (= (tmp 4) (sext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 5) (shl (tmp 4) (constant ? 16)))
      (= (tmp 6) (add (constant ? 32) src1 (tmp 5)))
      (= dst (tmp 6))
      (= (tmp 8) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 7) (tmp 8))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  addhz_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 7) (reg-flag ag dst)))
    (code 
      (= (tmp 1) (zext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 2) (shl (tmp 1) (constant ? 16)))
      (= (tmp 3) (satadd (constant ? 32) src1 (tmp 2)))
      (= dst (tmp 3))
      (= (tmp 7) (constant ? 0))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 7) (reg-flag ag dst)))
    (code 
      (= (tmp 4) (zext (constant ? 16) src2 (constant ? 32)))
      (= (tmp 5) (shl (tmp 4) (constant ? 16)))
      (= (tmp 6) (add (constant ? 32) src1 (tmp 5)))
      (= dst (tmp 6))
      (= (tmp 7) (constant ? 0))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  adds_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 3) (reg-flag a dst)))
    (code 
      (= (tmp 1) (satadd (constant ? 32) src1 src2))
      (= dst (tmp 1))
      (= (tmp 4) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 3) (tmp 4))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 3) (reg-flag a dst)))
    (code 
      (= (tmp 2) (add (constant ? 32) src1 src2))
      (= dst (tmp 2))
      (= (tmp 4) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 3) (tmp 4))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  addz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 3) (reg-flag ag dst)))
    (code 
      (= (tmp 1) (satadd (constant ? 32) src1 src2))
      (= dst (tmp 1))
      (= (tmp 3) (constant ? 0))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 3) (reg-flag ag dst)))
    (code 
      (= (tmp 2) (add (constant ? 32) src1 src2))
      (= dst (tmp 2))
      (= (tmp 3) (constant ? 0))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  bpackh_a40_a16h
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16h))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 2) (tmp 3)))))

(instruction
  bpackh_a40_a16l
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16l))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 2) (tmp 3)))))

(instruction
  bpackl_a40_a16h
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16h))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 2) (tmp 3)))))

(instruction
  bpackl_a40_a16l
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16l))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 2) (tmp 3)))))

(instruction
  bpackls_a40_a16
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 2) (tmp 3)))))

(instruction
  bswap_a16h_a16h
  (pattern 
    (constraints 
      (allocate-in src a16h)
      (allocate-in dst a16h))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 2) (tmp 3)))))

(instruction
  bupackh_a16h_a40
  (pattern 
    (constraints 
      (allocate-in src a16h)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 0) (constant ? 0))
      (= (tmp 1) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 2) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 3) (constant ? 0))
      (= (tmp 4) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 5) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 4) (tmp 5))
      (= (tmp 6) (sext (constant ? 32) dst (constant ? 40)))
      (= dst (tmp 6))
      (op-flags! dst (ac ex mi)))))

(instruction
  bupackh_a16l_a40
  (pattern 
    (constraints 
      (allocate-in src a16l)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 0) (constant ? 0))
      (= (tmp 1) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 2) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 1) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 3) (constant ? 0))
      (= (tmp 4) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 5) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 4) (tmp 5))
      (= (tmp 6) (sext (constant ? 32) dst (constant ? 40)))
      (= dst (tmp 6))
      (op-flags! dst (ac ex mi)))))

(instruction
  bupackl_a16h_a40
  (pattern 
    (constraints 
      (allocate-in src a16h)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (sext (constant ? 8) dst (constant ? 16)))
      (= dst (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 4) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 3) (tmp 4))
      (= (tmp 5) (sext (constant ? 24) dst (constant ? 40)))
      (= dst (tmp 5))
      (op-flags! dst (ac ex mi)))))

(instruction
  bupackl_a16l_a40
  (pattern 
    (constraints 
      (allocate-in src a16l)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (sext (constant ? 8) dst (constant ? 16)))
      (= dst (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 4) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 3) (tmp 4))
      (= (tmp 5) (sext (constant ? 24) dst (constant ? 40)))
      (= dst (tmp 5))
      (op-flags! dst (ac ex mi)))))

(instruction
  bupacklz_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (allocate-in (tmp 6) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 2) (constant ? 0))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 4) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 3) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 5) (constant ? 0))
      (= (tmp 6) (constant ? 0))
      (op-flags! dst (ac ex mi)))))

(instruction
  cmp_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (allocate-in (tmp 1) (reg-flag ac dst))
      (allocate-in (tmp 3) (reg-flag mi dst)))
    (code 
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (icmp eq (constant ? 40) dst (tmp 0)))
      (= (tmp 1) (tmp 2))
      (= (tmp 4) (icmp slt (constant ? 40) dst (tmp 0)))
      (= (tmp 3) (tmp 4)))))

(instruction
  cmph_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst)))
    (code 
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 1) (shl (tmp 0) (constant ? 16)))
      (= (tmp 3) (icmp eq (constant ? 16) dst (tmp 1)))
      (= (tmp 2) (tmp 3))
      (= (tmp 5) (icmp slt (constant ? 16) dst (tmp 1)))
      (= (tmp 4) (tmp 5)))))

(instruction
  cmp_nimm16_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm -32768 32767 SImm)
      (allocate-in (tmp 1) (reg-flag ac dst))
      (allocate-in (tmp 3) (reg-flag mi dst)))
    (code 
      (= (tmp 0) (sext (constant ? 16) SImm (constant ? 40)))
      (= (tmp 2) (icmp eq (constant ? 40) dst (tmp 0)))
      (= (tmp 1) (tmp 2))
      (= (tmp 4) (icmp slt (constant ? 40) dst (tmp 0)))
      (= (tmp 3) (tmp 4)))))

(instruction
  cmph_nimm16_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm -32768 32767 SImm)
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst)))
    (code 
      (= (tmp 0) (sext (constant ? 16) SImm (constant ? 40)))
      (= (tmp 1) (shl (tmp 0) (constant ? 16)))
      (= (tmp 3) (icmp eq (constant ? 40) dst (tmp 1)))
      (= (tmp 2) (tmp 3))
      (= (tmp 5) (icmp slt (constant ? 40) dst (tmp 1)))
      (= (tmp 4) (tmp 5)))))

(instruction
  cmp_nimm16_a16
  (pattern 
    (constraints 
      (allocate-in dst a16)
      (imm -32768 32767 SImm)
      (allocate-in (tmp 0) (reg-flag ac dst))
      (allocate-in (tmp 2) (reg-flag mi dst)))
    (code 
      (= (tmp 1) (icmp eq (constant ? 16) dst SImm))
      (= (tmp 0) (tmp 1))
      (= (tmp 3) (icmp slt (constant ? 16) dst SImm))
      (= (tmp 2) (tmp 3)))))

(instruction
  cmp_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (allocate-in (tmp 0) (reg-flag ac dst))
      (allocate-in (tmp 2) (reg-flag mi dst)))
    (code 
      (= (tmp 1) (icmp eq (constant ? 16) dst src))
      (= (tmp 0) (tmp 1))
      (= (tmp 3) (icmp slt (constant ? 16) dst src))
      (= (tmp 2) (tmp 3)))))

(instruction
  cmpz_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (allocate-in (tmp 0) (reg-flag ac dst))
      (allocate-in (tmp 2) (reg-flag mi dst)))
    (code 
      (= (tmp 1) (icmp eq (constant ? 16) dst src))
      (= (tmp 0) (tmp 1))
      (= (tmp 3) (icmp ult (constant ? 16) dst src))
      (= (tmp 2) (tmp 3)))))

(instruction
  copy_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40))
    (code 
      (= dst src)
      (op-flags! dst (ac ex mi c)))))

(instruction
  copys_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 0) (reg-flag a dst)))
    (code 
      (= dst src)
      (= (tmp 1) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 0) (tmp 1))
      (op-flags! dst (ac ex mi)))))

(instruction
  copyz_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 0) (reg-flag a dst)))
    (code 
      (= dst src)
      (= (tmp 1) (zext (constant ? 32) dst (constant ? 40)))
      (= (tmp 0) (tmp 1))
      (op-flags! dst (ac ex mi)))))

(instruction
  ldc_nimm9_a16
  (pattern 
    (constraints 
      (allocate-in dst a16)
      (zimm -128 128 simm8b)
      (allocate-in (tmp 0) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= dst simm8b)
      (= (tmp 1) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 0) (tmp 1))))
  (pattern 
    (constraints 
      (allocate-in dst a16)
      (zimm -128 128 simm8b)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= dst simm8b))))

(instruction
  max_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst)))
    (code 
      (= (tmp 0) (icmp (constant ? 40) sgt src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= dst src1)
      (= (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst src2)
      (= (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi)))))

(instruction
  maxs_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst)))
    (code 
      (= (tmp 0) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (icmp (constant ? 32) sgt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= dst (tmp 0))
      (= (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst (tmp 1))
      (= (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi)))))

(instruction
  maxz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (icmp (constant ? 32) ugt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= dst (tmp 0))
      (= (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst (tmp 1))
      (= (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 6) (constant ? 0))
      (op-flags! dst (ac ex mi)))))

(instruction
  max2_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 10) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 2) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (icmp (constant ? 16) sgt (tmp 1) (tmp 2)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (= (tmp 0) (tmp 1))
      (br bb_2)
      (label bb_1)
      (= (tmp 0) (tmp 2))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 6) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 7) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 8) (icmp (constant ? 16) sgt (tmp 6) (tmp 7)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (= (tmp 5) (tmp 6))
      (br bb_5)
      (label bb_4)
      (= (tmp 5) (tmp 7))
      (br bb_5)
      (label bb_5)
      (= (tmp 9) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 11) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 10) (tmp 11))
      (op-flags! dst (ac ex mi)))))

(instruction
  max2_a40_a16
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp (constant ? 16) sgt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= dst (tmp 0))
      (= (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst (tmp 1))
      (= (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp (constant ? 16) sgt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= dst (tmp 0))
      (= (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst (tmp 1))
      (= (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (reg-range (tmp 6) (constant ? 16) (constant ? 39)))
      (= (tmp 8) (sext (constant ? 16) dst (constant ? 24)))
      (= (tmp 7) (tmp 8))
      (op-flags! dst (ac ex mi)))))

(instruction
  maxz2_a40_a16
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp (constant ? 16) ugt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= dst (tmp 0))
      (= (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst (tmp 1))
      (= (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp (constant ? 16) ugt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= dst (tmp 0))
      (= (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst (tmp 1))
      (= (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (reg-range (tmp 6) (constant ? 16) (constant ? 39)))
      (= (tmp 8) (zext (constant ? 16) dst (constant ? 24)))
      (= (tmp 7) (tmp 8))
      (op-flags! dst (ac ex mi)))))

(instruction
  max4_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 20) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 2) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp (constant ? 8) sgt (tmp 1) (tmp 2)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (= (tmp 0) (tmp 1))
      (br bb_2)
      (label bb_1)
      (= (tmp 0) (tmp 2))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 6) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 7) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 8) (icmp (constant ? 8) sgt (tmp 6) (tmp 7)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (= (tmp 5) (tmp 6))
      (br bb_5)
      (label bb_4)
      (= (tmp 5) (tmp 7))
      (br bb_5)
      (label bb_5)
      (= (tmp 9) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 10) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 11) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 12) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 13) (icmp (constant ? 8) sgt (tmp 11) (tmp 12)))
      (br (tmp 13) bb_6 bb_7)
      (label bb_6)
      (= (tmp 10) (tmp 11))
      (br bb_8)
      (label bb_7)
      (= (tmp 10) (tmp 12))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 15) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 16) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 17) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 18) (icmp (constant ? 8) sgt (tmp 16) (tmp 17)))
      (br (tmp 18) bb_9 bb_10)
      (label bb_9)
      (= (tmp 15) (tmp 16))
      (br bb_11)
      (label bb_10)
      (= (tmp 15) (tmp 17))
      (br bb_11)
      (label bb_11)
      (= (tmp 19) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 21) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 20) (tmp 21))
      (op-flags! dst (ac ex mi)))))

(instruction
  maxs_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (icmp (constant ? 16) sgt src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= dst src1)
      (= (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst src2)
      (= (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (icmp (constant ? 16) sgt src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= dst src1)
      (= (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst src2)
      (= (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 39)))
      (= (tmp 6) (sext (constant ? 16) dst (constant ? 24)))
      (= (tmp 5) (tmp 6))
      (op-flags! dst (ac ex mi)))))

(instruction
  maxz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (icmp (constant ? 16) ugt src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= dst src1)
      (= (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst src2)
      (= (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (icmp (constant ? 16) ugt src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= dst src1)
      (= (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst src2)
      (= (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 39)))
      (= (tmp 6) (zext (constant ? 16) dst (constant ? 24)))
      (= (tmp 5) (tmp 6))
      (op-flags! dst (ac ex mi)))))

(instruction
  min_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst)))
    (code 
      (= (tmp 0) (icmp (constant ? 40) slt src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= dst src1)
      (= (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst src2)
      (= (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi)))))

(instruction
  mins_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (icmp (constant ? 32) slt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= dst (tmp 0))
      (= (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst (tmp 1))
      (= (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 6) (tmp 7))
      (op-flags! dst (ac ex mi)))))

(instruction
  minz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 2) (icmp (constant ? 32) ult (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= dst (tmp 0))
      (= (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst (tmp 1))
      (= (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 6) (constant ? 0))
      (op-flags! dst (ac ex mi)))))

(instruction
  min2_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 10) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 2) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (icmp (constant ? 16) slt (tmp 1) (tmp 2)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (= (tmp 0) (tmp 1))
      (br bb_2)
      (label bb_1)
      (= (tmp 0) (tmp 2))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 6) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 7) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 8) (icmp (constant ? 16) slt (tmp 6) (tmp 7)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (= (tmp 5) (tmp 6))
      (br bb_5)
      (label bb_4)
      (= (tmp 5) (tmp 7))
      (br bb_5)
      (label bb_5)
      (= (tmp 9) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 11) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 10) (tmp 11))
      (op-flags! dst (ac ex mi)))))

(instruction
  min2_a40_a16
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp (constant ? 16) slt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= dst (tmp 0))
      (= (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst (tmp 1))
      (= (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp (constant ? 16) slt (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= dst (tmp 0))
      (= (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst (tmp 1))
      (= (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (reg-range (tmp 6) (constant ? 16) (constant ? 39)))
      (= (tmp 8) (sext (constant ? 16) dst (constant ? 24)))
      (= (tmp 7) (tmp 8))
      (op-flags! dst (ac ex mi)))))

(instruction
  minz2_a40_a16
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp (constant ? 16) ult (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= dst (tmp 0))
      (= (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst (tmp 1))
      (= (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16)
      (allocate-in (tmp 3) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag c dst))
      (allocate-in (tmp 6) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (icmp (constant ? 16) ult (tmp 0) (tmp 1)))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= dst (tmp 0))
      (= (tmp 3) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst (tmp 1))
      (= (tmp 4) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (reg-range (tmp 6) (constant ? 16) (constant ? 39)))
      (= (tmp 8) (zext (constant ? 16) dst (constant ? 24)))
      (= (tmp 7) (tmp 8))
      (op-flags! dst (ac ex mi)))))

(instruction
  min4_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 20) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 2) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp (constant ? 8) slt (tmp 1) (tmp 2)))
      (br (tmp 3) bb_0 bb_1)
      (label bb_0)
      (= (tmp 0) (tmp 1))
      (br bb_2)
      (label bb_1)
      (= (tmp 0) (tmp 2))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 6) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 7) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 8) (icmp (constant ? 8) slt (tmp 6) (tmp 7)))
      (br (tmp 8) bb_3 bb_4)
      (label bb_3)
      (= (tmp 5) (tmp 6))
      (br bb_5)
      (label bb_4)
      (= (tmp 5) (tmp 7))
      (br bb_5)
      (label bb_5)
      (= (tmp 9) (phi ((no-value . bb_3) (no-value . bb_4))))
      (= (tmp 10) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 11) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 12) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 13) (icmp (constant ? 8) slt (tmp 11) (tmp 12)))
      (br (tmp 13) bb_6 bb_7)
      (label bb_6)
      (= (tmp 10) (tmp 11))
      (br bb_8)
      (label bb_7)
      (= (tmp 10) (tmp 12))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (= (tmp 15) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 16) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 17) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 18) (icmp (constant ? 8) slt (tmp 16) (tmp 17)))
      (br (tmp 18) bb_9 bb_10)
      (label bb_9)
      (= (tmp 15) (tmp 16))
      (br bb_11)
      (label bb_10)
      (= (tmp 15) (tmp 17))
      (br bb_11)
      (label bb_11)
      (= (tmp 19) (phi ((no-value . bb_9) (no-value . bb_10))))
      (= (tmp 21) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 20) (tmp 21))
      (op-flags! dst (ac ex mi)))))

(instruction
  mins_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (icmp (constant ? 16) slt src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= dst src1)
      (= (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst src2)
      (= (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (icmp (constant ? 16) slt src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= dst src1)
      (= (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst src2)
      (= (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 39)))
      (= (tmp 6) (sext (constant ? 16) dst (constant ? 24)))
      (= (tmp 5) (tmp 6))
      (op-flags! dst (ac ex mi)))))

(instruction
  minz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (icmp (constant ? 16) ult src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= dst src1)
      (= (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst src2)
      (= (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag c dst))
      (allocate-in (tmp 2) (reg-flag c dst))
      (allocate-in (tmp 4) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (icmp (constant ? 16) ult src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= dst src1)
      (= (tmp 1) (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= dst src2)
      (= (tmp 2) (constant ? 1))
      (br bb_2)
      (label bb_2)
      (= (tmp 3) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 5) (reg-range (tmp 4) (constant ? 16) (constant ? 39)))
      (= (tmp 6) (sext (constant ? 16) dst (constant ? 24)))
      (= (tmp 5) (tmp 6))
      (op-flags! dst (ac ex mi)))))

(instruction
  neg_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 2) (sub (constant ? 40) (constant ? 0) src))
      (= dst (tmp 2))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (satsub (constant ? 32) (constant ? 0) src))
      (= dst (tmp 1))
      (op-flags! dst (ac ex mi of)))))

(instruction
  negs_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 2) (sub (constant ? 32) (constant ? 0) src))
      (= dst (tmp 2))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (satsub (constant ? 32) (constant ? 0) src))
      (= dst (tmp 1))
      (op-flags! dst (ac ex mi of)))))

(instruction
  neg_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (satsub (constant ? 16) (constant ? 0) src))
      (= dst (tmp 0))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (satsub (constant ? 16) (constant ? 0) src))
      (= dst (tmp 0))
      (= (tmp 2) (reg-range (tmp 1) (constant ? 16) (constant ? 39)))
      (= (tmp 3) (sext (constant ? 16) dst (constant ? 24)))
      (= (tmp 2) (tmp 3))
      (op-flags! dst (ac ex mi of)))))

(instruction
  neg_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 1) (sub (constant ? 40) (constant ? 0) (tmp 0)))
      (= dst (tmp 1))
      (op-flags! dst (ac ex mi)))))

(instruction
  negh_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 4) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 5) (shl (tmp 4) (constant ? 16)))
      (= (tmp 6) (sub (constant ? 32) (constant ? 0) (tmp 5)))
      (= dst (tmp 6))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (shl (tmp 1) (constant ? 16)))
      (= (tmp 3) (satsub (constant ? 32) (constant ? 0) (tmp 2)))
      (= dst (tmp 3))
      (op-flags! dst (ac ex mi of)))))

(instruction
  neg2_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 10) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (- (constant ? 0) (constant ? 15)))
      (= (tmp 2) (+ (constant ? 1) (tmp 1)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 4) (satsub (tmp 2) (constant ? 0) (tmp 3)))
      (= (tmp 0) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 6) (- (constant ? 16) (constant ? 31)))
      (= (tmp 7) (+ (constant ? 1) (tmp 6)))
      (= (tmp 8) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 9) (satsub (tmp 7) (constant ? 0) (tmp 8)))
      (= (tmp 5) (tmp 9))
      (= (tmp 11) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 10) (tmp 11))
      (op-flags! dst (ac ex mi)))))

(instruction
  neg4_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 20) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (- (constant ? 0) (constant ? 7)))
      (= (tmp 2) (+ (constant ? 1) (tmp 1)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 4) (satsub (tmp 2) (constant ? 0) (tmp 3)))
      (= (tmp 0) (tmp 4))
      (= (tmp 5) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 6) (- (constant ? 8) (constant ? 15)))
      (= (tmp 7) (+ (constant ? 1) (tmp 6)))
      (= (tmp 8) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 9) (satsub (tmp 7) (constant ? 0) (tmp 8)))
      (= (tmp 5) (tmp 9))
      (= (tmp 10) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 11) (- (constant ? 16) (constant ? 23)))
      (= (tmp 12) (+ (constant ? 1) (tmp 11)))
      (= (tmp 13) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 14) (satsub (tmp 12) (constant ? 0) (tmp 13)))
      (= (tmp 10) (tmp 14))
      (= (tmp 15) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 16) (- (constant ? 24) (constant ? 31)))
      (= (tmp 17) (+ (constant ? 1) (tmp 16)))
      (= (tmp 18) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 19) (satsub (tmp 17) (constant ? 0) (tmp 18)))
      (= (tmp 15) (tmp 19))
      (= (tmp 21) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 20) (tmp 21))
      (op-flags! dst (ac ex mi)))))

(instruction
  nop_instr
  (pattern 
    (constraints )
    (code )))

(instruction
  sat_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (satadd (constant ? 32) (constant ? 0) src))
      (= dst (tmp 0)))))

(instruction
  scale2_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 6) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (ashr (tmp 1) (constant ? 1)))
      (= (tmp 0) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 4) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 5) (ashr (tmp 4) (constant ? 1)))
      (= (tmp 3) (tmp 5))
      (= (tmp 7) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 6) (tmp 7))
      (op-flags! dst (ac ex mi)))))

(instruction
  scale4_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 12) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 2) (ashr (tmp 1) (constant ? 1)))
      (= (tmp 0) (tmp 2))
      (= (tmp 3) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 4) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 5) (ashr (tmp 4) (constant ? 1)))
      (= (tmp 3) (tmp 5))
      (= (tmp 6) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 7) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 8) (ashr (tmp 7) (constant ? 1)))
      (= (tmp 6) (tmp 8))
      (= (tmp 9) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 10) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 11) (ashr (tmp 10) (constant ? 1)))
      (= (tmp 9) (tmp 11))
      (= (tmp 13) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 12) (tmp 13))
      (op-flags! dst (ac ex mi)))))

(instruction
  bswap_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 2) (tmp 3)))))

(instruction
  shfta_a40_nimm7_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -32 32 SImm)
      (alias (tmp 11) no-value)
      (assert (not (reg-flag sa cuc))))
    (code 
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -32 32 SImm)
      (alias (tmp 11) (tmp 10))
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (icmp sgt (constant ? 40) SImm (constant ? 0)))
      (br (tmp 1) bb_3 bb_4)
      (label bb_3)
      (= (tmp 2) (shl (constant ? 1) SImm))
      (= (tmp 3) (satmul (constant ? 32) src (tmp 2)))
      (= dst (tmp 3))
      (br bb_5)
      (label bb_4)
      (= (tmp 4) (icmp sgt (constant ? 32) SImm (constant ? 0)))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (= (tmp 5) (shl src SImm))
      (= dst (tmp 5))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (sub (constant ? 32) (constant ? 0) SImm))
      (= (tmp 7) (ashr src (tmp 6)))
      (= (tmp 8) (sext (constant ? 32) (tmp 7) (constant ? 40)))
      (= dst (tmp 8))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  shfta_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (alias (tmp 15) (tmp 14))
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 0) (icmp slt (constant ? 16) src (constant ? -16)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src (constant ? 16)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 16) . bb_0) (src . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -16) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 5) (icmp sgt (constant ? 16) (tmp 3) (constant ? 0)))
      (br (tmp 5) bb_9 bb_10)
      (label bb_9)
      (= (tmp 6) (shl (constant ? 1) (tmp 3)))
      (= (tmp 7) (satmul (constant ? 16) dst (tmp 6)))
      (= dst (tmp 7))
      (br bb_11)
      (label bb_10)
      (= (tmp 8) (icmp sgt (constant ? 16) (tmp 3) (constant ? 0)))
      (br (tmp 8) bb_6 bb_7)
      (label bb_6)
      (= (tmp 9) (shl dst (tmp 3)))
      (= dst (tmp 9))
      (br bb_8)
      (label bb_7)
      (= (tmp 10) (sub (constant ? 16) (constant ? 0) (tmp 3)))
      (= (tmp 11) (ashr dst (tmp 10)))
      (= (tmp 12) (sext (constant ? 16) (tmp 11) (constant ? 16)))
      (= dst (tmp 12))
      (br bb_8)
      (label bb_8)
      (= (tmp 13) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 14) (phi ((no-value . bb_9) ((tmp 13) . bb_10))))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (alias (tmp 15) no-value)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 0) (icmp slt (constant ? 16) src (constant ? -16)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src (constant ? 16)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 16) . bb_0) (src . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -16) . bb_3) ((tmp 2) . bb_4)))))))

(instruction
  shfta4_a40_nimm5_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) SImm))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 1) SImm))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (= (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (tmp 43) SImm))
      (= (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 51) (ashr (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (= (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) SImm))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa cuc))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) SImm))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 1) SImm))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (= (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (tmp 29) SImm))
      (= (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 37) (ashr (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (= (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 1) SImm))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (= (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (tmp 43) SImm))
      (= (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 51) (ashr (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (= (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa cuc))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) SImm))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 1) SImm))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (= (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (tmp 29) SImm))
      (= (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 37) (ashr (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (= (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 1) SImm))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (= (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (tmp 43) SImm))
      (= (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 51) (ashr (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (= (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa cuc))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 1) SImm))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (= (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (tmp 29) SImm))
      (= (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 37) (ashr (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (= (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 1) SImm))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (= (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (tmp 43) SImm))
      (= (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 51) (ashr (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (= (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa cuc))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 1) SImm))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (= (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (tmp 29) SImm))
      (= (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 37) (ashr (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (= (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) SImm))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) SImm))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 1) SImm))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (= (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (tmp 43) SImm))
      (= (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 51) (ashr (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (= (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) SImm))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) SImm))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa cuc))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) SImm))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) SImm))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 1) SImm))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (= (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (tmp 29) SImm))
      (= (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 37) (ashr (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (= (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 1) SImm))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (= (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (tmp 43) SImm))
      (= (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 51) (ashr (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (= (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa cuc))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) SImm))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) SImm))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 1) SImm))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (= (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (tmp 29) SImm))
      (= (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 37) (ashr (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (= (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) SImm))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 1) SImm))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (= (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (tmp 43) SImm))
      (= (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 51) (ashr (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (= (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) SImm))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa cuc))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) SImm))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 1) SImm))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (= (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (tmp 29) SImm))
      (= (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 37) (ashr (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (= (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 1) SImm))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (= (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (tmp 43) SImm))
      (= (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 51) (ashr (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (= (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -8 8 SImm)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa cuc))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) SImm))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 1) SImm))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (= (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (tmp 29) SImm))
      (= (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) SImm))
      (= (tmp 37) (ashr (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (= (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of)))))

(instruction
  sub_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 2) (sub (constant ? 40) src1 src2))
      (= dst (tmp 2))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (satsub (constant ? 32) src1 src2))
      (= dst (tmp 1))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  suba_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 2) (sub (constant ? 40) src1 src2))
      (= dst (tmp 2))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (satsub (constant ? 40) src1 src2))
      (= dst (tmp 1))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  sub_nimm5_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 1 32 UImm)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 3) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 4) (sub (constant ? 40) dst (tmp 3)))
      (= dst (tmp 4))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 1 32 UImm)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 2) (satsub (constant ? 32) dst (tmp 1)))
      (= dst (tmp 2))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  subh_nimm5_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 1 32 UImm)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 4) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 5) (shl (tmp 4) (constant ? 16)))
      (= (tmp 6) (sub (constant ? 40) dst (tmp 5)))
      (= dst (tmp 6))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 1 32 UImm)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (zext (constant ? 8) UImm (constant ? 40)))
      (= (tmp 2) (shl (tmp 1) (constant ? 16)))
      (= (tmp 3) (satsub (constant ? 32) dst (tmp 2)))
      (= dst (tmp 3))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  sub_nimm16_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 0 65535 UImm)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 3) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 4) (sub (constant ? 40) dst (tmp 3)))
      (= dst (tmp 4))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 0 65535 UImm)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 2) (satsub (constant ? 32) dst (tmp 1)))
      (= dst (tmp 2))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  subh_nimm16_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 0 65535 UImm)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 4) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 5) (shl (tmp 4) (constant ? 16)))
      (= (tmp 6) (sub (constant ? 40) dst (tmp 5)))
      (= dst (tmp 6))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 0 65535 UImm)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (zext (constant ? 16) UImm (constant ? 40)))
      (= (tmp 2) (shl (tmp 1) (constant ? 16)))
      (= (tmp 3) (satsub (constant ? 32) dst (tmp 2)))
      (= dst (tmp 3))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  sub_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 3) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 4) (sub (constant ? 40) dst (tmp 3)))
      (= dst (tmp 4))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (satsub (constant ? 32) dst (tmp 1)))
      (= dst (tmp 2))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  sub_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 3) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 4) (sub (constant ? 40) src1 (tmp 3)))
      (= dst (tmp 4))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (satsub (constant ? 32) src1 (tmp 1)))
      (= dst (tmp 2))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  subh_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 4) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 5) (shl (tmp 4) (constant ? 16)))
      (= (tmp 6) (sub (constant ? 40) dst (tmp 5)))
      (= dst (tmp 6))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (sext (constant ? 16) src (constant ? 40)))
      (= (tmp 2) (shl (tmp 1) (constant ? 16)))
      (= (tmp 3) (satsub (constant ? 32) dst (tmp 2)))
      (= dst (tmp 3))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  subh_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 4) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 5) (shl (tmp 4) (constant ? 16)))
      (= (tmp 6) (sub (constant ? 40) src1 (tmp 5)))
      (= dst (tmp 6))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (shl (tmp 1) (constant ? 16)))
      (= (tmp 3) (satsub (constant ? 32) src1 (tmp 2)))
      (= dst (tmp 3))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  subabs_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc))
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 0) (icmp gt (constant ? 40) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (satsub (constant ? 32) src1 src2))
      (= dst (tmp 2))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (sub (constant ? 40) src2 src1))
      (= dst (tmp 6))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc))
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 0) (icmp gt (constant ? 40) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (satsub (constant ? 32) src1 src2))
      (= dst (tmp 2))
      (br bb_2)
      (label bb_1)
      (= (tmp 5) (satsub (constant ? 32) src2 src1))
      (= dst (tmp 5))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc)))
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 0) (icmp gt (constant ? 40) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 3) (sub (constant ? 40) src1 src2))
      (= dst (tmp 3))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (sub (constant ? 40) src2 src1))
      (= dst (tmp 6))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc)))
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 0) (icmp gt (constant ? 40) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 3) (sub (constant ? 40) src1 src2))
      (= dst (tmp 3))
      (br bb_2)
      (label bb_1)
      (= (tmp 5) (satsub (constant ? 32) src2 src1))
      (= dst (tmp 5))
      (br bb_2)
      (label bb_2)
      (= (tmp 7) (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  sub2_a40_a40_a40h
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40h)
      (allocate-in (tmp 12) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 15) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 4) (satsub (tmp 1) (tmp 2) (tmp 3)))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 5) (tmp 4))
      (= (tmp 6) (- (constant ? 31) (constant ? 16)))
      (= (tmp 7) (+ (constant ? 1) (tmp 6)))
      (= (tmp 8) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 9) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 10) (satsub (tmp 7) (tmp 8) (tmp 9)))
      (= (tmp 11) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 11) (tmp 10))
      (= (tmp 13) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 12) (tmp 13))
      (op-flags! dst (ac ex mi)))))

(instruction
  sub2_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 12) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 15) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 4) (satsub (tmp 1) (tmp 2) (tmp 3)))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 5) (tmp 4))
      (= (tmp 6) (- (constant ? 31) (constant ? 16)))
      (= (tmp 7) (+ (constant ? 1) (tmp 6)))
      (= (tmp 8) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 9) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 10) (satsub (tmp 7) (tmp 8) (tmp 9)))
      (= (tmp 11) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 11) (tmp 10))
      (= (tmp 13) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 12) (tmp 13))
      (op-flags! dst (ac ex mi)))))

(instruction
  subscale2_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 18) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 15) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 15) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 6) (sub (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (sdiv (tmp 6) (constant ? 2)))
      (= (tmp 8) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 8) (tmp 7))
      (= (tmp 9) (- (constant ? 31) (constant ? 16)))
      (= (tmp 10) (+ (constant ? 1) (tmp 9)))
      (= (tmp 11) (- (constant ? 31) (constant ? 16)))
      (= (tmp 12) (+ (constant ? 1) (tmp 11)))
      (= (tmp 13) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 14) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 15) (sub (tmp 12) (tmp 13) (tmp 14)))
      (= (tmp 16) (sdiv (tmp 15) (constant ? 2)))
      (= (tmp 17) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 17) (tmp 16))
      (= (tmp 19) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 18) (tmp 19))
      (op-flags! dst (ac ex mi)))))

(instruction
  subscale2r_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 20) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 15) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 15) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 15)))
      (= (tmp 6) (sub (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (add (tmp 1) (tmp 6) (constant ? 1)))
      (= (tmp 8) (sdiv (tmp 7) (constant ? 2)))
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 9) (tmp 8))
      (= (tmp 10) (- (constant ? 31) (constant ? 16)))
      (= (tmp 11) (+ (constant ? 1) (tmp 10)))
      (= (tmp 12) (- (constant ? 31) (constant ? 16)))
      (= (tmp 13) (+ (constant ? 1) (tmp 12)))
      (= (tmp 14) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src2 (constant ? 16) (constant ? 31)))
      (= (tmp 16) (sub (tmp 13) (tmp 14) (tmp 15)))
      (= (tmp 17) (add (tmp 11) (tmp 16) (constant ? 1)))
      (= (tmp 18) (sdiv (tmp 17) (constant ? 2)))
      (= (tmp 19) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 19) (tmp 18))
      (= (tmp 21) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 20) (tmp 21))
      (op-flags! dst (ac ex mi)))))

(instruction
  sub4_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 24) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 7) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 4) (satsub (tmp 1) (tmp 2) (tmp 3)))
      (= (tmp 5) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 5) (tmp 4))
      (= (tmp 6) (- (constant ? 15) (constant ? 8)))
      (= (tmp 7) (+ (constant ? 1) (tmp 6)))
      (= (tmp 8) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 9) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 10) (satsub (tmp 7) (tmp 8) (tmp 9)))
      (= (tmp 11) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 11) (tmp 10))
      (= (tmp 12) (- (constant ? 23) (constant ? 16)))
      (= (tmp 13) (+ (constant ? 1) (tmp 12)))
      (= (tmp 14) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 15) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 16) (satsub (tmp 13) (tmp 14) (tmp 15)))
      (= (tmp 17) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 17) (tmp 16))
      (= (tmp 18) (- (constant ? 31) (constant ? 24)))
      (= (tmp 19) (+ (constant ? 1) (tmp 18)))
      (= (tmp 20) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 21) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 22) (satsub (tmp 19) (tmp 20) (tmp 21)))
      (= (tmp 23) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 23) (tmp 22))
      (= (tmp 25) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 24) (tmp 25))
      (op-flags! dst (ac ex mi)))))

(instruction
  subscale4_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 36) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 7) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 7) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 6) (sub (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (sdiv (tmp 6) (constant ? 2)))
      (= (tmp 8) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 8) (tmp 7))
      (= (tmp 9) (- (constant ? 15) (constant ? 8)))
      (= (tmp 10) (+ (constant ? 1) (tmp 9)))
      (= (tmp 11) (- (constant ? 15) (constant ? 8)))
      (= (tmp 12) (+ (constant ? 1) (tmp 11)))
      (= (tmp 13) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 14) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 15) (sub (tmp 12) (tmp 13) (tmp 14)))
      (= (tmp 16) (sdiv (tmp 15) (constant ? 2)))
      (= (tmp 17) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 17) (tmp 16))
      (= (tmp 18) (- (constant ? 23) (constant ? 16)))
      (= (tmp 19) (+ (constant ? 1) (tmp 18)))
      (= (tmp 20) (- (constant ? 23) (constant ? 16)))
      (= (tmp 21) (+ (constant ? 1) (tmp 20)))
      (= (tmp 22) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 23) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 24) (sub (tmp 21) (tmp 22) (tmp 23)))
      (= (tmp 25) (sdiv (tmp 24) (constant ? 2)))
      (= (tmp 26) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 26) (tmp 25))
      (= (tmp 27) (- (constant ? 31) (constant ? 24)))
      (= (tmp 28) (+ (constant ? 1) (tmp 27)))
      (= (tmp 29) (- (constant ? 31) (constant ? 24)))
      (= (tmp 30) (+ (constant ? 1) (tmp 29)))
      (= (tmp 31) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 32) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 33) (sub (tmp 30) (tmp 31) (tmp 32)))
      (= (tmp 34) (sdiv (tmp 33) (constant ? 2)))
      (= (tmp 35) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 35) (tmp 34))
      (= (tmp 37) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 36) (tmp 37))
      (op-flags! dst (ac ex mi)))))

(instruction
  subscale4r_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 40) (reg-flag a dst)))
    (code 
      (= (tmp 0) (- (constant ? 7) (constant ? 0)))
      (= (tmp 1) (+ (constant ? 1) (tmp 0)))
      (= (tmp 2) (- (constant ? 7) (constant ? 0)))
      (= (tmp 3) (+ (constant ? 1) (tmp 2)))
      (= (tmp 4) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 5) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 6) (sub (tmp 3) (tmp 4) (tmp 5)))
      (= (tmp 7) (add (tmp 1) (tmp 6) (constant ? 1)))
      (= (tmp 8) (sdiv (tmp 7) (constant ? 2)))
      (= (tmp 9) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 9) (tmp 8))
      (= (tmp 10) (- (constant ? 15) (constant ? 8)))
      (= (tmp 11) (+ (constant ? 1) (tmp 10)))
      (= (tmp 12) (- (constant ? 15) (constant ? 8)))
      (= (tmp 13) (+ (constant ? 1) (tmp 12)))
      (= (tmp 14) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src2 (constant ? 8) (constant ? 15)))
      (= (tmp 16) (sub (tmp 13) (tmp 14) (tmp 15)))
      (= (tmp 17) (add (tmp 11) (tmp 16) (constant ? 1)))
      (= (tmp 18) (sdiv (tmp 17) (constant ? 2)))
      (= (tmp 19) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 19) (tmp 18))
      (= (tmp 20) (- (constant ? 23) (constant ? 16)))
      (= (tmp 21) (+ (constant ? 1) (tmp 20)))
      (= (tmp 22) (- (constant ? 23) (constant ? 16)))
      (= (tmp 23) (+ (constant ? 1) (tmp 22)))
      (= (tmp 24) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 25) (reg-range src2 (constant ? 16) (constant ? 23)))
      (= (tmp 26) (sub (tmp 23) (tmp 24) (tmp 25)))
      (= (tmp 27) (add (tmp 21) (tmp 26) (constant ? 1)))
      (= (tmp 28) (sdiv (tmp 27) (constant ? 2)))
      (= (tmp 29) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (tmp 28))
      (= (tmp 30) (- (constant ? 31) (constant ? 24)))
      (= (tmp 31) (+ (constant ? 1) (tmp 30)))
      (= (tmp 32) (- (constant ? 31) (constant ? 24)))
      (= (tmp 33) (+ (constant ? 1) (tmp 32)))
      (= (tmp 34) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 35) (reg-range src2 (constant ? 24) (constant ? 31)))
      (= (tmp 36) (sub (tmp 33) (tmp 34) (tmp 35)))
      (= (tmp 37) (add (tmp 31) (tmp 36) (constant ? 1)))
      (= (tmp 38) (sdiv (tmp 37) (constant ? 2)))
      (= (tmp 39) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 39) (tmp 38))
      (= (tmp 41) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 40) (tmp 41))
      (op-flags! dst (ac ex mi)))))

(instruction
  subs_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (reg-flag sa cuc))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 1) (satsub (constant ? 16) src1 src2))
      (= dst (tmp 1))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 3) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 1) (satsub (constant ? 16) src1 src2))
      (= dst (tmp 1))
      (= (tmp 4) (reg-range (tmp 3) (constant ? 16) (constant ? 39)))
      (= (tmp 5) (sext (constant ? 16) dst (constant ? 24)))
      (= (tmp 4) (tmp 5))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (reg-flag sa cuc)))
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 2) (sub (constant ? 16) src1 src2))
      (= dst (tmp 2))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 3) (reg-flag a dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 2) (sub (constant ? 16) src1 src2))
      (= dst (tmp 2))
      (= (tmp 4) (reg-range (tmp 3) (constant ? 16) (constant ? 39)))
      (= (tmp 5) (sext (constant ? 16) dst (constant ? 24)))
      (= (tmp 4) (tmp 5))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  subz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 0) (icmp ugt (constant ? 16) src2 src1))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= dst (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= (tmp 3) (sub (constant ? 16) src1 src2))
      (= dst (tmp 3))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 0) (icmp ugt (constant ? 16) src2 src1))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 2) (sub (constant ? 16) src1 src2))
      (= dst (tmp 2))
      (br bb_2)
      (label bb_1)
      (= (tmp 3) (sub (constant ? 16) src1 src2))
      (= dst (tmp 3))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  subs_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 5) (reg-flag a dst)))
    (code 
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (satsub (constant ? 32) src1 (tmp 1)))
      (= dst (tmp 2))
      (= (tmp 6) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 5) (tmp 6))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 5) (reg-flag a dst)))
    (code 
      (= (tmp 3) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 4) (sub (constant ? 32) src1 (tmp 3)))
      (= dst (tmp 4))
      (= (tmp 6) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 5) (tmp 6))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  subz_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 6) (tmp 4))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 7) (reg-flag ag dst)))
    (code 
      (= (tmp 1) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (icmp ugt (constant ? 40) (tmp 1) src1))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= dst (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= (tmp 3) (sub (constant ? 32) src1 src2))
      (= dst (tmp 3))
      (br bb_2)
      (label bb_2)
      (= (tmp 4) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 7) (constant ? 0))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 6) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 7) (reg-flag ag dst)))
    (code 
      (= (tmp 5) (sub (constant ? 32) src1 src2))
      (= dst (tmp 5))
      (= (tmp 7) (constant ? 0))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  subhs_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 7) (reg-flag a dst)))
    (code 
      (= (tmp 1) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (shl (tmp 1) (constant ? 16)))
      (= (tmp 3) (satsub (constant ? 32) src1 (tmp 2)))
      (= dst (tmp 3))
      (= (tmp 8) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 7) (tmp 8))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 7) (reg-flag a dst)))
    (code 
      (= (tmp 4) (sext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 5) (shl (tmp 4) (constant ? 16)))
      (= (tmp 6) (sub (constant ? 32) src1 (tmp 5)))
      (= dst (tmp 6))
      (= (tmp 8) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 7) (tmp 8))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  subhz_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 10) (tmp 6))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 11) (reg-flag ag dst)))
    (code 
      (= (tmp 1) (zext (constant ? 16) src2 (constant ? 40)))
      (= (tmp 2) (icmp ugt (constant ? 40) (tmp 1) src1))
      (br (tmp 2) bb_0 bb_1)
      (label bb_0)
      (= dst (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= (tmp 3) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 4) (shl src2 (constant ? 16)))
      (= (tmp 5) (sub (constant ? 32) (tmp 3) (tmp 4)))
      (= dst (tmp 5))
      (br bb_2)
      (label bb_2)
      (= (tmp 6) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 11) (constant ? 0))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 10) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 11) (reg-flag ag dst)))
    (code 
      (= (tmp 7) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 8) (shl src2 (constant ? 16)))
      (= (tmp 9) (sub (constant ? 32) (tmp 7) (tmp 8)))
      (= dst (tmp 9))
      (= (tmp 11) (constant ? 0))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  subs_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 3) (reg-flag a dst)))
    (code 
      (= (tmp 1) (satsub (constant ? 32) src1 src2))
      (= dst (tmp 1))
      (= (tmp 4) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 3) (tmp 4))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 3) (reg-flag a dst)))
    (code 
      (= (tmp 2) (sub (constant ? 32) src1 src2))
      (= dst (tmp 2))
      (= (tmp 4) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 3) (tmp 4))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  subz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (alias (tmp 9) (tmp 5))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 10) (reg-flag ag dst)))
    (code 
      (= (tmp 1) (icmp ugt (constant ? 32) src2 src1))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (= dst (constant ? 0))
      (br bb_2)
      (label bb_1)
      (= (tmp 2) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 3) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 4) (sub (constant ? 32) (tmp 2) (tmp 3)))
      (= dst (tmp 4))
      (br bb_2)
      (label bb_2)
      (= (tmp 5) (phi ((no-value . bb_0) (no-value . bb_1))))
      (= (tmp 10) (constant ? 0))
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (alias (tmp 9) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 10) (reg-flag ag dst)))
    (code 
      (= (tmp 6) (reg-range src1 (constant ? 0) (constant ? 31)))
      (= (tmp 7) (reg-range src2 (constant ? 0) (constant ? 31)))
      (= (tmp 8) (sub (constant ? 32) (tmp 6) (tmp 7)))
      (= dst (tmp 8))
      (= (tmp 10) (constant ? 0))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  swap_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 4) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 3) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 2) (tmp 3))
      (= (tmp 5) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 4) (tmp 5))
      (op-flags! dst (ac ex mi)))))

(instruction
  zext_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 2) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 31)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 31)))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (constant ? 0))
      (op-flags! dst (ac ex mi c)))))

(instruction
  shfta_nimm6_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (zimm -16 16 SImm)
      (alias (tmp 11) no-value)
      (assert (not (reg-flag sa cuc))))
    (code 
      (op-flags! dst (ac ex mi of c))))
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (zimm -16 16 SImm)
      (alias (tmp 11) (tmp 10))
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (icmp sgt (constant ? 40) SImm (constant ? 0)))
      (br (tmp 1) bb_3 bb_4)
      (label bb_3)
      (= (tmp 2) (shl (constant ? 1) SImm))
      (= (tmp 3) (satmul (constant ? 32) dst (tmp 2)))
      (= dst (tmp 3))
      (br bb_5)
      (label bb_4)
      (= (tmp 4) (icmp sgt (constant ? 32) SImm (constant ? 0)))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (= (tmp 5) (shl dst SImm))
      (= dst (tmp 5))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (sub (constant ? 32) (constant ? 0) SImm))
      (= (tmp 7) (ashr dst (tmp 6)))
      (= (tmp 8) (sext (constant ? 32) (tmp 7) (constant ? 40)))
      (= dst (tmp 8))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))
      (op-flags! dst (ac ex mi of c)))))

(instruction
  shfts_a40_nimm7_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -32 32 SImm)
      (alias (tmp 12) no-value)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 0) (sext (constant ? 32) src (constant ? 40)))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -32 32 SImm)
      (alias (tmp 12) (tmp 11))
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 0) (sext (constant ? 32) src (constant ? 40)))
      (= (tmp 2) (icmp sgt (constant ? 40) SImm (constant ? 0)))
      (br (tmp 2) bb_3 bb_4)
      (label bb_3)
      (= (tmp 3) (shl (constant ? 1) SImm))
      (= (tmp 4) (satmul (constant ? 32) (tmp 0) (tmp 3)))
      (= dst (tmp 4))
      (br bb_5)
      (label bb_4)
      (= (tmp 5) (icmp sgt (constant ? 32) SImm (constant ? 0)))
      (br (tmp 5) bb_0 bb_1)
      (label bb_0)
      (= (tmp 6) (shl (tmp 0) SImm))
      (= dst (tmp 6))
      (br bb_2)
      (label bb_1)
      (= (tmp 7) (sub (constant ? 32) (constant ? 0) SImm))
      (= (tmp 8) (ashr (tmp 0) (tmp 7)))
      (= (tmp 9) (sext (constant ? 32) (tmp 8) (constant ? 40)))
      (= dst (tmp 9))
      (br bb_2)
      (label bb_2)
      (= (tmp 10) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) ((tmp 10) . bb_4))))
      (op-flags! dst (ac ex mi of)))))

(instruction
  cmp_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 0) (reg-flag ac dst))
      (allocate-in (tmp 2) (reg-flag mi dst)))
    (code 
      (= (tmp 1) (icmp eq (constant ? 40) dst src))
      (= (tmp 0) (tmp 1))
      (= (tmp 3) (icmp slt (constant ? 40) dst src))
      (= (tmp 2) (tmp 3)))))

(instruction
  cmps_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst)))
    (code 
      (= (tmp 0) (reg-range (constant ? 0) (constant ? 31) dst))
      (= (tmp 1) (reg-range (constant ? 0) (constant ? 31) src))
      (= (tmp 3) (icmp eq (constant ? 32) (tmp 0) (tmp 1)))
      (= (tmp 2) (tmp 3))
      (= (tmp 5) (icmp slt (constant ? 32) (tmp 0) (tmp 1)))
      (= (tmp 4) (tmp 5)))))

(instruction
  cmpz_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (allocate-in (tmp 2) (reg-flag ac dst))
      (allocate-in (tmp 4) (reg-flag mi dst)))
    (code 
      (= (tmp 0) (reg-range (constant ? 0) (constant ? 31) dst))
      (= (tmp 1) (reg-range (constant ? 0) (constant ? 31) src))
      (= (tmp 3) (icmp eq (constant ? 32) (tmp 0) (tmp 1)))
      (= (tmp 2) (tmp 3))
      (= (tmp 5) (icmp ult (constant ? 32) (tmp 0) (tmp 1)))
      (= (tmp 4) (tmp 5)))))

(instruction
  shfta_a16_nimm6_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (zimm -16 16 SImm)
      (alias (tmp 11) (tmp 10))
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 1) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 1) bb_3 bb_4)
      (label bb_3)
      (= (tmp 2) (shl (constant ? 1) SImm))
      (= (tmp 3) (satmul (constant ? 16) src (tmp 2)))
      (= dst (tmp 3))
      (br bb_5)
      (label bb_4)
      (= (tmp 4) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 4) bb_0 bb_1)
      (label bb_0)
      (= (tmp 5) (shl src SImm))
      (= dst (tmp 5))
      (br bb_2)
      (label bb_1)
      (= (tmp 6) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 7) (ashr src (tmp 6)))
      (= (tmp 8) (sext (constant ? 16) (tmp 7) (constant ? 16)))
      (= dst (tmp 8))
      (br bb_2)
      (label bb_2)
      (= (tmp 9) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 10) (phi ((no-value . bb_3) ((tmp 9) . bb_4))))))
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16)
      (zimm -16 16 SImm)
      (alias (tmp 11) no-value)
      (assert (not (reg-flag sa cuc))))
    (code )))

(instruction
  shfts_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 16) no-value)
      (assert (not (reg-flag sa cuc))))
    (code 
      (= (tmp 0) (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 40) . bb_0) (src2 . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -40) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (sext (constant ? 32) src1 (constant ? 40)))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 16) (tmp 15))
      (assert (reg-flag sa cuc)))
    (code 
      (= (tmp 0) (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 40) . bb_0) (src2 . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -40) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (sext (constant ? 32) src1 (constant ? 40)))
      (= (tmp 6) (icmp sgt (constant ? 40) (tmp 3) (constant ? 0)))
      (br (tmp 6) bb_9 bb_10)
      (label bb_9)
      (= (tmp 7) (shl (constant ? 1) (tmp 3)))
      (= (tmp 8) (satmul (constant ? 32) (tmp 4) (tmp 7)))
      (= dst (tmp 8))
      (br bb_11)
      (label bb_10)
      (= (tmp 9) (icmp sgt (constant ? 32) (tmp 3) (constant ? 0)))
      (br (tmp 9) bb_6 bb_7)
      (label bb_6)
      (= (tmp 10) (shl (tmp 4) (tmp 3)))
      (= dst (tmp 10))
      (br bb_8)
      (label bb_7)
      (= (tmp 11) (sub (constant ? 32) (constant ? 0) (tmp 3)))
      (= (tmp 12) (ashr (tmp 4) (tmp 11)))
      (= (tmp 13) (sext (constant ? 32) (tmp 12) (constant ? 40)))
      (= dst (tmp 13))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 15) (phi ((no-value . bb_9) ((tmp 14) . bb_10))))
      (op-flags! dst (ac ex mi of)))))

(instruction
  shftz_a40_nimm7_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -32 32 SImm)
      (alias (tmp 12) (tmp 11))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 13) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (zext (constant ? 32) src (constant ? 40)))
      (= (tmp 2) (icmp sgt (constant ? 40) SImm (constant ? 0)))
      (br (tmp 2) bb_3 bb_4)
      (label bb_3)
      (= (tmp 3) (shl (constant ? 1) SImm))
      (= (tmp 4) (satmul (constant ? 32) (tmp 0) (tmp 3)))
      (= dst (tmp 4))
      (br bb_5)
      (label bb_4)
      (= (tmp 5) (icmp sgt (constant ? 32) SImm (constant ? 0)))
      (br (tmp 5) bb_0 bb_1)
      (label bb_0)
      (= (tmp 6) (shl (tmp 0) SImm))
      (= dst (tmp 6))
      (br bb_2)
      (label bb_1)
      (= (tmp 7) (sub (constant ? 32) (constant ? 0) SImm))
      (= (tmp 8) (ashr (tmp 0) (tmp 7)))
      (= (tmp 9) (sext (constant ? 32) (tmp 8) (constant ? 40)))
      (= dst (tmp 9))
      (br bb_2)
      (label bb_2)
      (= (tmp 10) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 11) (phi ((no-value . bb_3) ((tmp 10) . bb_4))))
      (= (tmp 13) (constant ? 0))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -32 32 SImm)
      (alias (tmp 12) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 13) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (zext (constant ? 32) src (constant ? 40)))
      (= (tmp 13) (constant ? 0))
      (op-flags! dst (ac ex mi of)))))

(instruction
  shftz_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 16) (tmp 15))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 17) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 40) . bb_0) (src2 . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -40) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (zext (constant ? 32) src1 (constant ? 40)))
      (= (tmp 6) (icmp sgt (constant ? 40) (tmp 3) (constant ? 0)))
      (br (tmp 6) bb_9 bb_10)
      (label bb_9)
      (= (tmp 7) (shl (constant ? 1) (tmp 3)))
      (= (tmp 8) (satmul (constant ? 32) (tmp 4) (tmp 7)))
      (= dst (tmp 8))
      (br bb_11)
      (label bb_10)
      (= (tmp 9) (icmp sgt (constant ? 32) (tmp 3) (constant ? 0)))
      (br (tmp 9) bb_6 bb_7)
      (label bb_6)
      (= (tmp 10) (shl (tmp 4) (tmp 3)))
      (= dst (tmp 10))
      (br bb_8)
      (label bb_7)
      (= (tmp 11) (sub (constant ? 32) (constant ? 0) (tmp 3)))
      (= (tmp 12) (ashr (tmp 4) (tmp 11)))
      (= (tmp 13) (sext (constant ? 32) (tmp 12) (constant ? 40)))
      (= dst (tmp 13))
      (br bb_8)
      (label bb_8)
      (= (tmp 14) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 15) (phi ((no-value . bb_9) ((tmp 14) . bb_10))))
      (= (tmp 17) (constant ? 0))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 16) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 17) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br (tmp 0) bb_3 bb_4)
      (label bb_3)
      (br bb_5)
      (label bb_4)
      (= (tmp 1) (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br (tmp 1) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((constant ? 40) . bb_0) (src2 . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 3) (phi (((constant ? -40) . bb_3) ((tmp 2) . bb_4))))
      (= (tmp 4) (zext (constant ? 32) src1 (constant ? 40)))
      (= (tmp 17) (constant ? 0))
      (op-flags! dst (ac ex mi of)))))

(instruction
  shfta2_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 28) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 17) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 16) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) src2))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 16) (tmp 23) (constant ? 16)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 28) (tmp 29))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 28) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 28) (tmp 29))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 28) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 16) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) src2))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 16) (tmp 9) (constant ? 16)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 17) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 16) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) src2))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 16) (tmp 23) (constant ? 16)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 28) (tmp 29))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 28) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 15)))
      (= (tmp 3) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 16) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) src2))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 16) (constant ? 0) src2))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 16) (tmp 9) (constant ? 16)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src1 (constant ? 16) (constant ? 31)))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 28) (tmp 29))
      (op-flags! dst (ac ex mi of)))))

(instruction
  shfta2_a40_nimm6_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -16 16 SImm)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 28) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 17) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 16) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) SImm))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 16) (tmp 23) (constant ? 16)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 28) (tmp 29))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -16 16 SImm)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 28) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 28) (tmp 29))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -16 16 SImm)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 28) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 3) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 16) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) SImm))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 16) (tmp 9) (constant ? 16)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 17) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) SImm))
      (= (tmp 19) (satmul (constant ? 16) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) SImm))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 16) (tmp 23) (constant ? 16)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 28) (tmp 29))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40)
      (zimm -16 16 SImm)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 28) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (reg-range src (constant ? 0) (constant ? 15)))
      (= (tmp 3) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) SImm))
      (= (tmp 5) (satmul (constant ? 16) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) SImm))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 16) (constant ? 0) SImm))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 16) (tmp 9) (constant ? 16)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 15) (reg-range src (constant ? 16) (constant ? 31)))
      (= (tmp 29) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 28) (tmp 29))
      (op-flags! dst (ac ex mi of)))))

(instruction
  shfta4_a40_a16_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) src2))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 1) src2))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (= (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (tmp 43) src2))
      (= (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 51) (ashr (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (= (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) src2))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa cuc))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) src2))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 1) src2))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (= (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (tmp 29) src2))
      (= (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 37) (ashr (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (= (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 1) src2))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (= (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (tmp 43) src2))
      (= (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 51) (ashr (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (= (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa cuc))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) src2))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 1) src2))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (= (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (tmp 29) src2))
      (= (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 37) (ashr (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (= (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 1) src2))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (= (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (tmp 43) src2))
      (= (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 51) (ashr (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (= (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa cuc))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 1) src2))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (= (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (tmp 29) src2))
      (= (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 37) (ashr (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (= (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 1) src2))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (= (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (tmp 43) src2))
      (= (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 51) (ashr (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (= (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa cuc))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 1) src2))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (= (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (tmp 29) src2))
      (= (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 37) (ashr (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (= (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) src2))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) src2))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 1) src2))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (= (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (tmp 43) src2))
      (= (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 51) (ashr (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (= (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) src2))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) src2))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa cuc))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) src2))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) src2))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 1) src2))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (= (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (tmp 29) src2))
      (= (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 37) (ashr (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (= (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 1) src2))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (= (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (tmp 43) src2))
      (= (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 51) (ashr (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (= (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) (tmp 26))
      (assert (reg-flag sa cuc))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa cuc))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) src2))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 17) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 17) bb_9 bb_10)
      (label bb_9)
      (= (tmp 18) (shl (constant ? 1) src2))
      (= (tmp 19) (satmul (constant ? 8) (tmp 15) (tmp 18)))
      (= (tmp 14) (tmp 19))
      (br bb_11)
      (label bb_10)
      (= (tmp 20) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 20) bb_6 bb_7)
      (label bb_6)
      (= (tmp 21) (shl (tmp 15) src2))
      (= (tmp 14) (tmp 21))
      (br bb_8)
      (label bb_7)
      (= (tmp 22) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 23) (ashr (tmp 15) (tmp 22)))
      (= (tmp 24) (sext (constant ? 8) (tmp 23) (constant ? 8)))
      (= (tmp 14) (tmp 24))
      (br bb_8)
      (label bb_8)
      (= (tmp 25) (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
      (label bb_11)
      (= (tmp 26) (phi ((no-value . bb_9) ((tmp 25) . bb_10))))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 1) src2))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (= (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (tmp 29) src2))
      (= (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 37) (ashr (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (= (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) src2))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 1) src2))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (= (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (tmp 43) src2))
      (= (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 51) (ashr (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (= (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 41) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) src2))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa cuc))
      (alias (tmp 55) (tmp 54))
      (assert (reg-flag sa cuc))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) src2))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 1) src2))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (= (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (tmp 29) src2))
      (= (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 37) (ashr (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (= (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 45) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 45) bb_21 bb_22)
      (label bb_21)
      (= (tmp 46) (shl (constant ? 1) src2))
      (= (tmp 47) (satmul (constant ? 8) (tmp 43) (tmp 46)))
      (= (tmp 42) (tmp 47))
      (br bb_23)
      (label bb_22)
      (= (tmp 48) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 48) bb_18 bb_19)
      (label bb_18)
      (= (tmp 49) (shl (tmp 43) src2))
      (= (tmp 42) (tmp 49))
      (br bb_20)
      (label bb_19)
      (= (tmp 50) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 51) (ashr (tmp 43) (tmp 50)))
      (= (tmp 52) (sext (constant ? 8) (tmp 51) (constant ? 8)))
      (= (tmp 42) (tmp 52))
      (br bb_20)
      (label bb_20)
      (= (tmp 53) (phi ((no-value . bb_18) (no-value . bb_19))))
      (br bb_23)
      (label bb_23)
      (= (tmp 54) (phi ((no-value . bb_21) ((tmp 53) . bb_22))))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16)
      (allocate-in dst a40)
      (alias (tmp 13) (tmp 12))
      (assert (reg-flag sa cuc))
      (alias (tmp 27) no-value)
      (assert (not (reg-flag sa cuc)))
      (alias (tmp 41) (tmp 40))
      (assert (reg-flag sa cuc))
      (alias (tmp 55) no-value)
      (assert (not (reg-flag sa cuc)))
      (allocate-in (tmp 56) (reg-flag a dst)))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 7)))
      (= (tmp 1) (reg-range src1 (constant ? 0) (constant ? 7)))
      (= (tmp 3) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 3) bb_3 bb_4)
      (label bb_3)
      (= (tmp 4) (shl (constant ? 1) src2))
      (= (tmp 5) (satmul (constant ? 8) (tmp 1) (tmp 4)))
      (= (tmp 0) (tmp 5))
      (br bb_5)
      (label bb_4)
      (= (tmp 6) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 6) bb_0 bb_1)
      (label bb_0)
      (= (tmp 7) (shl (tmp 1) src2))
      (= (tmp 0) (tmp 7))
      (br bb_2)
      (label bb_1)
      (= (tmp 8) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 9) (ashr (tmp 1) (tmp 8)))
      (= (tmp 10) (sext (constant ? 8) (tmp 9) (constant ? 8)))
      (= (tmp 0) (tmp 10))
      (br bb_2)
      (label bb_2)
      (= (tmp 11) (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_5)
      (label bb_5)
      (= (tmp 12) (phi ((no-value . bb_3) ((tmp 11) . bb_4))))
      (= (tmp 14) (reg-range dst (constant ? 8) (constant ? 15)))
      (= (tmp 15) (reg-range src1 (constant ? 8) (constant ? 15)))
      (= (tmp 28) (reg-range dst (constant ? 16) (constant ? 23)))
      (= (tmp 29) (reg-range src1 (constant ? 16) (constant ? 23)))
      (= (tmp 31) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 31) bb_15 bb_16)
      (label bb_15)
      (= (tmp 32) (shl (constant ? 1) src2))
      (= (tmp 33) (satmul (constant ? 8) (tmp 29) (tmp 32)))
      (= (tmp 28) (tmp 33))
      (br bb_17)
      (label bb_16)
      (= (tmp 34) (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br (tmp 34) bb_12 bb_13)
      (label bb_12)
      (= (tmp 35) (shl (tmp 29) src2))
      (= (tmp 28) (tmp 35))
      (br bb_14)
      (label bb_13)
      (= (tmp 36) (sub (constant ? 8) (constant ? 0) src2))
      (= (tmp 37) (ashr (tmp 29) (tmp 36)))
      (= (tmp 38) (sext (constant ? 8) (tmp 37) (constant ? 8)))
      (= (tmp 28) (tmp 38))
      (br bb_14)
      (label bb_14)
      (= (tmp 39) (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
      (label bb_17)
      (= (tmp 40) (phi ((no-value . bb_15) ((tmp 39) . bb_16))))
      (= (tmp 42) (reg-range dst (constant ? 24) (constant ? 31)))
      (= (tmp 43) (reg-range src1 (constant ? 24) (constant ? 31)))
      (= (tmp 57) (sext (constant ? 32) dst (constant ? 40)))
      (= (tmp 56) (tmp 57))
      (op-flags! dst (ac ex mi of)))))

(instruction
  fldiv
  (pattern 
    (constraints )
    (code 
      (= (tmp 0) (fdiv (register a4) (register a5)))
      (= (register a4) (tmp 0)))))

(instruction
  flsqr
  (pattern 
    (constraints 
      (allocate-in (tmp 1) (reg-flag ms (register a4)))
      (allocate-in (tmp 2) (reg-flag ls (register a4))))
    (code 
      (= (tmp 0) (sqrt (register a4)))
      (= (register a4) (tmp 0))
      (= (tmp 1) (constant ? 0))
      (= (tmp 2) (constant ? 0))
      (op-flags! (register a4) (ac ex mi of)))))

(instruction
  flmpy_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (fmul src1 src2))
      (= dst (tmp 0))
      (op-flags! dst (ac ex mi of)))))

(instruction
  cfixs_a40_a16h_a16h
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16h)
      (allocate-in dst a16h))
    (code 
      (= (tmp 0) (fptosi (constant ? 40) src1 (constant ? 16)))
      (= dst (tmp 0))
      (op-flags! dst (ac of mi)))))

(instruction
  cfl16_a40_a16h_a16h
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a16h)
      (allocate-in dst a16h))
    (code 
      (= (tmp 0) (reg-range src2 (constant ? 0) (constant ? 7)))
      (= (tmp 1) (exp (constant ? 2) (tmp 0)))
      (= (tmp 2) (fptrunc (constant ? 40) src1 (constant ? 16)))
      (= (tmp 3) (fmul (tmp 1) (tmp 2)))
      (= dst (tmp 3))
      (op-flags! dst (ac of mi)))))

(instruction
  cfloats_a16h_a16h_a40
  (pattern 
    (constraints 
      (allocate-in src1 a16h)
      (allocate-in src2 a16h)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (sitofp (constant ? 16) src1 (constant ? 40)))
      (= (tmp 1) (exp (constant ? 2) src2))
      (= (tmp 2) (mul (tmp 0) (tmp 1)))
      (= dst (tmp 2))
      (op-flags! dst (ac ex of mi)))))

(instruction
  cfl32_a16h_a16h_a40
  (pattern 
    (constraints 
      (allocate-in src1 a16h)
      (allocate-in src2 a16h)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (fpext (constant ? 16) src1 (constant ? 32)))
      (= (tmp 1) (exp (constant ? 2) src2))
      (= (tmp 2) (mul (tmp 0) (tmp 1)))
      (= dst (tmp 2))
      (op-flags! dst (ac ex of mi)))))

(instruction
  cfixt_a40_a16h
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a16h))
    (code 
      (= (tmp 0) (fptosi (constant ? 32) src (constant ? 16)))
      (= dst (tmp 0))
      (op-flags! dst (ac of mi)))))

(instruction
  fladd_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (fadd src1 src2))
      (= dst (tmp 0))
      (op-flags! dst (ac ex mi of)))))

(instruction
  flsub_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (fsub src1 src2))
      (= dst (tmp 0))
      (op-flags! dst (ac ex mi of)))))

(instruction
  flmin_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (fcmp olt (constant ? 32) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 1) (phi ((src1 . bb_0) (src2 . bb_1))))
      (= dst (tmp 1))
      (op-flags! dst (ac ex mi of)))))

(instruction
  flmax_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (fcmp ogt (constant ? 32) src1 src2))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 1) (phi ((src1 . bb_0) (src2 . bb_1))))
      (= dst (tmp 1))
      (op-flags! dst (ac ex mi of)))))

(instruction
  flabs_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (fcmp olt (constant ? 32) src (constant ? 0)))
      (br (tmp 0) bb_0 bb_1)
      (label bb_0)
      (= (tmp 1) (fsub (constant ? 0) src))
      (br bb_2)
      (label bb_1)
      (br bb_2)
      (label bb_2)
      (= (tmp 2) (phi (((tmp 1) . bb_0) (src . bb_1))))
      (= dst (tmp 2))
      (op-flags! dst (ac exx mi of)))))

(instruction
  flneg_a40_a40
  (pattern 
    (constraints 
      (allocate-in src a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (fsub (constant ? 0) src))
      (= dst (tmp 0))
      (op-flags! dst (ac ex mi of)))))

(instruction
  and_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (bit_and src1 src2))
      (= dst (tmp 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  andnot_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (bit_not src2))
      (= (tmp 1) (bit_and src1 (tmp 0)))
      (= dst (tmp 1))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  and_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_and (tmp 0) src))
      (= (tmp 0) (tmp 1))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  andh_a16_a40
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a40))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_and (tmp 0) src))
      (= (tmp 0) (tmp 1))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  and_a16_a16
  (pattern 
    (constraints 
      (allocate-in src a16)
      (allocate-in dst a16))
    (code 
      (= (tmp 0) (bit_and dst src))
      (= dst (tmp 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  andz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (bit_and src1 src2))
      (= dst (tmp 0))
      (op-flags! dst (ac mi ms ls op))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 1) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (bit_and src1 src2))
      (= dst (tmp 0))
      (= (tmp 1) (constant ? 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  andz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (bit_and src1 src2))
      (= dst (tmp 0))
      (op-flags! dst (ac mi ms ls op))))
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 1) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (bit_and src1 src2))
      (= dst (tmp 0))
      (= (tmp 1) (constant ? 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  and_nimm16_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 0 65535 UImm))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 0) (constant ? 15)))
      (= (tmp 1) (bit_and (tmp 0) UImm))
      (= (tmp 0) (tmp 1))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  andh_nimm16_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 0 65535 UImm))
    (code 
      (= (tmp 0) (reg-range dst (constant ? 16) (constant ? 31)))
      (= (tmp 1) (bit_and (tmp 0) UImm))
      (= (tmp 0) (tmp 1))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  and_nimm16_a16
  (pattern 
    (constraints 
      (allocate-in dst a16)
      (imm 0 65535 UImm))
    (code 
      (= (tmp 0) (bit_and dst UImm))
      (= dst (tmp 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  andnotz_a16_a16_a16
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (assert (not (contains? (register-class a0h_a7h) dst))))
    (code 
      (= (tmp 0) (bit_not src2))
      (= (tmp 1) (bit_and src1 (tmp 0)))
      (= dst (tmp 1))
      (op-flags! dst (ac mi ms ls op))))
  (pattern 
    (constraints 
      (allocate-in src1 a16)
      (allocate-in src2 a16)
      (allocate-in dst a16)
      (allocate-in (tmp 2) (reg-flag ag dst))
      (assert (contains? (register-class a0h_a7h) dst)))
    (code 
      (= (tmp 0) (bit_not src2))
      (= (tmp 1) (bit_and src1 (tmp 0)))
      (= dst (tmp 1))
      (= (tmp 2) (constant ? 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  andnotz_a40_a40_a40
  (pattern 
    (constraints 
      (allocate-in src1 a40)
      (allocate-in src2 a40)
      (allocate-in dst a40)
      (allocate-in (tmp 2) (reg-flag ag dst)))
    (code 
      (= (tmp 0) (bit_not src2))
      (= (tmp 1) (bit_and src1 (tmp 0)))
      (= dst (tmp 1))
      (= (tmp 2) (constant ? 0))
      (op-flags! dst (ac mi ms ls op)))))

(instruction
  cbit_nimm5_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 0 31 UImm)
      (allocate-in (tmp 0) (reg-flag c dst))
      (allocate-in (tmp 3) (reg-flag a dst)))
    (code 
      (= (tmp 1) (reg-range dst UImm UImm))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst UImm UImm))
      (= (tmp 2) (constant ? 0))
      (op-flags! (tmp 3) (ac mi ms ls op)))))

(instruction
  cbit_nimm4_a16
  (pattern 
    (constraints 
      (allocate-in dst a16)
      (imm 0 15 UImm)
      (allocate-in (tmp 0) (reg-flag c dst))
      (allocate-in (tmp 3) (reg-flag a dst)))
    (code 
      (= (tmp 1) (reg-range dst UImm UImm))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst UImm UImm))
      (= (tmp 2) (constant ? 0))
      (op-flags! (tmp 3) (ac mi ms ls op)))))

(instruction
  sbit_nimm5_a40
  (pattern 
    (constraints 
      (allocate-in dst a40)
      (imm 0 31 UImm)
      (allocate-in (tmp 0) (reg-flag c dst))
      (allocate-in (tmp 3) (reg-flag a dst)))
    (code 
      (= (tmp 1) (reg-range dst UImm UImm))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst UImm UImm))
      (= (tmp 2) (constant ? 1))
      (op-flags! (tmp 3) (ac mi ms ls op)))))

(instruction
  sbit_nimm4_a16
  (pattern 
    (constraints 
      (allocate-in dst a16)
      (imm 0 15 UImm)
      (allocate-in (tmp 0) (reg-flag c dst))
      (allocate-in (tmp 3) (reg-flag a dst)))
    (code 
      (= (tmp 1) (reg-range dst UImm UImm))
      (= (tmp 0) (tmp 1))
      (= (tmp 2) (reg-range dst UImm UImm))
      (= (tmp 2) (constant ? 1))
      (op-flags! (tmp 3) (ac mi ms ls op)))))
