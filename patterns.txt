Instruction: xorh_nimm16_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (UImm imm 0 65535)
  Code
      (= tmp_0 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_1 (bit_xor tmp_0 UImm))
      (= tmp_0 tmp_1)
      (op-flags! dst (ac mi ms ls op))


Instruction: xor_nimm16_a16
=============
Pattern:
  Constraints
    (dst reg a16)
    (UImm imm 0 65535)
  Code
      (= tmp_0 (bit_xor dst UImm))
      (= dst tmp_0)
      (op-flags! dst (ac mi ms ls op))


Instruction: xnorz_a16_a16_a16
=============
Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (bit_xor src1 src2))
      (= tmp_1 (bit_not tmp_0))
      (= dst tmp_1)
      (op-flags! dst (ac mi ms ls op))

Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_2 = ag of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (bit_xor src1 src2))
      (= tmp_1 (bit_not tmp_0))
      (= dst tmp_1)
      (= tmp_2 (constant ? 0))
      (op-flags! dst (ac mi ms ls op))


Instruction: xnorz_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_2 = ag of dst)
  Code
      (= tmp_0 (bit_xor src1 src2))
      (= tmp_1 (bit_not tmp_0))
      (= dst tmp_1)
      (= tmp_2 (constant ? 0))
      (op-flags! dst (ac mi ms ls op))


Instruction: acc_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (add (constant ? 40) src1 src2))
      (= tmp_2 (satadd (constant ? 40) dst tmp_1))
      (= dst tmp_2)
      (br bb_2)
    bb_1:
      (= tmp_3 (add (constant ? 40) src1 src2))
      (= tmp_4 (add (constant ? 40) dst tmp_3))
      (= dst tmp_4)
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of))


Instruction: ctp16_a40_a16
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a16)
  Code


Instruction: sum4_a40_a16
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a16)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (reg-range src (constant ? 0) (constant ? 7)))
      (= tmp_1 (reg-range src (constant ? 8) (constant ? 15)))
      (= tmp_2 (reg-range src (constant ? 16) (constant ? 23)))
      (= tmp_3 (reg-range src (constant ? 24) (constant ? 31)))
      (= tmp_4 (add (constant ? 16) tmp_2 tmp_3))
      (= tmp_5 (add (constant ? 16) tmp_1 tmp_4))
      (= tmp_6 (add (constant ? 16) tmp_0 tmp_5))
      (= dst tmp_6)
      (op-flags! dst (ac mi))

Pattern:
  Constraints
    (src reg a40)
    (dst reg a16)
    (tmp_7 = a of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (reg-range src (constant ? 0) (constant ? 7)))
      (= tmp_1 (reg-range src (constant ? 8) (constant ? 15)))
      (= tmp_2 (reg-range src (constant ? 16) (constant ? 23)))
      (= tmp_3 (reg-range src (constant ? 24) (constant ? 31)))
      (= tmp_4 (add (constant ? 16) tmp_2 tmp_3))
      (= tmp_5 (add (constant ? 16) tmp_1 tmp_4))
      (= tmp_6 (add (constant ? 16) tmp_0 tmp_5))
      (= dst tmp_6)
      (= tmp_8 (reg-range tmp_7 (constant ? 16) (constant ? 39)))
      (= tmp_9 (sext (constant ? 16) dst (constant ? 24)))
      (= tmp_8 tmp_9)
      (op-flags! dst (ac mi))


Instruction: sin_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
  Code


Instruction: cos_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
  Code


Instruction: atan_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
  Code


Instruction: abs_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (tmp_3 = sa of cuc)
  Code
      (= tmp_0 (icmp (constant ? 32) slt src (constant ? 0)))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (sub (constant ? 32) (constant ? 0) src))
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_2 (phi ((tmp_1 . bb_0) (src . bb_1))))
      (br tmp_3 bb_3 bb_4)
    bb_3:
      (= tmp_4 (satadd (constant ? 32) tmp_2 (constant ? 0)))
      (br bb_5)
    bb_4:
      (br bb_5)
    bb_5:
      (= tmp_5 (phi ((tmp_4 . bb_3) (tmp_2 . bb_4))))
      (= dst tmp_5)
      (op-flags! dst (ac ex mi of))


Instruction: abss_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (tmp_3 = sa of cuc)
  Code
      (= tmp_0 (icmp (constant ? 32) slt src (constant ? 0)))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (sub (constant ? 32) (constant ? 0) src))
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_2 (phi ((tmp_1 . bb_0) (src . bb_1))))
      (br tmp_3 bb_3 bb_4)
    bb_3:
      (= tmp_4 (satadd (constant ? 32) tmp_2 (constant ? 0)))
      (br bb_5)
    bb_4:
      (br bb_5)
    bb_5:
      (= tmp_5 (phi ((tmp_4 . bb_3) (tmp_2 . bb_4))))
      (= dst tmp_5)
      (op-flags! dst (ac ex mi of))


Instruction: abs_a16_a16
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a16)
    (tmp_3 = sa of cuc)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (icmp (constant ? 16) slt src (constant ? 0)))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (sub (constant ? 16) (constant ? 0) src))
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_2 (phi ((tmp_1 . bb_0) (src . bb_1))))
      (br tmp_3 bb_3 bb_4)
    bb_3:
      (= tmp_4 (satadd (constant ? 16) tmp_2 (constant ? 0)))
      (br bb_5)
    bb_4:
      (br bb_5)
    bb_5:
      (= tmp_5 (phi ((tmp_4 . bb_3) (tmp_2 . bb_4))))
      (= dst tmp_5)
      (op-flags! dst (ac ex mi of))

Pattern:
  Constraints
    (src reg a16)
    (dst reg a16)
    (tmp_3 = sa of cuc)
    (tmp_6 = ag of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (icmp (constant ? 16) slt src (constant ? 0)))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (sub (constant ? 16) (constant ? 0) src))
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_2 (phi ((tmp_1 . bb_0) (src . bb_1))))
      (br tmp_3 bb_3 bb_4)
    bb_3:
      (= tmp_4 (satadd (constant ? 16) tmp_2 (constant ? 0)))
      (br bb_5)
    bb_4:
      (br bb_5)
    bb_5:
      (= tmp_5 (phi ((tmp_4 . bb_3) (tmp_2 . bb_4))))
      (= dst tmp_5)
      (= tmp_6 (constant ? 0))
      (op-flags! dst (ac ex mi of))


Instruction: abs_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
    (tmp_4 = sa of cuc)
  Code
      (= tmp_0 (sext (constant ? 16) src (constant ? 40)))
      (= tmp_1 (icmp (constant ? 16) slt tmp_0 (constant ? 0)))
      (br tmp_1 bb_0 bb_1)
    bb_0:
      (= tmp_2 (sub (constant ? 16) (constant ? 0) tmp_0))
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((tmp_2 . bb_0) (tmp_0 . bb_1))))
      (br tmp_4 bb_3 bb_4)
    bb_3:
      (= tmp_5 (satadd (constant ? 16) tmp_3 (constant ? 0)))
      (br bb_5)
    bb_4:
      (br bb_5)
    bb_5:
      (= tmp_6 (phi ((tmp_5 . bb_3) (tmp_3 . bb_4))))
      (= dst tmp_6)
      (op-flags! dst (ac ex mi))


Instruction: absh_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
    (tmp_5 = sa of cuc)
  Code
      (= tmp_0 (sext (constant ? 16) src (constant ? 40)))
      (= tmp_1 (shl tmp_0 (constant ? 16)))
      (= tmp_2 (icmp (constant ? 16) slt tmp_1 (constant ? 0)))
      (br tmp_2 bb_0 bb_1)
    bb_0:
      (= tmp_3 (sub (constant ? 16) (constant ? 0) tmp_1))
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_4 (phi ((tmp_3 . bb_0) (tmp_1 . bb_1))))
      (br tmp_5 bb_3 bb_4)
    bb_3:
      (= tmp_6 (satadd (constant ? 16) tmp_4 (constant ? 0)))
      (br bb_5)
    bb_4:
      (br bb_5)
    bb_5:
      (= tmp_7 (phi ((tmp_6 . bb_3) (tmp_4 . bb_4))))
      (= dst tmp_7)
      (op-flags! dst (ac ex mi of))


Instruction: add_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (satadd (constant ? 32) src1 src2))
      (= dst tmp_1)
      (br bb_2)
    bb_1:
      (= tmp_2 (add (constant ? 40) src1 src2))
      (= dst tmp_2)
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: adda_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (add (constant ? 40) src1 src2))
      (= dst tmp_1)
      (br bb_2)
    bb_1:
      (= tmp_2 (satadd (constant ? 40) src1 src2))
      (= dst tmp_2)
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: add_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (sext (constant ? 16) src (constant ? 40)))
      (= tmp_2 (satadd (constant ? 32) tmp_1 dst))
      (= dst tmp_2)
      (br bb_2)
    bb_1:
      (= tmp_3 (sext (constant ? 16) src (constant ? 40)))
      (= tmp_4 (add (constant ? 40) tmp_3 dst))
      (= dst tmp_4)
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: add_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (sext (constant ? 16) src2 (constant ? 40)))
      (= tmp_2 (satadd (constant ? 32) tmp_1 src1))
      (= dst tmp_2)
      (br bb_2)
    bb_1:
      (= tmp_3 (sext (constant ? 16) src2 (constant ? 40)))
      (= tmp_4 (add (constant ? 40) tmp_3 src1))
      (= dst tmp_4)
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: addh_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (sext (constant ? 16) src (constant ? 40)))
      (= tmp_2 (shl tmp_1 (constant ? 16)))
      (= tmp_3 (satadd (constant ? 32) tmp_2 dst))
      (= dst tmp_3)
      (br bb_2)
    bb_1:
      (= tmp_4 (sext (constant ? 16) src (constant ? 40)))
      (= tmp_5 (shl tmp_4 (constant ? 16)))
      (= tmp_6 (add (constant ? 40) tmp_5 dst))
      (= dst tmp_6)
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: addh_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (sext (constant ? 16) src2 (constant ? 40)))
      (= tmp_2 (shl tmp_1 (constant ? 16)))
      (= tmp_3 (satadd (constant ? 32) tmp_2 src1))
      (= dst tmp_3)
      (br bb_2)
    bb_1:
      (= tmp_4 (sext (constant ? 16) src2 (constant ? 40)))
      (= tmp_5 (shl tmp_4 (constant ? 16)))
      (= tmp_6 (add (constant ? 40) tmp_5 src1))
      (= dst tmp_6)
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: add_nimm5_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (UImm imm 1 32)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (zext (constant ? 8) UImm (constant ? 40)))
      (= tmp_2 (shl tmp_1 (constant ? 16)))
      (= tmp_3 (satadd (constant ? 32) tmp_2 dst))
      (= dst tmp_3)
      (br bb_2)
    bb_1:
      (= tmp_4 (zext (constant ? 8) UImm (constant ? 40)))
      (= tmp_5 (shl tmp_4 (constant ? 16)))
      (= tmp_6 (add (constant ? 40) tmp_5 dst))
      (= dst tmp_6)
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: addh_nimm5_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (UImm imm 1 32)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (zext (constant ? 8) UImm (constant ? 40)))
      (= tmp_2 (shl tmp_1 (constant ? 16)))
      (= tmp_3 (satadd (constant ? 32) tmp_2 dst))
      (= dst tmp_3)
      (br bb_2)
    bb_1:
      (= tmp_4 (zext (constant ? 8) UImm (constant ? 40)))
      (= tmp_5 (shl tmp_4 (constant ? 16)))
      (= tmp_6 (add (constant ? 40) tmp_5 dst))
      (= dst tmp_6)
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: add_nimm16_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (UImm imm 0 65535)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (zext (constant ? 16) UImm (constant ? 40)))
      (= tmp_2 (shl tmp_1 (constant ? 16)))
      (= tmp_3 (satadd (constant ? 32) tmp_2 dst))
      (= dst tmp_3)
      (br bb_2)
    bb_1:
      (= tmp_4 (zext (constant ? 16) UImm (constant ? 40)))
      (= tmp_5 (shl tmp_4 (constant ? 16)))
      (= tmp_6 (add (constant ? 40) tmp_5 dst))
      (= dst tmp_6)
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: addh_nimm16_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (UImm imm 1 65535)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (zext (constant ? 16) UImm (constant ? 40)))
      (= tmp_2 (shl tmp_1 (constant ? 16)))
      (= tmp_3 (satadd (constant ? 32) tmp_2 dst))
      (= dst tmp_3)
      (br bb_2)
    bb_1:
      (= tmp_4 (zext (constant ? 16) UImm (constant ? 40)))
      (= tmp_5 (shl tmp_4 (constant ? 16)))
      (= tmp_6 (add (constant ? 40) tmp_5 dst))
      (= dst tmp_6)
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: add2_a40_a40_a40h
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40h)
    (tmp_0 = ah of dst)
    (tmp_1 = ah of src1)
    (tmp_2 = ah of src2)
    (tmp_4 = al of dst)
    (tmp_5 = al of src1)
    (tmp_6 = al of src2)
    (tmp_8 = a of dst)
  Code
      (= tmp_3 (satadd (constant ? 16) tmp_1 tmp_2))
      (= tmp_0 tmp_3)
      (= tmp_7 (satadd (constant ? 16) tmp_5 tmp_6))
      (= tmp_4 tmp_7)
      (= tmp_9 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_8 tmp_9)
      (op-flags! dst (ac ex mi))


Instruction: add2_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_0 = ah of dst)
    (tmp_1 = ah of src1)
    (tmp_2 = ah of src2)
    (tmp_4 = al of dst)
    (tmp_5 = al of src1)
    (tmp_6 = al of src2)
    (tmp_8 = a of dst)
  Code
      (= tmp_3 (satadd (constant ? 16) tmp_1 tmp_2))
      (= tmp_0 tmp_3)
      (= tmp_7 (satadd (constant ? 16) tmp_5 tmp_6))
      (= tmp_4 tmp_7)
      (= tmp_9 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_8 tmp_9)
      (op-flags! dst (ac ex mi))


Instruction: addscale2_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_18 = a of dst)
  Code
      (= tmp_0 (- (constant ? 31) (constant ? 16)))
      (= tmp_1 (+ (constant ? 1) tmp_0))
      (= tmp_2 (- (constant ? 31) (constant ? 16)))
      (= tmp_3 (+ (constant ? 1) tmp_2))
      (= tmp_4 (reg-range src1 (constant ? 16) (constant ? 31)))
      (= tmp_5 (reg-range src2 (constant ? 16) (constant ? 31)))
      (= tmp_6 (add tmp_3 tmp_4 tmp_5))
      (= tmp_7 (sdiv tmp_6 (constant ? 2)))
      (= tmp_8 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_8 tmp_7)
      (= tmp_9 (- (constant ? 31) (constant ? 16)))
      (= tmp_10 (+ (constant ? 1) tmp_9))
      (= tmp_11 (- (constant ? 31) (constant ? 16)))
      (= tmp_12 (+ (constant ? 1) tmp_11))
      (= tmp_13 (reg-range src1 (constant ? 16) (constant ? 31)))
      (= tmp_14 (reg-range src2 (constant ? 16) (constant ? 31)))
      (= tmp_15 (add tmp_12 tmp_13 tmp_14))
      (= tmp_16 (sdiv tmp_15 (constant ? 2)))
      (= tmp_17 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_17 tmp_16)
      (= tmp_19 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_18 tmp_19)
      (op-flags! dst (ac ex mi))


Instruction: addscale2r_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_20 = a of dst)
  Code
      (= tmp_0 (- (constant ? 31) (constant ? 16)))
      (= tmp_1 (+ (constant ? 1) tmp_0))
      (= tmp_2 (- (constant ? 31) (constant ? 16)))
      (= tmp_3 (+ (constant ? 1) tmp_2))
      (= tmp_4 (reg-range src1 (constant ? 16) (constant ? 31)))
      (= tmp_5 (reg-range src2 (constant ? 16) (constant ? 31)))
      (= tmp_6 (add tmp_3 tmp_4 tmp_5))
      (= tmp_7 (add tmp_1 tmp_6 (constant ? 1)))
      (= tmp_8 (sdiv tmp_7 (constant ? 2)))
      (= tmp_9 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_9 tmp_8)
      (= tmp_10 (- (constant ? 31) (constant ? 16)))
      (= tmp_11 (+ (constant ? 1) tmp_10))
      (= tmp_12 (- (constant ? 31) (constant ? 16)))
      (= tmp_13 (+ (constant ? 1) tmp_12))
      (= tmp_14 (reg-range src1 (constant ? 16) (constant ? 31)))
      (= tmp_15 (reg-range src2 (constant ? 16) (constant ? 31)))
      (= tmp_16 (add tmp_13 tmp_14 tmp_15))
      (= tmp_17 (add tmp_11 tmp_16 (constant ? 1)))
      (= tmp_18 (sdiv tmp_17 (constant ? 2)))
      (= tmp_19 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_19 tmp_18)
      (= tmp_21 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_20 tmp_21)
      (op-flags! dst (ac ex mi))


Instruction: add4_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_32 = a of dst)
  Code
      (= tmp_0 (- (constant ? 7) (constant ? 0)))
      (= tmp_1 (+ (constant ? 1) tmp_0))
      (= tmp_2 (- (constant ? 7) (constant ? 0)))
      (= tmp_3 (+ (constant ? 1) tmp_2))
      (= tmp_4 (reg-range src1 (constant ? 0) (constant ? 7)))
      (= tmp_5 (reg-range src2 (constant ? 0) (constant ? 7)))
      (= tmp_6 (satadd tmp_3 tmp_4 tmp_5))
      (= tmp_7 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_7 tmp_6)
      (= tmp_8 (- (constant ? 15) (constant ? 8)))
      (= tmp_9 (+ (constant ? 1) tmp_8))
      (= tmp_10 (- (constant ? 15) (constant ? 8)))
      (= tmp_11 (+ (constant ? 1) tmp_10))
      (= tmp_12 (reg-range src1 (constant ? 8) (constant ? 15)))
      (= tmp_13 (reg-range src2 (constant ? 8) (constant ? 15)))
      (= tmp_14 (satadd tmp_11 tmp_12 tmp_13))
      (= tmp_15 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_15 tmp_14)
      (= tmp_16 (- (constant ? 23) (constant ? 16)))
      (= tmp_17 (+ (constant ? 1) tmp_16))
      (= tmp_18 (- (constant ? 23) (constant ? 16)))
      (= tmp_19 (+ (constant ? 1) tmp_18))
      (= tmp_20 (reg-range src1 (constant ? 16) (constant ? 23)))
      (= tmp_21 (reg-range src2 (constant ? 16) (constant ? 23)))
      (= tmp_22 (satadd tmp_19 tmp_20 tmp_21))
      (= tmp_23 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_23 tmp_22)
      (= tmp_24 (- (constant ? 31) (constant ? 24)))
      (= tmp_25 (+ (constant ? 1) tmp_24))
      (= tmp_26 (- (constant ? 31) (constant ? 24)))
      (= tmp_27 (+ (constant ? 1) tmp_26))
      (= tmp_28 (reg-range src1 (constant ? 24) (constant ? 31)))
      (= tmp_29 (reg-range src2 (constant ? 24) (constant ? 31)))
      (= tmp_30 (satadd tmp_27 tmp_28 tmp_29))
      (= tmp_31 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_31 tmp_30)
      (= tmp_33 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_32 tmp_33)
      (op-flags! dst (ac ex mi))


Instruction: addscale4_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_36 = a of dst)
  Code
      (= tmp_0 (- (constant ? 7) (constant ? 0)))
      (= tmp_1 (+ (constant ? 1) tmp_0))
      (= tmp_2 (- (constant ? 7) (constant ? 0)))
      (= tmp_3 (+ (constant ? 1) tmp_2))
      (= tmp_4 (reg-range src1 (constant ? 0) (constant ? 7)))
      (= tmp_5 (reg-range src2 (constant ? 0) (constant ? 7)))
      (= tmp_6 (add tmp_3 tmp_4 tmp_5))
      (= tmp_7 (sdiv tmp_6 (constant ? 2)))
      (= tmp_8 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_8 tmp_7)
      (= tmp_9 (- (constant ? 15) (constant ? 8)))
      (= tmp_10 (+ (constant ? 1) tmp_9))
      (= tmp_11 (- (constant ? 15) (constant ? 8)))
      (= tmp_12 (+ (constant ? 1) tmp_11))
      (= tmp_13 (reg-range src1 (constant ? 8) (constant ? 15)))
      (= tmp_14 (reg-range src2 (constant ? 8) (constant ? 15)))
      (= tmp_15 (add tmp_12 tmp_13 tmp_14))
      (= tmp_16 (sdiv tmp_15 (constant ? 2)))
      (= tmp_17 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_17 tmp_16)
      (= tmp_18 (- (constant ? 23) (constant ? 16)))
      (= tmp_19 (+ (constant ? 1) tmp_18))
      (= tmp_20 (- (constant ? 23) (constant ? 16)))
      (= tmp_21 (+ (constant ? 1) tmp_20))
      (= tmp_22 (reg-range src1 (constant ? 16) (constant ? 23)))
      (= tmp_23 (reg-range src2 (constant ? 16) (constant ? 23)))
      (= tmp_24 (add tmp_21 tmp_22 tmp_23))
      (= tmp_25 (sdiv tmp_24 (constant ? 2)))
      (= tmp_26 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_26 tmp_25)
      (= tmp_27 (- (constant ? 31) (constant ? 24)))
      (= tmp_28 (+ (constant ? 1) tmp_27))
      (= tmp_29 (- (constant ? 31) (constant ? 24)))
      (= tmp_30 (+ (constant ? 1) tmp_29))
      (= tmp_31 (reg-range src1 (constant ? 24) (constant ? 31)))
      (= tmp_32 (reg-range src2 (constant ? 24) (constant ? 31)))
      (= tmp_33 (add tmp_30 tmp_31 tmp_32))
      (= tmp_34 (sdiv tmp_33 (constant ? 2)))
      (= tmp_35 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_35 tmp_34)
      (= tmp_37 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_36 tmp_37)
      (op-flags! dst (ac ex mi))


Instruction: addscale4r_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_40 = a of dst)
  Code
      (= tmp_0 (- (constant ? 7) (constant ? 0)))
      (= tmp_1 (+ (constant ? 1) tmp_0))
      (= tmp_2 (- (constant ? 7) (constant ? 0)))
      (= tmp_3 (+ (constant ? 1) tmp_2))
      (= tmp_4 (reg-range src1 (constant ? 0) (constant ? 7)))
      (= tmp_5 (reg-range src2 (constant ? 0) (constant ? 7)))
      (= tmp_6 (add tmp_3 tmp_4 tmp_5))
      (= tmp_7 (add tmp_1 tmp_6 (constant ? 1)))
      (= tmp_8 (sdiv tmp_7 (constant ? 2)))
      (= tmp_9 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_9 tmp_8)
      (= tmp_10 (- (constant ? 15) (constant ? 8)))
      (= tmp_11 (+ (constant ? 1) tmp_10))
      (= tmp_12 (- (constant ? 15) (constant ? 8)))
      (= tmp_13 (+ (constant ? 1) tmp_12))
      (= tmp_14 (reg-range src1 (constant ? 8) (constant ? 15)))
      (= tmp_15 (reg-range src2 (constant ? 8) (constant ? 15)))
      (= tmp_16 (add tmp_13 tmp_14 tmp_15))
      (= tmp_17 (add tmp_11 tmp_16 (constant ? 1)))
      (= tmp_18 (sdiv tmp_17 (constant ? 2)))
      (= tmp_19 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_19 tmp_18)
      (= tmp_20 (- (constant ? 23) (constant ? 16)))
      (= tmp_21 (+ (constant ? 1) tmp_20))
      (= tmp_22 (- (constant ? 23) (constant ? 16)))
      (= tmp_23 (+ (constant ? 1) tmp_22))
      (= tmp_24 (reg-range src1 (constant ? 16) (constant ? 23)))
      (= tmp_25 (reg-range src2 (constant ? 16) (constant ? 23)))
      (= tmp_26 (add tmp_23 tmp_24 tmp_25))
      (= tmp_27 (add tmp_21 tmp_26 (constant ? 1)))
      (= tmp_28 (sdiv tmp_27 (constant ? 2)))
      (= tmp_29 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_29 tmp_28)
      (= tmp_30 (- (constant ? 31) (constant ? 24)))
      (= tmp_31 (+ (constant ? 1) tmp_30))
      (= tmp_32 (- (constant ? 31) (constant ? 24)))
      (= tmp_33 (+ (constant ? 1) tmp_32))
      (= tmp_34 (reg-range src1 (constant ? 24) (constant ? 31)))
      (= tmp_35 (reg-range src2 (constant ? 24) (constant ? 31)))
      (= tmp_36 (add tmp_33 tmp_34 tmp_35))
      (= tmp_37 (add tmp_31 tmp_36 (constant ? 1)))
      (= tmp_38 (sdiv tmp_37 (constant ? 2)))
      (= tmp_39 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_39 tmp_38)
      (= tmp_41 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_40 tmp_41)
      (op-flags! dst (ac ex mi))


Instruction: addsh_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (ashr src (constant ? 16)))
      (= tmp_2 (satadd (constant ? 32) tmp_1 dst))
      (= dst tmp_2)
      (br bb_2)
    bb_1:
      (= tmp_3 (ashr src (constant ? 16)))
      (= tmp_4 (add (constant ? 40) tmp_3 dst))
      (= dst tmp_4)
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: addz_a16_a16_a16
=============
Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_0 = sa of cuc)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (satadd (constant ? 16) src1 src2))
      (= dst tmp_1)
      (br bb_2)
    bb_1:
      (= tmp_2 (add (constant ? 16) src1 src2))
      (= dst tmp_2)
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))

Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_0 = sa of cuc)
    (tmp_4 = ag of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (satadd (constant ? 16) src1 src2))
      (= dst tmp_1)
      (br bb_2)
    bb_1:
      (= tmp_2 (add (constant ? 16) src1 src2))
      (= dst tmp_2)
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_4 (constant ? 0))
      (op-flags! dst (ac ex mi of c))


Instruction: adds_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_0 = sa of cuc)
    (tmp_6 = a of dst)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (sext (constant ? 16) src2 (constant ? 32)))
      (= tmp_2 (satadd (constant ? 32) src1 tmp_1))
      (= dst tmp_2)
      (br bb_2)
    bb_1:
      (= tmp_3 (sext (constant ? 16) src2 (constant ? 32)))
      (= tmp_4 (add (constant ? 32) src1 tmp_3))
      (= dst tmp_4)
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_7 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_6 tmp_7)
      (op-flags! dst (ac ex mi of c))


Instruction: addz_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_0 = sa of cuc)
    (tmp_6 = ag of dst)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (zext (constant ? 16) src2 (constant ? 32)))
      (= tmp_2 (satadd (constant ? 32) src1 tmp_1))
      (= dst tmp_2)
      (br bb_2)
    bb_1:
      (= tmp_3 (zext (constant ? 16) src2 (constant ? 32)))
      (= tmp_4 (add (constant ? 32) src1 tmp_3))
      (= dst tmp_4)
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_6 (constant ? 0))
      (op-flags! dst (ac ex mi of c))


Instruction: addhs_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_0 = sa of cuc)
    (tmp_8 = a of dst)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (sext (constant ? 16) src2 (constant ? 32)))
      (= tmp_2 (shl tmp_1 (constant ? 16)))
      (= tmp_3 (satadd (constant ? 32) src1 tmp_2))
      (= dst tmp_3)
      (br bb_2)
    bb_1:
      (= tmp_4 (sext (constant ? 16) src2 (constant ? 32)))
      (= tmp_5 (shl tmp_4 (constant ? 16)))
      (= tmp_6 (add (constant ? 32) src1 tmp_5))
      (= dst tmp_6)
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_9 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_8 tmp_9)
      (op-flags! dst (ac ex mi of c))


Instruction: addhz_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_0 = sa of cuc)
    (tmp_8 = ag of dst)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (zext (constant ? 16) src2 (constant ? 32)))
      (= tmp_2 (shl tmp_1 (constant ? 16)))
      (= tmp_3 (satadd (constant ? 32) src1 tmp_2))
      (= dst tmp_3)
      (br bb_2)
    bb_1:
      (= tmp_4 (zext (constant ? 16) src2 (constant ? 32)))
      (= tmp_5 (shl tmp_4 (constant ? 16)))
      (= tmp_6 (add (constant ? 32) src1 tmp_5))
      (= dst tmp_6)
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_8 (constant ? 0))
      (op-flags! dst (ac ex mi of c))


Instruction: adds_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_0 = sa of cuc)
    (tmp_4 = a of dst)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (satadd (constant ? 32) src1 src2))
      (= dst tmp_1)
      (br bb_2)
    bb_1:
      (= tmp_2 (add (constant ? 32) src1 src2))
      (= dst tmp_2)
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_5 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_4 tmp_5)
      (op-flags! dst (ac ex mi of c))


Instruction: addz_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_0 = sa of cuc)
    (tmp_4 = ag of dst)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (satadd (constant ? 32) src1 src2))
      (= dst tmp_1)
      (br bb_2)
    bb_1:
      (= tmp_2 (add (constant ? 32) src1 src2))
      (= dst tmp_2)
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_4 (constant ? 0))
      (op-flags! dst (ac ex mi of c))


Instruction: bpackh_a40_a16h
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a16h)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (reg-range src (constant ? 8) (constant ? 15)))
      (= tmp_0 tmp_1)
      (= tmp_2 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_3 (reg-range src (constant ? 24) (constant ? 31)))
      (= tmp_2 tmp_3)


Instruction: bpackl_a40_a16h
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a16h)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 7)))
      (= tmp_0 tmp_1)
      (= tmp_2 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_3 (reg-range src (constant ? 16) (constant ? 23)))
      (= tmp_2 tmp_3)


Instruction: bpackl_a40_a16l
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a16l)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 7)))
      (= tmp_0 tmp_1)
      (= tmp_2 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_3 (reg-range src (constant ? 16) (constant ? 23)))
      (= tmp_2 tmp_3)


Instruction: bpackls_a40_a16
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a16)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 7)))
      (= tmp_0 tmp_1)
      (= tmp_2 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_3 (reg-range src (constant ? 16) (constant ? 23)))
      (= tmp_2 tmp_3)


Instruction: bswap_a16h_a16h
=============
Pattern:
  Constraints
    (src reg a16h)
    (dst reg a16h)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (reg-range src (constant ? 8) (constant ? 15)))
      (= tmp_0 tmp_1)
      (= tmp_2 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_3 (reg-range src (constant ? 0) (constant ? 7)))
      (= tmp_2 tmp_3)


Instruction: bswap_a16_a16
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a16)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (reg-range src (constant ? 8) (constant ? 15)))
      (= tmp_0 tmp_1)
      (= tmp_2 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_3 (reg-range src (constant ? 0) (constant ? 7)))
      (= tmp_2 tmp_3)


Instruction: bupackh_a16l_a40
=============
Pattern:
  Constraints
    (src reg a16l)
    (dst reg a40)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_0 (constant ? 0))
      (= tmp_1 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_2 (reg-range src (constant ? 0) (constant ? 7)))
      (= tmp_1 tmp_2)
      (= tmp_3 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_3 (constant ? 0))
      (= tmp_4 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_5 (reg-range src (constant ? 8) (constant ? 15)))
      (= tmp_4 tmp_5)
      (= tmp_6 (sext (constant ? 32) dst (constant ? 40)))
      (= dst tmp_6)
      (op-flags! dst (ac ex mi))


Instruction: bupackl_a16h_a40
=============
Pattern:
  Constraints
    (src reg a16h)
    (dst reg a40)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 7)))
      (= tmp_0 tmp_1)
      (= tmp_2 (sext (constant ? 8) dst (constant ? 16)))
      (= dst tmp_2)
      (= tmp_3 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_4 (reg-range src (constant ? 8) (constant ? 15)))
      (= tmp_3 tmp_4)
      (= tmp_5 (sext (constant ? 24) dst (constant ? 40)))
      (= dst tmp_5)
      (op-flags! dst (ac ex mi))


Instruction: bupackl_a16l_a40
=============
Pattern:
  Constraints
    (src reg a16l)
    (dst reg a40)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 7)))
      (= tmp_0 tmp_1)
      (= tmp_2 (sext (constant ? 8) dst (constant ? 16)))
      (= dst tmp_2)
      (= tmp_3 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_4 (reg-range src (constant ? 8) (constant ? 15)))
      (= tmp_3 tmp_4)
      (= tmp_5 (sext (constant ? 24) dst (constant ? 40)))
      (= dst tmp_5)
      (op-flags! dst (ac ex mi))


Instruction: bupacklz_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
    (tmp_6 = ag of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 7)))
      (= tmp_0 tmp_1)
      (= tmp_2 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_2 (constant ? 0))
      (= tmp_3 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_4 (reg-range src (constant ? 8) (constant ? 15)))
      (= tmp_3 tmp_4)
      (= tmp_5 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_5 (constant ? 0))
      (= tmp_6 (constant ? 0))
      (op-flags! dst (ac ex mi))


Instruction: cmph_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
    (tmp_2 = ac of dst)
    (tmp_4 = mi of dst)
  Code
      (= tmp_0 (sext (constant ? 16) src (constant ? 40)))
      (= tmp_1 (shl tmp_0 (constant ? 16)))
      (= tmp_3 (icmp eq (constant ? 16) dst tmp_1))
      (= tmp_2 tmp_3)
      (= tmp_5 (icmp slt (constant ? 16) dst tmp_1))
      (= tmp_4 tmp_5)


Instruction: cmp_nimm16_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (SImm imm -32768 32767)
    (tmp_1 = ac of dst)
    (tmp_3 = mi of dst)
  Code
      (= tmp_0 (sext (constant ? 16) SImm (constant ? 40)))
      (= tmp_2 (icmp eq (constant ? 40) dst tmp_0))
      (= tmp_1 tmp_2)
      (= tmp_4 (icmp slt (constant ? 40) dst tmp_0))
      (= tmp_3 tmp_4)


Instruction: cmph_nimm16_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (SImm imm -32768 32767)
    (tmp_2 = ac of dst)
    (tmp_4 = mi of dst)
  Code
      (= tmp_0 (sext (constant ? 16) SImm (constant ? 40)))
      (= tmp_1 (shl tmp_0 (constant ? 16)))
      (= tmp_3 (icmp eq (constant ? 40) dst tmp_1))
      (= tmp_2 tmp_3)
      (= tmp_5 (icmp slt (constant ? 40) dst tmp_1))
      (= tmp_4 tmp_5)


Instruction: cmp_nimm16_a16
=============
Pattern:
  Constraints
    (dst reg a16)
    (SImm imm -32768 32767)
    (tmp_0 = ac of dst)
    (tmp_2 = mi of dst)
  Code
      (= tmp_1 (icmp eq (constant ? 16) dst SImm))
      (= tmp_0 tmp_1)
      (= tmp_3 (icmp slt (constant ? 16) dst SImm))
      (= tmp_2 tmp_3)


Instruction: cmp_a16_a16
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a16)
    (tmp_0 = ac of dst)
    (tmp_2 = mi of dst)
  Code
      (= tmp_1 (icmp eq (constant ? 16) dst src))
      (= tmp_0 tmp_1)
      (= tmp_3 (icmp slt (constant ? 16) dst src))
      (= tmp_2 tmp_3)


Instruction: cmpz_a16_a16
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a16)
    (tmp_0 = ac of dst)
    (tmp_2 = mi of dst)
  Code
      (= tmp_1 (icmp eq (constant ? 16) dst src))
      (= tmp_0 tmp_1)
      (= tmp_3 (icmp ult (constant ? 16) dst src))
      (= tmp_2 tmp_3)


Instruction: copy_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
  Code
      (= dst src)
      (op-flags! dst (ac ex mi c))


Instruction: copys_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (tmp_0 = a of dst)
  Code
      (= dst src)
      (= tmp_1 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_0 tmp_1)
      (op-flags! dst (ac ex mi))


Instruction: copyz_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (tmp_0 = a of dst)
  Code
      (= dst src)
      (= tmp_1 (zext (constant ? 32) dst (constant ? 40)))
      (= tmp_0 tmp_1)
      (op-flags! dst (ac ex mi))


Instruction: ldc_nimm9_a16
=============
Pattern:
  Constraints
    (dst reg a16)
    (simm8b zimm -128 128)
    (tmp_0 = a of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= dst simm8b)
      (= tmp_1 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_0 tmp_1)

Pattern:
  Constraints
    (dst reg a16)
    (simm8b zimm -128 128)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= dst simm8b)


Instruction: max_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_1 = c of dst)
    (tmp_2 = c of dst)
  Code
      (= tmp_0 (icmp (constant ? 40) sgt src1 src2))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= dst src1)
      (= tmp_1 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst src2)
      (= tmp_2 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))


Instruction: maxs_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_3 = c of dst)
    (tmp_4 = c of dst)
  Code
      (= tmp_0 (reg-range src1 (constant ? 0) (constant ? 31)))
      (= tmp_1 (reg-range src2 (constant ? 0) (constant ? 31)))
      (= tmp_2 (icmp (constant ? 32) sgt tmp_0 tmp_1))
      (br tmp_2 bb_0 bb_1)
    bb_0:
      (= dst tmp_0)
      (= tmp_3 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst tmp_1)
      (= tmp_4 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))


Instruction: maxz_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_3 = c of dst)
    (tmp_4 = c of dst)
    (tmp_6 = ag of dst)
  Code
      (= tmp_0 (reg-range src1 (constant ? 0) (constant ? 31)))
      (= tmp_1 (reg-range src2 (constant ? 0) (constant ? 31)))
      (= tmp_2 (icmp (constant ? 32) ugt tmp_0 tmp_1))
      (br tmp_2 bb_0 bb_1)
    bb_0:
      (= dst tmp_0)
      (= tmp_3 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst tmp_1)
      (= tmp_4 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_6 (constant ? 0))
      (op-flags! dst (ac ex mi))


Instruction: max2_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_10 = a of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_1 (reg-range src1 (constant ? 0) (constant ? 15)))
      (= tmp_2 (reg-range src2 (constant ? 0) (constant ? 15)))
      (= tmp_3 (icmp (constant ? 16) sgt tmp_1 tmp_2))
      (br tmp_3 bb_0 bb_1)
    bb_0:
      (= tmp_0 tmp_1)
      (br bb_2)
    bb_1:
      (= tmp_0 tmp_2)
      (br bb_2)
    bb_2:
      (= tmp_4 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_5 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_6 (reg-range src1 (constant ? 16) (constant ? 31)))
      (= tmp_7 (reg-range src2 (constant ? 16) (constant ? 31)))
      (= tmp_8 (icmp (constant ? 16) sgt tmp_6 tmp_7))
      (br tmp_8 bb_3 bb_4)
    bb_3:
      (= tmp_5 tmp_6)
      (br bb_5)
    bb_4:
      (= tmp_5 tmp_7)
      (br bb_5)
    bb_5:
      (= tmp_9 (phi ((no-value . bb_3) (no-value . bb_4))))
      (= tmp_11 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_10 tmp_11)
      (op-flags! dst (ac ex mi))


Instruction: max2_a40_a16
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a16)
    (tmp_3 = c of dst)
    (tmp_4 = c of dst)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (reg-range src (constant ? 16) (constant ? 31)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 15)))
      (= tmp_2 (icmp (constant ? 16) sgt tmp_0 tmp_1))
      (br tmp_2 bb_0 bb_1)
    bb_0:
      (= dst tmp_0)
      (= tmp_3 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst tmp_1)
      (= tmp_4 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))

Pattern:
  Constraints
    (src reg a40)
    (dst reg a16)
    (tmp_3 = c of dst)
    (tmp_4 = c of dst)
    (tmp_6 = a of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (reg-range src (constant ? 16) (constant ? 31)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 15)))
      (= tmp_2 (icmp (constant ? 16) sgt tmp_0 tmp_1))
      (br tmp_2 bb_0 bb_1)
    bb_0:
      (= dst tmp_0)
      (= tmp_3 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst tmp_1)
      (= tmp_4 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_7 (reg-range tmp_6 (constant ? 16) (constant ? 39)))
      (= tmp_8 (sext (constant ? 16) dst (constant ? 24)))
      (= tmp_7 tmp_8)
      (op-flags! dst (ac ex mi))


Instruction: maxz2_a40_a16
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a16)
    (tmp_3 = c of dst)
    (tmp_4 = c of dst)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (reg-range src (constant ? 16) (constant ? 31)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 15)))
      (= tmp_2 (icmp (constant ? 16) ugt tmp_0 tmp_1))
      (br tmp_2 bb_0 bb_1)
    bb_0:
      (= dst tmp_0)
      (= tmp_3 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst tmp_1)
      (= tmp_4 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))

Pattern:
  Constraints
    (src reg a40)
    (dst reg a16)
    (tmp_3 = c of dst)
    (tmp_4 = c of dst)
    (tmp_6 = a of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (reg-range src (constant ? 16) (constant ? 31)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 15)))
      (= tmp_2 (icmp (constant ? 16) ugt tmp_0 tmp_1))
      (br tmp_2 bb_0 bb_1)
    bb_0:
      (= dst tmp_0)
      (= tmp_3 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst tmp_1)
      (= tmp_4 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_7 (reg-range tmp_6 (constant ? 16) (constant ? 39)))
      (= tmp_8 (zext (constant ? 16) dst (constant ? 24)))
      (= tmp_7 tmp_8)
      (op-flags! dst (ac ex mi))


Instruction: max4_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_20 = a of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (reg-range src1 (constant ? 0) (constant ? 7)))
      (= tmp_2 (reg-range src2 (constant ? 0) (constant ? 7)))
      (= tmp_3 (icmp (constant ? 8) sgt tmp_1 tmp_2))
      (br tmp_3 bb_0 bb_1)
    bb_0:
      (= tmp_0 tmp_1)
      (br bb_2)
    bb_1:
      (= tmp_0 tmp_2)
      (br bb_2)
    bb_2:
      (= tmp_4 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_5 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_6 (reg-range src1 (constant ? 8) (constant ? 15)))
      (= tmp_7 (reg-range src2 (constant ? 8) (constant ? 15)))
      (= tmp_8 (icmp (constant ? 8) sgt tmp_6 tmp_7))
      (br tmp_8 bb_3 bb_4)
    bb_3:
      (= tmp_5 tmp_6)
      (br bb_5)
    bb_4:
      (= tmp_5 tmp_7)
      (br bb_5)
    bb_5:
      (= tmp_9 (phi ((no-value . bb_3) (no-value . bb_4))))
      (= tmp_10 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_11 (reg-range src1 (constant ? 16) (constant ? 23)))
      (= tmp_12 (reg-range src2 (constant ? 16) (constant ? 23)))
      (= tmp_13 (icmp (constant ? 8) sgt tmp_11 tmp_12))
      (br tmp_13 bb_6 bb_7)
    bb_6:
      (= tmp_10 tmp_11)
      (br bb_8)
    bb_7:
      (= tmp_10 tmp_12)
      (br bb_8)
    bb_8:
      (= tmp_14 (phi ((no-value . bb_6) (no-value . bb_7))))
      (= tmp_15 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_16 (reg-range src1 (constant ? 24) (constant ? 31)))
      (= tmp_17 (reg-range src2 (constant ? 24) (constant ? 31)))
      (= tmp_18 (icmp (constant ? 8) sgt tmp_16 tmp_17))
      (br tmp_18 bb_9 bb_10)
    bb_9:
      (= tmp_15 tmp_16)
      (br bb_11)
    bb_10:
      (= tmp_15 tmp_17)
      (br bb_11)
    bb_11:
      (= tmp_19 (phi ((no-value . bb_9) (no-value . bb_10))))
      (= tmp_21 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_20 tmp_21)
      (op-flags! dst (ac ex mi))


Instruction: maxs_a16_a16_a16
=============
Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_1 = c of dst)
    (tmp_2 = c of dst)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (icmp (constant ? 16) sgt src1 src2))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= dst src1)
      (= tmp_1 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst src2)
      (= tmp_2 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))

Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_1 = c of dst)
    (tmp_2 = c of dst)
    (tmp_4 = a of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (icmp (constant ? 16) sgt src1 src2))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= dst src1)
      (= tmp_1 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst src2)
      (= tmp_2 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_5 (reg-range tmp_4 (constant ? 16) (constant ? 39)))
      (= tmp_6 (sext (constant ? 16) dst (constant ? 24)))
      (= tmp_5 tmp_6)
      (op-flags! dst (ac ex mi))


Instruction: maxz_a16_a16_a16
=============
Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_1 = c of dst)
    (tmp_2 = c of dst)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (icmp (constant ? 16) ugt src1 src2))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= dst src1)
      (= tmp_1 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst src2)
      (= tmp_2 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))

Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_1 = c of dst)
    (tmp_2 = c of dst)
    (tmp_4 = a of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (icmp (constant ? 16) ugt src1 src2))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= dst src1)
      (= tmp_1 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst src2)
      (= tmp_2 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_5 (reg-range tmp_4 (constant ? 16) (constant ? 39)))
      (= tmp_6 (zext (constant ? 16) dst (constant ? 24)))
      (= tmp_5 tmp_6)
      (op-flags! dst (ac ex mi))


Instruction: min_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_1 = c of dst)
    (tmp_2 = c of dst)
  Code
      (= tmp_0 (icmp (constant ? 40) slt src1 src2))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= dst src1)
      (= tmp_1 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst src2)
      (= tmp_2 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))


Instruction: mins_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_3 = c of dst)
    (tmp_4 = c of dst)
    (tmp_6 = a of dst)
  Code
      (= tmp_0 (reg-range src1 (constant ? 0) (constant ? 31)))
      (= tmp_1 (reg-range src2 (constant ? 0) (constant ? 31)))
      (= tmp_2 (icmp (constant ? 32) slt tmp_0 tmp_1))
      (br tmp_2 bb_0 bb_1)
    bb_0:
      (= dst tmp_0)
      (= tmp_3 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst tmp_1)
      (= tmp_4 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_7 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_6 tmp_7)
      (op-flags! dst (ac ex mi))


Instruction: minz_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_3 = c of dst)
    (tmp_4 = c of dst)
    (tmp_6 = ag of dst)
  Code
      (= tmp_0 (reg-range src1 (constant ? 0) (constant ? 31)))
      (= tmp_1 (reg-range src2 (constant ? 0) (constant ? 31)))
      (= tmp_2 (icmp (constant ? 32) ult tmp_0 tmp_1))
      (br tmp_2 bb_0 bb_1)
    bb_0:
      (= dst tmp_0)
      (= tmp_3 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst tmp_1)
      (= tmp_4 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_6 (constant ? 0))
      (op-flags! dst (ac ex mi))


Instruction: min2_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_10 = a of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_1 (reg-range src1 (constant ? 0) (constant ? 15)))
      (= tmp_2 (reg-range src2 (constant ? 0) (constant ? 15)))
      (= tmp_3 (icmp (constant ? 16) slt tmp_1 tmp_2))
      (br tmp_3 bb_0 bb_1)
    bb_0:
      (= tmp_0 tmp_1)
      (br bb_2)
    bb_1:
      (= tmp_0 tmp_2)
      (br bb_2)
    bb_2:
      (= tmp_4 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_5 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_6 (reg-range src1 (constant ? 16) (constant ? 31)))
      (= tmp_7 (reg-range src2 (constant ? 16) (constant ? 31)))
      (= tmp_8 (icmp (constant ? 16) slt tmp_6 tmp_7))
      (br tmp_8 bb_3 bb_4)
    bb_3:
      (= tmp_5 tmp_6)
      (br bb_5)
    bb_4:
      (= tmp_5 tmp_7)
      (br bb_5)
    bb_5:
      (= tmp_9 (phi ((no-value . bb_3) (no-value . bb_4))))
      (= tmp_11 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_10 tmp_11)
      (op-flags! dst (ac ex mi))


Instruction: min2_a40_a16
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a16)
    (tmp_3 = c of dst)
    (tmp_4 = c of dst)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (reg-range src (constant ? 16) (constant ? 31)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 15)))
      (= tmp_2 (icmp (constant ? 16) slt tmp_0 tmp_1))
      (br tmp_2 bb_0 bb_1)
    bb_0:
      (= dst tmp_0)
      (= tmp_3 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst tmp_1)
      (= tmp_4 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))

Pattern:
  Constraints
    (src reg a40)
    (dst reg a16)
    (tmp_3 = c of dst)
    (tmp_4 = c of dst)
    (tmp_6 = a of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (reg-range src (constant ? 16) (constant ? 31)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 15)))
      (= tmp_2 (icmp (constant ? 16) slt tmp_0 tmp_1))
      (br tmp_2 bb_0 bb_1)
    bb_0:
      (= dst tmp_0)
      (= tmp_3 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst tmp_1)
      (= tmp_4 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_7 (reg-range tmp_6 (constant ? 16) (constant ? 39)))
      (= tmp_8 (sext (constant ? 16) dst (constant ? 24)))
      (= tmp_7 tmp_8)
      (op-flags! dst (ac ex mi))


Instruction: minz2_a40_a16
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a16)
    (tmp_3 = c of dst)
    (tmp_4 = c of dst)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (reg-range src (constant ? 16) (constant ? 31)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 15)))
      (= tmp_2 (icmp (constant ? 16) ult tmp_0 tmp_1))
      (br tmp_2 bb_0 bb_1)
    bb_0:
      (= dst tmp_0)
      (= tmp_3 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst tmp_1)
      (= tmp_4 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))

Pattern:
  Constraints
    (src reg a40)
    (dst reg a16)
    (tmp_3 = c of dst)
    (tmp_4 = c of dst)
    (tmp_6 = a of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (reg-range src (constant ? 16) (constant ? 31)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 15)))
      (= tmp_2 (icmp (constant ? 16) ult tmp_0 tmp_1))
      (br tmp_2 bb_0 bb_1)
    bb_0:
      (= dst tmp_0)
      (= tmp_3 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst tmp_1)
      (= tmp_4 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_7 (reg-range tmp_6 (constant ? 16) (constant ? 39)))
      (= tmp_8 (zext (constant ? 16) dst (constant ? 24)))
      (= tmp_7 tmp_8)
      (op-flags! dst (ac ex mi))


Instruction: min4_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_20 = a of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (reg-range src1 (constant ? 0) (constant ? 7)))
      (= tmp_2 (reg-range src2 (constant ? 0) (constant ? 7)))
      (= tmp_3 (icmp (constant ? 8) slt tmp_1 tmp_2))
      (br tmp_3 bb_0 bb_1)
    bb_0:
      (= tmp_0 tmp_1)
      (br bb_2)
    bb_1:
      (= tmp_0 tmp_2)
      (br bb_2)
    bb_2:
      (= tmp_4 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_5 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_6 (reg-range src1 (constant ? 8) (constant ? 15)))
      (= tmp_7 (reg-range src2 (constant ? 8) (constant ? 15)))
      (= tmp_8 (icmp (constant ? 8) slt tmp_6 tmp_7))
      (br tmp_8 bb_3 bb_4)
    bb_3:
      (= tmp_5 tmp_6)
      (br bb_5)
    bb_4:
      (= tmp_5 tmp_7)
      (br bb_5)
    bb_5:
      (= tmp_9 (phi ((no-value . bb_3) (no-value . bb_4))))
      (= tmp_10 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_11 (reg-range src1 (constant ? 16) (constant ? 23)))
      (= tmp_12 (reg-range src2 (constant ? 16) (constant ? 23)))
      (= tmp_13 (icmp (constant ? 8) slt tmp_11 tmp_12))
      (br tmp_13 bb_6 bb_7)
    bb_6:
      (= tmp_10 tmp_11)
      (br bb_8)
    bb_7:
      (= tmp_10 tmp_12)
      (br bb_8)
    bb_8:
      (= tmp_14 (phi ((no-value . bb_6) (no-value . bb_7))))
      (= tmp_15 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_16 (reg-range src1 (constant ? 24) (constant ? 31)))
      (= tmp_17 (reg-range src2 (constant ? 24) (constant ? 31)))
      (= tmp_18 (icmp (constant ? 8) slt tmp_16 tmp_17))
      (br tmp_18 bb_9 bb_10)
    bb_9:
      (= tmp_15 tmp_16)
      (br bb_11)
    bb_10:
      (= tmp_15 tmp_17)
      (br bb_11)
    bb_11:
      (= tmp_19 (phi ((no-value . bb_9) (no-value . bb_10))))
      (= tmp_21 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_20 tmp_21)
      (op-flags! dst (ac ex mi))


Instruction: mins_a16_a16_a16
=============
Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_1 = c of dst)
    (tmp_2 = c of dst)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (icmp (constant ? 16) slt src1 src2))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= dst src1)
      (= tmp_1 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst src2)
      (= tmp_2 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))

Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_1 = c of dst)
    (tmp_2 = c of dst)
    (tmp_4 = a of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (icmp (constant ? 16) slt src1 src2))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= dst src1)
      (= tmp_1 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst src2)
      (= tmp_2 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_5 (reg-range tmp_4 (constant ? 16) (constant ? 39)))
      (= tmp_6 (sext (constant ? 16) dst (constant ? 24)))
      (= tmp_5 tmp_6)
      (op-flags! dst (ac ex mi))


Instruction: minz_a16_a16_a16
=============
Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_1 = c of dst)
    (tmp_2 = c of dst)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (icmp (constant ? 16) ult src1 src2))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= dst src1)
      (= tmp_1 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst src2)
      (= tmp_2 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi))

Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_1 = c of dst)
    (tmp_2 = c of dst)
    (tmp_4 = a of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (icmp (constant ? 16) ult src1 src2))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= dst src1)
      (= tmp_1 (constant ? 0))
      (br bb_2)
    bb_1:
      (= dst src2)
      (= tmp_2 (constant ? 1))
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_5 (reg-range tmp_4 (constant ? 16) (constant ? 39)))
      (= tmp_6 (sext (constant ? 16) dst (constant ? 24)))
      (= tmp_5 tmp_6)
      (op-flags! dst (ac ex mi))


Instruction: neg_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (satsub (constant ? 32) (constant ? 0) src))
      (= dst tmp_1)
      (br bb_2)
    bb_1:
      (= tmp_2 (sub (constant ? 40) (constant ? 0) src))
      (= dst tmp_2)
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of))


Instruction: negs_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (satsub (constant ? 32) (constant ? 0) src))
      (= dst tmp_1)
      (br bb_2)
    bb_1:
      (= tmp_2 (sub (constant ? 32) (constant ? 0) src))
      (= dst tmp_2)
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of))


Instruction: neg_a16_a16
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a16)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (satsub (constant ? 16) (constant ? 0) src))
      (= dst tmp_0)
      (op-flags! dst (ac ex mi of))

Pattern:
  Constraints
    (src reg a16)
    (dst reg a16)
    (tmp_1 = a of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (satsub (constant ? 16) (constant ? 0) src))
      (= dst tmp_0)
      (= tmp_2 (reg-range tmp_1 (constant ? 16) (constant ? 39)))
      (= tmp_3 (sext (constant ? 16) dst (constant ? 24)))
      (= tmp_2 tmp_3)
      (op-flags! dst (ac ex mi of))


Instruction: neg_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
  Code
      (= tmp_0 (sext (constant ? 16) src (constant ? 40)))
      (= tmp_1 (sub (constant ? 40) (constant ? 0) tmp_0))
      (= dst tmp_1)
      (op-flags! dst (ac ex mi))


Instruction: negh_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (sext (constant ? 16) src (constant ? 40)))
      (= tmp_2 (shl tmp_1 (constant ? 16)))
      (= tmp_3 (satsub (constant ? 32) (constant ? 0) tmp_2))
      (= dst tmp_3)
      (br bb_2)
    bb_1:
      (= tmp_4 (sext (constant ? 16) src (constant ? 40)))
      (= tmp_5 (shl tmp_4 (constant ? 16)))
      (= tmp_6 (sub (constant ? 32) (constant ? 0) tmp_5))
      (= dst tmp_6)
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of))


Instruction: neg2_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (tmp_10 = a of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_1 (- (constant ? 0) (constant ? 15)))
      (= tmp_2 (+ (constant ? 1) tmp_1))
      (= tmp_3 (reg-range src (constant ? 0) (constant ? 15)))
      (= tmp_4 (satsub tmp_2 (constant ? 0) tmp_3))
      (= tmp_0 tmp_4)
      (= tmp_5 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_6 (- (constant ? 16) (constant ? 31)))
      (= tmp_7 (+ (constant ? 1) tmp_6))
      (= tmp_8 (reg-range src (constant ? 16) (constant ? 31)))
      (= tmp_9 (satsub tmp_7 (constant ? 0) tmp_8))
      (= tmp_5 tmp_9)
      (= tmp_11 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_10 tmp_11)
      (op-flags! dst (ac ex mi))


Instruction: neg4_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (tmp_20 = a of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (- (constant ? 0) (constant ? 7)))
      (= tmp_2 (+ (constant ? 1) tmp_1))
      (= tmp_3 (reg-range src (constant ? 0) (constant ? 7)))
      (= tmp_4 (satsub tmp_2 (constant ? 0) tmp_3))
      (= tmp_0 tmp_4)
      (= tmp_5 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_6 (- (constant ? 8) (constant ? 15)))
      (= tmp_7 (+ (constant ? 1) tmp_6))
      (= tmp_8 (reg-range src (constant ? 8) (constant ? 15)))
      (= tmp_9 (satsub tmp_7 (constant ? 0) tmp_8))
      (= tmp_5 tmp_9)
      (= tmp_10 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_11 (- (constant ? 16) (constant ? 23)))
      (= tmp_12 (+ (constant ? 1) tmp_11))
      (= tmp_13 (reg-range src (constant ? 16) (constant ? 23)))
      (= tmp_14 (satsub tmp_12 (constant ? 0) tmp_13))
      (= tmp_10 tmp_14)
      (= tmp_15 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_16 (- (constant ? 24) (constant ? 31)))
      (= tmp_17 (+ (constant ? 1) tmp_16))
      (= tmp_18 (reg-range src (constant ? 24) (constant ? 31)))
      (= tmp_19 (satsub tmp_17 (constant ? 0) tmp_18))
      (= tmp_15 tmp_19)
      (= tmp_21 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_20 tmp_21)
      (op-flags! dst (ac ex mi))


Instruction: bpackh_a40_a16l
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a16l)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 7)))
      (= tmp_0 tmp_1)
      (= tmp_2 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_3 (reg-range src (constant ? 24) (constant ? 31)))
      (= tmp_2 tmp_3)


Instruction: nop_instr
=============
Pattern:
  Constraints
  Code


Instruction: sat_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
  Code
      (= tmp_0 (satadd (constant ? 32) (constant ? 0) src))
      (= dst tmp_0)


Instruction: scale2_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (tmp_6 = a of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 15)))
      (= tmp_2 (ashr tmp_1 (constant ? 1)))
      (= tmp_0 tmp_2)
      (= tmp_3 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_4 (reg-range src (constant ? 16) (constant ? 31)))
      (= tmp_5 (ashr tmp_4 (constant ? 1)))
      (= tmp_3 tmp_5)
      (= tmp_7 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_6 tmp_7)
      (op-flags! dst (ac ex mi))


Instruction: scale4_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (tmp_12 = a of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 7)))
      (= tmp_2 (ashr tmp_1 (constant ? 1)))
      (= tmp_0 tmp_2)
      (= tmp_3 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_4 (reg-range src (constant ? 8) (constant ? 15)))
      (= tmp_5 (ashr tmp_4 (constant ? 1)))
      (= tmp_3 tmp_5)
      (= tmp_6 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_7 (reg-range src (constant ? 16) (constant ? 23)))
      (= tmp_8 (ashr tmp_7 (constant ? 1)))
      (= tmp_6 tmp_8)
      (= tmp_9 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_10 (reg-range src (constant ? 24) (constant ? 31)))
      (= tmp_11 (ashr tmp_10 (constant ? 1)))
      (= tmp_9 tmp_11)
      (= tmp_13 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_12 tmp_13)
      (op-flags! dst (ac ex mi))


Instruction: bupackh_a16h_a40
=============
Pattern:
  Constraints
    (src reg a16h)
    (dst reg a40)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_0 (constant ? 0))
      (= tmp_1 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_2 (reg-range src (constant ? 0) (constant ? 7)))
      (= tmp_1 tmp_2)
      (= tmp_3 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_3 (constant ? 0))
      (= tmp_4 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_5 (reg-range src (constant ? 8) (constant ? 15)))
      (= tmp_4 tmp_5)
      (= tmp_6 (sext (constant ? 32) dst (constant ? 40)))
      (= dst tmp_6)
      (op-flags! dst (ac ex mi))


Instruction: shfta_a40_nimm7_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (SImm zimm -32 32)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (icmp sgt (constant ? 40) SImm (constant ? 0)))
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_2 (phi ((tmp_1 . bb_0) (no-value . bb_1))))
      (br tmp_2 bb_6 bb_7)
    bb_6:
      (= tmp_3 (shl (constant ? 1) SImm))
      (= tmp_4 (satmul (constant ? 32) src tmp_3))
      (= dst tmp_4)
      (br bb_8)
    bb_7:
      (= tmp_5 (icmp sgt (constant ? 32) SImm (constant ? 0)))
      (br tmp_5 bb_3 bb_4)
    bb_3:
      (= tmp_6 (shl src SImm))
      (= dst tmp_6)
      (br bb_5)
    bb_4:
      (= tmp_7 (sub (constant ? 32) (constant ? 0) SImm))
      (= tmp_8 (ashr src tmp_7))
      (= tmp_9 (sext (constant ? 32) tmp_8 (constant ? 40)))
      (= dst tmp_9)
      (br bb_5)
    bb_5:
      (= tmp_10 (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
    bb_8:
      (= tmp_11 (phi ((no-value . bb_6) (tmp_10 . bb_7))))
      (op-flags! dst (ac ex mi of c))


Instruction: shfta_a16_a16
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a16)
    (tmp_4 = sa of cuc)
  Code
      (= tmp_0 (icmp slt (constant ? 16) src (constant ? -16)))
      (br tmp_0 bb_3 bb_4)
    bb_3:
      (br bb_5)
    bb_4:
      (= tmp_1 (icmp sgt (constant ? 16) src (constant ? 16)))
      (br tmp_1 bb_0 bb_1)
    bb_0:
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_2 (phi (((constant ? 16) . bb_0) (src . bb_1))))
      (br bb_5)
    bb_5:
      (= tmp_3 (phi (((constant ? -16) . bb_3) (tmp_2 . bb_4))))
      (br tmp_4 bb_6 bb_7)
    bb_6:
      (= tmp_5 (icmp sgt (constant ? 16) tmp_3 (constant ? 0)))
      (br bb_8)
    bb_7:
      (br bb_8)
    bb_8:
      (= tmp_6 (phi ((tmp_5 . bb_6) (no-value . bb_7))))
      (br tmp_6 bb_12 bb_13)
    bb_12:
      (= tmp_7 (shl (constant ? 1) tmp_3))
      (= tmp_8 (satmul (constant ? 16) dst tmp_7))
      (= dst tmp_8)
      (br bb_14)
    bb_13:
      (= tmp_9 (icmp sgt (constant ? 16) tmp_3 (constant ? 0)))
      (br tmp_9 bb_9 bb_10)
    bb_9:
      (= tmp_10 (shl dst tmp_3))
      (= dst tmp_10)
      (br bb_11)
    bb_10:
      (= tmp_11 (sub (constant ? 16) (constant ? 0) tmp_3))
      (= tmp_12 (ashr dst tmp_11))
      (= tmp_13 (sext (constant ? 16) tmp_12 (constant ? 16)))
      (= dst tmp_13)
      (br bb_11)
    bb_11:
      (= tmp_14 (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
    bb_14:
      (= tmp_15 (phi ((no-value . bb_12) (tmp_14 . bb_13))))


Instruction: cmp_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (tmp_0 = ac of dst)
    (tmp_2 = mi of dst)
  Code
      (= tmp_1 (icmp eq (constant ? 40) dst src))
      (= tmp_0 tmp_1)
      (= tmp_3 (icmp slt (constant ? 40) dst src))
      (= tmp_2 tmp_3)


Instruction: cmp_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
    (tmp_1 = ac of dst)
    (tmp_3 = mi of dst)
  Code
      (= tmp_0 (sext (constant ? 16) src (constant ? 40)))
      (= tmp_2 (icmp eq (constant ? 40) dst tmp_0))
      (= tmp_1 tmp_2)
      (= tmp_4 (icmp slt (constant ? 40) dst tmp_0))
      (= tmp_3 tmp_4)


Instruction: shfta4_a40_nimm5_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (SImm zimm -8 8)
    (tmp_2 = sa of cuc)
    (tmp_16 = sa of cuc)
    (tmp_30 = sa of cuc)
    (tmp_44 = sa of cuc)
    (tmp_56 = a of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 7)))
      (br tmp_2 bb_0 bb_1)
    bb_0:
      (= tmp_3 (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_4 (phi ((tmp_3 . bb_0) (no-value . bb_1))))
      (br tmp_4 bb_6 bb_7)
    bb_6:
      (= tmp_5 (shl (constant ? 1) SImm))
      (= tmp_6 (satmul (constant ? 8) tmp_1 tmp_5))
      (= tmp_0 tmp_6)
      (br bb_8)
    bb_7:
      (= tmp_7 (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br tmp_7 bb_3 bb_4)
    bb_3:
      (= tmp_8 (shl tmp_1 SImm))
      (= tmp_0 tmp_8)
      (br bb_5)
    bb_4:
      (= tmp_9 (sub (constant ? 8) (constant ? 0) SImm))
      (= tmp_10 (ashr tmp_1 tmp_9))
      (= tmp_11 (sext (constant ? 8) tmp_10 (constant ? 8)))
      (= tmp_0 tmp_11)
      (br bb_5)
    bb_5:
      (= tmp_12 (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
    bb_8:
      (= tmp_13 (phi ((no-value . bb_6) (tmp_12 . bb_7))))
      (= tmp_14 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_15 (reg-range src (constant ? 8) (constant ? 15)))
      (br tmp_16 bb_9 bb_10)
    bb_9:
      (= tmp_17 (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br bb_11)
    bb_10:
      (br bb_11)
    bb_11:
      (= tmp_18 (phi ((tmp_17 . bb_9) (no-value . bb_10))))
      (br tmp_18 bb_15 bb_16)
    bb_15:
      (= tmp_19 (shl (constant ? 1) SImm))
      (= tmp_20 (satmul (constant ? 8) tmp_15 tmp_19))
      (= tmp_14 tmp_20)
      (br bb_17)
    bb_16:
      (= tmp_21 (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br tmp_21 bb_12 bb_13)
    bb_12:
      (= tmp_22 (shl tmp_15 SImm))
      (= tmp_14 tmp_22)
      (br bb_14)
    bb_13:
      (= tmp_23 (sub (constant ? 8) (constant ? 0) SImm))
      (= tmp_24 (ashr tmp_15 tmp_23))
      (= tmp_25 (sext (constant ? 8) tmp_24 (constant ? 8)))
      (= tmp_14 tmp_25)
      (br bb_14)
    bb_14:
      (= tmp_26 (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
    bb_17:
      (= tmp_27 (phi ((no-value . bb_15) (tmp_26 . bb_16))))
      (= tmp_28 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_29 (reg-range src (constant ? 16) (constant ? 23)))
      (br tmp_30 bb_18 bb_19)
    bb_18:
      (= tmp_31 (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br bb_20)
    bb_19:
      (br bb_20)
    bb_20:
      (= tmp_32 (phi ((tmp_31 . bb_18) (no-value . bb_19))))
      (br tmp_32 bb_24 bb_25)
    bb_24:
      (= tmp_33 (shl (constant ? 1) SImm))
      (= tmp_34 (satmul (constant ? 8) tmp_29 tmp_33))
      (= tmp_28 tmp_34)
      (br bb_26)
    bb_25:
      (= tmp_35 (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br tmp_35 bb_21 bb_22)
    bb_21:
      (= tmp_36 (shl tmp_29 SImm))
      (= tmp_28 tmp_36)
      (br bb_23)
    bb_22:
      (= tmp_37 (sub (constant ? 8) (constant ? 0) SImm))
      (= tmp_38 (ashr tmp_29 tmp_37))
      (= tmp_39 (sext (constant ? 8) tmp_38 (constant ? 8)))
      (= tmp_28 tmp_39)
      (br bb_23)
    bb_23:
      (= tmp_40 (phi ((no-value . bb_21) (no-value . bb_22))))
      (br bb_26)
    bb_26:
      (= tmp_41 (phi ((no-value . bb_24) (tmp_40 . bb_25))))
      (= tmp_42 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_43 (reg-range src (constant ? 24) (constant ? 31)))
      (br tmp_44 bb_27 bb_28)
    bb_27:
      (= tmp_45 (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br bb_29)
    bb_28:
      (br bb_29)
    bb_29:
      (= tmp_46 (phi ((tmp_45 . bb_27) (no-value . bb_28))))
      (br tmp_46 bb_33 bb_34)
    bb_33:
      (= tmp_47 (shl (constant ? 1) SImm))
      (= tmp_48 (satmul (constant ? 8) tmp_43 tmp_47))
      (= tmp_42 tmp_48)
      (br bb_35)
    bb_34:
      (= tmp_49 (icmp sgt (constant ? 8) SImm (constant ? 0)))
      (br tmp_49 bb_30 bb_31)
    bb_30:
      (= tmp_50 (shl tmp_43 SImm))
      (= tmp_42 tmp_50)
      (br bb_32)
    bb_31:
      (= tmp_51 (sub (constant ? 8) (constant ? 0) SImm))
      (= tmp_52 (ashr tmp_43 tmp_51))
      (= tmp_53 (sext (constant ? 8) tmp_52 (constant ? 8)))
      (= tmp_42 tmp_53)
      (br bb_32)
    bb_32:
      (= tmp_54 (phi ((no-value . bb_30) (no-value . bb_31))))
      (br bb_35)
    bb_35:
      (= tmp_55 (phi ((no-value . bb_33) (tmp_54 . bb_34))))
      (= tmp_57 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_56 tmp_57)
      (op-flags! dst (ac ex mi of))


Instruction: sub_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (satsub (constant ? 32) src1 src2))
      (= dst tmp_1)
      (br bb_2)
    bb_1:
      (= tmp_2 (sub (constant ? 40) src1 src2))
      (= dst tmp_2)
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: suba_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (satsub (constant ? 40) src1 src2))
      (= dst tmp_1)
      (br bb_2)
    bb_1:
      (= tmp_2 (sub (constant ? 40) src1 src2))
      (= dst tmp_2)
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: sub_nimm5_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (UImm imm 1 32)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (zext (constant ? 8) UImm (constant ? 40)))
      (= tmp_2 (satsub (constant ? 32) dst tmp_1))
      (= dst tmp_2)
      (br bb_2)
    bb_1:
      (= tmp_3 (zext (constant ? 8) UImm (constant ? 40)))
      (= tmp_4 (sub (constant ? 40) dst tmp_3))
      (= dst tmp_4)
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: subh_nimm5_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (UImm imm 1 32)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (zext (constant ? 8) UImm (constant ? 40)))
      (= tmp_2 (shl tmp_1 (constant ? 16)))
      (= tmp_3 (satsub (constant ? 32) dst tmp_2))
      (= dst tmp_3)
      (br bb_2)
    bb_1:
      (= tmp_4 (zext (constant ? 8) UImm (constant ? 40)))
      (= tmp_5 (shl tmp_4 (constant ? 16)))
      (= tmp_6 (sub (constant ? 40) dst tmp_5))
      (= dst tmp_6)
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: sub_nimm16_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (UImm imm 0 65535)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (zext (constant ? 16) UImm (constant ? 40)))
      (= tmp_2 (satsub (constant ? 32) dst tmp_1))
      (= dst tmp_2)
      (br bb_2)
    bb_1:
      (= tmp_3 (zext (constant ? 16) UImm (constant ? 40)))
      (= tmp_4 (sub (constant ? 40) dst tmp_3))
      (= dst tmp_4)
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: subh_nimm16_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (UImm imm 0 65535)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (zext (constant ? 16) UImm (constant ? 40)))
      (= tmp_2 (shl tmp_1 (constant ? 16)))
      (= tmp_3 (satsub (constant ? 32) dst tmp_2))
      (= dst tmp_3)
      (br bb_2)
    bb_1:
      (= tmp_4 (zext (constant ? 16) UImm (constant ? 40)))
      (= tmp_5 (shl tmp_4 (constant ? 16)))
      (= tmp_6 (sub (constant ? 40) dst tmp_5))
      (= dst tmp_6)
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: sub_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (sext (constant ? 16) src (constant ? 40)))
      (= tmp_2 (satsub (constant ? 32) dst tmp_1))
      (= dst tmp_2)
      (br bb_2)
    bb_1:
      (= tmp_3 (sext (constant ? 16) src (constant ? 40)))
      (= tmp_4 (sub (constant ? 40) dst tmp_3))
      (= dst tmp_4)
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: sub_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (sext (constant ? 16) src2 (constant ? 40)))
      (= tmp_2 (satsub (constant ? 32) src1 tmp_1))
      (= dst tmp_2)
      (br bb_2)
    bb_1:
      (= tmp_3 (sext (constant ? 16) src2 (constant ? 40)))
      (= tmp_4 (sub (constant ? 40) src1 tmp_3))
      (= dst tmp_4)
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: subh_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (sext (constant ? 16) src (constant ? 40)))
      (= tmp_2 (shl tmp_1 (constant ? 16)))
      (= tmp_3 (satsub (constant ? 32) dst tmp_2))
      (= dst tmp_3)
      (br bb_2)
    bb_1:
      (= tmp_4 (sext (constant ? 16) src (constant ? 40)))
      (= tmp_5 (shl tmp_4 (constant ? 16)))
      (= tmp_6 (sub (constant ? 40) dst tmp_5))
      (= dst tmp_6)
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: subh_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (sext (constant ? 16) src2 (constant ? 40)))
      (= tmp_2 (shl tmp_1 (constant ? 16)))
      (= tmp_3 (satsub (constant ? 32) src1 tmp_2))
      (= dst tmp_3)
      (br bb_2)
    bb_1:
      (= tmp_4 (sext (constant ? 16) src2 (constant ? 40)))
      (= tmp_5 (shl tmp_4 (constant ? 16)))
      (= tmp_6 (sub (constant ? 40) src1 tmp_5))
      (= dst tmp_6)
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))


Instruction: subabs_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_1 = sa of cuc)
    (tmp_5 = sa of cuc)
  Code
      (= tmp_0 (icmp gt (constant ? 40) src1 src2))
      (br tmp_0 bb_6 bb_7)
    bb_6:
      (br tmp_1 bb_0 bb_1)
    bb_0:
      (= tmp_2 (satsub (constant ? 32) src1 src2))
      (= dst tmp_2)
      (br bb_2)
    bb_1:
      (= tmp_3 (sub (constant ? 40) src1 src2))
      (= dst tmp_3)
      (br bb_2)
    bb_2:
      (= tmp_4 (phi ((no-value . bb_0) (no-value . bb_1))))
      (br bb_8)
    bb_7:
      (br tmp_5 bb_3 bb_4)
    bb_3:
      (= tmp_6 (satsub (constant ? 32) src2 src1))
      (= dst tmp_6)
      (br bb_5)
    bb_4:
      (= tmp_7 (sub (constant ? 40) src2 src1))
      (= dst tmp_7)
      (br bb_5)
    bb_5:
      (= tmp_8 (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
    bb_8:
      (= tmp_9 (phi ((tmp_4 . bb_6) (tmp_8 . bb_7))))
      (op-flags! dst (ac ex mi of c))


Instruction: sub2_a40_a40_a40h
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40h)
    (tmp_12 = a of dst)
  Code
      (= tmp_0 (- (constant ? 15) (constant ? 0)))
      (= tmp_1 (+ (constant ? 1) tmp_0))
      (= tmp_2 (reg-range src1 (constant ? 0) (constant ? 15)))
      (= tmp_3 (reg-range src2 (constant ? 0) (constant ? 15)))
      (= tmp_4 (satsub tmp_1 tmp_2 tmp_3))
      (= tmp_5 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_5 tmp_4)
      (= tmp_6 (- (constant ? 31) (constant ? 16)))
      (= tmp_7 (+ (constant ? 1) tmp_6))
      (= tmp_8 (reg-range src1 (constant ? 16) (constant ? 31)))
      (= tmp_9 (reg-range src2 (constant ? 16) (constant ? 31)))
      (= tmp_10 (satsub tmp_7 tmp_8 tmp_9))
      (= tmp_11 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_11 tmp_10)
      (= tmp_13 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_12 tmp_13)
      (op-flags! dst (ac ex mi))


Instruction: sub2_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_12 = a of dst)
  Code
      (= tmp_0 (- (constant ? 15) (constant ? 0)))
      (= tmp_1 (+ (constant ? 1) tmp_0))
      (= tmp_2 (reg-range src1 (constant ? 0) (constant ? 15)))
      (= tmp_3 (reg-range src2 (constant ? 0) (constant ? 15)))
      (= tmp_4 (satsub tmp_1 tmp_2 tmp_3))
      (= tmp_5 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_5 tmp_4)
      (= tmp_6 (- (constant ? 31) (constant ? 16)))
      (= tmp_7 (+ (constant ? 1) tmp_6))
      (= tmp_8 (reg-range src1 (constant ? 16) (constant ? 31)))
      (= tmp_9 (reg-range src2 (constant ? 16) (constant ? 31)))
      (= tmp_10 (satsub tmp_7 tmp_8 tmp_9))
      (= tmp_11 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_11 tmp_10)
      (= tmp_13 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_12 tmp_13)
      (op-flags! dst (ac ex mi))


Instruction: subscale2_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_18 = a of dst)
  Code
      (= tmp_0 (- (constant ? 15) (constant ? 0)))
      (= tmp_1 (+ (constant ? 1) tmp_0))
      (= tmp_2 (- (constant ? 15) (constant ? 0)))
      (= tmp_3 (+ (constant ? 1) tmp_2))
      (= tmp_4 (reg-range src1 (constant ? 0) (constant ? 15)))
      (= tmp_5 (reg-range src2 (constant ? 0) (constant ? 15)))
      (= tmp_6 (sub tmp_3 tmp_4 tmp_5))
      (= tmp_7 (sdiv tmp_6 (constant ? 2)))
      (= tmp_8 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_8 tmp_7)
      (= tmp_9 (- (constant ? 31) (constant ? 16)))
      (= tmp_10 (+ (constant ? 1) tmp_9))
      (= tmp_11 (- (constant ? 31) (constant ? 16)))
      (= tmp_12 (+ (constant ? 1) tmp_11))
      (= tmp_13 (reg-range src1 (constant ? 16) (constant ? 31)))
      (= tmp_14 (reg-range src2 (constant ? 16) (constant ? 31)))
      (= tmp_15 (sub tmp_12 tmp_13 tmp_14))
      (= tmp_16 (sdiv tmp_15 (constant ? 2)))
      (= tmp_17 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_17 tmp_16)
      (= tmp_19 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_18 tmp_19)
      (op-flags! dst (ac ex mi))


Instruction: subscale2r_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_20 = a of dst)
  Code
      (= tmp_0 (- (constant ? 15) (constant ? 0)))
      (= tmp_1 (+ (constant ? 1) tmp_0))
      (= tmp_2 (- (constant ? 15) (constant ? 0)))
      (= tmp_3 (+ (constant ? 1) tmp_2))
      (= tmp_4 (reg-range src1 (constant ? 0) (constant ? 15)))
      (= tmp_5 (reg-range src2 (constant ? 0) (constant ? 15)))
      (= tmp_6 (sub tmp_3 tmp_4 tmp_5))
      (= tmp_7 (add tmp_1 tmp_6 (constant ? 1)))
      (= tmp_8 (sdiv tmp_7 (constant ? 2)))
      (= tmp_9 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_9 tmp_8)
      (= tmp_10 (- (constant ? 31) (constant ? 16)))
      (= tmp_11 (+ (constant ? 1) tmp_10))
      (= tmp_12 (- (constant ? 31) (constant ? 16)))
      (= tmp_13 (+ (constant ? 1) tmp_12))
      (= tmp_14 (reg-range src1 (constant ? 16) (constant ? 31)))
      (= tmp_15 (reg-range src2 (constant ? 16) (constant ? 31)))
      (= tmp_16 (sub tmp_13 tmp_14 tmp_15))
      (= tmp_17 (add tmp_11 tmp_16 (constant ? 1)))
      (= tmp_18 (sdiv tmp_17 (constant ? 2)))
      (= tmp_19 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_19 tmp_18)
      (= tmp_21 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_20 tmp_21)
      (op-flags! dst (ac ex mi))


Instruction: sub4_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_24 = a of dst)
  Code
      (= tmp_0 (- (constant ? 7) (constant ? 0)))
      (= tmp_1 (+ (constant ? 1) tmp_0))
      (= tmp_2 (reg-range src1 (constant ? 0) (constant ? 7)))
      (= tmp_3 (reg-range src2 (constant ? 0) (constant ? 7)))
      (= tmp_4 (satsub tmp_1 tmp_2 tmp_3))
      (= tmp_5 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_5 tmp_4)
      (= tmp_6 (- (constant ? 15) (constant ? 8)))
      (= tmp_7 (+ (constant ? 1) tmp_6))
      (= tmp_8 (reg-range src1 (constant ? 8) (constant ? 15)))
      (= tmp_9 (reg-range src2 (constant ? 8) (constant ? 15)))
      (= tmp_10 (satsub tmp_7 tmp_8 tmp_9))
      (= tmp_11 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_11 tmp_10)
      (= tmp_12 (- (constant ? 23) (constant ? 16)))
      (= tmp_13 (+ (constant ? 1) tmp_12))
      (= tmp_14 (reg-range src1 (constant ? 16) (constant ? 23)))
      (= tmp_15 (reg-range src2 (constant ? 16) (constant ? 23)))
      (= tmp_16 (satsub tmp_13 tmp_14 tmp_15))
      (= tmp_17 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_17 tmp_16)
      (= tmp_18 (- (constant ? 31) (constant ? 24)))
      (= tmp_19 (+ (constant ? 1) tmp_18))
      (= tmp_20 (reg-range src1 (constant ? 24) (constant ? 31)))
      (= tmp_21 (reg-range src2 (constant ? 24) (constant ? 31)))
      (= tmp_22 (satsub tmp_19 tmp_20 tmp_21))
      (= tmp_23 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_23 tmp_22)
      (= tmp_25 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_24 tmp_25)
      (op-flags! dst (ac ex mi))


Instruction: subscale4_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_36 = a of dst)
  Code
      (= tmp_0 (- (constant ? 7) (constant ? 0)))
      (= tmp_1 (+ (constant ? 1) tmp_0))
      (= tmp_2 (- (constant ? 7) (constant ? 0)))
      (= tmp_3 (+ (constant ? 1) tmp_2))
      (= tmp_4 (reg-range src1 (constant ? 0) (constant ? 7)))
      (= tmp_5 (reg-range src2 (constant ? 0) (constant ? 7)))
      (= tmp_6 (sub tmp_3 tmp_4 tmp_5))
      (= tmp_7 (sdiv tmp_6 (constant ? 2)))
      (= tmp_8 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_8 tmp_7)
      (= tmp_9 (- (constant ? 15) (constant ? 8)))
      (= tmp_10 (+ (constant ? 1) tmp_9))
      (= tmp_11 (- (constant ? 15) (constant ? 8)))
      (= tmp_12 (+ (constant ? 1) tmp_11))
      (= tmp_13 (reg-range src1 (constant ? 8) (constant ? 15)))
      (= tmp_14 (reg-range src2 (constant ? 8) (constant ? 15)))
      (= tmp_15 (sub tmp_12 tmp_13 tmp_14))
      (= tmp_16 (sdiv tmp_15 (constant ? 2)))
      (= tmp_17 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_17 tmp_16)
      (= tmp_18 (- (constant ? 23) (constant ? 16)))
      (= tmp_19 (+ (constant ? 1) tmp_18))
      (= tmp_20 (- (constant ? 23) (constant ? 16)))
      (= tmp_21 (+ (constant ? 1) tmp_20))
      (= tmp_22 (reg-range src1 (constant ? 16) (constant ? 23)))
      (= tmp_23 (reg-range src2 (constant ? 16) (constant ? 23)))
      (= tmp_24 (sub tmp_21 tmp_22 tmp_23))
      (= tmp_25 (sdiv tmp_24 (constant ? 2)))
      (= tmp_26 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_26 tmp_25)
      (= tmp_27 (- (constant ? 31) (constant ? 24)))
      (= tmp_28 (+ (constant ? 1) tmp_27))
      (= tmp_29 (- (constant ? 31) (constant ? 24)))
      (= tmp_30 (+ (constant ? 1) tmp_29))
      (= tmp_31 (reg-range src1 (constant ? 24) (constant ? 31)))
      (= tmp_32 (reg-range src2 (constant ? 24) (constant ? 31)))
      (= tmp_33 (sub tmp_30 tmp_31 tmp_32))
      (= tmp_34 (sdiv tmp_33 (constant ? 2)))
      (= tmp_35 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_35 tmp_34)
      (= tmp_37 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_36 tmp_37)
      (op-flags! dst (ac ex mi))


Instruction: subscale4r_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_40 = a of dst)
  Code
      (= tmp_0 (- (constant ? 7) (constant ? 0)))
      (= tmp_1 (+ (constant ? 1) tmp_0))
      (= tmp_2 (- (constant ? 7) (constant ? 0)))
      (= tmp_3 (+ (constant ? 1) tmp_2))
      (= tmp_4 (reg-range src1 (constant ? 0) (constant ? 7)))
      (= tmp_5 (reg-range src2 (constant ? 0) (constant ? 7)))
      (= tmp_6 (sub tmp_3 tmp_4 tmp_5))
      (= tmp_7 (add tmp_1 tmp_6 (constant ? 1)))
      (= tmp_8 (sdiv tmp_7 (constant ? 2)))
      (= tmp_9 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_9 tmp_8)
      (= tmp_10 (- (constant ? 15) (constant ? 8)))
      (= tmp_11 (+ (constant ? 1) tmp_10))
      (= tmp_12 (- (constant ? 15) (constant ? 8)))
      (= tmp_13 (+ (constant ? 1) tmp_12))
      (= tmp_14 (reg-range src1 (constant ? 8) (constant ? 15)))
      (= tmp_15 (reg-range src2 (constant ? 8) (constant ? 15)))
      (= tmp_16 (sub tmp_13 tmp_14 tmp_15))
      (= tmp_17 (add tmp_11 tmp_16 (constant ? 1)))
      (= tmp_18 (sdiv tmp_17 (constant ? 2)))
      (= tmp_19 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_19 tmp_18)
      (= tmp_20 (- (constant ? 23) (constant ? 16)))
      (= tmp_21 (+ (constant ? 1) tmp_20))
      (= tmp_22 (- (constant ? 23) (constant ? 16)))
      (= tmp_23 (+ (constant ? 1) tmp_22))
      (= tmp_24 (reg-range src1 (constant ? 16) (constant ? 23)))
      (= tmp_25 (reg-range src2 (constant ? 16) (constant ? 23)))
      (= tmp_26 (sub tmp_23 tmp_24 tmp_25))
      (= tmp_27 (add tmp_21 tmp_26 (constant ? 1)))
      (= tmp_28 (sdiv tmp_27 (constant ? 2)))
      (= tmp_29 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_29 tmp_28)
      (= tmp_30 (- (constant ? 31) (constant ? 24)))
      (= tmp_31 (+ (constant ? 1) tmp_30))
      (= tmp_32 (- (constant ? 31) (constant ? 24)))
      (= tmp_33 (+ (constant ? 1) tmp_32))
      (= tmp_34 (reg-range src1 (constant ? 24) (constant ? 31)))
      (= tmp_35 (reg-range src2 (constant ? 24) (constant ? 31)))
      (= tmp_36 (sub tmp_33 tmp_34 tmp_35))
      (= tmp_37 (add tmp_31 tmp_36 (constant ? 1)))
      (= tmp_38 (sdiv tmp_37 (constant ? 2)))
      (= tmp_39 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_39 tmp_38)
      (= tmp_41 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_40 tmp_41)
      (op-flags! dst (ac ex mi))


Instruction: subs_a16_a16_a16
=============
Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_0 = sa of cuc)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (satsub (constant ? 16) src1 src2))
      (= dst tmp_1)
      (br bb_2)
    bb_1:
      (= tmp_2 (sub (constant ? 16) src1 src2))
      (= dst tmp_2)
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (op-flags! dst (ac ex mi of c))

Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_0 = sa of cuc)
    (tmp_4 = a of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (satsub (constant ? 16) src1 src2))
      (= dst tmp_1)
      (br bb_2)
    bb_1:
      (= tmp_2 (sub (constant ? 16) src1 src2))
      (= dst tmp_2)
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_5 (reg-range tmp_4 (constant ? 16) (constant ? 39)))
      (= tmp_6 (sext (constant ? 16) dst (constant ? 24)))
      (= tmp_5 tmp_6)
      (op-flags! dst (ac ex mi of c))


Instruction: subz_a16_a16_a16
=============
Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_1 = sa of cuc)
  Code
      (= tmp_0 (icmp ugt (constant ? 16) src2 src1))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_2 (phi ((tmp_1 . bb_0) (no-value . bb_1))))
      (br tmp_2 bb_3 bb_4)
    bb_3:
      (= dst (constant ? 0))
      (br bb_5)
    bb_4:
      (= tmp_3 (sub (constant ? 16) src1 src2))
      (= dst tmp_3)
      (br bb_5)
    bb_5:
      (= tmp_4 (phi ((no-value . bb_3) (no-value . bb_4))))
      (op-flags! dst (ac ex mi of c))


Instruction: subs_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_0 = sa of cuc)
    (tmp_6 = a of dst)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (sext (constant ? 16) src2 (constant ? 40)))
      (= tmp_2 (satsub (constant ? 32) src1 tmp_1))
      (= dst tmp_2)
      (br bb_2)
    bb_1:
      (= tmp_3 (sext (constant ? 16) src2 (constant ? 40)))
      (= tmp_4 (sub (constant ? 32) src1 tmp_3))
      (= dst tmp_4)
      (br bb_2)
    bb_2:
      (= tmp_5 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_7 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_6 tmp_7)
      (op-flags! dst (ac ex mi of c))


Instruction: subz_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_2 = sa of cuc)
    (tmp_6 = ag of dst)
  Code
      (= tmp_0 (zext (constant ? 16) src2 (constant ? 40)))
      (= tmp_1 (icmp ugt (constant ? 40) tmp_0 src1))
      (br tmp_1 bb_0 bb_1)
    bb_0:
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((tmp_2 . bb_0) (no-value . bb_1))))
      (br tmp_3 bb_3 bb_4)
    bb_3:
      (= dst (constant ? 0))
      (br bb_5)
    bb_4:
      (= tmp_4 (sub (constant ? 32) src1 src2))
      (= dst tmp_4)
      (br bb_5)
    bb_5:
      (= tmp_5 (phi ((no-value . bb_3) (no-value . bb_4))))
      (= tmp_6 (constant ? 0))
      (op-flags! dst (ac ex mi of c))


Instruction: subhs_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_0 = sa of cuc)
    (tmp_8 = a of dst)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (sext (constant ? 16) src2 (constant ? 40)))
      (= tmp_2 (shl tmp_1 (constant ? 16)))
      (= tmp_3 (satsub (constant ? 32) src1 tmp_2))
      (= dst tmp_3)
      (br bb_2)
    bb_1:
      (= tmp_4 (sext (constant ? 16) src2 (constant ? 40)))
      (= tmp_5 (shl tmp_4 (constant ? 16)))
      (= tmp_6 (sub (constant ? 32) src1 tmp_5))
      (= dst tmp_6)
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_9 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_8 tmp_9)
      (op-flags! dst (ac ex mi of c))


Instruction: subhz_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_2 = sa of cuc)
    (tmp_8 = ag of dst)
  Code
      (= tmp_0 (zext (constant ? 16) src2 (constant ? 40)))
      (= tmp_1 (icmp ugt (constant ? 40) tmp_0 src1))
      (br tmp_1 bb_0 bb_1)
    bb_0:
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((tmp_2 . bb_0) (no-value . bb_1))))
      (br tmp_3 bb_3 bb_4)
    bb_3:
      (= dst (constant ? 0))
      (br bb_5)
    bb_4:
      (= tmp_4 (reg-range src1 (constant ? 0) (constant ? 31)))
      (= tmp_5 (shl src2 (constant ? 16)))
      (= tmp_6 (sub (constant ? 32) tmp_4 tmp_5))
      (= dst tmp_6)
      (br bb_5)
    bb_5:
      (= tmp_7 (phi ((no-value . bb_3) (no-value . bb_4))))
      (= tmp_8 (constant ? 0))
      (op-flags! dst (ac ex mi of c))


Instruction: subs_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_0 = sa of cuc)
    (tmp_4 = a of dst)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (satsub (constant ? 32) src1 src2))
      (= dst tmp_1)
      (br bb_2)
    bb_1:
      (= tmp_2 (sub (constant ? 32) src1 src2))
      (= dst tmp_2)
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((no-value . bb_0) (no-value . bb_1))))
      (= tmp_5 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_4 tmp_5)
      (op-flags! dst (ac ex mi of c))


Instruction: subz_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_1 = sa of cuc)
    (tmp_7 = ag of dst)
  Code
      (= tmp_0 (icmp ugt (constant ? 32) src2 src1))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_2 (phi ((tmp_1 . bb_0) (no-value . bb_1))))
      (br tmp_2 bb_3 bb_4)
    bb_3:
      (= dst (constant ? 0))
      (br bb_5)
    bb_4:
      (= tmp_3 (reg-range src1 (constant ? 0) (constant ? 31)))
      (= tmp_4 (reg-range src2 (constant ? 0) (constant ? 31)))
      (= tmp_5 (sub (constant ? 32) tmp_3 tmp_4))
      (= dst tmp_5)
      (br bb_5)
    bb_5:
      (= tmp_6 (phi ((no-value . bb_3) (no-value . bb_4))))
      (= tmp_7 (constant ? 0))
      (op-flags! dst (ac ex mi of c))


Instruction: swap_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (tmp_4 = a of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_1 (reg-range src (constant ? 16) (constant ? 31)))
      (= tmp_0 tmp_1)
      (= tmp_2 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_3 (reg-range src (constant ? 0) (constant ? 15)))
      (= tmp_2 tmp_3)
      (= tmp_5 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_4 tmp_5)
      (op-flags! dst (ac ex mi))


Instruction: zext_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (tmp_2 = ag of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 31)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 31)))
      (= tmp_0 tmp_1)
      (= tmp_2 (constant ? 0))
      (op-flags! dst (ac ex mi c))


Instruction: shfta_nimm6_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (SImm zimm -16 16)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (icmp sgt (constant ? 40) SImm (constant ? 0)))
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_2 (phi ((tmp_1 . bb_0) (no-value . bb_1))))
      (br tmp_2 bb_6 bb_7)
    bb_6:
      (= tmp_3 (shl (constant ? 1) SImm))
      (= tmp_4 (satmul (constant ? 32) dst tmp_3))
      (= dst tmp_4)
      (br bb_8)
    bb_7:
      (= tmp_5 (icmp sgt (constant ? 32) SImm (constant ? 0)))
      (br tmp_5 bb_3 bb_4)
    bb_3:
      (= tmp_6 (shl dst SImm))
      (= dst tmp_6)
      (br bb_5)
    bb_4:
      (= tmp_7 (sub (constant ? 32) (constant ? 0) SImm))
      (= tmp_8 (ashr dst tmp_7))
      (= tmp_9 (sext (constant ? 32) tmp_8 (constant ? 40)))
      (= dst tmp_9)
      (br bb_5)
    bb_5:
      (= tmp_10 (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
    bb_8:
      (= tmp_11 (phi ((no-value . bb_6) (tmp_10 . bb_7))))
      (op-flags! dst (ac ex mi of c))


Instruction: shfts_a40_nimm7_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (SImm zimm -32 32)
    (tmp_1 = sa of cuc)
  Code
      (= tmp_0 (sext (constant ? 32) src (constant ? 40)))
      (br tmp_1 bb_0 bb_1)
    bb_0:
      (= tmp_2 (icmp sgt (constant ? 40) SImm (constant ? 0)))
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((tmp_2 . bb_0) (no-value . bb_1))))
      (br tmp_3 bb_6 bb_7)
    bb_6:
      (= tmp_4 (shl (constant ? 1) SImm))
      (= tmp_5 (satmul (constant ? 32) tmp_0 tmp_4))
      (= dst tmp_5)
      (br bb_8)
    bb_7:
      (= tmp_6 (icmp sgt (constant ? 32) SImm (constant ? 0)))
      (br tmp_6 bb_3 bb_4)
    bb_3:
      (= tmp_7 (shl tmp_0 SImm))
      (= dst tmp_7)
      (br bb_5)
    bb_4:
      (= tmp_8 (sub (constant ? 32) (constant ? 0) SImm))
      (= tmp_9 (ashr tmp_0 tmp_8))
      (= tmp_10 (sext (constant ? 32) tmp_9 (constant ? 40)))
      (= dst tmp_10)
      (br bb_5)
    bb_5:
      (= tmp_11 (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
    bb_8:
      (= tmp_12 (phi ((no-value . bb_6) (tmp_11 . bb_7))))
      (op-flags! dst (ac ex mi of))


Instruction: cmps_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (tmp_2 = ac of dst)
    (tmp_4 = mi of dst)
  Code
      (= tmp_0 (reg-range (constant ? 0) (constant ? 31) dst))
      (= tmp_1 (reg-range (constant ? 0) (constant ? 31) src))
      (= tmp_3 (icmp eq (constant ? 32) tmp_0 tmp_1))
      (= tmp_2 tmp_3)
      (= tmp_5 (icmp slt (constant ? 32) tmp_0 tmp_1))
      (= tmp_4 tmp_5)


Instruction: cmpz_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (tmp_2 = ac of dst)
    (tmp_4 = mi of dst)
  Code
      (= tmp_0 (reg-range (constant ? 0) (constant ? 31) dst))
      (= tmp_1 (reg-range (constant ? 0) (constant ? 31) src))
      (= tmp_3 (icmp eq (constant ? 32) tmp_0 tmp_1))
      (= tmp_2 tmp_3)
      (= tmp_5 (icmp ult (constant ? 32) tmp_0 tmp_1))
      (= tmp_4 tmp_5)


Instruction: shfta_a16_nimm6_a16
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a16)
    (SImm zimm -16 16)
    (tmp_0 = sa of cuc)
  Code
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_2 (phi ((tmp_1 . bb_0) (no-value . bb_1))))
      (br tmp_2 bb_6 bb_7)
    bb_6:
      (= tmp_3 (shl (constant ? 1) SImm))
      (= tmp_4 (satmul (constant ? 16) src tmp_3))
      (= dst tmp_4)
      (br bb_8)
    bb_7:
      (= tmp_5 (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br tmp_5 bb_3 bb_4)
    bb_3:
      (= tmp_6 (shl src SImm))
      (= dst tmp_6)
      (br bb_5)
    bb_4:
      (= tmp_7 (sub (constant ? 16) (constant ? 0) SImm))
      (= tmp_8 (ashr src tmp_7))
      (= tmp_9 (sext (constant ? 16) tmp_8 (constant ? 16)))
      (= dst tmp_9)
      (br bb_5)
    bb_5:
      (= tmp_10 (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
    bb_8:
      (= tmp_11 (phi ((no-value . bb_6) (tmp_10 . bb_7))))


Instruction: shfts_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_5 = sa of cuc)
  Code
      (= tmp_0 (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br tmp_0 bb_3 bb_4)
    bb_3:
      (br bb_5)
    bb_4:
      (= tmp_1 (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br tmp_1 bb_0 bb_1)
    bb_0:
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_2 (phi (((constant ? 40) . bb_0) (src2 . bb_1))))
      (br bb_5)
    bb_5:
      (= tmp_3 (phi (((constant ? -40) . bb_3) (tmp_2 . bb_4))))
      (= tmp_4 (sext (constant ? 32) src1 (constant ? 40)))
      (br tmp_5 bb_6 bb_7)
    bb_6:
      (= tmp_6 (icmp sgt (constant ? 40) tmp_3 (constant ? 0)))
      (br bb_8)
    bb_7:
      (br bb_8)
    bb_8:
      (= tmp_7 (phi ((tmp_6 . bb_6) (no-value . bb_7))))
      (br tmp_7 bb_12 bb_13)
    bb_12:
      (= tmp_8 (shl (constant ? 1) tmp_3))
      (= tmp_9 (satmul (constant ? 32) tmp_4 tmp_8))
      (= dst tmp_9)
      (br bb_14)
    bb_13:
      (= tmp_10 (icmp sgt (constant ? 32) tmp_3 (constant ? 0)))
      (br tmp_10 bb_9 bb_10)
    bb_9:
      (= tmp_11 (shl tmp_4 tmp_3))
      (= dst tmp_11)
      (br bb_11)
    bb_10:
      (= tmp_12 (sub (constant ? 32) (constant ? 0) tmp_3))
      (= tmp_13 (ashr tmp_4 tmp_12))
      (= tmp_14 (sext (constant ? 32) tmp_13 (constant ? 40)))
      (= dst tmp_14)
      (br bb_11)
    bb_11:
      (= tmp_15 (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
    bb_14:
      (= tmp_16 (phi ((no-value . bb_12) (tmp_15 . bb_13))))
      (op-flags! dst (ac ex mi of))


Instruction: shftz_a40_nimm7_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (SImm zimm -32 32)
    (tmp_1 = sa of cuc)
    (tmp_13 = ag of dst)
  Code
      (= tmp_0 (zext (constant ? 32) src (constant ? 40)))
      (br tmp_1 bb_0 bb_1)
    bb_0:
      (= tmp_2 (icmp sgt (constant ? 40) SImm (constant ? 0)))
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_3 (phi ((tmp_2 . bb_0) (no-value . bb_1))))
      (br tmp_3 bb_6 bb_7)
    bb_6:
      (= tmp_4 (shl (constant ? 1) SImm))
      (= tmp_5 (satmul (constant ? 32) tmp_0 tmp_4))
      (= dst tmp_5)
      (br bb_8)
    bb_7:
      (= tmp_6 (icmp sgt (constant ? 32) SImm (constant ? 0)))
      (br tmp_6 bb_3 bb_4)
    bb_3:
      (= tmp_7 (shl tmp_0 SImm))
      (= dst tmp_7)
      (br bb_5)
    bb_4:
      (= tmp_8 (sub (constant ? 32) (constant ? 0) SImm))
      (= tmp_9 (ashr tmp_0 tmp_8))
      (= tmp_10 (sext (constant ? 32) tmp_9 (constant ? 40)))
      (= dst tmp_10)
      (br bb_5)
    bb_5:
      (= tmp_11 (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
    bb_8:
      (= tmp_12 (phi ((no-value . bb_6) (tmp_11 . bb_7))))
      (= tmp_13 (constant ? 0))
      (op-flags! dst (ac ex mi of))


Instruction: shftz_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_5 = sa of cuc)
    (tmp_17 = ag of dst)
  Code
      (= tmp_0 (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br tmp_0 bb_3 bb_4)
    bb_3:
      (br bb_5)
    bb_4:
      (= tmp_1 (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br tmp_1 bb_0 bb_1)
    bb_0:
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_2 (phi (((constant ? 40) . bb_0) (src2 . bb_1))))
      (br bb_5)
    bb_5:
      (= tmp_3 (phi (((constant ? -40) . bb_3) (tmp_2 . bb_4))))
      (= tmp_4 (zext (constant ? 32) src1 (constant ? 40)))
      (br tmp_5 bb_6 bb_7)
    bb_6:
      (= tmp_6 (icmp sgt (constant ? 40) tmp_3 (constant ? 0)))
      (br bb_8)
    bb_7:
      (br bb_8)
    bb_8:
      (= tmp_7 (phi ((tmp_6 . bb_6) (no-value . bb_7))))
      (br tmp_7 bb_12 bb_13)
    bb_12:
      (= tmp_8 (shl (constant ? 1) tmp_3))
      (= tmp_9 (satmul (constant ? 32) tmp_4 tmp_8))
      (= dst tmp_9)
      (br bb_14)
    bb_13:
      (= tmp_10 (icmp sgt (constant ? 32) tmp_3 (constant ? 0)))
      (br tmp_10 bb_9 bb_10)
    bb_9:
      (= tmp_11 (shl tmp_4 tmp_3))
      (= dst tmp_11)
      (br bb_11)
    bb_10:
      (= tmp_12 (sub (constant ? 32) (constant ? 0) tmp_3))
      (= tmp_13 (ashr tmp_4 tmp_12))
      (= tmp_14 (sext (constant ? 32) tmp_13 (constant ? 40)))
      (= dst tmp_14)
      (br bb_11)
    bb_11:
      (= tmp_15 (phi ((no-value . bb_9) (no-value . bb_10))))
      (br bb_14)
    bb_14:
      (= tmp_16 (phi ((no-value . bb_12) (tmp_15 . bb_13))))
      (= tmp_17 (constant ? 0))
      (op-flags! dst (ac ex mi of))


Instruction: shfta2_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_2 = sa of cuc)
    (tmp_16 = sa of cuc)
    (tmp_28 = a of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_1 (reg-range src1 (constant ? 0) (constant ? 15)))
      (br tmp_2 bb_0 bb_1)
    bb_0:
      (= tmp_3 (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_4 (phi ((tmp_3 . bb_0) (no-value . bb_1))))
      (br tmp_4 bb_6 bb_7)
    bb_6:
      (= tmp_5 (shl (constant ? 1) src2))
      (= tmp_6 (satmul (constant ? 16) tmp_1 tmp_5))
      (= tmp_0 tmp_6)
      (br bb_8)
    bb_7:
      (= tmp_7 (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br tmp_7 bb_3 bb_4)
    bb_3:
      (= tmp_8 (shl tmp_1 src2))
      (= tmp_0 tmp_8)
      (br bb_5)
    bb_4:
      (= tmp_9 (sub (constant ? 16) (constant ? 0) src2))
      (= tmp_10 (ashr tmp_1 tmp_9))
      (= tmp_11 (sext (constant ? 16) tmp_10 (constant ? 16)))
      (= tmp_0 tmp_11)
      (br bb_5)
    bb_5:
      (= tmp_12 (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
    bb_8:
      (= tmp_13 (phi ((no-value . bb_6) (tmp_12 . bb_7))))
      (= tmp_14 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_15 (reg-range src1 (constant ? 16) (constant ? 31)))
      (br tmp_16 bb_9 bb_10)
    bb_9:
      (= tmp_17 (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br bb_11)
    bb_10:
      (br bb_11)
    bb_11:
      (= tmp_18 (phi ((tmp_17 . bb_9) (no-value . bb_10))))
      (br tmp_18 bb_15 bb_16)
    bb_15:
      (= tmp_19 (shl (constant ? 1) src2))
      (= tmp_20 (satmul (constant ? 16) tmp_15 tmp_19))
      (= tmp_14 tmp_20)
      (br bb_17)
    bb_16:
      (= tmp_21 (icmp sgt (constant ? 16) src2 (constant ? 0)))
      (br tmp_21 bb_12 bb_13)
    bb_12:
      (= tmp_22 (shl tmp_15 src2))
      (= tmp_14 tmp_22)
      (br bb_14)
    bb_13:
      (= tmp_23 (sub (constant ? 16) (constant ? 0) src2))
      (= tmp_24 (ashr tmp_15 tmp_23))
      (= tmp_25 (sext (constant ? 16) tmp_24 (constant ? 16)))
      (= tmp_14 tmp_25)
      (br bb_14)
    bb_14:
      (= tmp_26 (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
    bb_17:
      (= tmp_27 (phi ((no-value . bb_15) (tmp_26 . bb_16))))
      (= tmp_29 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_28 tmp_29)
      (op-flags! dst (ac ex mi of))


Instruction: shfta2_a40_nimm6_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (SImm zimm -16 16)
    (tmp_2 = sa of cuc)
    (tmp_16 = sa of cuc)
    (tmp_28 = a of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_1 (reg-range src (constant ? 0) (constant ? 15)))
      (br tmp_2 bb_0 bb_1)
    bb_0:
      (= tmp_3 (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_4 (phi ((tmp_3 . bb_0) (no-value . bb_1))))
      (br tmp_4 bb_6 bb_7)
    bb_6:
      (= tmp_5 (shl (constant ? 1) SImm))
      (= tmp_6 (satmul (constant ? 16) tmp_1 tmp_5))
      (= tmp_0 tmp_6)
      (br bb_8)
    bb_7:
      (= tmp_7 (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br tmp_7 bb_3 bb_4)
    bb_3:
      (= tmp_8 (shl tmp_1 SImm))
      (= tmp_0 tmp_8)
      (br bb_5)
    bb_4:
      (= tmp_9 (sub (constant ? 16) (constant ? 0) SImm))
      (= tmp_10 (ashr tmp_1 tmp_9))
      (= tmp_11 (sext (constant ? 16) tmp_10 (constant ? 16)))
      (= tmp_0 tmp_11)
      (br bb_5)
    bb_5:
      (= tmp_12 (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
    bb_8:
      (= tmp_13 (phi ((no-value . bb_6) (tmp_12 . bb_7))))
      (= tmp_14 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_15 (reg-range src (constant ? 16) (constant ? 31)))
      (br tmp_16 bb_9 bb_10)
    bb_9:
      (= tmp_17 (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br bb_11)
    bb_10:
      (br bb_11)
    bb_11:
      (= tmp_18 (phi ((tmp_17 . bb_9) (no-value . bb_10))))
      (br tmp_18 bb_15 bb_16)
    bb_15:
      (= tmp_19 (shl (constant ? 1) SImm))
      (= tmp_20 (satmul (constant ? 16) tmp_15 tmp_19))
      (= tmp_14 tmp_20)
      (br bb_17)
    bb_16:
      (= tmp_21 (icmp sgt (constant ? 16) SImm (constant ? 0)))
      (br tmp_21 bb_12 bb_13)
    bb_12:
      (= tmp_22 (shl tmp_15 SImm))
      (= tmp_14 tmp_22)
      (br bb_14)
    bb_13:
      (= tmp_23 (sub (constant ? 16) (constant ? 0) SImm))
      (= tmp_24 (ashr tmp_15 tmp_23))
      (= tmp_25 (sext (constant ? 16) tmp_24 (constant ? 16)))
      (= tmp_14 tmp_25)
      (br bb_14)
    bb_14:
      (= tmp_26 (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
    bb_17:
      (= tmp_27 (phi ((no-value . bb_15) (tmp_26 . bb_16))))
      (= tmp_29 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_28 tmp_29)
      (op-flags! dst (ac ex mi of))


Instruction: shfta4_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_2 = sa of cuc)
    (tmp_16 = sa of cuc)
    (tmp_30 = sa of cuc)
    (tmp_44 = sa of cuc)
    (tmp_56 = a of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (reg-range src1 (constant ? 0) (constant ? 7)))
      (br tmp_2 bb_0 bb_1)
    bb_0:
      (= tmp_3 (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_4 (phi ((tmp_3 . bb_0) (no-value . bb_1))))
      (br tmp_4 bb_6 bb_7)
    bb_6:
      (= tmp_5 (shl (constant ? 1) src2))
      (= tmp_6 (satmul (constant ? 8) tmp_1 tmp_5))
      (= tmp_0 tmp_6)
      (br bb_8)
    bb_7:
      (= tmp_7 (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br tmp_7 bb_3 bb_4)
    bb_3:
      (= tmp_8 (shl tmp_1 src2))
      (= tmp_0 tmp_8)
      (br bb_5)
    bb_4:
      (= tmp_9 (sub (constant ? 8) (constant ? 0) src2))
      (= tmp_10 (ashr tmp_1 tmp_9))
      (= tmp_11 (sext (constant ? 8) tmp_10 (constant ? 8)))
      (= tmp_0 tmp_11)
      (br bb_5)
    bb_5:
      (= tmp_12 (phi ((no-value . bb_3) (no-value . bb_4))))
      (br bb_8)
    bb_8:
      (= tmp_13 (phi ((no-value . bb_6) (tmp_12 . bb_7))))
      (= tmp_14 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_15 (reg-range src1 (constant ? 8) (constant ? 15)))
      (br tmp_16 bb_9 bb_10)
    bb_9:
      (= tmp_17 (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br bb_11)
    bb_10:
      (br bb_11)
    bb_11:
      (= tmp_18 (phi ((tmp_17 . bb_9) (no-value . bb_10))))
      (br tmp_18 bb_15 bb_16)
    bb_15:
      (= tmp_19 (shl (constant ? 1) src2))
      (= tmp_20 (satmul (constant ? 8) tmp_15 tmp_19))
      (= tmp_14 tmp_20)
      (br bb_17)
    bb_16:
      (= tmp_21 (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br tmp_21 bb_12 bb_13)
    bb_12:
      (= tmp_22 (shl tmp_15 src2))
      (= tmp_14 tmp_22)
      (br bb_14)
    bb_13:
      (= tmp_23 (sub (constant ? 8) (constant ? 0) src2))
      (= tmp_24 (ashr tmp_15 tmp_23))
      (= tmp_25 (sext (constant ? 8) tmp_24 (constant ? 8)))
      (= tmp_14 tmp_25)
      (br bb_14)
    bb_14:
      (= tmp_26 (phi ((no-value . bb_12) (no-value . bb_13))))
      (br bb_17)
    bb_17:
      (= tmp_27 (phi ((no-value . bb_15) (tmp_26 . bb_16))))
      (= tmp_28 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_29 (reg-range src1 (constant ? 16) (constant ? 23)))
      (br tmp_30 bb_18 bb_19)
    bb_18:
      (= tmp_31 (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br bb_20)
    bb_19:
      (br bb_20)
    bb_20:
      (= tmp_32 (phi ((tmp_31 . bb_18) (no-value . bb_19))))
      (br tmp_32 bb_24 bb_25)
    bb_24:
      (= tmp_33 (shl (constant ? 1) src2))
      (= tmp_34 (satmul (constant ? 8) tmp_29 tmp_33))
      (= tmp_28 tmp_34)
      (br bb_26)
    bb_25:
      (= tmp_35 (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br tmp_35 bb_21 bb_22)
    bb_21:
      (= tmp_36 (shl tmp_29 src2))
      (= tmp_28 tmp_36)
      (br bb_23)
    bb_22:
      (= tmp_37 (sub (constant ? 8) (constant ? 0) src2))
      (= tmp_38 (ashr tmp_29 tmp_37))
      (= tmp_39 (sext (constant ? 8) tmp_38 (constant ? 8)))
      (= tmp_28 tmp_39)
      (br bb_23)
    bb_23:
      (= tmp_40 (phi ((no-value . bb_21) (no-value . bb_22))))
      (br bb_26)
    bb_26:
      (= tmp_41 (phi ((no-value . bb_24) (tmp_40 . bb_25))))
      (= tmp_42 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_43 (reg-range src1 (constant ? 24) (constant ? 31)))
      (br tmp_44 bb_27 bb_28)
    bb_27:
      (= tmp_45 (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br bb_29)
    bb_28:
      (br bb_29)
    bb_29:
      (= tmp_46 (phi ((tmp_45 . bb_27) (no-value . bb_28))))
      (br tmp_46 bb_33 bb_34)
    bb_33:
      (= tmp_47 (shl (constant ? 1) src2))
      (= tmp_48 (satmul (constant ? 8) tmp_43 tmp_47))
      (= tmp_42 tmp_48)
      (br bb_35)
    bb_34:
      (= tmp_49 (icmp sgt (constant ? 8) src2 (constant ? 0)))
      (br tmp_49 bb_30 bb_31)
    bb_30:
      (= tmp_50 (shl tmp_43 src2))
      (= tmp_42 tmp_50)
      (br bb_32)
    bb_31:
      (= tmp_51 (sub (constant ? 8) (constant ? 0) src2))
      (= tmp_52 (ashr tmp_43 tmp_51))
      (= tmp_53 (sext (constant ? 8) tmp_52 (constant ? 8)))
      (= tmp_42 tmp_53)
      (br bb_32)
    bb_32:
      (= tmp_54 (phi ((no-value . bb_30) (no-value . bb_31))))
      (br bb_35)
    bb_35:
      (= tmp_55 (phi ((no-value . bb_33) (tmp_54 . bb_34))))
      (= tmp_57 (sext (constant ? 32) dst (constant ? 40)))
      (= tmp_56 tmp_57)
      (op-flags! dst (ac ex mi of))


Instruction: fldiv
=============
Pattern:
  Constraints
  Code
      (= tmp_0 (fdiv (register a4) (register a5)))
      (= (register a4) tmp_0)


Instruction: flsqr
=============
Pattern:
  Constraints
    (tmp_1 = ms of (register a4))
    (tmp_2 = ls of (register a4))
  Code
      (= tmp_0 (sqrt (register a4)))
      (= (register a4) tmp_0)
      (= tmp_1 (constant ? 0))
      (= tmp_2 (constant ? 0))
      (op-flags! (register a4) (ac ex mi of))


Instruction: flmpy_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
  Code
      (= tmp_0 (fmul src1 src2))
      (= dst tmp_0)
      (op-flags! dst (ac ex mi of))


Instruction: cfixs_a40_a16h_a16h
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16h)
    (dst reg a16h)
  Code
      (= tmp_0 (fptosi (constant ? 40) src1 (constant ? 16)))
      (= dst tmp_0)
      (op-flags! dst (ac of mi))


Instruction: cfl16_a40_a16h_a16h
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16h)
    (dst reg a16h)
  Code
      (= tmp_0 (reg-range src2 (constant ? 0) (constant ? 7)))
      (= tmp_1 (exp (constant ? 2) tmp_0))
      (= tmp_2 (fptrunc (constant ? 40) src1 (constant ? 16)))
      (= tmp_3 (fmul tmp_1 tmp_2))
      (= dst tmp_3)
      (op-flags! dst (ac of mi))


Instruction: cfloats_a16h_a16h_a40
=============
Pattern:
  Constraints
    (src1 reg a16h)
    (src2 reg a16h)
    (dst reg a40)
  Code
      (= tmp_0 (sitofp (constant ? 16) src1 (constant ? 40)))
      (= tmp_1 (exp (constant ? 2) src2))
      (= tmp_2 (mul tmp_0 tmp_1))
      (= dst tmp_2)
      (op-flags! dst (ac ex of mi))


Instruction: cfl32_a16h_a16h_a40
=============
Pattern:
  Constraints
    (src1 reg a16h)
    (src2 reg a16h)
    (dst reg a40)
  Code
      (= tmp_0 (fpext (constant ? 16) src1 (constant ? 32)))
      (= tmp_1 (exp (constant ? 2) src2))
      (= tmp_2 (mul tmp_0 tmp_1))
      (= dst tmp_2)
      (op-flags! dst (ac ex of mi))


Instruction: cfixt_a40_a16h
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a16h)
  Code
      (= tmp_0 (fptosi (constant ? 32) src (constant ? 16)))
      (= dst tmp_0)
      (op-flags! dst (ac of mi))


Instruction: fladd_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
  Code
      (= tmp_0 (fadd src1 src2))
      (= dst tmp_0)
      (op-flags! dst (ac ex mi of))


Instruction: flsub_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
  Code
      (= tmp_0 (fsub src1 src2))
      (= dst tmp_0)
      (op-flags! dst (ac ex mi of))


Instruction: flmin_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
  Code
      (= tmp_0 (fcmp olt (constant ? 32) src1 src2))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_1 (phi ((src1 . bb_0) (src2 . bb_1))))
      (= dst tmp_1)
      (op-flags! dst (ac ex mi of))


Instruction: flmax_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
  Code
      (= tmp_0 (fcmp ogt (constant ? 32) src1 src2))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_1 (phi ((src1 . bb_0) (src2 . bb_1))))
      (= dst tmp_1)
      (op-flags! dst (ac ex mi of))


Instruction: flabs_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
  Code
      (= tmp_0 (fcmp olt (constant ? 32) src (constant ? 0)))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (fsub (constant ? 0) src))
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_2 (phi ((tmp_1 . bb_0) (src . bb_1))))
      (= dst tmp_2)
      (op-flags! dst (ac exx mi of))


Instruction: flneg_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
  Code
      (= tmp_0 (fsub (constant ? 0) src))
      (= dst tmp_0)
      (op-flags! dst (ac ex mi of))


Instruction: and_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
  Code
      (= tmp_0 (bit_and src1 src2))
      (= dst tmp_0)
      (op-flags! dst (ac mi ms ls op))


Instruction: andnot_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
  Code
      (= tmp_0 (bit_not src2))
      (= tmp_1 (bit_and src1 tmp_0))
      (= dst tmp_1)
      (op-flags! dst (ac mi ms ls op))


Instruction: and_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_1 (bit_and tmp_0 src))
      (= tmp_0 tmp_1)
      (op-flags! dst (ac mi ms ls op))


Instruction: andh_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
  Code
      (= tmp_0 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_1 (bit_and tmp_0 src))
      (= tmp_0 tmp_1)
      (op-flags! dst (ac mi ms ls op))


Instruction: and_a16_a16
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a16)
  Code
      (= tmp_0 (bit_and dst src))
      (= dst tmp_0)
      (op-flags! dst (ac mi ms ls op))


Instruction: andz_a16_a16_a16
=============
Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (bit_and src1 src2))
      (= dst tmp_0)
      (op-flags! dst (ac mi ms ls op))

Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_1 = ag of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (bit_and src1 src2))
      (= dst tmp_0)
      (= tmp_1 (constant ? 0))
      (op-flags! dst (ac mi ms ls op))


Instruction: andz_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (bit_and src1 src2))
      (= dst tmp_0)
      (op-flags! dst (ac mi ms ls op))

Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_1 = ag of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (bit_and src1 src2))
      (= dst tmp_0)
      (= tmp_1 (constant ? 0))
      (op-flags! dst (ac mi ms ls op))


Instruction: and_nimm16_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (UImm imm 0 65535)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_1 (bit_and tmp_0 UImm))
      (= tmp_0 tmp_1)
      (op-flags! dst (ac mi ms ls op))


Instruction: andh_nimm16_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (UImm imm 0 65535)
  Code
      (= tmp_0 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_1 (bit_and tmp_0 UImm))
      (= tmp_0 tmp_1)
      (op-flags! dst (ac mi ms ls op))


Instruction: and_nimm16_a16
=============
Pattern:
  Constraints
    (dst reg a16)
    (UImm imm 0 65535)
  Code
      (= tmp_0 (bit_and dst UImm))
      (= dst tmp_0)
      (op-flags! dst (ac mi ms ls op))


Instruction: andnotz_a16_a16_a16
=============
Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (bit_not src2))
      (= tmp_1 (bit_and src1 tmp_0))
      (= dst tmp_1)
      (op-flags! dst (ac mi ms ls op))

Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_2 = ag of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (bit_not src2))
      (= tmp_1 (bit_and src1 tmp_0))
      (= dst tmp_1)
      (= tmp_2 (constant ? 0))
      (op-flags! dst (ac mi ms ls op))


Instruction: andnotz_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_2 = ag of dst)
  Code
      (= tmp_0 (bit_not src2))
      (= tmp_1 (bit_and src1 tmp_0))
      (= dst tmp_1)
      (= tmp_2 (constant ? 0))
      (op-flags! dst (ac mi ms ls op))


Instruction: cbit_nimm5_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (UImm imm 0 31)
    (tmp_0 = c of dst)
    (tmp_3 = a of dst)
  Code
      (= tmp_1 (reg-range dst UImm UImm))
      (= tmp_0 tmp_1)
      (= tmp_2 (reg-range dst UImm UImm))
      (= tmp_2 (constant ? 0))
      (op-flags! tmp_3 (ac mi ms ls op))


Instruction: cbit_nimm4_a16
=============
Pattern:
  Constraints
    (dst reg a16)
    (UImm imm 0 15)
    (tmp_0 = c of dst)
    (tmp_3 = a of dst)
  Code
      (= tmp_1 (reg-range dst UImm UImm))
      (= tmp_0 tmp_1)
      (= tmp_2 (reg-range dst UImm UImm))
      (= tmp_2 (constant ? 0))
      (op-flags! tmp_3 (ac mi ms ls op))


Instruction: sbit_nimm5_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (UImm imm 0 31)
    (tmp_0 = c of dst)
    (tmp_3 = a of dst)
  Code
      (= tmp_1 (reg-range dst UImm UImm))
      (= tmp_0 tmp_1)
      (= tmp_2 (reg-range dst UImm UImm))
      (= tmp_2 (constant ? 1))
      (op-flags! tmp_3 (ac mi ms ls op))


Instruction: sbit_nimm4_a16
=============
Pattern:
  Constraints
    (dst reg a16)
    (UImm imm 0 15)
    (tmp_0 = c of dst)
    (tmp_3 = a of dst)
  Code
      (= tmp_1 (reg-range dst UImm UImm))
      (= tmp_0 tmp_1)
      (= tmp_2 (reg-range dst UImm UImm))
      (= tmp_2 (constant ? 1))
      (op-flags! tmp_3 (ac mi ms ls op))


Instruction: tbit_nimm5_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (UImm imm 0 31)
    (tmp_0 = c of dst)
    (tmp_2 = a of dst)
  Code
      (= tmp_1 (reg-range dst UImm UImm))
      (= tmp_0 tmp_1)
      (op-flags! tmp_2 (ac mi ms ls))


Instruction: tbit_nimm4_a16
=============
Pattern:
  Constraints
    (dst reg a16)
    (UImm imm 0 15)
    (tmp_0 = c of dst)
    (tmp_2 = a of dst)
  Code
      (= tmp_1 (reg-range dst UImm UImm))
      (= tmp_0 tmp_1)
      (op-flags! tmp_2 (ac mi ms ls op))


Instruction: not_a40
=============
Pattern:
  Constraints
    (dst reg a40)
  Code
      (= tmp_0 (bit_not dst))
      (= dst tmp_0)
      (op-flags! dst (ac mi ms ls op))


Instruction: not_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
  Code
      (= tmp_0 (bit_not src))
      (= dst tmp_0)
      (op-flags! dst (ac mi ms ls op))


Instruction: notz_a40_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (tmp_1 = ag of dst)
  Code
      (= tmp_0 (bit_not src))
      (= dst tmp_0)
      (= tmp_1 (constant ? 0))
      (op-flags! dst (ac mi ms ls op))


Instruction: not_a16
=============
Pattern:
  Constraints
    (dst reg a16)
    (tmp_1 = a of dst)
  Code
      (= tmp_0 (bit_not dst))
      (= dst tmp_0)
      (op-flags! tmp_1 (ac mi ms ls op))


Instruction: not_a16_a16
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a16)
  Code
      (= tmp_0 (bit_not src))
      (= dst tmp_0)
      (op-flags! dst (ac mi ms ls op))


Instruction: or_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
  Code
      (= tmp_0 (bit_or src1 src2))
      (= dst tmp_0)
      (op-flags! dst (ac mi ms ls op))


Instruction: or_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_1 (bit_or tmp_0 src))
      (= tmp_0 tmp_1)
      (op-flags! dst (ac mi ms ls op))


Instruction: orh_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
  Code
      (= tmp_0 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_1 (bit_or tmp_0 src))
      (= tmp_0 tmp_1)
      (op-flags! dst (ac mi ms ls op))


Instruction: or_a16_a16
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a16)
  Code
      (= tmp_0 (bit_or dst src))
      (= dst tmp_0)
      (op-flags! dst (ac mi ms ls op))


Instruction: orz_a16_a16_a16
=============
Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (bit_or src1 src2))
      (= dst tmp_0)
      (op-flags! dst (ac mi ms ls op))

Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_1 = ag of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (bit_or src1 src2))
      (= dst tmp_0)
      (= tmp_1 (constant ? 0))
      (op-flags! dst (ac mi ms ls op))


Instruction: orz_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_1 = ag of dst)
  Code
      (= tmp_0 (bit_or src1 src2))
      (= dst tmp_0)
      (= tmp_1 (constant ? 0))
      (op-flags! dst (ac mi ms ls op))


Instruction: or_nimm16_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (UImm imm 0 65535)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_1 (bit_or tmp_0 UImm))
      (= tmp_0 tmp_1)
      (op-flags! dst (ac mi ms ls op))


Instruction: orh_nimm16_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (UImm imm 0 65535)
  Code
      (= tmp_0 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_1 (bit_or tmp_0 UImm))
      (= tmp_0 tmp_1)
      (op-flags! dst (ac mi ms ls op))


Instruction: or_nimm16_a16
=============
Pattern:
  Constraints
    (dst reg a16)
    (UImm imm 0 65535)
  Code
      (= tmp_0 (bit_or dst UImm))
      (= dst tmp_0)
      (op-flags! dst (ac mi ms ls op))


Instruction: roli8_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_4 = ag of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 8) (constant ? 31)))
      (= tmp_1 (reg-range src1 (constant ? 0) (constant ? 23)))
      (= tmp_0 tmp_1)
      (= tmp_2 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_3 (reg-range src2 (constant ? 8) (constant ? 15)))
      (= tmp_2 tmp_3)
      (= tmp_4 (constant ? 0))


Instruction: rori8_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_4 = ag of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 23)))
      (= tmp_1 (reg-range src1 (constant ? 8) (constant ? 31)))
      (= tmp_0 tmp_1)
      (= tmp_2 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_3 (reg-range src2 (constant ? 0) (constant ? 7)))
      (= tmp_2 tmp_3)
      (= tmp_4 (constant ? 0))


Instruction: roli16_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_4 = ag of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_1 (reg-range src1 (constant ? 0) (constant ? 15)))
      (= tmp_0 tmp_1)
      (= tmp_2 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_3 (reg-range src2 (constant ? 0) (constant ? 15)))
      (= tmp_2 tmp_3)
      (= tmp_4 (constant ? 0))


Instruction: rori16_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_4 = ag of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_1 (reg-range src1 (constant ? 16) (constant ? 31)))
      (= tmp_0 tmp_1)
      (= tmp_2 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_3 (reg-range src2 (constant ? 0) (constant ? 15)))
      (= tmp_2 tmp_3)
      (= tmp_4 (constant ? 0))


Instruction: shft_nimm6_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (SImm zimm -16 16)
  Code
      (= tmp_0 (icmp slt ? SImm (constant ? 0)))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (- (constant ? 0) SImm))
      (= tmp_2 (lshr dst tmp_1))
      (br bb_2)
    bb_1:
      (= tmp_3 (shl dst SImm))
      (br bb_2)
    bb_2:
      (= tmp_4 (phi ((tmp_2 . bb_0) (tmp_3 . bb_1))))
      (= dst tmp_4)
      (op-flags! dst (ac mi ms ls op c))


Instruction: shft_a40_nimm7_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (SImm zimm -32 32)
  Code
      (= tmp_0 (icmp slt ? SImm (constant ? 0)))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (- (constant ? 0) SImm))
      (= tmp_2 (lshr src tmp_1))
      (br bb_2)
    bb_1:
      (= tmp_3 (shl src SImm))
      (br bb_2)
    bb_2:
      (= tmp_4 (phi ((tmp_2 . bb_0) (tmp_3 . bb_1))))
      (= dst tmp_4)
      (op-flags! dst (ac mi ms ls op c))


Instruction: shft_a40_a16h_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16h)
    (dst reg a40)
    (tmp_10 = c of dst)
  Code
      (= tmp_0 (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br tmp_0 bb_3 bb_4)
    bb_3:
      (br bb_5)
    bb_4:
      (= tmp_1 (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br tmp_1 bb_0 bb_1)
    bb_0:
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_2 (phi (((constant ? -40) . bb_0) (src2 . bb_1))))
      (br bb_5)
    bb_5:
      (= tmp_3 (phi (((constant ? 40) . bb_3) (tmp_2 . bb_4))))
      (= tmp_4 (icmp eq (constant ? 16) tmp_3 (constant ? 0)))
      (br tmp_4 bb_12 bb_13)
    bb_12:
      (= dst src1)
      (op-flags! dst (ac mi ms ls op c))
      (br bb_14)
    bb_13:
      (= tmp_6 (icmp sgt (constant ? 16) tmp_3 (constant ? 0)))
      (br tmp_6 bb_9 bb_10)
    bb_9:
      (= tmp_7 (shl src1 tmp_3))
      (= dst tmp_7)
      (op-flags! dst (ac mi ms ls op c))
      (= tmp_9 (icmp sgt (constant ? 16) tmp_3 (constant ? 40)))
      (br tmp_9 bb_6 bb_7)
    bb_6:
      (= tmp_10 (constant ? 0))
      (br bb_8)
    bb_7:
      (op-flags! dst (c))
      (br bb_8)
    bb_8:
      (= tmp_12 (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
    bb_10:
      (= tmp_13 (sub (constant ? 16) (constant ? 0) tmp_3))
      (= tmp_14 (lshr src1 tmp_13))
      (= dst tmp_14)
      (op-flags! dst (ac mi ms ls op c))
      (br bb_11)
    bb_11:
      (= tmp_16 (phi ((tmp_12 . bb_9) (no-value . bb_10))))
      (br bb_14)
    bb_14:
      (= tmp_17 (phi ((no-value . bb_12) (tmp_16 . bb_13))))


Instruction: shft_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_10 = c of dst)
  Code
      (= tmp_0 (icmp sgt (constant ? 16) src2 (constant ? 40)))
      (br tmp_0 bb_3 bb_4)
    bb_3:
      (br bb_5)
    bb_4:
      (= tmp_1 (icmp slt (constant ? 16) src2 (constant ? -40)))
      (br tmp_1 bb_0 bb_1)
    bb_0:
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_2 (phi (((constant ? -40) . bb_0) (src2 . bb_1))))
      (br bb_5)
    bb_5:
      (= tmp_3 (phi (((constant ? 40) . bb_3) (tmp_2 . bb_4))))
      (= tmp_4 (icmp eq (constant ? 16) tmp_3 (constant ? 0)))
      (br tmp_4 bb_12 bb_13)
    bb_12:
      (= dst src1)
      (op-flags! dst (ac mi ms ls op c))
      (br bb_14)
    bb_13:
      (= tmp_6 (icmp sgt (constant ? 16) tmp_3 (constant ? 0)))
      (br tmp_6 bb_9 bb_10)
    bb_9:
      (= tmp_7 (shl src1 tmp_3))
      (= dst tmp_7)
      (op-flags! dst (ac mi ms ls op c))
      (= tmp_9 (icmp sgt (constant ? 16) tmp_3 (constant ? 40)))
      (br tmp_9 bb_6 bb_7)
    bb_6:
      (= tmp_10 (constant ? 0))
      (br bb_8)
    bb_7:
      (op-flags! dst (c))
      (br bb_8)
    bb_8:
      (= tmp_12 (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
    bb_10:
      (= tmp_13 (sub (constant ? 16) (constant ? 0) tmp_3))
      (= tmp_14 (lshr src1 tmp_13))
      (= dst tmp_14)
      (op-flags! dst (ac mi ms ls op c))
      (br bb_11)
    bb_11:
      (= tmp_16 (phi ((tmp_12 . bb_9) (no-value . bb_10))))
      (br bb_14)
    bb_14:
      (= tmp_17 (phi ((no-value . bb_12) (tmp_16 . bb_13))))


Instruction: shft_a16_a16
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a16)
  Code
      (= tmp_0 (icmp sgt (constant ? 16) src (constant ? 16)))
      (br tmp_0 bb_3 bb_4)
    bb_3:
      (br bb_5)
    bb_4:
      (= tmp_1 (icmp slt (constant ? 8) src (constant ? -16)))
      (br tmp_1 bb_0 bb_1)
    bb_0:
      (br bb_2)
    bb_1:
      (br bb_2)
    bb_2:
      (= tmp_2 (phi (((constant ? -16) . bb_0) (src . bb_1))))
      (br bb_5)
    bb_5:
      (= tmp_3 (phi (((constant ? 16) . bb_3) (tmp_2 . bb_4))))
      (= tmp_4 (icmp eq (constant ? 16) tmp_3 (constant ? 0)))
      (br tmp_4 bb_9 bb_10)
    bb_9:
      (= dst src)
      (op-flags! dst (ac mi ms ls op c))
      (br bb_11)
    bb_10:
      (= tmp_6 (icmp sgt (constant ? 16) tmp_3 (constant ? 0)))
      (br tmp_6 bb_6 bb_7)
    bb_6:
      (= tmp_7 (shl dst tmp_3))
      (= dst tmp_7)
      (op-flags! dst (ac mi ms ls op c))
      (br bb_8)
    bb_7:
      (= tmp_9 (sub (constant ? 16) (constant ? 0) tmp_3))
      (= tmp_10 (lshr dst tmp_9))
      (= dst tmp_10)
      (op-flags! dst (ac mi ms ls op c))
      (br bb_8)
    bb_8:
      (= tmp_12 (phi ((no-value . bb_6) (no-value . bb_7))))
      (br bb_11)
    bb_11:
      (= tmp_13 (phi ((no-value . bb_9) (tmp_12 . bb_10))))


Instruction: shft_a16_nimm6_a16
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a16)
    (SImm zimm -16 16)
  Code
      (= tmp_0 (icmp slt ? SImm (constant ? 0)))
      (br tmp_0 bb_0 bb_1)
    bb_0:
      (= tmp_1 (- (constant ? 0) SImm))
      (= tmp_2 (lshr src tmp_1))
      (br bb_2)
    bb_1:
      (= tmp_3 (shl src SImm))
      (br bb_2)
    bb_2:
      (= tmp_4 (phi ((tmp_2 . bb_0) (tmp_3 . bb_1))))
      (= dst tmp_4)


Instruction: shft2_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_0 = ah of dst)
    (tmp_2 = ah of src1)
    (tmp_5 = ah of src1)
    (tmp_8 = al of dst)
    (tmp_10 = al of src1)
    (tmp_13 = al of src1)
    (tmp_16 = ag of dst)
  Code
      (= tmp_1 (icmp slt ? src2 (constant ? 0)))
      (br tmp_1 bb_0 bb_1)
    bb_0:
      (= tmp_3 (sub (constant ? 16) (constant ? 0) src2))
      (= tmp_4 (lshr tmp_2 tmp_3))
      (br bb_2)
    bb_1:
      (= tmp_6 (shl tmp_5 src2))
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((tmp_4 . bb_0) (tmp_6 . bb_1))))
      (= tmp_0 tmp_7)
      (= tmp_9 (icmp slt ? src2 (constant ? 0)))
      (br tmp_9 bb_3 bb_4)
    bb_3:
      (= tmp_11 (sub (constant ? 16) (constant ? 0) src2))
      (= tmp_12 (lshr tmp_10 tmp_11))
      (br bb_5)
    bb_4:
      (= tmp_14 (shl tmp_13 src2))
      (br bb_5)
    bb_5:
      (= tmp_15 (phi ((tmp_12 . bb_3) (tmp_14 . bb_4))))
      (= tmp_8 tmp_15)
      (= tmp_16 (constant ? 0))


Instruction: shft2_a40_nimm6_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (SImm zimm -16 16)
    (tmp_0 = ah of dst)
    (tmp_2 = ah of src)
    (tmp_5 = ah of src)
    (tmp_8 = al of dst)
    (tmp_10 = al of src)
    (tmp_13 = al of src)
    (tmp_16 = ag of dst)
  Code
      (= tmp_1 (icmp slt ? SImm (constant ? 0)))
      (br tmp_1 bb_0 bb_1)
    bb_0:
      (= tmp_3 (sub (constant ? 16) (constant ? 0) SImm))
      (= tmp_4 (lshr tmp_2 tmp_3))
      (br bb_2)
    bb_1:
      (= tmp_6 (shl tmp_5 SImm))
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((tmp_4 . bb_0) (tmp_6 . bb_1))))
      (= tmp_0 tmp_7)
      (= tmp_9 (icmp slt ? SImm (constant ? 0)))
      (br tmp_9 bb_3 bb_4)
    bb_3:
      (= tmp_11 (sub (constant ? 16) (constant ? 0) SImm))
      (= tmp_12 (lshr tmp_10 tmp_11))
      (br bb_5)
    bb_4:
      (= tmp_14 (shl tmp_13 SImm))
      (br bb_5)
    bb_5:
      (= tmp_15 (phi ((tmp_12 . bb_3) (tmp_14 . bb_4))))
      (= tmp_8 tmp_15)
      (= tmp_16 (constant ? 0))


Instruction: shft4_a40_a16_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a16)
    (dst reg a40)
    (tmp_32 = ag of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (icmp slt ? src2 (constant ? 0)))
      (br tmp_1 bb_0 bb_1)
    bb_0:
      (= tmp_2 (reg-range src1 (constant ? 0) (constant ? 7)))
      (= tmp_3 (sub (constant ? 16) (constant ? 0) src2))
      (= tmp_4 (lshr tmp_2 tmp_3))
      (br bb_2)
    bb_1:
      (= tmp_5 (reg-range src1 (constant ? 0) (constant ? 7)))
      (= tmp_6 (shl tmp_5 src2))
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((tmp_4 . bb_0) (tmp_6 . bb_1))))
      (= tmp_0 tmp_7)
      (= tmp_8 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_9 (icmp slt ? src2 (constant ? 0)))
      (br tmp_9 bb_3 bb_4)
    bb_3:
      (= tmp_10 (reg-range src1 (constant ? 8) (constant ? 15)))
      (= tmp_11 (sub (constant ? 16) (constant ? 0) src2))
      (= tmp_12 (lshr tmp_10 tmp_11))
      (br bb_5)
    bb_4:
      (= tmp_13 (reg-range src1 (constant ? 8) (constant ? 15)))
      (= tmp_14 (shl tmp_13 src2))
      (br bb_5)
    bb_5:
      (= tmp_15 (phi ((tmp_12 . bb_3) (tmp_14 . bb_4))))
      (= tmp_8 tmp_15)
      (= tmp_16 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_17 (icmp slt ? src2 (constant ? 0)))
      (br tmp_17 bb_6 bb_7)
    bb_6:
      (= tmp_18 (reg-range src1 (constant ? 16) (constant ? 23)))
      (= tmp_19 (sub (constant ? 16) (constant ? 0) src2))
      (= tmp_20 (lshr tmp_18 tmp_19))
      (br bb_8)
    bb_7:
      (= tmp_21 (reg-range src1 (constant ? 16) (constant ? 23)))
      (= tmp_22 (shl tmp_21 src2))
      (br bb_8)
    bb_8:
      (= tmp_23 (phi ((tmp_20 . bb_6) (tmp_22 . bb_7))))
      (= tmp_16 tmp_23)
      (= tmp_24 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_25 (icmp slt ? src2 (constant ? 0)))
      (br tmp_25 bb_9 bb_10)
    bb_9:
      (= tmp_26 (reg-range src1 (constant ? 24) (constant ? 31)))
      (= tmp_27 (sub (constant ? 16) (constant ? 0) src2))
      (= tmp_28 (lshr tmp_26 tmp_27))
      (br bb_11)
    bb_10:
      (= tmp_29 (reg-range src1 (constant ? 24) (constant ? 31)))
      (= tmp_30 (shl tmp_29 src2))
      (br bb_11)
    bb_11:
      (= tmp_31 (phi ((tmp_28 . bb_9) (tmp_30 . bb_10))))
      (= tmp_24 tmp_31)
      (= tmp_32 (constant ? 0))


Instruction: shft4_a40_nimm5_a40
=============
Pattern:
  Constraints
    (src reg a40)
    (dst reg a40)
    (SImm zimm -8 8)
    (tmp_32 = ag of dst)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 7)))
      (= tmp_1 (icmp slt ? SImm (constant ? 0)))
      (br tmp_1 bb_0 bb_1)
    bb_0:
      (= tmp_2 (reg-range src (constant ? 0) (constant ? 7)))
      (= tmp_3 (sub (constant ? 16) (constant ? 0) SImm))
      (= tmp_4 (lshr tmp_2 tmp_3))
      (br bb_2)
    bb_1:
      (= tmp_5 (reg-range src (constant ? 0) (constant ? 7)))
      (= tmp_6 (shl tmp_5 SImm))
      (br bb_2)
    bb_2:
      (= tmp_7 (phi ((tmp_4 . bb_0) (tmp_6 . bb_1))))
      (= tmp_0 tmp_7)
      (= tmp_8 (reg-range dst (constant ? 8) (constant ? 15)))
      (= tmp_9 (icmp slt ? SImm (constant ? 0)))
      (br tmp_9 bb_3 bb_4)
    bb_3:
      (= tmp_10 (reg-range src (constant ? 8) (constant ? 15)))
      (= tmp_11 (sub (constant ? 16) (constant ? 0) SImm))
      (= tmp_12 (lshr tmp_10 tmp_11))
      (br bb_5)
    bb_4:
      (= tmp_13 (reg-range src (constant ? 8) (constant ? 15)))
      (= tmp_14 (shl tmp_13 SImm))
      (br bb_5)
    bb_5:
      (= tmp_15 (phi ((tmp_12 . bb_3) (tmp_14 . bb_4))))
      (= tmp_8 tmp_15)
      (= tmp_16 (reg-range dst (constant ? 16) (constant ? 23)))
      (= tmp_17 (icmp slt ? SImm (constant ? 0)))
      (br tmp_17 bb_6 bb_7)
    bb_6:
      (= tmp_18 (reg-range src (constant ? 16) (constant ? 23)))
      (= tmp_19 (sub (constant ? 16) (constant ? 0) SImm))
      (= tmp_20 (lshr tmp_18 tmp_19))
      (br bb_8)
    bb_7:
      (= tmp_21 (reg-range src (constant ? 16) (constant ? 23)))
      (= tmp_22 (shl tmp_21 SImm))
      (br bb_8)
    bb_8:
      (= tmp_23 (phi ((tmp_20 . bb_6) (tmp_22 . bb_7))))
      (= tmp_16 tmp_23)
      (= tmp_24 (reg-range dst (constant ? 24) (constant ? 31)))
      (= tmp_25 (icmp slt ? SImm (constant ? 0)))
      (br tmp_25 bb_9 bb_10)
    bb_9:
      (= tmp_26 (reg-range src (constant ? 24) (constant ? 31)))
      (= tmp_27 (sub (constant ? 16) (constant ? 0) SImm))
      (= tmp_28 (lshr tmp_26 tmp_27))
      (br bb_11)
    bb_10:
      (= tmp_29 (reg-range src (constant ? 24) (constant ? 31)))
      (= tmp_30 (shl tmp_29 SImm))
      (br bb_11)
    bb_11:
      (= tmp_31 (phi ((tmp_28 . bb_9) (tmp_30 . bb_10))))
      (= tmp_24 tmp_31)
      (= tmp_32 (constant ? 0))


Instruction: xor_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
  Code
      (= tmp_0 (bit_xor src1 src2))
      (= dst tmp_0)
      (op-flags! dst (ac mi ms ls op))


Instruction: xnor_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
  Code
      (= tmp_0 (bit_xor src1 src2))
      (= tmp_1 (bit_not tmp_0))
      (= dst tmp_1)
      (op-flags! dst (ac mi ms ls op))


Instruction: xor_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_1 (bit_xor tmp_0 src))
      (= tmp_0 tmp_1)
      (op-flags! dst (ac mi ms ls op))


Instruction: xorh_a16_a40
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a40)
  Code
      (= tmp_0 (reg-range dst (constant ? 16) (constant ? 31)))
      (= tmp_1 (bit_xor tmp_0 src))
      (= tmp_0 tmp_1)
      (op-flags! dst (ac mi ms ls op))


Instruction: xor_a16_a16
=============
Pattern:
  Constraints
    (src reg a16)
    (dst reg a16)
  Code
      (= tmp_0 (bit_xor dst src))
      (= dst tmp_0)
      (op-flags! dst (ac mi ms ls op))


Instruction: xorz_a16_a16_a16
=============
Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (bit_xor src1 src2))
      (= dst tmp_0)
      (op-flags! dst (ac mi ms ls op))

Pattern:
  Constraints
    (src1 reg a16)
    (src2 reg a16)
    (dst reg a16)
    (tmp_1 = ag of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (bit_xor src1 src2))
      (= dst tmp_0)
      (= tmp_1 (constant ? 0))
      (op-flags! dst (ac mi ms ls op))


Instruction: xorz_a40_a40_a40
=============
Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    ((not (contains? #<pattern> #<pattern>)))
  Code
      (= tmp_0 (bit_xor src1 src2))
      (= dst tmp_0)
      (op-flags! dst (ac mi ms ls op))

Pattern:
  Constraints
    (src1 reg a40)
    (src2 reg a40)
    (dst reg a40)
    (tmp_1 = ag of dst)
    (contains? #<pattern> #<pattern>)
  Code
      (= tmp_0 (bit_xor src1 src2))
      (= dst tmp_0)
      (= tmp_1 (constant ? 0))
      (op-flags! dst (ac mi ms ls op))


Instruction: xor_nimm16_a40
=============
Pattern:
  Constraints
    (dst reg a40)
    (UImm imm 0 65535)
  Code
      (= tmp_0 (reg-range dst (constant ? 0) (constant ? 15)))
      (= tmp_1 (bit_xor tmp_0 UImm))
      (= tmp_0 tmp_1)
      (op-flags! dst (ac mi ms ls op))


